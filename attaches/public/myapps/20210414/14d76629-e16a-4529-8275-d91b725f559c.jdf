[
  {
    "ID": "4c9629d2-03a9-4611-b944-832f9257bc62",
    "PARENT_ID": "03F551E4-3EA3-40C4-80CE-FB034BEB352C",
    "NAME": "Run.710.pkg.deploy",
    "TYPE": "deploy",
    "ICON": null,
    "URI": "Run.710.pkg.deploy",
    "BODY": "{\"css\":\"/* ==appFont.class================ */\\n.jj {\\n  /* cyrillic-ext */\\n  /* cyrillic */\\n  /* greek-ext */\\n  /* greek */\\n  /* vietnamese */\\n  /* latin-ext */\\n  /* latin */\\n  /* cyrillic-ext */\\n  /* cyrillic */\\n  /* greek-ext */\\n  /* greek */\\n  /* vietnamese */\\n  /* latin-ext */\\n  /* latin */\\n  /* cyrillic-ext */\\n  /* cyrillic */\\n  /* greek-ext */\\n  /* greek */\\n  /* vietnamese */\\n  /* latin-ext */\\n  /* latin */\\n}\\n@font-face {\\n  font-family: 'Roboto';\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(https://fonts.gstatic.com/s/roboto/v27/KFOmCnqEu92Fr1Mu72xKOzY.woff2) format('woff2');\\n  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\\n}\\n@font-face {\\n  font-family: 'Roboto';\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(https://fonts.gstatic.com/s/roboto/v27/KFOmCnqEu92Fr1Mu5mxKOzY.woff2) format('woff2');\\n  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\\n}\\n@font-face {\\n  font-family: 'Roboto';\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(https://fonts.gstatic.com/s/roboto/v27/KFOmCnqEu92Fr1Mu7mxKOzY.woff2) format('woff2');\\n  unicode-range: U+1F00-1FFF;\\n}\\n@font-face {\\n  font-family: 'Roboto';\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(https://fonts.gstatic.com/s/roboto/v27/KFOmCnqEu92Fr1Mu4WxKOzY.woff2) format('woff2');\\n  unicode-range: U+0370-03FF;\\n}\\n@font-face {\\n  font-family: 'Roboto';\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(https://fonts.gstatic.com/s/roboto/v27/KFOmCnqEu92Fr1Mu7WxKOzY.woff2) format('woff2');\\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\\n}\\n@font-face {\\n  font-family: 'Roboto';\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(https://fonts.gstatic.com/s/roboto/v27/KFOmCnqEu92Fr1Mu7GxKOzY.woff2) format('woff2');\\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\\n}\\n@font-face {\\n  font-family: 'Roboto';\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(https://fonts.gstatic.com/s/roboto/v27/KFOmCnqEu92Fr1Mu4mxK.woff2) format('woff2');\\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\\n}\\n@font-face {\\n  font-family: 'Roboto';\\n  font-style: normal;\\n  font-weight: 500;\\n  src: url(https://fonts.gstatic.com/s/roboto/v27/KFOlCnqEu92Fr1MmEU9fCRc4EsA.woff2) format('woff2');\\n  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\\n}\\n@font-face {\\n  font-family: 'Roboto';\\n  font-style: normal;\\n  font-weight: 500;\\n  src: url(https://fonts.gstatic.com/s/roboto/v27/KFOlCnqEu92Fr1MmEU9fABc4EsA.woff2) format('woff2');\\n  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\\n}\\n@font-face {\\n  font-family: 'Roboto';\\n  font-style: normal;\\n  font-weight: 500;\\n  src: url(https://fonts.gstatic.com/s/roboto/v27/KFOlCnqEu92Fr1MmEU9fCBc4EsA.woff2) format('woff2');\\n  unicode-range: U+1F00-1FFF;\\n}\\n@font-face {\\n  font-family: 'Roboto';\\n  font-style: normal;\\n  font-weight: 500;\\n  src: url(https://fonts.gstatic.com/s/roboto/v27/KFOlCnqEu92Fr1MmEU9fBxc4EsA.woff2) format('woff2');\\n  unicode-range: U+0370-03FF;\\n}\\n@font-face {\\n  font-family: 'Roboto';\\n  font-style: normal;\\n  font-weight: 500;\\n  src: url(https://fonts.gstatic.com/s/roboto/v27/KFOlCnqEu92Fr1MmEU9fCxc4EsA.woff2) format('woff2');\\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\\n}\\n@font-face {\\n  font-family: 'Roboto';\\n  font-style: normal;\\n  font-weight: 500;\\n  src: url(https://fonts.gstatic.com/s/roboto/v27/KFOlCnqEu92Fr1MmEU9fChc4EsA.woff2) format('woff2');\\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\\n}\\n@font-face {\\n  font-family: 'Roboto';\\n  font-style: normal;\\n  font-weight: 500;\\n  src: url(https://fonts.gstatic.com/s/roboto/v27/KFOlCnqEu92Fr1MmEU9fBBc4.woff2) format('woff2');\\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\\n}\\n@font-face {\\n  font-family: 'Roboto';\\n  font-style: normal;\\n  font-weight: 700;\\n  src: url(https://fonts.gstatic.com/s/roboto/v27/KFOlCnqEu92Fr1MmWUlfCRc4EsA.woff2) format('woff2');\\n  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\\n}\\n@font-face {\\n  font-family: 'Roboto';\\n  font-style: normal;\\n  font-weight: 700;\\n  src: url(https://fonts.gstatic.com/s/roboto/v27/KFOlCnqEu92Fr1MmWUlfABc4EsA.woff2) format('woff2');\\n  unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\\n}\\n@font-face {\\n  font-family: 'Roboto';\\n  font-style: normal;\\n  font-weight: 700;\\n  src: url(https://fonts.gstatic.com/s/roboto/v27/KFOlCnqEu92Fr1MmWUlfCBc4EsA.woff2) format('woff2');\\n  unicode-range: U+1F00-1FFF;\\n}\\n@font-face {\\n  font-family: 'Roboto';\\n  font-style: normal;\\n  font-weight: 700;\\n  src: url(https://fonts.gstatic.com/s/roboto/v27/KFOlCnqEu92Fr1MmWUlfBxc4EsA.woff2) format('woff2');\\n  unicode-range: U+0370-03FF;\\n}\\n@font-face {\\n  font-family: 'Roboto';\\n  font-style: normal;\\n  font-weight: 700;\\n  src: url(https://fonts.gstatic.com/s/roboto/v27/KFOlCnqEu92Fr1MmWUlfCxc4EsA.woff2) format('woff2');\\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\\n}\\n@font-face {\\n  font-family: 'Roboto';\\n  font-style: normal;\\n  font-weight: 700;\\n  src: url(https://fonts.gstatic.com/s/roboto/v27/KFOlCnqEu92Fr1MmWUlfChc4EsA.woff2) format('woff2');\\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\\n}\\n@font-face {\\n  font-family: 'Roboto';\\n  font-style: normal;\\n  font-weight: 700;\\n  src: url(https://fonts.gstatic.com/s/roboto/v27/KFOlCnqEu92Fr1MmWUlfBBc4.woff2) format('woff2');\\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\\n}\\n@font-face {\\n  font-family: 'FontAwesome';\\n  src: url('/repository/assets/libs/fonts/font-awesome/fonts/fontawesome-webfont.eot?v=4.7.0');\\n  src: url('/repository/assets/libs/fonts/font-awesome/fonts/fontawesome-webfont.eot?#iefix&v=4.7.0') format('embedded-opentype'), url('/repository/assets/libs/fonts/font-awesome/fonts/fontawesome-webfont.woff2?v=4.7.0&s=2') format('woff2'), url('/repository/assets/libs/fonts/font-awesome/fonts/fontawesome-webfont.woff?v=4.7.0') format('woff'), url('/repository/assets/libs/fonts/font-awesome/fonts/fontawesome-webfont.ttf?v=4.7.0') format('truetype'), url('/repository/assets/libs/fonts/font-awesome/fonts/fontawesome-webfont.svg?v=4.7.0#fontawesomeregular') format('svg');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: \\\"Material Design Icons\\\";\\n  src: url(\\\"/repository/assets/libs/materialdesignicons/materialdesignicons-webfont.eot?v=3.6.95\\\");\\n  src: url(\\\"/repository/assets/libs/materialdesignicons/materialdesignicons-webfont.eot?#iefix&v=3.6.95\\\") format(\\\"embedded-opentype\\\"), url(\\\"/repository/assets/libs/materialdesignicons/materialdesignicons-webfont.woff2?v=3.6.95\\\") format(\\\"woff2\\\"), url(\\\"/repository/assets/libs/materialdesignicons/materialdesignicons-webfont.woff?v=3.6.95\\\") format(\\\"woff\\\"), url(\\\"/repository/assets/libs/materialdesignicons/materialdesignicons-webfont.ttf?v=3.6.95\\\") format(\\\"truetype\\\"), url(\\\"/repository/assets/libs/materialdesignicons/materialdesignicons-webfont.svg?v=3.6.95#materialdesigniconsregular\\\") format(\\\"svg\\\");\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: \\\"feather\\\";\\n  src: url(\\\"/repository/assets/libs/materialdesignicons/feather.eot?t=1525787366991\\\");\\n  /* IE9*/\\n  src: url(\\\"/repository/assets/libs/materialdesignicons/feather.eot?t=1525787366991#iefix\\\") format(\\\"embedded-opentype\\\"), url(\\\"/repository/assets/libs/materialdesignicons/feather.woff?t=1525787366991\\\") format(\\\"woff\\\"), url(\\\"/repository/assets/libs/materialdesignicons/feather.ttf?t=1525787366991\\\") format(\\\"truetype\\\"), url(\\\"/repository/assets/libs/materialdesignicons/feather.svg?t=1525787366991#feather\\\") format(\\\"svg\\\");\\n  /* iOS 4.1- */\\n}\\n@font-face {\\n  font-family: \\\"weathericons\\\";\\n  src: url(\\\"/repository/assets/libs/materialdesignicons/weathericons-regular-webfont.eot\\\");\\n  src: url(\\\"/repository/assets/libs/materialdesignicons/weathericons-regular-webfont.eot?#iefix\\\") format(\\\"embedded-opentype\\\"), url(\\\"/repository/assets/libs/materialdesignicons/weathericons-regular-webfont.woff2\\\") format(\\\"woff2\\\"), url(\\\"/repository/assets/libs/materialdesignicons/weathericons-regular-webfont.woff\\\") format(\\\"woff\\\"), url(\\\"/repository/assets/libs/materialdesignicons/weathericons-regular-webfont.ttf\\\") format(\\\"truetype\\\"), url(\\\"/repository/assets/libs/materialdesignicons/weathericons-regular-webfont.svg#weather_iconsregular\\\") format(\\\"svg\\\");\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'themify';\\n  src: url(\\\"/repository/assets/libs/materialdesignicons/themify.eot?-fvbane\\\");\\n  src: url(\\\"/repository/assets/libs/materialdesignicons/themify.eot?#iefix-fvbane\\\") format(\\\"embedded-opentype\\\"), url(\\\"/repository/assets/libs/materialdesignicons/themify.woff?-fvbane\\\") format(\\\"woff\\\"), url(\\\"/repository/assets/libs/materialdesignicons/themify.ttf?-fvbane\\\") format(\\\"truetype\\\"), url(\\\"/repository/assets/libs/materialdesignicons/themify.svg?-fvbane#themify\\\") format(\\\"svg\\\");\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'Font Awesome 5 Brands';\\n  font-style: normal;\\n  font-weight: normal;\\n  font-display: auto;\\n  src: url(\\\"/repository/assets/libs/materialdesignicons/fa-brands-400.eot\\\");\\n  src: url(\\\"/repository/assets/libs/materialdesignicons/fa-brands-400.eot?#iefix\\\") format(\\\"embedded-opentype\\\"), url(\\\"/repository/assets/libs/materialdesignicons/fa-brands-400.woff2\\\") format(\\\"woff2\\\"), url(\\\"/repository/assets/libs/materialdesignicons/fa-brands-400.woff\\\") format(\\\"woff\\\"), url(\\\"/repository/assets/libs/materialdesignicons/fa-brands-400.ttf\\\") format(\\\"truetype\\\"), url(\\\"/repository/assets/libs/materialdesignicons/fa-brands-400.svg#fontawesome\\\") format(\\\"svg\\\");\\n}\\n@font-face {\\n  font-family: 'Font Awesome 5 Free';\\n  font-style: normal;\\n  font-weight: 400;\\n  font-display: auto;\\n  src: url(\\\"/repository/assets/libs/materialdesignicons/fa-regular-400.eot\\\");\\n  src: url(\\\"/repository/assets/libs/materialdesignicons/fa-regular-400.eot?#iefix\\\") format(\\\"embedded-opentype\\\"), url(\\\"/repository/assets/libs/materialdesignicons/fa-regular-400.woff2\\\") format(\\\"woff2\\\"), url(\\\"/repository/assets/libs/materialdesignicons/fa-regular-400.woff\\\") format(\\\"woff\\\"), url(\\\"/repository/assets/libs/materialdesignicons/fa-regular-400.ttf\\\") format(\\\"truetype\\\"), url(\\\"/repository/assets/libs/materialdesignicons/fa-regular-400.svg#fontawesome\\\") format(\\\"svg\\\");\\n}\\n@font-face {\\n  font-family: 'Font Awesome 5 Free';\\n  font-style: normal;\\n  font-weight: 900;\\n  font-display: auto;\\n  src: url(\\\"/repository/assets/libs/materialdesignicons/fa-solid-900.eot\\\");\\n  src: url(\\\"/repository/assets/libs/materialdesignicons/fa-solid-900.eot?#iefix\\\") format(\\\"embedded-opentype\\\"), url(\\\"/repository/assets/libs/materialdesignicons/fa-solid-900.woff2\\\") format(\\\"woff2\\\"), url(\\\"/repository/assets/libs/materialdesignicons/fa-solid-900.woff\\\") format(\\\"woff\\\"), url(\\\"/repository/assets/libs/materialdesignicons/fa-solid-900.ttf\\\") format(\\\"truetype\\\"), url(\\\"/repository/assets/libs/materialdesignicons/fa-solid-900.svg#fontawesome\\\") format(\\\"svg\\\");\\n}\\n@font-face {\\n  font-family: \\\"remixicon\\\";\\n  src: url(\\\"/repository/assets/libs/materialdesignicons/remixicon.eot?t=1551008796529\\\");\\n  /* IE9*/\\n  src: url(\\\"/repository/assets/libs/materialdesignicons/remixicon.eot?t=1551008796529#iefix\\\") format(\\\"embedded-opentype\\\"), url(\\\"/repository/assets/libs/materialdesignicons/remixicon.woff2?t=1551008796529\\\") format(\\\"woff2\\\"), url(\\\"/repository/assets/libs/materialdesignicons/remixicon.woff?t=1551008796529\\\") format(\\\"woff\\\"), url(\\\"/repository/assets/libs/materialdesignicons/remixicon.ttf?t=1551008796529\\\") format(\\\"truetype\\\"), url(\\\"/repository/assets/libs/materialdesignicons/remixicon.svg?t=1551008796529#remixicon\\\") format(\\\"svg\\\");\\n  /* iOS 4.1- */\\n}\\n@font-face {\\n  font-family: \\\"summernote\\\";\\n  font-style: normal;\\n  font-weight: 400;\\n  src: url(\\\"/repository/assets/libs/materialdesignicons/summernote.eot\\\");\\n  src: url(\\\"/repository/assets/libs/materialdesignicons/summernote.eot?#iefix\\\") format(\\\"embedded-opentype\\\"), url(\\\"/repository/assets/libs/materialdesignicons/fonts/summernote.woff\\\") format(\\\"woff\\\"), url(\\\"/repository/assets/libs/materialdesignicons/fonts/summernote.ttf\\\") format(\\\"truetype\\\");\\n}\\n@font-face {\\n  font-family: 'footable';\\n  src: url(\\\"/repository/assets/libs/materialdesignicons/fonts/footable.eot\\\");\\n  src: url(\\\"/repository/assets/libs/materialdesignicons/fonts/footable.eot?#iefix\\\") format(\\\"embedded-opentype\\\"), url(\\\"/repository/assets/libs/materialdesignicons/fonts/footable.woff\\\") format(\\\"woff\\\"), url(\\\"/repository/assets/libs/materialdesignicons/fonts/footable.ttf\\\") format(\\\"truetype\\\"), url(\\\"/repository/assets/libs/materialdesignicons/fonts/footable.svg#footable\\\") format(\\\"svg\\\");\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@media screen and (-webkit-min-device-pixel-ratio: 0) {\\n  @font-face {\\n    font-family: 'footable';\\n    src: url(\\\"/repository/assets/libs/materialdesignicons/fonts/footable.svg#footable\\\") format(\\\"svg\\\");\\n    font-weight: normal;\\n    font-style: normal;\\n  }\\n}\\n@font-face {\\n  font-family: 'Keania One script=latin rev=1';\\n  font-style: normal;\\n  font-weight: 400;\\n  font-display: block;\\n  src: url(https://fonts.gstatic.com/l/font?kit=zOL54pXJk65E8pXardnuycF2sdB3utnUSSGc3xk&skey=dbf3f94cd2851bcd&v=v8) format('woff2');\\n}\\n@font-face {\\n  font-family: 'KeaniaOne-Regular';\\n  src: url('/repository/assets/libs/materialdesignicons/KeaniaOne-Regular.eot');\\n  src: url('/repository/assets/libs/materialdesignicons/KeaniaOne-Regular.eot?#iefix') format('embedded-opentype'), url('/repository/assets/libs/materialdesignicons/KeaniaOne-Regular.svg#KeaniaOne-Regular') format('svg'), url('/repository/assets/libs/materialdesignicons/KeaniaOne-Regular.ttf') format('truetype'), url('/repository/assets/libs/materialdesignicons/KeaniaOne-Regular.woff') format('woff'), url('/repository/assets/libs/materialdesignicons/KeaniaOne-Regular.woff2') format('woff2');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'Digital-7';\\n  src: url('/repository/assets/libs/materialdesignicons/Digital-7.svg#Digital-7') format('svg'), url('/repository/assets/libs/materialdesignicons/Digital-7.ttf') format('truetype'), url('/repository/assets/libs/materialdesignicons/Digital-7.woff') format('woff');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'digital-7.regular';\\n  src: url('/repository/assets/libs/materialdesignicons/digital-7.regular.eot');\\n  src: url('/repository/assets/libs/materialdesignicons/digital-7.regular.eot?#iefix') format('embedded-opentype'), url('/repository/assets/libs/materialdesignicons/digital-7.regular.woff2') format('woff2');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'Digital-7Mono';\\n  src: url('/repository/assets/libs/materialdesignicons/Digital-7Mono.svg#Digital-7Mono') format('svg'), url('/repository/assets/libs/materialdesignicons/Digital-7Mono.ttf') format('truetype'), url('/repository/assets/libs/materialdesignicons/Digital-7Mono.woff') format('woff');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'digital-7.mono';\\n  src: url('/repository/assets/libs/materialdesignicons/digital-7.mono.eot');\\n  src: url('/repository/assets/libs/materialdesignicons/digital-7.mono.eot?#iefix') format('embedded-opentype'), url('/repository/assets/libs/materialdesignicons/digital-7.mono.woff2') format('woff2');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'ShareTechMono-Regular';\\n  src: url('/repository/assets/libs/materialdesignicons/ShareTechMono-Regular.eot');\\n  src: url('/repository/assets/libs/materialdesignicons/ShareTechMono-Regular.eot?#iefix') format('embedded-opentype'), url('/repository/assets/libs/materialdesignicons/ShareTechMono-Regular.svg#ShareTechMono-Regular') format('svg'), url('/repository/assets/libs/materialdesignicons/ShareTechMono-Regular.ttf') format('truetype'), url('/repository/assets/libs/materialdesignicons/ShareTechMono-Regular.woff') format('woff'), url('/repository/assets/libs/materialdesignicons/ShareTechMono-Regular.woff2') format('woff2');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'NanumSquareR';\\n  src: url('/repository/assets/libs/materialdesignicons/NanumSquareR.eot');\\n  src: url('/repository/assets/libs/materialdesignicons/NanumSquareR.eot?#iefix') format('embedded-opentype'), url('/repository/assets/libs/materialdesignicons/NanumSquareR.svg#NanumSquareR') format('svg'), url('/repository/assets/libs/materialdesignicons/NanumSquareR.ttf') format('truetype'), url('/repository/assets/libs/materialdesignicons/NanumSquareR.woff') format('woff'), url('/repository/assets/libs/materialdesignicons/NanumSquareR.woff2') format('woff2');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'D2Coding-Ver1.3.2-20180524';\\n  src: url('/repository/assets/libs/materialdesignicons/D2Coding-Ver1.3.2-20180524.eot');\\n  src: url('/repository/assets/libs/materialdesignicons/D2Coding-Ver1.3.2-20180524.eot?#iefix') format('embedded-opentype'), url('/repository/assets/libs/materialdesignicons/D2Coding-Ver1.3.2-20180524.woff2') format('woff2');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n@font-face {\\n  font-family: 'D2Coding';\\n  src: url('/repository/assets/libs/materialdesignicons/D2Coding.svg#D2Coding') format('svg'), url('/repository/assets/libs/materialdesignicons/D2Coding.ttf') format('truetype'), url('/repository/assets/libs/materialdesignicons/D2Coding.woff') format('woff');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n.jj jjfont {\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", \\\"NanumSquareR\\\", Arial, sans-serif;\\n}\\n.jj.freeze iframe {\\n  pointer-events: none;\\n}\\n/* ==Core.710.pkg.deploy================ */\\n/* ==JJInit.640.class================ */\\n/* ==JJApplication.640.class================ */\\n.jj jj-application {\\n  display: block;\\n}\\n/* ==JJLog.640.class================ */\\n/* ==JJEvent.640.class================ */\\n/* ==JJStore.640.class================ */\\n/* ==JJAjax.640.class================ */\\n/* ==JJDom.640.class================ */\\n/* ==JJRequire.640.class================ */\\n/* ==JJException.640.class================ */\\n/* ==JJFinal.640.class================ */\\n/* ==JJGlobal.640.class================ */\\n/* ==JJI18n.640.class================ */\\n/* ==JJConfirm.640.class================ */\\n.jj .topMessageBox {\\n  position: fixed;\\n  z-index: 100000;\\n  display: inline-block;\\n  width: 100%;\\n  padding: 0;\\n  top: 0px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  pointer-events: none;\\n}\\n.jj .topMessageBox .topMessage {\\n  /*position:fixed;*/\\n  min-width: 400px;\\n  display: inline-block;\\n  padding: 10px 50px;\\n  text-align: left;\\n  margin-bottom: 0px;\\n  background-color: yellow;\\n  -webkit-animation-name: bounceInDown;\\n  animation-name: bounceInDown;\\n}\\n.jj .topMessageBox .topMessage i {\\n  font-size: 2em;\\n  color: blue;\\n}\\n.jj .jj-modal.ribbon {\\n  margin-top: 30%;\\n  width: 100%;\\n}\\n.jj .toastMessageBox {\\n  position: fixed;\\n  z-index: 100000;\\n  display: inline-block;\\n  width: 300px;\\n  padding: 0;\\n  top: 10px;\\n  right: 10px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  pointer-events: none;\\n}\\n.jj .toastMessageBox > .toast {\\n  -webkit-animation-name: bounceInDown;\\n  animation-name: bounceInDown;\\n}\\n/* ==JJContextmenu.640.class================ */\\n.jj .jj-context-menu {\\n  display: block;\\n  position: fixed;\\n  min-width: 10rem;\\n  padding: 0.5rem 0;\\n  margin: 0.125rem 0 0;\\n  font-size: 1rem;\\n  color: #212529;\\n  text-align: left;\\n  list-style: none;\\n  background-color: #fff;\\n  background-clip: padding-box;\\n  border: 1px solid rgba(0, 0, 0, 0.15);\\n  border-radius: 0.25rem;\\n  z-index: 209999;\\n}\\n.jj .jj-context-menu a {\\n  display: block;\\n  width: 100%;\\n  padding: 0.25rem 1.5rem;\\n  clear: both;\\n  font-weight: 400;\\n  color: #212529;\\n  text-align: inherit;\\n  white-space: nowrap;\\n  background-color: transparent;\\n  border: 0;\\n  font-size: 0.8rem;\\n}\\n.jj .jj-context-menu a * {\\n  pointer-events: none;\\n}\\n.jj .jj-context-menu a i.fa {\\n  min-width: 20px;\\n}\\n.jj .jj-context-menu a t {\\n  padding-right: 20px;\\n}\\n.jj .jj-context-menu a:hover {\\n  background-color: whitesmoke;\\n}\\n.jj .jj-context-menu .divider {\\n  height: 0;\\n  margin: 0.5rem 0;\\n  overflow: hidden;\\n  border-top: 1px solid #e9ecef;\\n}\\n.jj .jj-context-menu:focus {\\n  box-shadow: 2px 4px 4px 2px rgba(0, 0, 0, 0.2) !important;\\n}\\n.jj .noselect {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: none;\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n}\\n/* ==JJCode.640.class================ */\\n/* ==JJDataType.640.class================ */\\n/* ==JJTest.640.class================ */\\n/* ==SDK.710.pkg.deploy================ */\\n/* ==JJBuilder.640.class================ */\\n/* ==JJDriverApi.640.class================ */\\n/* ==JJGlobalEvent.640.class================ */\\n.jj {\\n  height: 100%;\\n}\\n.jj [jj-command] * {\\n  pointer-events: none;\\n}\\n.jj tr[jj-command] td {\\n  pointer-events: auto;\\n}\\n.jj tr[jj-command] th {\\n  pointer-events: auto;\\n}\\n.jj .jj-toggle {\\n  cursor: pointer;\\n}\\n.jj .jj-toggle > * {\\n  pointer-events: none;\\n}\\n.jj .jj-toggle:not([data-target]) + * {\\n  display: none;\\n}\\n.jj .jj-toggle:not([data-target]) + *.show {\\n  display: block;\\n}\\n.jj .jj-toggle i.fa-plus:before {\\n  content: \\\"\\\\F067\\\";\\n}\\n.jj .jj-toggle.show i.fa-plus:before {\\n  content: \\\"\\\\F068\\\";\\n}\\n.jj .jj-logout {\\n  cursor: pointer;\\n}\\n.jj .jj-logout > * {\\n  pointer-events: none;\\n}\\n.jj .bg-rgba1 {\\n  background: rgba(255, 255, 255, 0.1);\\n}\\n.jj .bg-rgba2 {\\n  background: rgba(255, 255, 255, 0.2);\\n}\\n.jj .bg-rgba3 {\\n  background: rgba(255, 255, 255, 0.3);\\n}\\n.jj .close {\\n  pointer-events: auto!important;\\n}\\n.jj .close[data-dismiss] * {\\n  pointer-events: none;\\n}\\n.jj .dropdown-toggle {\\n  cursor: pointer;\\n}\\n.jj .dropdown-toggle > * {\\n  pointer-events: none;\\n}\\n/* ==w3c.color.640.class================ */\\n/* ==SPA.710.pkg.deploy================ */\\n/* ==JJRoute.640.class================ */\\n/* ==JJLauncher.640.class================ */\\n/* ==JJForm.640.class================ */\\n.jj .jj-form {\\n  display: flex;\\n  flex-direction: column;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  border: 0;\\n  margin-bottom: 0;\\n  z-index: 1;\\n}\\n.jj .jj-form > header {\\n  padding: 1rem 1rem;\\n  flex: none;\\n}\\n.jj .jj-form > header .form-title {\\n  display: inline;\\n}\\n.jj .jj-form > header .close {\\n  height: 100%;\\n}\\n.jj .jj-form > article {\\n  flex-grow: 1;\\n  overflow: auto;\\n  padding: 1rem;\\n}\\n.jj .jj-form > footer {\\n  flex: none;\\n  display: none;\\n}\\n/* ==JJFormFull.640.class================ */\\n.jj jj-form-full.jj-form {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  z-index: 101;\\n  background-color: white;\\n}\\n.jj jj-form-full.jj-form > header,\\n.jj jj-form-full.jj-form > footer {\\n  display: none;\\n}\\n.jj jj-form-full.jj-form > article {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n}\\n/* ==JJFormInclude.640.class================ */\\n.jj jj-form-include.jj-form {\\n  position: relative;\\n  top: 0;\\n  left: 0;\\n  right: auto;\\n  bottom: auto;\\n  border: 1px solid #ccc;\\n  min-width: 300px;\\n  height: 100%;\\n  z-index: 2;\\n}\\n.jj jj-form-include.jj-form > header {\\n  background-color: var(--info) !important;\\n  height: 50px;\\n  padding: 0 1rem;\\n}\\n.jj jj-form-include.jj-form > header .page-title-right {\\n  line-height: 50px;\\n  margin-top: -3px;\\n}\\n.jj jj-form-include.jj-form > header .modal-title {\\n  color: var(--white) !important;\\n  line-height: 50px;\\n}\\n.jj jj-form-include.jj-form > footer {\\n  display: none;\\n}\\n.jj jj-form-include.jj-form.header-none {\\n  border: 0px solid #ccc;\\n}\\n.jj jj-form-include.jj-form.header-none > header,\\n.jj jj-form-include.jj-form.header-none > footer {\\n  display: none;\\n}\\n.jj jj-form-include.jj-form.header-none > article {\\n  top: 0;\\n}\\n/* ==JJFormLayer.640.class================ */\\n.jj jj-form-layer.jj-form {\\n  position: fixed;\\n  top: 100px;\\n  left: 100px;\\n  height: 800px;\\n  width: 1100px;\\n  max-height: 90%;\\n  max-width: 90%;\\n  background-color: white;\\n  z-index: 100;\\n  border: 1px solid var(--light);\\n}\\n.jj jj-form-layer.jj-form > header {\\n  background-color: var(--light);\\n}\\n.jj jj-form-layer.jj-form:focus-within {\\n  border: 1px solid var(--info);\\n}\\n.jj jj-form-layer.jj-form:focus-within > header {\\n  background-color: var(--info) !important;\\n}\\n.jj jj-form-layer.jj-form:focus-within > header .page-title {\\n  color: var(--white) !important;\\n}\\n/* ==JJFormModal.640.class================ */\\n.jj .modal-wrap {\\n  position: fixed;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  overflow: auto;\\n  background-color: rgba(0, 0, 0, 0.4);\\n  z-index: 10001;\\n}\\n.jj .modal-wrap jj-form-modal.jj-form {\\n  position: absolute;\\n  right: auto;\\n  bottom: auto;\\n  height: 800px;\\n  width: 1000px;\\n  max-height: 90%;\\n  max-width: 90%;\\n  visibility: hidden;\\n}\\n.jj .modal-wrap jj-form-modal.jj-form > header {\\n  padding: 1rem 1rem;\\n}\\n.jj .modal-wrap jj-form-modal.jj-form > footer {\\n  display: flex;\\n}\\n.jj .modal-wrap jj-form-modal.jj-form > footer .btn-group > :not(:last-child) {\\n  margin-right: 0.25rem;\\n}\\n.jj .modal-wrap jj-form-modal.jj-form.hidden-footer > footer {\\n  display: none;\\n}\\n.jj .modal-wrap jj-form-modal.jj-form.modal-info footer button[jj-command=\\\"remove\\\"] {\\n  display: none;\\n}\\n/* ==JJTheme.640.class================ */\\n.jj jj-theme {\\n  display: block;\\n  height: 100%;\\n  width: 100%;\\n  overflow: hidden;\\n}\\n.jj jj-theme .mdi-warp {\\n  display: flex;\\n  flex-direction: column;\\n  height: calc(100% - 70px);\\n  padding: 10px;\\n}\\n.jj jj-theme .mdi-warp .mdi-tabs {\\n  position: relative;\\n  flex: none;\\n}\\n.jj jj-theme .mdi-warp .mdi-tabs > ul.nav-tabs {\\n  height: 34px;\\n}\\n.jj jj-theme .mdi-warp .mdi-tabs > ul.nav-tabs.nav-bordered a.active {\\n  border-bottom-width: 5px;\\n}\\n.jj jj-theme .mdi-warp .mdi-tabs > .close-all-tab {\\n  position: absolute;\\n  top: 0;\\n  width: 1rem;\\n  display: none;\\n  left: -1rem;\\n  background-color: var(--danger);\\n  border-radius: 0 50% 50% 0;\\n}\\n.jj jj-theme .mdi-warp .mdi-tabs:hover > .close-all-tab {\\n  display: block;\\n}\\n.jj jj-theme .mdi-warp .mdi-tabs > ul > li > a {\\n  font-size: 0.9rem;\\n  padding: 5px 10px !important;\\n}\\n.jj jj-theme .mdi-warp .mdi-tabs > ul > li > a i.fa-remove {\\n  padding: 3px 5px;\\n  background-color: var(--danger);\\n  border-radius: 50%;\\n  color: var(--white);\\n  margin-right: -5px;\\n  margin-left: 5px;\\n  visibility: hidden;\\n  pointer-events: auto;\\n}\\n.jj jj-theme .mdi-warp .mdi-tabs > ul > li > a:hover i.fa-remove {\\n  visibility: visible;\\n}\\n.jj jj-theme .mdi-warp .mdi-container {\\n  top: 0;\\n  position: relative;\\n  flex-grow: 1;\\n}\\n.jj jj-theme .mdi-warp .mdi-container > jj-form {\\n  display: flex;\\n  flex-direction: column;\\n  top: 10px;\\n}\\n.jj jj-theme .mdi-warp .mdi-container > jj-form > header {\\n  display: none;\\n}\\n.jj jj-theme .mdi-warp .mdi-container > jj-form > article {\\n  top: 0px;\\n  padding: 0;\\n  flex-grow: 1;\\n}\\n.jj ::-webkit-scrollbar {\\n  width: 10px;\\n  height: 10px;\\n}\\n.jj ::-webkit-scrollbar-button:start:decrement,\\n.jj ::-webkit-scrollbar-button:end:increment {\\n  display: none;\\n}\\n.jj ::-webkit-scrollbar-track {\\n  background: #efefef;\\n  -webkit-border-radius: 10px;\\n  border-radius: 10px;\\n  -webkit-box-shadow: inset 0 0 4px rgba(0, 0, 0, 0.2);\\n}\\n.jj ::-webkit-scrollbar-thumb {\\n  background: rgba(0, 0, 0, 0.2);\\n  -webkit-border-radius: 10px;\\n  border-radius: 10px;\\n  -webkit-box-shadow: inset 0 0 4px rgba(0, 0, 0, 0.1);\\n}\\n.jj .role-editor,\\n.jj .role-developer {\\n  display: none;\\n}\\n.jj[user-role=\\\"DEVELOPER\\\"] .role-developer {\\n  display: block;\\n}\\n.jj[user-role=\\\"EDITOR\\\"] .role-editor {\\n  display: block;\\n}\\n/* ==JJStudioForm.640.class================ */\\n.jj jj-studio-form {\\n  position: absolute;\\n  display: block;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  z-index: 1;\\n  background-color: #f5f6f8;\\n}\\n.jj jj-studio-form [jj-command] * {\\n  pointer-events: none;\\n}\\n.jj jj-studio-form > header {\\n  background-color: #e7f5fa;\\n  display: none;\\n}\\n.jj jj-studio-form > article {\\n  position: relative;\\n  overflow: auto;\\n  height: 100%;\\n}\\n.jj jj-studio-form > footer {\\n  flex: none;\\n}\\n.jj jj-studio-form.edited {\\n  border-top: 1px solid var(--danger) !important;\\n}\\n/* ==JJStudioMDI.640.class================ */\\n.jj jj-studio-mdi {\\n  position: relative;\\n  height: 100%;\\n  background-color: var(--light);\\n  overflow: hidden;\\n}\\n.jj jj-studio-mdi > .jj-inline {\\n  position: relative;\\n  height: 40px;\\n  width: 100%;\\n  overflow-x: auto;\\n  background-color: var(--white);\\n}\\n.jj jj-studio-mdi > .jj-inline > .formtab {\\n  margin-bottom: 0;\\n  padding: 5px 5px 0px;\\n}\\n.jj jj-studio-mdi > .jj-inline > .formtab > .tab-item {\\n  position: relative;\\n  height: 2rem;\\n  font-size: inherit;\\n  line-height: 2rem;\\n  opacity: 1;\\n  background-color: var(--light);\\n  color: var(--gray-dark);\\n  padding: 0 0.3rem;\\n  border-radius: 5px 5px 0 0;\\n  margin: 0;\\n  opacity: 0.8;\\n  overflow: hidden;\\n  flex: 0 0 150px;\\n}\\n.jj jj-studio-mdi > .jj-inline > .formtab > .tab-item > i.fa-remove {\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  padding: 0.5rem;\\n  color: black;\\n  visibility: hidden;\\n  background-color: rgba(0, 0, 0, 0.2);\\n}\\n.jj jj-studio-mdi > .jj-inline > .formtab > .tab-item > i.movebar {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  padding: 0.5rem;\\n  color: black;\\n  visibility: hidden;\\n  background-color: rgba(0, 0, 0, 0.2);\\n}\\n.jj jj-studio-mdi > .jj-inline > .formtab > .tab-item > t {\\n  cursor: pointer;\\n}\\n.jj jj-studio-mdi > .jj-inline > .formtab > .tab-item.active {\\n  border: 1px solid #ccc;\\n  border-width: 1px 1px 0 1px;\\n  background-color: var(--primary);\\n  color: var(--white);\\n  opacity: 1;\\n  z-index: 2;\\n}\\n.jj jj-studio-mdi > .jj-inline > .formtab > .tab-item:hover {\\n  color: black;\\n  opacity: 1;\\n}\\n.jj jj-studio-mdi > .jj-inline > .formtab > .tab-item:hover > i {\\n  visibility: visible;\\n}\\n.jj jj-studio-mdi > .jj-inline > .formtab > .tab-item.edited {\\n  color: var(--warning);\\n  font-weight: bold;\\n  opacity: 1;\\n}\\n.jj jj-studio-mdi > .formset {\\n  position: absolute;\\n  top: 36px;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  z-index: 0;\\n  background-color: white;\\n  border-top: 1px solid #ccc;\\n}\\n.jj jj-studio-mdi > .formset > jj-studio-form {\\n  display: none;\\n}\\n.jj jj-studio-mdi > .formset > jj-studio-form > .form-header {\\n  display: none;\\n}\\n.jj jj-studio-mdi > .formset > jj-studio-form.active {\\n  display: block;\\n}\\n/* ==JJFormExcute.640.class================ */\\n.jj[testable='true'] jj-form-excute {\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  position: relative;\\n  display: block;\\n  overflow: hidden;\\n}\\n.jj[testable='true'] jj-form-excute:focus-within {\\n  border: 0px solid transparent;\\n}\\n.jj[testable='true'] jj-form-excute > header,\\n.jj[testable='true'] jj-form-excute > footer {\\n  display: none;\\n}\\n.jj[testable='true'] jj-form-excute > article {\\n  height: 100%;\\n  overflow: auto;\\n  padding: 0;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n}\\n/* ==PWA.710.pkg.deploy================ */\\n/* ==Auth.640.class================ */\\n/* ==JJServiceWorker.640.class================ */\\n/* ==Notification.640.class================ */\\n/* ==ServerSentEvents.640.class================ */\\n/* ==ReactComp.710.pkg.deploy================ */\\n/* ==JJPagination.640.class================ */\\n.jj jj-pagination {\\n  display: inline-block;\\n  width: 100%;\\n  line-height: 34px;\\n  margin: 0px 0px 10px;\\n  text-align: center;\\n}\\n.jj jj-pagination .pagination {\\n  margin: 0;\\n}\\n.jj jj-pagination .pagination li {\\n  display: table-cell;\\n}\\n.jj jj-pagination select {\\n  width: 70px!important;\\n  float: right;\\n}\\n.jj jj-pagination .rownum {\\n  float: left;\\n}\\n.jj jj-pagination .pager {\\n  padding-left: 0;\\n  margin: 20px 0;\\n  text-align: center;\\n  list-style: none;\\n  display: none;\\n  margin: 0;\\n  line-height: 24px;\\n}\\n.jj jj-pagination .pager li {\\n  display: inline;\\n}\\n.jj jj-pagination .pager li > a,\\n.jj jj-pagination .pager li > span {\\n  background: transparent;\\n  color: inherit;\\n  border: none;\\n  padding: 3px 10px;\\n  border-radius: 30%;\\n}\\n.jj jj-pagination .pager li > a *,\\n.jj jj-pagination .pager li > span * {\\n  pointer-events: none;\\n}\\n.jj jj-pagination .pager li > a:hover,\\n.jj jj-pagination .pager li > span:hover,\\n.jj jj-pagination .pager li > a:focus,\\n.jj jj-pagination .pager li > span:focus {\\n  background: transparent;\\n  border: none;\\n}\\n.jj jj-pagination.sm .pagination,\\n.jj jj-pagination.sm select {\\n  display: none;\\n}\\n.jj jj-pagination.sm .pager {\\n  display: block;\\n  float: right;\\n}\\n@media (max-width: 767px) {\\n  .jj jj-pagination .pagination,\\n  .jj jj-pagination select {\\n    display: none;\\n  }\\n  .jj jj-pagination .pager {\\n    display: block;\\n    float: right;\\n  }\\n}\\n/* ==JJReact.640.class================ */\\n/* ==CssComp.710.pkg.deploy================ */\\n/* ==JJAnimation.640.class================ */\\n.jj .ani-off * {\\n  -webkit-animation-duration: 0s!important;\\n  animation-duration: 0s!important;\\n}\\n.jj .animated {\\n  -webkit-animation-duration: 1s;\\n  animation-duration: 1s;\\n  -webkit-animation-fill-mode: both;\\n  animation-fill-mode: both;\\n}\\n.jj .animated.infinite {\\n  -webkit-animation-iteration-count: infinite;\\n  animation-iteration-count: infinite;\\n}\\n.jj .animated.hinge {\\n  -webkit-animation-duration: 2s;\\n  animation-duration: 2s;\\n}\\n@-webkit-keyframes bounce {\\n  0%,\\n  100%,\\n  20%,\\n  50%,\\n  80% {\\n    -webkit-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n  40% {\\n    -webkit-transform: translateY(-30px);\\n    transform: translateY(-30px);\\n  }\\n  60% {\\n    -webkit-transform: translateY(-15px);\\n    transform: translateY(-15px);\\n  }\\n}\\n@keyframes bounce {\\n  0%,\\n  100%,\\n  20%,\\n  50%,\\n  80% {\\n    -webkit-transform: translateY(0);\\n    -ms-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n  40% {\\n    -webkit-transform: translateY(-30px);\\n    -ms-transform: translateY(-30px);\\n    transform: translateY(-30px);\\n  }\\n  60% {\\n    -webkit-transform: translateY(-15px);\\n    -ms-transform: translateY(-15px);\\n    transform: translateY(-15px);\\n  }\\n}\\n.jj .bounce {\\n  -webkit-animation-name: bounce;\\n  animation-name: bounce;\\n}\\n@-webkit-keyframes flash {\\n  0%,\\n  100%,\\n  50% {\\n    opacity: 1;\\n  }\\n  25%,\\n  75% {\\n    opacity: 0;\\n  }\\n}\\n@keyframes flash {\\n  0%,\\n  100%,\\n  50% {\\n    opacity: 1;\\n  }\\n  25%,\\n  75% {\\n    opacity: 0;\\n  }\\n}\\n.jj .flash {\\n  -webkit-animation-name: flash;\\n  animation-name: flash;\\n}\\n@-webkit-keyframes pulse {\\n  0%,\\n  100% {\\n    -webkit-transform: scale(1);\\n    transform: scale(1);\\n  }\\n  50% {\\n    -webkit-transform: scale(1.1);\\n    transform: scale(1.1);\\n  }\\n}\\n@keyframes pulse {\\n  0%,\\n  100% {\\n    -webkit-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n  50% {\\n    -webkit-transform: scale(1.1);\\n    -ms-transform: scale(1.1);\\n    transform: scale(1.1);\\n  }\\n}\\n.jj .pulse {\\n  -webkit-animation-name: pulse;\\n  animation-name: pulse;\\n}\\n@-webkit-keyframes rubberBand {\\n  0%,\\n  100% {\\n    -webkit-transform: scale(1);\\n    transform: scale(1);\\n  }\\n  30% {\\n    -webkit-transform: scaleX(1.25) scaleY(0.75);\\n    transform: scaleX(1.25) scaleY(0.75);\\n  }\\n  40% {\\n    -webkit-transform: scaleX(0.75) scaleY(1.25);\\n    transform: scaleX(0.75) scaleY(1.25);\\n  }\\n  60% {\\n    -webkit-transform: scaleX(1.15) scaleY(0.85);\\n    transform: scaleX(1.15) scaleY(0.85);\\n  }\\n}\\n@keyframes rubberBand {\\n  0%,\\n  100% {\\n    -webkit-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n  30% {\\n    -webkit-transform: scaleX(1.25) scaleY(0.75);\\n    -ms-transform: scaleX(1.25) scaleY(0.75);\\n    transform: scaleX(1.25) scaleY(0.75);\\n  }\\n  40% {\\n    -webkit-transform: scaleX(0.75) scaleY(1.25);\\n    -ms-transform: scaleX(0.75) scaleY(1.25);\\n    transform: scaleX(0.75) scaleY(1.25);\\n  }\\n  60% {\\n    -webkit-transform: scaleX(1.15) scaleY(0.85);\\n    -ms-transform: scaleX(1.15) scaleY(0.85);\\n    transform: scaleX(1.15) scaleY(0.85);\\n  }\\n}\\n.jj .rubberBand {\\n  -webkit-animation-name: rubberBand;\\n  animation-name: rubberBand;\\n}\\n@-webkit-keyframes shake {\\n  0%,\\n  100% {\\n    -webkit-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n  10%,\\n  30%,\\n  50%,\\n  70%,\\n  90% {\\n    -webkit-transform: translateX(-10px);\\n    transform: translateX(-10px);\\n  }\\n  20%,\\n  40%,\\n  60%,\\n  80% {\\n    -webkit-transform: translateX(10px);\\n    transform: translateX(10px);\\n  }\\n}\\n@keyframes shake {\\n  0%,\\n  100% {\\n    -webkit-transform: translateX(0);\\n    -ms-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n  10%,\\n  30%,\\n  50%,\\n  70%,\\n  90% {\\n    -webkit-transform: translateX(-10px);\\n    -ms-transform: translateX(-10px);\\n    transform: translateX(-10px);\\n  }\\n  20%,\\n  40%,\\n  60%,\\n  80% {\\n    -webkit-transform: translateX(10px);\\n    -ms-transform: translateX(10px);\\n    transform: translateX(10px);\\n  }\\n}\\n.jj .shake {\\n  -webkit-animation-name: shake;\\n  animation-name: shake;\\n}\\n@-webkit-keyframes swing {\\n  20% {\\n    -webkit-transform: rotate(15deg);\\n    transform: rotate(15deg);\\n  }\\n  40% {\\n    -webkit-transform: rotate(-10deg);\\n    transform: rotate(-10deg);\\n  }\\n  60% {\\n    -webkit-transform: rotate(5deg);\\n    transform: rotate(5deg);\\n  }\\n  80% {\\n    -webkit-transform: rotate(-5deg);\\n    transform: rotate(-5deg);\\n  }\\n  100% {\\n    -webkit-transform: rotate(0);\\n    transform: rotate(0);\\n  }\\n}\\n@keyframes swing {\\n  20% {\\n    -webkit-transform: rotate(15deg);\\n    -ms-transform: rotate(15deg);\\n    transform: rotate(15deg);\\n  }\\n  40% {\\n    -webkit-transform: rotate(-10deg);\\n    -ms-transform: rotate(-10deg);\\n    transform: rotate(-10deg);\\n  }\\n  60% {\\n    -webkit-transform: rotate(5deg);\\n    -ms-transform: rotate(5deg);\\n    transform: rotate(5deg);\\n  }\\n  80% {\\n    -webkit-transform: rotate(-5deg);\\n    -ms-transform: rotate(-5deg);\\n    transform: rotate(-5deg);\\n  }\\n  100% {\\n    -webkit-transform: rotate(0);\\n    -ms-transform: rotate(0);\\n    transform: rotate(0);\\n  }\\n}\\n.jj .swing {\\n  -webkit-transform-origin: top center;\\n  -ms-transform-origin: top center;\\n  transform-origin: top center;\\n  -webkit-animation-name: swing;\\n  animation-name: swing;\\n}\\n@-webkit-keyframes tada {\\n  0% {\\n    -webkit-transform: scale(1);\\n    transform: scale(1);\\n  }\\n  10%,\\n  20% {\\n    -webkit-transform: scale(0.9) rotate(-3deg);\\n    transform: scale(0.9) rotate(-3deg);\\n  }\\n  30%,\\n  50%,\\n  70%,\\n  90% {\\n    -webkit-transform: scale(1.1) rotate(3deg);\\n    transform: scale(1.1) rotate(3deg);\\n  }\\n  40%,\\n  60%,\\n  80% {\\n    -webkit-transform: scale(1.1) rotate(-3deg);\\n    transform: scale(1.1) rotate(-3deg);\\n  }\\n  100% {\\n    -webkit-transform: scale(1) rotate(0);\\n    transform: scale(1) rotate(0);\\n  }\\n}\\n@keyframes tada {\\n  0% {\\n    -webkit-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n  10%,\\n  20% {\\n    -webkit-transform: scale(0.9) rotate(-3deg);\\n    -ms-transform: scale(0.9) rotate(-3deg);\\n    transform: scale(0.9) rotate(-3deg);\\n  }\\n  30%,\\n  50%,\\n  70%,\\n  90% {\\n    -webkit-transform: scale(1.1) rotate(3deg);\\n    -ms-transform: scale(1.1) rotate(3deg);\\n    transform: scale(1.1) rotate(3deg);\\n  }\\n  40%,\\n  60%,\\n  80% {\\n    -webkit-transform: scale(1.1) rotate(-3deg);\\n    -ms-transform: scale(1.1) rotate(-3deg);\\n    transform: scale(1.1) rotate(-3deg);\\n  }\\n  100% {\\n    -webkit-transform: scale(1) rotate(0);\\n    -ms-transform: scale(1) rotate(0);\\n    transform: scale(1) rotate(0);\\n  }\\n}\\n.jj .tada {\\n  -webkit-animation-name: tada;\\n  animation-name: tada;\\n}\\n@-webkit-keyframes wobble {\\n  0%,\\n  100% {\\n    -webkit-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n  15% {\\n    -webkit-transform: translateX(-25%) rotate(-5deg);\\n    transform: translateX(-25%) rotate(-5deg);\\n  }\\n  30% {\\n    -webkit-transform: translateX(20%) rotate(3deg);\\n    transform: translateX(20%) rotate(3deg);\\n  }\\n  45% {\\n    -webkit-transform: translateX(-15%) rotate(-3deg);\\n    transform: translateX(-15%) rotate(-3deg);\\n  }\\n  60% {\\n    -webkit-transform: translateX(10%) rotate(2deg);\\n    transform: translateX(10%) rotate(2deg);\\n  }\\n  75% {\\n    -webkit-transform: translateX(-5%) rotate(-1deg);\\n    transform: translateX(-5%) rotate(-1deg);\\n  }\\n}\\n@keyframes wobble {\\n  0%,\\n  100% {\\n    -webkit-transform: translateX(0);\\n    -ms-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n  15% {\\n    -webkit-transform: translateX(-25%) rotate(-5deg);\\n    -ms-transform: translateX(-25%) rotate(-5deg);\\n    transform: translateX(-25%) rotate(-5deg);\\n  }\\n  30% {\\n    -webkit-transform: translateX(20%) rotate(3deg);\\n    -ms-transform: translateX(20%) rotate(3deg);\\n    transform: translateX(20%) rotate(3deg);\\n  }\\n  45% {\\n    -webkit-transform: translateX(-15%) rotate(-3deg);\\n    -ms-transform: translateX(-15%) rotate(-3deg);\\n    transform: translateX(-15%) rotate(-3deg);\\n  }\\n  60% {\\n    -webkit-transform: translateX(10%) rotate(2deg);\\n    -ms-transform: translateX(10%) rotate(2deg);\\n    transform: translateX(10%) rotate(2deg);\\n  }\\n  75% {\\n    -webkit-transform: translateX(-5%) rotate(-1deg);\\n    -ms-transform: translateX(-5%) rotate(-1deg);\\n    transform: translateX(-5%) rotate(-1deg);\\n  }\\n}\\n.jj .wobble {\\n  -webkit-animation-name: wobble;\\n  animation-name: wobble;\\n}\\n@-webkit-keyframes bounceIn {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.3);\\n    transform: scale(0.3);\\n  }\\n  50% {\\n    opacity: 1;\\n    -webkit-transform: scale(1.05);\\n    transform: scale(1.05);\\n  }\\n  70% {\\n    -webkit-transform: scale(0.9);\\n    transform: scale(0.9);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n@keyframes bounceIn {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.3);\\n    -ms-transform: scale(0.3);\\n    transform: scale(0.3);\\n  }\\n  50% {\\n    opacity: 1;\\n    -webkit-transform: scale(1.05);\\n    -ms-transform: scale(1.05);\\n    transform: scale(1.05);\\n  }\\n  70% {\\n    -webkit-transform: scale(0.9);\\n    -ms-transform: scale(0.9);\\n    transform: scale(0.9);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n}\\n.jj .bounceIn {\\n  -webkit-animation-name: bounceIn;\\n  animation-name: bounceIn;\\n}\\n@-webkit-keyframes bounceInDown {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateY(-2000px);\\n    transform: translateY(-2000px);\\n  }\\n  60% {\\n    opacity: 1;\\n    -webkit-transform: translateY(30px);\\n    transform: translateY(30px);\\n  }\\n  80% {\\n    -webkit-transform: translateY(-10px);\\n    transform: translateY(-10px);\\n  }\\n  100% {\\n    -webkit-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n}\\n@keyframes bounceInDown {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateY(-2000px);\\n    -ms-transform: translateY(-2000px);\\n    transform: translateY(-2000px);\\n  }\\n  60% {\\n    opacity: 1;\\n    -webkit-transform: translateY(30px);\\n    -ms-transform: translateY(30px);\\n    transform: translateY(30px);\\n  }\\n  80% {\\n    -webkit-transform: translateY(-10px);\\n    -ms-transform: translateY(-10px);\\n    transform: translateY(-10px);\\n  }\\n  100% {\\n    -webkit-transform: translateY(0);\\n    -ms-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n}\\n.jj .bounceInDown {\\n  -webkit-animation-name: bounceInDown;\\n  animation-name: bounceInDown;\\n}\\n@-webkit-keyframes bounceInLeft {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateX(-2000px);\\n    transform: translateX(-2000px);\\n  }\\n  60% {\\n    opacity: 1;\\n    -webkit-transform: translateX(30px);\\n    transform: translateX(30px);\\n  }\\n  80% {\\n    -webkit-transform: translateX(-10px);\\n    transform: translateX(-10px);\\n  }\\n  100% {\\n    -webkit-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n}\\n@keyframes bounceInLeft {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateX(-2000px);\\n    -ms-transform: translateX(-2000px);\\n    transform: translateX(-2000px);\\n  }\\n  60% {\\n    opacity: 1;\\n    -webkit-transform: translateX(30px);\\n    -ms-transform: translateX(30px);\\n    transform: translateX(30px);\\n  }\\n  80% {\\n    -webkit-transform: translateX(-10px);\\n    -ms-transform: translateX(-10px);\\n    transform: translateX(-10px);\\n  }\\n  100% {\\n    -webkit-transform: translateX(0);\\n    -ms-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n}\\n.jj .bounceInLeft {\\n  -webkit-animation-name: bounceInLeft;\\n  animation-name: bounceInLeft;\\n}\\n@-webkit-keyframes bounceInRight {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateX(2000px);\\n    transform: translateX(2000px);\\n  }\\n  60% {\\n    opacity: 1;\\n    -webkit-transform: translateX(-30px);\\n    transform: translateX(-30px);\\n  }\\n  80% {\\n    -webkit-transform: translateX(10px);\\n    transform: translateX(10px);\\n  }\\n  100% {\\n    -webkit-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n}\\n@keyframes bounceInRight {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateX(2000px);\\n    -ms-transform: translateX(2000px);\\n    transform: translateX(2000px);\\n  }\\n  60% {\\n    opacity: 1;\\n    -webkit-transform: translateX(-30px);\\n    -ms-transform: translateX(-30px);\\n    transform: translateX(-30px);\\n  }\\n  80% {\\n    -webkit-transform: translateX(10px);\\n    -ms-transform: translateX(10px);\\n    transform: translateX(10px);\\n  }\\n  100% {\\n    -webkit-transform: translateX(0);\\n    -ms-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n}\\n.jj .bounceInRight {\\n  -webkit-animation-name: bounceInRight;\\n  animation-name: bounceInRight;\\n}\\n@-webkit-keyframes bounceInUp {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateY(2000px);\\n    transform: translateY(2000px);\\n  }\\n  60% {\\n    opacity: 1;\\n    -webkit-transform: translateY(-30px);\\n    transform: translateY(-30px);\\n  }\\n  80% {\\n    -webkit-transform: translateY(10px);\\n    transform: translateY(10px);\\n  }\\n  100% {\\n    -webkit-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n}\\n@keyframes bounceInUp {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateY(2000px);\\n    -ms-transform: translateY(2000px);\\n    transform: translateY(2000px);\\n  }\\n  60% {\\n    opacity: 1;\\n    -webkit-transform: translateY(-30px);\\n    -ms-transform: translateY(-30px);\\n    transform: translateY(-30px);\\n  }\\n  80% {\\n    -webkit-transform: translateY(10px);\\n    -ms-transform: translateY(10px);\\n    transform: translateY(10px);\\n  }\\n  100% {\\n    -webkit-transform: translateY(0);\\n    -ms-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n}\\n.jj .bounceInUp {\\n  -webkit-animation-name: bounceInUp;\\n  animation-name: bounceInUp;\\n}\\n@-webkit-keyframes bounceOut {\\n  0% {\\n    -webkit-transform: scale(1);\\n    transform: scale(1);\\n  }\\n  25% {\\n    -webkit-transform: scale(0.95);\\n    transform: scale(0.95);\\n  }\\n  50% {\\n    opacity: 1;\\n    -webkit-transform: scale(1.1);\\n    transform: scale(1.1);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.3);\\n    transform: scale(0.3);\\n  }\\n}\\n@keyframes bounceOut {\\n  0% {\\n    -webkit-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n  25% {\\n    -webkit-transform: scale(0.95);\\n    -ms-transform: scale(0.95);\\n    transform: scale(0.95);\\n  }\\n  50% {\\n    opacity: 1;\\n    -webkit-transform: scale(1.1);\\n    -ms-transform: scale(1.1);\\n    transform: scale(1.1);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.3);\\n    -ms-transform: scale(0.3);\\n    transform: scale(0.3);\\n  }\\n}\\n.jj .bounceOut {\\n  -webkit-animation-name: bounceOut;\\n  animation-name: bounceOut;\\n}\\n@-webkit-keyframes bounceOutDown {\\n  0% {\\n    -webkit-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n  20% {\\n    opacity: 1;\\n    -webkit-transform: translateY(-20px);\\n    transform: translateY(-20px);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateY(2000px);\\n    transform: translateY(2000px);\\n  }\\n}\\n@keyframes bounceOutDown {\\n  0% {\\n    -webkit-transform: translateY(0);\\n    -ms-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n  20% {\\n    opacity: 1;\\n    -webkit-transform: translateY(-20px);\\n    -ms-transform: translateY(-20px);\\n    transform: translateY(-20px);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateY(2000px);\\n    -ms-transform: translateY(2000px);\\n    transform: translateY(2000px);\\n  }\\n}\\n.jj .bounceOutDown {\\n  -webkit-animation-name: bounceOutDown;\\n  animation-name: bounceOutDown;\\n}\\n@-webkit-keyframes bounceOutLeft {\\n  0% {\\n    -webkit-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n  20% {\\n    opacity: 1;\\n    -webkit-transform: translateX(20px);\\n    transform: translateX(20px);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateX(-2000px);\\n    transform: translateX(-2000px);\\n  }\\n}\\n@keyframes bounceOutLeft {\\n  0% {\\n    -webkit-transform: translateX(0);\\n    -ms-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n  20% {\\n    opacity: 1;\\n    -webkit-transform: translateX(20px);\\n    -ms-transform: translateX(20px);\\n    transform: translateX(20px);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateX(-2000px);\\n    -ms-transform: translateX(-2000px);\\n    transform: translateX(-2000px);\\n  }\\n}\\n.jj .bounceOutLeft {\\n  -webkit-animation-name: bounceOutLeft;\\n  animation-name: bounceOutLeft;\\n}\\n@-webkit-keyframes bounceOutRight {\\n  0% {\\n    -webkit-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n  20% {\\n    opacity: 1;\\n    -webkit-transform: translateX(-20px);\\n    transform: translateX(-20px);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateX(2000px);\\n    transform: translateX(2000px);\\n  }\\n}\\n@keyframes bounceOutRight {\\n  0% {\\n    -webkit-transform: translateX(0);\\n    -ms-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n  20% {\\n    opacity: 1;\\n    -webkit-transform: translateX(-20px);\\n    -ms-transform: translateX(-20px);\\n    transform: translateX(-20px);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateX(2000px);\\n    -ms-transform: translateX(2000px);\\n    transform: translateX(2000px);\\n  }\\n}\\n.jj .bounceOutRight {\\n  -webkit-animation-name: bounceOutRight;\\n  animation-name: bounceOutRight;\\n}\\n@-webkit-keyframes bounceOutUp {\\n  0% {\\n    -webkit-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n  20% {\\n    opacity: 1;\\n    -webkit-transform: translateY(20px);\\n    transform: translateY(20px);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateY(-2000px);\\n    transform: translateY(-2000px);\\n  }\\n}\\n@keyframes bounceOutUp {\\n  0% {\\n    -webkit-transform: translateY(0);\\n    -ms-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n  20% {\\n    opacity: 1;\\n    -webkit-transform: translateY(20px);\\n    -ms-transform: translateY(20px);\\n    transform: translateY(20px);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateY(-2000px);\\n    -ms-transform: translateY(-2000px);\\n    transform: translateY(-2000px);\\n  }\\n}\\n.jj .bounceOutUp {\\n  -webkit-animation-name: bounceOutUp;\\n  animation-name: bounceOutUp;\\n}\\n@-webkit-keyframes fadeIn {\\n  0% {\\n    opacity: 0;\\n  }\\n  100% {\\n    opacity: 1;\\n  }\\n}\\n@keyframes fadeIn {\\n  0% {\\n    opacity: 0;\\n  }\\n  100% {\\n    opacity: 1;\\n  }\\n}\\n.jj .fadeIn {\\n  -webkit-animation-name: fadeIn;\\n  animation-name: fadeIn;\\n}\\n@-webkit-keyframes fadeInDown {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateY(-20px);\\n    transform: translateY(-20px);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n}\\n@keyframes fadeInDown {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateY(-20px);\\n    -ms-transform: translateY(-20px);\\n    transform: translateY(-20px);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n    -ms-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n}\\n.jj .fadeInDown {\\n  -webkit-animation-name: fadeInDown;\\n  animation-name: fadeInDown;\\n}\\n@-webkit-keyframes fadeInDownBig {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateY(-2000px);\\n    transform: translateY(-2000px);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n}\\n@keyframes fadeInDownBig {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateY(-2000px);\\n    -ms-transform: translateY(-2000px);\\n    transform: translateY(-2000px);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n    -ms-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n}\\n.jj .fadeInDownBig {\\n  -webkit-animation-name: fadeInDownBig;\\n  animation-name: fadeInDownBig;\\n}\\n@-webkit-keyframes fadeInLeft {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateX(-20px);\\n    transform: translateX(-20px);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n}\\n@keyframes fadeInLeft {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateX(-20px);\\n    -ms-transform: translateX(-20px);\\n    transform: translateX(-20px);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateX(0);\\n    -ms-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n}\\n.jj .fadeInLeft {\\n  -webkit-animation-name: fadeInLeft;\\n  animation-name: fadeInLeft;\\n}\\n@-webkit-keyframes fadeInLeftBig {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateX(-2000px);\\n    transform: translateX(-2000px);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n}\\n@keyframes fadeInLeftBig {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateX(-2000px);\\n    -ms-transform: translateX(-2000px);\\n    transform: translateX(-2000px);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateX(0);\\n    -ms-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n}\\n.jj .fadeInLeftBig {\\n  -webkit-animation-name: fadeInLeftBig;\\n  animation-name: fadeInLeftBig;\\n}\\n@-webkit-keyframes fadeInRight {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateX(20px);\\n    transform: translateX(20px);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n}\\n@keyframes fadeInRight {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateX(20px);\\n    -ms-transform: translateX(20px);\\n    transform: translateX(20px);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateX(0);\\n    -ms-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n}\\n.jj .fadeInRight {\\n  -webkit-animation-name: fadeInRight;\\n  animation-name: fadeInRight;\\n}\\n@-webkit-keyframes fadeInRightBig {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateX(2000px);\\n    transform: translateX(2000px);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n}\\n@keyframes fadeInRightBig {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateX(2000px);\\n    -ms-transform: translateX(2000px);\\n    transform: translateX(2000px);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateX(0);\\n    -ms-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n}\\n.jj .fadeInRightBig {\\n  -webkit-animation-name: fadeInRightBig;\\n  animation-name: fadeInRightBig;\\n}\\n@-webkit-keyframes fadeInUp {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateY(20px);\\n    transform: translateY(20px);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n}\\n@keyframes fadeInUp {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateY(20px);\\n    -ms-transform: translateY(20px);\\n    transform: translateY(20px);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n    -ms-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n}\\n.jj .fadeInUp {\\n  -webkit-animation-name: fadeInUp;\\n  animation-name: fadeInUp;\\n}\\n@-webkit-keyframes fadeInUpBig {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateY(2000px);\\n    transform: translateY(2000px);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n}\\n@keyframes fadeInUpBig {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateY(2000px);\\n    -ms-transform: translateY(2000px);\\n    transform: translateY(2000px);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n    -ms-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n}\\n.jj .fadeInUpBig {\\n  -webkit-animation-name: fadeInUpBig;\\n  animation-name: fadeInUpBig;\\n}\\n@-webkit-keyframes fadeOut {\\n  0% {\\n    opacity: 1;\\n  }\\n  100% {\\n    opacity: 0;\\n  }\\n}\\n@keyframes fadeOut {\\n  0% {\\n    opacity: 1;\\n  }\\n  100% {\\n    opacity: 0;\\n  }\\n}\\n.jj .fadeOut {\\n  -webkit-animation-name: fadeOut;\\n  animation-name: fadeOut;\\n}\\n@-webkit-keyframes fadeOutDown {\\n  0% {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateY(20px);\\n    transform: translateY(20px);\\n  }\\n}\\n@keyframes fadeOutDown {\\n  0% {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n    -ms-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateY(20px);\\n    -ms-transform: translateY(20px);\\n    transform: translateY(20px);\\n  }\\n}\\n.jj .fadeOutDown {\\n  -webkit-animation-name: fadeOutDown;\\n  animation-name: fadeOutDown;\\n}\\n@-webkit-keyframes fadeOutDownBig {\\n  0% {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateY(2000px);\\n    transform: translateY(2000px);\\n  }\\n}\\n@keyframes fadeOutDownBig {\\n  0% {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n    -ms-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateY(2000px);\\n    -ms-transform: translateY(2000px);\\n    transform: translateY(2000px);\\n  }\\n}\\n.jj .fadeOutDownBig {\\n  -webkit-animation-name: fadeOutDownBig;\\n  animation-name: fadeOutDownBig;\\n}\\n@-webkit-keyframes fadeOutLeft {\\n  0% {\\n    opacity: 1;\\n    -webkit-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateX(-20px);\\n    transform: translateX(-20px);\\n  }\\n}\\n@keyframes fadeOutLeft {\\n  0% {\\n    opacity: 1;\\n    -webkit-transform: translateX(0);\\n    -ms-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateX(-20px);\\n    -ms-transform: translateX(-20px);\\n    transform: translateX(-20px);\\n  }\\n}\\n.jj .fadeOutLeft {\\n  -webkit-animation-name: fadeOutLeft;\\n  animation-name: fadeOutLeft;\\n}\\n@-webkit-keyframes fadeOutLeftBig {\\n  0% {\\n    opacity: 1;\\n    -webkit-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateX(-2000px);\\n    transform: translateX(-2000px);\\n  }\\n}\\n@keyframes fadeOutLeftBig {\\n  0% {\\n    opacity: 1;\\n    -webkit-transform: translateX(0);\\n    -ms-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateX(-2000px);\\n    -ms-transform: translateX(-2000px);\\n    transform: translateX(-2000px);\\n  }\\n}\\n.jj .fadeOutLeftBig {\\n  -webkit-animation-name: fadeOutLeftBig;\\n  animation-name: fadeOutLeftBig;\\n}\\n@-webkit-keyframes fadeOutRight {\\n  0% {\\n    opacity: 1;\\n    -webkit-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateX(20px);\\n    transform: translateX(20px);\\n  }\\n}\\n@keyframes fadeOutRight {\\n  0% {\\n    opacity: 1;\\n    -webkit-transform: translateX(0);\\n    -ms-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateX(20px);\\n    -ms-transform: translateX(20px);\\n    transform: translateX(20px);\\n  }\\n}\\n.jj .fadeOutRight {\\n  -webkit-animation-name: fadeOutRight;\\n  animation-name: fadeOutRight;\\n}\\n@-webkit-keyframes fadeOutRightBig {\\n  0% {\\n    opacity: 1;\\n    -webkit-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateX(2000px);\\n    transform: translateX(2000px);\\n  }\\n}\\n@keyframes fadeOutRightBig {\\n  0% {\\n    opacity: 1;\\n    -webkit-transform: translateX(0);\\n    -ms-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateX(2000px);\\n    -ms-transform: translateX(2000px);\\n    transform: translateX(2000px);\\n  }\\n}\\n.jj .fadeOutRightBig {\\n  -webkit-animation-name: fadeOutRightBig;\\n  animation-name: fadeOutRightBig;\\n}\\n@-webkit-keyframes fadeOutUp {\\n  0% {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateY(-20px);\\n    transform: translateY(-20px);\\n  }\\n}\\n@keyframes fadeOutUp {\\n  0% {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n    -ms-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateY(-20px);\\n    -ms-transform: translateY(-20px);\\n    transform: translateY(-20px);\\n  }\\n}\\n.jj .fadeOutUp {\\n  -webkit-animation-name: fadeOutUp;\\n  animation-name: fadeOutUp;\\n}\\n@-webkit-keyframes fadeOutUpBig {\\n  0% {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateY(-2000px);\\n    transform: translateY(-2000px);\\n  }\\n}\\n@keyframes fadeOutUpBig {\\n  0% {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n    -ms-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateY(-2000px);\\n    -ms-transform: translateY(-2000px);\\n    transform: translateY(-2000px);\\n  }\\n}\\n.jj .fadeOutUpBig {\\n  -webkit-animation-name: fadeOutUpBig;\\n  animation-name: fadeOutUpBig;\\n}\\n@-webkit-keyframes flip {\\n  0% {\\n    -webkit-transform: perspective(400px) translateZ(0) rotateY(-360deg) scale(1);\\n    transform: perspective(400px) translateZ(0) rotateY(-360deg) scale(1);\\n    -webkit-animation-timing-function: ease-out;\\n    animation-timing-function: ease-out;\\n  }\\n  40% {\\n    -webkit-transform: perspective(400px) translateZ(150px) rotateY(-190deg) scale(1);\\n    transform: perspective(400px) translateZ(150px) rotateY(-190deg) scale(1);\\n    -webkit-animation-timing-function: ease-out;\\n    animation-timing-function: ease-out;\\n  }\\n  50% {\\n    -webkit-transform: perspective(400px) translateZ(150px) rotateY(-170deg) scale(1);\\n    transform: perspective(400px) translateZ(150px) rotateY(-170deg) scale(1);\\n    -webkit-animation-timing-function: ease-in;\\n    animation-timing-function: ease-in;\\n  }\\n  80% {\\n    -webkit-transform: perspective(400px) translateZ(0) rotateY(0) scale(0.95);\\n    transform: perspective(400px) translateZ(0) rotateY(0) scale(0.95);\\n    -webkit-animation-timing-function: ease-in;\\n    animation-timing-function: ease-in;\\n  }\\n  100% {\\n    -webkit-transform: perspective(400px) translateZ(0) rotateY(0) scale(1);\\n    transform: perspective(400px) translateZ(0) rotateY(0) scale(1);\\n    -webkit-animation-timing-function: ease-in;\\n    animation-timing-function: ease-in;\\n  }\\n}\\n@keyframes flip {\\n  0% {\\n    -webkit-transform: perspective(400px) translateZ(0) rotateY(-360deg) scale(1);\\n    -ms-transform: perspective(400px) translateZ(0) rotateY(-360deg) scale(1);\\n    transform: perspective(400px) translateZ(0) rotateY(-360deg) scale(1);\\n    -webkit-animation-timing-function: ease-out;\\n    animation-timing-function: ease-out;\\n  }\\n  40% {\\n    -webkit-transform: perspective(400px) translateZ(150px) rotateY(-190deg) scale(1);\\n    -ms-transform: perspective(400px) translateZ(150px) rotateY(-190deg) scale(1);\\n    transform: perspective(400px) translateZ(150px) rotateY(-190deg) scale(1);\\n    -webkit-animation-timing-function: ease-out;\\n    animation-timing-function: ease-out;\\n  }\\n  50% {\\n    -webkit-transform: perspective(400px) translateZ(150px) rotateY(-170deg) scale(1);\\n    -ms-transform: perspective(400px) translateZ(150px) rotateY(-170deg) scale(1);\\n    transform: perspective(400px) translateZ(150px) rotateY(-170deg) scale(1);\\n    -webkit-animation-timing-function: ease-in;\\n    animation-timing-function: ease-in;\\n  }\\n  80% {\\n    -webkit-transform: perspective(400px) translateZ(0) rotateY(0) scale(0.95);\\n    -ms-transform: perspective(400px) translateZ(0) rotateY(0) scale(0.95);\\n    transform: perspective(400px) translateZ(0) rotateY(0) scale(0.95);\\n    -webkit-animation-timing-function: ease-in;\\n    animation-timing-function: ease-in;\\n  }\\n  100% {\\n    -webkit-transform: perspective(400px) translateZ(0) rotateY(0) scale(1);\\n    -ms-transform: perspective(400px) translateZ(0) rotateY(0) scale(1);\\n    transform: perspective(400px) translateZ(0) rotateY(0) scale(1);\\n    -webkit-animation-timing-function: ease-in;\\n    animation-timing-function: ease-in;\\n  }\\n}\\n.jj .animated.flip {\\n  -webkit-backface-visibility: visible;\\n  -ms-backface-visibility: visible;\\n  backface-visibility: visible;\\n  -webkit-animation-name: flip;\\n  animation-name: flip;\\n}\\n@-webkit-keyframes flipInX {\\n  0% {\\n    -webkit-transform: perspective(400px) rotateX(90deg);\\n    transform: perspective(400px) rotateX(90deg);\\n    opacity: 0;\\n  }\\n  40% {\\n    -webkit-transform: perspective(400px) rotateX(-10deg);\\n    transform: perspective(400px) rotateX(-10deg);\\n  }\\n  70% {\\n    -webkit-transform: perspective(400px) rotateX(10deg);\\n    transform: perspective(400px) rotateX(10deg);\\n  }\\n  100% {\\n    -webkit-transform: perspective(400px) rotateX(0);\\n    transform: perspective(400px) rotateX(0);\\n    opacity: 1;\\n  }\\n}\\n@keyframes flipInX {\\n  0% {\\n    -webkit-transform: perspective(400px) rotateX(90deg);\\n    -ms-transform: perspective(400px) rotateX(90deg);\\n    transform: perspective(400px) rotateX(90deg);\\n    opacity: 0;\\n  }\\n  40% {\\n    -webkit-transform: perspective(400px) rotateX(-10deg);\\n    -ms-transform: perspective(400px) rotateX(-10deg);\\n    transform: perspective(400px) rotateX(-10deg);\\n  }\\n  70% {\\n    -webkit-transform: perspective(400px) rotateX(10deg);\\n    -ms-transform: perspective(400px) rotateX(10deg);\\n    transform: perspective(400px) rotateX(10deg);\\n  }\\n  100% {\\n    -webkit-transform: perspective(400px) rotateX(0);\\n    -ms-transform: perspective(400px) rotateX(0);\\n    transform: perspective(400px) rotateX(0);\\n    opacity: 1;\\n  }\\n}\\n.jj .flipInX {\\n  -webkit-backface-visibility: visible!important;\\n  -ms-backface-visibility: visible!important;\\n  backface-visibility: visible!important;\\n  -webkit-animation-name: flipInX;\\n  animation-name: flipInX;\\n}\\n.jj .flipInY,\\n.jj .flipOutX {\\n  -webkit-backface-visibility: visible!important;\\n  -ms-backface-visibility: visible !important;\\n}\\n@-webkit-keyframes flipInY {\\n  0% {\\n    -webkit-transform: perspective(400px) rotateY(90deg);\\n    transform: perspective(400px) rotateY(90deg);\\n    opacity: 0;\\n  }\\n  40% {\\n    -webkit-transform: perspective(400px) rotateY(-10deg);\\n    transform: perspective(400px) rotateY(-10deg);\\n  }\\n  70% {\\n    -webkit-transform: perspective(400px) rotateY(10deg);\\n    transform: perspective(400px) rotateY(10deg);\\n  }\\n  100% {\\n    -webkit-transform: perspective(400px) rotateY(0);\\n    transform: perspective(400px) rotateY(0);\\n    opacity: 1;\\n  }\\n}\\n@keyframes flipInY {\\n  0% {\\n    -webkit-transform: perspective(400px) rotateY(90deg);\\n    -ms-transform: perspective(400px) rotateY(90deg);\\n    transform: perspective(400px) rotateY(90deg);\\n    opacity: 0;\\n  }\\n  40% {\\n    -webkit-transform: perspective(400px) rotateY(-10deg);\\n    -ms-transform: perspective(400px) rotateY(-10deg);\\n    transform: perspective(400px) rotateY(-10deg);\\n  }\\n  70% {\\n    -webkit-transform: perspective(400px) rotateY(10deg);\\n    -ms-transform: perspective(400px) rotateY(10deg);\\n    transform: perspective(400px) rotateY(10deg);\\n  }\\n  100% {\\n    -webkit-transform: perspective(400px) rotateY(0);\\n    -ms-transform: perspective(400px) rotateY(0);\\n    transform: perspective(400px) rotateY(0);\\n    opacity: 1;\\n  }\\n}\\n.jj .flipInY {\\n  backface-visibility: visible!important;\\n  -webkit-animation-name: flipInY;\\n  animation-name: flipInY;\\n}\\n@-webkit-keyframes flipOutX {\\n  0% {\\n    -webkit-transform: perspective(400px) rotateX(0);\\n    transform: perspective(400px) rotateX(0);\\n    opacity: 1;\\n  }\\n  100% {\\n    -webkit-transform: perspective(400px) rotateX(90deg);\\n    transform: perspective(400px) rotateX(90deg);\\n    opacity: 0;\\n  }\\n}\\n@keyframes flipOutX {\\n  0% {\\n    -webkit-transform: perspective(400px) rotateX(0);\\n    -ms-transform: perspective(400px) rotateX(0);\\n    transform: perspective(400px) rotateX(0);\\n    opacity: 1;\\n  }\\n  100% {\\n    -webkit-transform: perspective(400px) rotateX(90deg);\\n    -ms-transform: perspective(400px) rotateX(90deg);\\n    transform: perspective(400px) rotateX(90deg);\\n    opacity: 0;\\n  }\\n}\\n.jj .flipOutX {\\n  -webkit-animation-name: flipOutX;\\n  animation-name: flipOutX;\\n  backface-visibility: visible !important;\\n}\\n@-webkit-keyframes flipOutY {\\n  0% {\\n    -webkit-transform: perspective(400px) rotateY(0);\\n    transform: perspective(400px) rotateY(0);\\n    opacity: 1;\\n  }\\n  100% {\\n    -webkit-transform: perspective(400px) rotateY(90deg);\\n    transform: perspective(400px) rotateY(90deg);\\n    opacity: 0;\\n  }\\n}\\n@keyframes flipOutY {\\n  0% {\\n    -webkit-transform: perspective(400px) rotateY(0);\\n    -ms-transform: perspective(400px) rotateY(0);\\n    transform: perspective(400px) rotateY(0);\\n    opacity: 1;\\n  }\\n  100% {\\n    -webkit-transform: perspective(400px) rotateY(90deg);\\n    -ms-transform: perspective(400px) rotateY(90deg);\\n    transform: perspective(400px) rotateY(90deg);\\n    opacity: 0;\\n  }\\n}\\n.jj .flipOutY {\\n  -webkit-backface-visibility: visible!important;\\n  -ms-backface-visibility: visible!important;\\n  backface-visibility: visible!important;\\n  -webkit-animation-name: flipOutY;\\n  animation-name: flipOutY;\\n}\\n@-webkit-keyframes lightSpeedIn {\\n  0% {\\n    -webkit-transform: translateX(100%) skewX(-30deg);\\n    transform: translateX(100%) skewX(-30deg);\\n    opacity: 0;\\n  }\\n  60% {\\n    -webkit-transform: translateX(-20%) skewX(30deg);\\n    transform: translateX(-20%) skewX(30deg);\\n    opacity: 1;\\n  }\\n  80% {\\n    -webkit-transform: translateX(0) skewX(-15deg);\\n    transform: translateX(0) skewX(-15deg);\\n    opacity: 1;\\n  }\\n  100% {\\n    -webkit-transform: translateX(0) skewX(0);\\n    transform: translateX(0) skewX(0);\\n    opacity: 1;\\n  }\\n}\\n@keyframes lightSpeedIn {\\n  0% {\\n    -webkit-transform: translateX(100%) skewX(-30deg);\\n    -ms-transform: translateX(100%) skewX(-30deg);\\n    transform: translateX(100%) skewX(-30deg);\\n    opacity: 0;\\n  }\\n  60% {\\n    -webkit-transform: translateX(-20%) skewX(30deg);\\n    -ms-transform: translateX(-20%) skewX(30deg);\\n    transform: translateX(-20%) skewX(30deg);\\n    opacity: 1;\\n  }\\n  80% {\\n    -webkit-transform: translateX(0) skewX(-15deg);\\n    -ms-transform: translateX(0) skewX(-15deg);\\n    transform: translateX(0) skewX(-15deg);\\n    opacity: 1;\\n  }\\n  100% {\\n    -webkit-transform: translateX(0) skewX(0);\\n    -ms-transform: translateX(0) skewX(0);\\n    transform: translateX(0) skewX(0);\\n    opacity: 1;\\n  }\\n}\\n.jj .lightSpeedIn {\\n  -webkit-animation-name: lightSpeedIn;\\n  animation-name: lightSpeedIn;\\n  -webkit-animation-timing-function: ease-out;\\n  animation-timing-function: ease-out;\\n}\\n@-webkit-keyframes lightSpeedOut {\\n  0% {\\n    -webkit-transform: translateX(0) skewX(0);\\n    transform: translateX(0) skewX(0);\\n    opacity: 1;\\n  }\\n  100% {\\n    -webkit-transform: translateX(100%) skewX(-30deg);\\n    transform: translateX(100%) skewX(-30deg);\\n    opacity: 0;\\n  }\\n}\\n@keyframes lightSpeedOut {\\n  0% {\\n    -webkit-transform: translateX(0) skewX(0);\\n    -ms-transform: translateX(0) skewX(0);\\n    transform: translateX(0) skewX(0);\\n    opacity: 1;\\n  }\\n  100% {\\n    -webkit-transform: translateX(100%) skewX(-30deg);\\n    -ms-transform: translateX(100%) skewX(-30deg);\\n    transform: translateX(100%) skewX(-30deg);\\n    opacity: 0;\\n  }\\n}\\n.jj .lightSpeedOut {\\n  -webkit-animation-name: lightSpeedOut;\\n  animation-name: lightSpeedOut;\\n  -webkit-animation-timing-function: ease-in;\\n  animation-timing-function: ease-in;\\n}\\n@-webkit-keyframes rotateIn {\\n  0% {\\n    -webkit-transform-origin: center center;\\n    transform-origin: center center;\\n    -webkit-transform: rotate(-200deg);\\n    transform: rotate(-200deg);\\n    opacity: 0;\\n  }\\n  100% {\\n    -webkit-transform-origin: center center;\\n    transform-origin: center center;\\n    -webkit-transform: rotate(0);\\n    transform: rotate(0);\\n    opacity: 1;\\n  }\\n}\\n@keyframes rotateIn {\\n  0% {\\n    -webkit-transform-origin: center center;\\n    -ms-transform-origin: center center;\\n    transform-origin: center center;\\n    -webkit-transform: rotate(-200deg);\\n    -ms-transform: rotate(-200deg);\\n    transform: rotate(-200deg);\\n    opacity: 0;\\n  }\\n  100% {\\n    -webkit-transform-origin: center center;\\n    -ms-transform-origin: center center;\\n    transform-origin: center center;\\n    -webkit-transform: rotate(0);\\n    -ms-transform: rotate(0);\\n    transform: rotate(0);\\n    opacity: 1;\\n  }\\n}\\n.jj .rotateIn {\\n  -webkit-animation-name: rotateIn;\\n  animation-name: rotateIn;\\n}\\n@-webkit-keyframes rotateInDownLeft {\\n  0% {\\n    -webkit-transform-origin: left bottom;\\n    transform-origin: left bottom;\\n    -webkit-transform: rotate(-90deg);\\n    transform: rotate(-90deg);\\n    opacity: 0;\\n  }\\n  100% {\\n    -webkit-transform-origin: left bottom;\\n    transform-origin: left bottom;\\n    -webkit-transform: rotate(0);\\n    transform: rotate(0);\\n    opacity: 1;\\n  }\\n}\\n@keyframes rotateInDownLeft {\\n  0% {\\n    -webkit-transform-origin: left bottom;\\n    -ms-transform-origin: left bottom;\\n    transform-origin: left bottom;\\n    -webkit-transform: rotate(-90deg);\\n    -ms-transform: rotate(-90deg);\\n    transform: rotate(-90deg);\\n    opacity: 0;\\n  }\\n  100% {\\n    -webkit-transform-origin: left bottom;\\n    -ms-transform-origin: left bottom;\\n    transform-origin: left bottom;\\n    -webkit-transform: rotate(0);\\n    -ms-transform: rotate(0);\\n    transform: rotate(0);\\n    opacity: 1;\\n  }\\n}\\n.jj .rotateInDownLeft {\\n  -webkit-animation-name: rotateInDownLeft;\\n  animation-name: rotateInDownLeft;\\n}\\n@-webkit-keyframes rotateInDownRight {\\n  0% {\\n    -webkit-transform-origin: right bottom;\\n    transform-origin: right bottom;\\n    -webkit-transform: rotate(90deg);\\n    transform: rotate(90deg);\\n    opacity: 0;\\n  }\\n  100% {\\n    -webkit-transform-origin: right bottom;\\n    transform-origin: right bottom;\\n    -webkit-transform: rotate(0);\\n    transform: rotate(0);\\n    opacity: 1;\\n  }\\n}\\n@keyframes rotateInDownRight {\\n  0% {\\n    -webkit-transform-origin: right bottom;\\n    -ms-transform-origin: right bottom;\\n    transform-origin: right bottom;\\n    -webkit-transform: rotate(90deg);\\n    -ms-transform: rotate(90deg);\\n    transform: rotate(90deg);\\n    opacity: 0;\\n  }\\n  100% {\\n    -webkit-transform-origin: right bottom;\\n    -ms-transform-origin: right bottom;\\n    transform-origin: right bottom;\\n    -webkit-transform: rotate(0);\\n    -ms-transform: rotate(0);\\n    transform: rotate(0);\\n    opacity: 1;\\n  }\\n}\\n.jj .rotateInDownRight {\\n  -webkit-animation-name: rotateInDownRight;\\n  animation-name: rotateInDownRight;\\n}\\n@-webkit-keyframes rotateInUpLeft {\\n  0% {\\n    -webkit-transform-origin: left bottom;\\n    transform-origin: left bottom;\\n    -webkit-transform: rotate(90deg);\\n    transform: rotate(90deg);\\n    opacity: 0;\\n  }\\n  100% {\\n    -webkit-transform-origin: left bottom;\\n    transform-origin: left bottom;\\n    -webkit-transform: rotate(0);\\n    transform: rotate(0);\\n    opacity: 1;\\n  }\\n}\\n@keyframes rotateInUpLeft {\\n  0% {\\n    -webkit-transform-origin: left bottom;\\n    -ms-transform-origin: left bottom;\\n    transform-origin: left bottom;\\n    -webkit-transform: rotate(90deg);\\n    -ms-transform: rotate(90deg);\\n    transform: rotate(90deg);\\n    opacity: 0;\\n  }\\n  100% {\\n    -webkit-transform-origin: left bottom;\\n    -ms-transform-origin: left bottom;\\n    transform-origin: left bottom;\\n    -webkit-transform: rotate(0);\\n    -ms-transform: rotate(0);\\n    transform: rotate(0);\\n    opacity: 1;\\n  }\\n}\\n.jj .rotateInUpLeft {\\n  -webkit-animation-name: rotateInUpLeft;\\n  animation-name: rotateInUpLeft;\\n}\\n@-webkit-keyframes rotateInUpRight {\\n  0% {\\n    -webkit-transform-origin: right bottom;\\n    transform-origin: right bottom;\\n    -webkit-transform: rotate(-90deg);\\n    transform: rotate(-90deg);\\n    opacity: 0;\\n  }\\n  100% {\\n    -webkit-transform-origin: right bottom;\\n    transform-origin: right bottom;\\n    -webkit-transform: rotate(0);\\n    transform: rotate(0);\\n    opacity: 1;\\n  }\\n}\\n@keyframes rotateInUpRight {\\n  0% {\\n    -webkit-transform-origin: right bottom;\\n    -ms-transform-origin: right bottom;\\n    transform-origin: right bottom;\\n    -webkit-transform: rotate(-90deg);\\n    -ms-transform: rotate(-90deg);\\n    transform: rotate(-90deg);\\n    opacity: 0;\\n  }\\n  100% {\\n    -webkit-transform-origin: right bottom;\\n    -ms-transform-origin: right bottom;\\n    transform-origin: right bottom;\\n    -webkit-transform: rotate(0);\\n    -ms-transform: rotate(0);\\n    transform: rotate(0);\\n    opacity: 1;\\n  }\\n}\\n.jj .rotateInUpRight {\\n  -webkit-animation-name: rotateInUpRight;\\n  animation-name: rotateInUpRight;\\n}\\n@-webkit-keyframes rotateOut {\\n  0% {\\n    -webkit-transform-origin: center center;\\n    transform-origin: center center;\\n    -webkit-transform: rotate(0);\\n    transform: rotate(0);\\n    opacity: 1;\\n  }\\n  100% {\\n    -webkit-transform-origin: center center;\\n    transform-origin: center center;\\n    -webkit-transform: rotate(200deg);\\n    transform: rotate(200deg);\\n    opacity: 0;\\n  }\\n}\\n@keyframes rotateOut {\\n  0% {\\n    -webkit-transform-origin: center center;\\n    -ms-transform-origin: center center;\\n    transform-origin: center center;\\n    -webkit-transform: rotate(0);\\n    -ms-transform: rotate(0);\\n    transform: rotate(0);\\n    opacity: 1;\\n  }\\n  100% {\\n    -webkit-transform-origin: center center;\\n    -ms-transform-origin: center center;\\n    transform-origin: center center;\\n    -webkit-transform: rotate(200deg);\\n    -ms-transform: rotate(200deg);\\n    transform: rotate(200deg);\\n    opacity: 0;\\n  }\\n}\\n.jj .rotateOut {\\n  -webkit-animation-name: rotateOut;\\n  animation-name: rotateOut;\\n}\\n@-webkit-keyframes rotateOutDownLeft {\\n  0% {\\n    -webkit-transform-origin: left bottom;\\n    transform-origin: left bottom;\\n    -webkit-transform: rotate(0);\\n    transform: rotate(0);\\n    opacity: 1;\\n  }\\n  100% {\\n    -webkit-transform-origin: left bottom;\\n    transform-origin: left bottom;\\n    -webkit-transform: rotate(90deg);\\n    transform: rotate(90deg);\\n    opacity: 0;\\n  }\\n}\\n@keyframes rotateOutDownLeft {\\n  0% {\\n    -webkit-transform-origin: left bottom;\\n    -ms-transform-origin: left bottom;\\n    transform-origin: left bottom;\\n    -webkit-transform: rotate(0);\\n    -ms-transform: rotate(0);\\n    transform: rotate(0);\\n    opacity: 1;\\n  }\\n  100% {\\n    -webkit-transform-origin: left bottom;\\n    -ms-transform-origin: left bottom;\\n    transform-origin: left bottom;\\n    -webkit-transform: rotate(90deg);\\n    -ms-transform: rotate(90deg);\\n    transform: rotate(90deg);\\n    opacity: 0;\\n  }\\n}\\n.jj .rotateOutDownLeft {\\n  -webkit-animation-name: rotateOutDownLeft;\\n  animation-name: rotateOutDownLeft;\\n}\\n@-webkit-keyframes rotateOutDownRight {\\n  0% {\\n    -webkit-transform-origin: right bottom;\\n    transform-origin: right bottom;\\n    -webkit-transform: rotate(0);\\n    transform: rotate(0);\\n    opacity: 1;\\n  }\\n  100% {\\n    -webkit-transform-origin: right bottom;\\n    transform-origin: right bottom;\\n    -webkit-transform: rotate(-90deg);\\n    transform: rotate(-90deg);\\n    opacity: 0;\\n  }\\n}\\n@keyframes rotateOutDownRight {\\n  0% {\\n    -webkit-transform-origin: right bottom;\\n    -ms-transform-origin: right bottom;\\n    transform-origin: right bottom;\\n    -webkit-transform: rotate(0);\\n    -ms-transform: rotate(0);\\n    transform: rotate(0);\\n    opacity: 1;\\n  }\\n  100% {\\n    -webkit-transform-origin: right bottom;\\n    -ms-transform-origin: right bottom;\\n    transform-origin: right bottom;\\n    -webkit-transform: rotate(-90deg);\\n    -ms-transform: rotate(-90deg);\\n    transform: rotate(-90deg);\\n    opacity: 0;\\n  }\\n}\\n.jj .rotateOutDownRight {\\n  -webkit-animation-name: rotateOutDownRight;\\n  animation-name: rotateOutDownRight;\\n}\\n@-webkit-keyframes rotateOutUpLeft {\\n  0% {\\n    -webkit-transform-origin: left bottom;\\n    transform-origin: left bottom;\\n    -webkit-transform: rotate(0);\\n    transform: rotate(0);\\n    opacity: 1;\\n  }\\n  100% {\\n    -webkit-transform-origin: left bottom;\\n    transform-origin: left bottom;\\n    -webkit-transform: rotate(-90deg);\\n    transform: rotate(-90deg);\\n    opacity: 0;\\n  }\\n}\\n@keyframes rotateOutUpLeft {\\n  0% {\\n    -webkit-transform-origin: left bottom;\\n    -ms-transform-origin: left bottom;\\n    transform-origin: left bottom;\\n    -webkit-transform: rotate(0);\\n    -ms-transform: rotate(0);\\n    transform: rotate(0);\\n    opacity: 1;\\n  }\\n  100% {\\n    -webkit-transform-origin: left bottom;\\n    -ms-transform-origin: left bottom;\\n    transform-origin: left bottom;\\n    -webkit-transform: rotate(-90deg);\\n    -ms-transform: rotate(-90deg);\\n    transform: rotate(-90deg);\\n    opacity: 0;\\n  }\\n}\\n.jj .rotateOutUpLeft {\\n  -webkit-animation-name: rotateOutUpLeft;\\n  animation-name: rotateOutUpLeft;\\n}\\n@-webkit-keyframes rotateOutUpRight {\\n  0% {\\n    -webkit-transform-origin: right bottom;\\n    transform-origin: right bottom;\\n    -webkit-transform: rotate(0);\\n    transform: rotate(0);\\n    opacity: 1;\\n  }\\n  100% {\\n    -webkit-transform-origin: right bottom;\\n    transform-origin: right bottom;\\n    -webkit-transform: rotate(90deg);\\n    transform: rotate(90deg);\\n    opacity: 0;\\n  }\\n}\\n@keyframes rotateOutUpRight {\\n  0% {\\n    -webkit-transform-origin: right bottom;\\n    -ms-transform-origin: right bottom;\\n    transform-origin: right bottom;\\n    -webkit-transform: rotate(0);\\n    -ms-transform: rotate(0);\\n    transform: rotate(0);\\n    opacity: 1;\\n  }\\n  100% {\\n    -webkit-transform-origin: right bottom;\\n    -ms-transform-origin: right bottom;\\n    transform-origin: right bottom;\\n    -webkit-transform: rotate(90deg);\\n    -ms-transform: rotate(90deg);\\n    transform: rotate(90deg);\\n    opacity: 0;\\n  }\\n}\\n.jj .rotateOutUpRight {\\n  -webkit-animation-name: rotateOutUpRight;\\n  animation-name: rotateOutUpRight;\\n}\\n@-webkit-keyframes slideInDown {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateY(-2000px);\\n    transform: translateY(-2000px);\\n  }\\n  100% {\\n    -webkit-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n}\\n@keyframes slideInDown {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateY(-2000px);\\n    -ms-transform: translateY(-2000px);\\n    transform: translateY(-2000px);\\n  }\\n  100% {\\n    -webkit-transform: translateY(0);\\n    -ms-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n}\\n.jj .slideInDown {\\n  -webkit-animation-name: slideInDown;\\n  animation-name: slideInDown;\\n}\\n@-webkit-keyframes slideInLeft {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateX(-2000px);\\n    transform: translateX(-2000px);\\n  }\\n  100% {\\n    -webkit-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n}\\n@keyframes slideInLeft {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateX(-2000px);\\n    -ms-transform: translateX(-2000px);\\n    transform: translateX(-2000px);\\n  }\\n  100% {\\n    -webkit-transform: translateX(0);\\n    -ms-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n}\\n.jj .slideInLeft {\\n  -webkit-animation-name: slideInLeft;\\n  animation-name: slideInLeft;\\n}\\n@-webkit-keyframes slideInRight {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateX(2000px);\\n    transform: translateX(2000px);\\n  }\\n  100% {\\n    -webkit-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n}\\n@keyframes slideInRight {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateX(2000px);\\n    -ms-transform: translateX(2000px);\\n    transform: translateX(2000px);\\n  }\\n  100% {\\n    -webkit-transform: translateX(0);\\n    -ms-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n}\\n.jj .slideInRight {\\n  -webkit-animation-name: slideInRight;\\n  animation-name: slideInRight;\\n}\\n@-webkit-keyframes slideOutLeft {\\n  0% {\\n    -webkit-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateX(-2000px);\\n    transform: translateX(-2000px);\\n  }\\n}\\n@keyframes slideOutLeft {\\n  0% {\\n    -webkit-transform: translateX(0);\\n    -ms-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateX(-2000px);\\n    -ms-transform: translateX(-2000px);\\n    transform: translateX(-2000px);\\n  }\\n}\\n.jj .slideOutLeft {\\n  -webkit-animation-name: slideOutLeft;\\n  animation-name: slideOutLeft;\\n}\\n@-webkit-keyframes slideOutRight {\\n  0% {\\n    -webkit-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateX(2000px);\\n    transform: translateX(2000px);\\n  }\\n}\\n@keyframes slideOutRight {\\n  0% {\\n    -webkit-transform: translateX(0);\\n    -ms-transform: translateX(0);\\n    transform: translateX(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateX(2000px);\\n    -ms-transform: translateX(2000px);\\n    transform: translateX(2000px);\\n  }\\n}\\n.jj .slideOutRight {\\n  -webkit-animation-name: slideOutRight;\\n  animation-name: slideOutRight;\\n}\\n@-webkit-keyframes slideOutUp {\\n  0% {\\n    -webkit-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateY(-2000px);\\n    transform: translateY(-2000px);\\n  }\\n}\\n@keyframes slideOutUp {\\n  0% {\\n    -webkit-transform: translateY(0);\\n    -ms-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateY(-2000px);\\n    -ms-transform: translateY(-2000px);\\n    transform: translateY(-2000px);\\n  }\\n}\\n.jj .slideOutUp {\\n  -webkit-animation-name: slideOutUp;\\n  animation-name: slideOutUp;\\n}\\n@-webkit-keyframes slideInUp {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateY(2000px);\\n    transform: translateY(2000px);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n}\\n@keyframes slideInUp {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateY(2000px);\\n    -ms-transform: translateY(2000px);\\n    transform: translateY(2000px);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n    -ms-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n}\\n.jj .slideInUp {\\n  -webkit-animation-name: slideInUp;\\n  animation-name: slideInUp;\\n}\\n@-webkit-keyframes slideOutDown {\\n  0% {\\n    -webkit-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateY(2000px);\\n    transform: translateY(2000px);\\n  }\\n}\\n@keyframes slideOutDown {\\n  0% {\\n    -webkit-transform: translateY(0);\\n    -ms-transform: translateY(0);\\n    transform: translateY(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateY(2000px);\\n    -ms-transform: translateY(2000px);\\n    transform: translateY(2000px);\\n  }\\n}\\n.jj .slideOutDown {\\n  -webkit-animation-name: slideOutDown;\\n  animation-name: slideOutDown;\\n}\\n@-webkit-keyframes hinge {\\n  0% {\\n    -webkit-transform: rotate(0);\\n    transform: rotate(0);\\n    -webkit-transform-origin: top left;\\n    transform-origin: top left;\\n    -webkit-animation-timing-function: ease-in-out;\\n    animation-timing-function: ease-in-out;\\n  }\\n  20%,\\n  60% {\\n    -webkit-transform: rotate(80deg);\\n    transform: rotate(80deg);\\n    -webkit-transform-origin: top left;\\n    transform-origin: top left;\\n    -webkit-animation-timing-function: ease-in-out;\\n    animation-timing-function: ease-in-out;\\n  }\\n  40% {\\n    -webkit-transform: rotate(60deg);\\n    transform: rotate(60deg);\\n    -webkit-transform-origin: top left;\\n    transform-origin: top left;\\n    -webkit-animation-timing-function: ease-in-out;\\n    animation-timing-function: ease-in-out;\\n  }\\n  80% {\\n    -webkit-transform: rotate(60deg) translateY(0);\\n    transform: rotate(60deg) translateY(0);\\n    -webkit-transform-origin: top left;\\n    transform-origin: top left;\\n    -webkit-animation-timing-function: ease-in-out;\\n    animation-timing-function: ease-in-out;\\n    opacity: 1;\\n  }\\n  100% {\\n    -webkit-transform: translateY(700px);\\n    transform: translateY(700px);\\n    opacity: 0;\\n  }\\n}\\n@keyframes hinge {\\n  0% {\\n    -webkit-transform: rotate(0);\\n    -ms-transform: rotate(0);\\n    transform: rotate(0);\\n    -webkit-transform-origin: top left;\\n    -ms-transform-origin: top left;\\n    transform-origin: top left;\\n    -webkit-animation-timing-function: ease-in-out;\\n    animation-timing-function: ease-in-out;\\n  }\\n  20%,\\n  60% {\\n    -webkit-transform: rotate(80deg);\\n    -ms-transform: rotate(80deg);\\n    transform: rotate(80deg);\\n    -webkit-transform-origin: top left;\\n    -ms-transform-origin: top left;\\n    transform-origin: top left;\\n    -webkit-animation-timing-function: ease-in-out;\\n    animation-timing-function: ease-in-out;\\n  }\\n  40% {\\n    -webkit-transform: rotate(60deg);\\n    -ms-transform: rotate(60deg);\\n    transform: rotate(60deg);\\n    -webkit-transform-origin: top left;\\n    -ms-transform-origin: top left;\\n    transform-origin: top left;\\n    -webkit-animation-timing-function: ease-in-out;\\n    animation-timing-function: ease-in-out;\\n  }\\n  80% {\\n    -webkit-transform: rotate(60deg) translateY(0);\\n    -ms-transform: rotate(60deg) translateY(0);\\n    transform: rotate(60deg) translateY(0);\\n    -webkit-transform-origin: top left;\\n    -ms-transform-origin: top left;\\n    transform-origin: top left;\\n    -webkit-animation-timing-function: ease-in-out;\\n    animation-timing-function: ease-in-out;\\n    opacity: 1;\\n  }\\n  100% {\\n    -webkit-transform: translateY(700px);\\n    -ms-transform: translateY(700px);\\n    transform: translateY(700px);\\n    opacity: 0;\\n  }\\n}\\n.jj .hinge {\\n  -webkit-animation-name: hinge;\\n  animation-name: hinge;\\n}\\n@-webkit-keyframes rollIn {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateX(-100%) rotate(-120deg);\\n    transform: translateX(-100%) rotate(-120deg);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateX(0) rotate(0);\\n    transform: translateX(0) rotate(0);\\n  }\\n}\\n@keyframes rollIn {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: translateX(-100%) rotate(-120deg);\\n    -ms-transform: translateX(-100%) rotate(-120deg);\\n    transform: translateX(-100%) rotate(-120deg);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: translateX(0) rotate(0);\\n    -ms-transform: translateX(0) rotate(0);\\n    transform: translateX(0) rotate(0);\\n  }\\n}\\n.jj .rollIn {\\n  -webkit-animation-name: rollIn;\\n  animation-name: rollIn;\\n}\\n@-webkit-keyframes rollOut {\\n  0% {\\n    opacity: 1;\\n    -webkit-transform: translateX(0) rotate(0);\\n    transform: translateX(0) rotate(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateX(100%) rotate(120deg);\\n    transform: translateX(100%) rotate(120deg);\\n  }\\n}\\n@keyframes rollOut {\\n  0% {\\n    opacity: 1;\\n    -webkit-transform: translateX(0) rotate(0);\\n    -ms-transform: translateX(0) rotate(0);\\n    transform: translateX(0) rotate(0);\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: translateX(100%) rotate(120deg);\\n    -ms-transform: translateX(100%) rotate(120deg);\\n    transform: translateX(100%) rotate(120deg);\\n  }\\n}\\n.jj .rollOut {\\n  -webkit-animation-name: rollOut;\\n  animation-name: rollOut;\\n}\\n@-webkit-keyframes zoomIn {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.3);\\n    transform: scale(0.3);\\n  }\\n  50% {\\n    opacity: 1;\\n  }\\n}\\n@keyframes zoomIn {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.3);\\n    -ms-transform: scale(0.3);\\n    transform: scale(0.3);\\n  }\\n  50% {\\n    opacity: 1;\\n  }\\n}\\n.jj .zoomIn {\\n  -webkit-animation-name: zoomIn;\\n  animation-name: zoomIn;\\n}\\n@-webkit-keyframes zoomInDown {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.1) translateY(-2000px);\\n    transform: scale(0.1) translateY(-2000px);\\n    -webkit-animation-timing-function: ease-in-out;\\n    animation-timing-function: ease-in-out;\\n  }\\n  60% {\\n    opacity: 1;\\n    -webkit-transform: scale(0.475) translateY(60px);\\n    transform: scale(0.475) translateY(60px);\\n    -webkit-animation-timing-function: ease-out;\\n    animation-timing-function: ease-out;\\n  }\\n}\\n@keyframes zoomInDown {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.1) translateY(-2000px);\\n    -ms-transform: scale(0.1) translateY(-2000px);\\n    transform: scale(0.1) translateY(-2000px);\\n    -webkit-animation-timing-function: ease-in-out;\\n    animation-timing-function: ease-in-out;\\n  }\\n  60% {\\n    opacity: 1;\\n    -webkit-transform: scale(0.475) translateY(60px);\\n    -ms-transform: scale(0.475) translateY(60px);\\n    transform: scale(0.475) translateY(60px);\\n    -webkit-animation-timing-function: ease-out;\\n    animation-timing-function: ease-out;\\n  }\\n}\\n.jj .zoomInDown {\\n  -webkit-animation-name: zoomInDown;\\n  animation-name: zoomInDown;\\n}\\n@-webkit-keyframes zoomInLeft {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.1) translateX(-2000px);\\n    transform: scale(0.1) translateX(-2000px);\\n    -webkit-animation-timing-function: ease-in-out;\\n    animation-timing-function: ease-in-out;\\n  }\\n  60% {\\n    opacity: 1;\\n    -webkit-transform: scale(0.475) translateX(48px);\\n    transform: scale(0.475) translateX(48px);\\n    -webkit-animation-timing-function: ease-out;\\n    animation-timing-function: ease-out;\\n  }\\n}\\n@keyframes zoomInLeft {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.1) translateX(-2000px);\\n    -ms-transform: scale(0.1) translateX(-2000px);\\n    transform: scale(0.1) translateX(-2000px);\\n    -webkit-animation-timing-function: ease-in-out;\\n    animation-timing-function: ease-in-out;\\n  }\\n  60% {\\n    opacity: 1;\\n    -webkit-transform: scale(0.475) translateX(48px);\\n    -ms-transform: scale(0.475) translateX(48px);\\n    transform: scale(0.475) translateX(48px);\\n    -webkit-animation-timing-function: ease-out;\\n    animation-timing-function: ease-out;\\n  }\\n}\\n.jj .zoomInLeft {\\n  -webkit-animation-name: zoomInLeft;\\n  animation-name: zoomInLeft;\\n}\\n@-webkit-keyframes zoomInRight {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.1) translateX(2000px);\\n    transform: scale(0.1) translateX(2000px);\\n    -webkit-animation-timing-function: ease-in-out;\\n    animation-timing-function: ease-in-out;\\n  }\\n  60% {\\n    opacity: 1;\\n    -webkit-transform: scale(0.475) translateX(-48px);\\n    transform: scale(0.475) translateX(-48px);\\n    -webkit-animation-timing-function: ease-out;\\n    animation-timing-function: ease-out;\\n  }\\n}\\n@keyframes zoomInRight {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.1) translateX(2000px);\\n    -ms-transform: scale(0.1) translateX(2000px);\\n    transform: scale(0.1) translateX(2000px);\\n    -webkit-animation-timing-function: ease-in-out;\\n    animation-timing-function: ease-in-out;\\n  }\\n  60% {\\n    opacity: 1;\\n    -webkit-transform: scale(0.475) translateX(-48px);\\n    -ms-transform: scale(0.475) translateX(-48px);\\n    transform: scale(0.475) translateX(-48px);\\n    -webkit-animation-timing-function: ease-out;\\n    animation-timing-function: ease-out;\\n  }\\n}\\n.jj .zoomInRight {\\n  -webkit-animation-name: zoomInRight;\\n  animation-name: zoomInRight;\\n}\\n@-webkit-keyframes zoomInUp {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.1) translateY(2000px);\\n    transform: scale(0.1) translateY(2000px);\\n    -webkit-animation-timing-function: ease-in-out;\\n    animation-timing-function: ease-in-out;\\n  }\\n  60% {\\n    opacity: 1;\\n    -webkit-transform: scale(0.475) translateY(-60px);\\n    transform: scale(0.475) translateY(-60px);\\n    -webkit-animation-timing-function: ease-out;\\n    animation-timing-function: ease-out;\\n  }\\n}\\n@keyframes zoomInUp {\\n  0% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.1) translateY(2000px);\\n    -ms-transform: scale(0.1) translateY(2000px);\\n    transform: scale(0.1) translateY(2000px);\\n    -webkit-animation-timing-function: ease-in-out;\\n    animation-timing-function: ease-in-out;\\n  }\\n  60% {\\n    opacity: 1;\\n    -webkit-transform: scale(0.475) translateY(-60px);\\n    -ms-transform: scale(0.475) translateY(-60px);\\n    transform: scale(0.475) translateY(-60px);\\n    -webkit-animation-timing-function: ease-out;\\n    animation-timing-function: ease-out;\\n  }\\n}\\n.jj .zoomInUp {\\n  -webkit-animation-name: zoomInUp;\\n  animation-name: zoomInUp;\\n}\\n@-webkit-keyframes zoomOut {\\n  0% {\\n    opacity: 1;\\n    -webkit-transform: scale(1);\\n    transform: scale(1);\\n  }\\n  50% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.3);\\n    transform: scale(0.3);\\n  }\\n  100% {\\n    opacity: 0;\\n  }\\n}\\n@keyframes zoomOut {\\n  0% {\\n    opacity: 1;\\n    -webkit-transform: scale(1);\\n    -ms-transform: scale(1);\\n    transform: scale(1);\\n  }\\n  50% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.3);\\n    -ms-transform: scale(0.3);\\n    transform: scale(0.3);\\n  }\\n  100% {\\n    opacity: 0;\\n  }\\n}\\n.jj .zoomOut {\\n  -webkit-animation-name: zoomOut;\\n  animation-name: zoomOut;\\n}\\n@-webkit-keyframes zoomOutDown {\\n  40% {\\n    opacity: 1;\\n    -webkit-transform: scale(0.475) translateY(-60px);\\n    transform: scale(0.475) translateY(-60px);\\n    -webkit-animation-timing-function: linear;\\n    animation-timing-function: linear;\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.1) translateY(2000px);\\n    transform: scale(0.1) translateY(2000px);\\n    -webkit-transform-origin: center bottom;\\n    transform-origin: center bottom;\\n  }\\n}\\n@keyframes zoomOutDown {\\n  40% {\\n    opacity: 1;\\n    -webkit-transform: scale(0.475) translateY(-60px);\\n    -ms-transform: scale(0.475) translateY(-60px);\\n    transform: scale(0.475) translateY(-60px);\\n    -webkit-animation-timing-function: linear;\\n    animation-timing-function: linear;\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.1) translateY(2000px);\\n    -ms-transform: scale(0.1) translateY(2000px);\\n    transform: scale(0.1) translateY(2000px);\\n    -webkit-transform-origin: center bottom;\\n    -ms-transform-origin: center bottom;\\n    transform-origin: center bottom;\\n  }\\n}\\n.jj .zoomOutDown {\\n  -webkit-animation-name: zoomOutDown;\\n  animation-name: zoomOutDown;\\n}\\n@-webkit-keyframes zoomOutLeft {\\n  40% {\\n    opacity: 1;\\n    -webkit-transform: scale(0.475) translateX(42px);\\n    transform: scale(0.475) translateX(42px);\\n    -webkit-animation-timing-function: linear;\\n    animation-timing-function: linear;\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.1) translateX(-2000px);\\n    transform: scale(0.1) translateX(-2000px);\\n    -webkit-transform-origin: left center;\\n    transform-origin: left center;\\n  }\\n}\\n@keyframes zoomOutLeft {\\n  40% {\\n    opacity: 1;\\n    -webkit-transform: scale(0.475) translateX(42px);\\n    -ms-transform: scale(0.475) translateX(42px);\\n    transform: scale(0.475) translateX(42px);\\n    -webkit-animation-timing-function: linear;\\n    animation-timing-function: linear;\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.1) translateX(-2000px);\\n    -ms-transform: scale(0.1) translateX(-2000px);\\n    transform: scale(0.1) translateX(-2000px);\\n    -webkit-transform-origin: left center;\\n    -ms-transform-origin: left center;\\n    transform-origin: left center;\\n  }\\n}\\n.jj .zoomOutLeft {\\n  -webkit-animation-name: zoomOutLeft;\\n  animation-name: zoomOutLeft;\\n}\\n@-webkit-keyframes zoomOutRight {\\n  40% {\\n    opacity: 1;\\n    -webkit-transform: scale(0.475) translateX(-42px);\\n    transform: scale(0.475) translateX(-42px);\\n    -webkit-animation-timing-function: linear;\\n    animation-timing-function: linear;\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.1) translateX(2000px);\\n    transform: scale(0.1) translateX(2000px);\\n    -webkit-transform-origin: right center;\\n    transform-origin: right center;\\n  }\\n}\\n@keyframes zoomOutRight {\\n  40% {\\n    opacity: 1;\\n    -webkit-transform: scale(0.475) translateX(-42px);\\n    -ms-transform: scale(0.475) translateX(-42px);\\n    transform: scale(0.475) translateX(-42px);\\n    -webkit-animation-timing-function: linear;\\n    animation-timing-function: linear;\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.1) translateX(2000px);\\n    -ms-transform: scale(0.1) translateX(2000px);\\n    transform: scale(0.1) translateX(2000px);\\n    -webkit-transform-origin: right center;\\n    -ms-transform-origin: right center;\\n    transform-origin: right center;\\n  }\\n}\\n.jj .zoomOutRight {\\n  -webkit-animation-name: zoomOutRight;\\n  animation-name: zoomOutRight;\\n}\\n@-webkit-keyframes zoomOutUp {\\n  40% {\\n    opacity: 1;\\n    -webkit-transform: scale(0.475) translateY(60px);\\n    transform: scale(0.475) translateY(60px);\\n    -webkit-animation-timing-function: linear;\\n    animation-timing-function: linear;\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.1) translateY(-2000px);\\n    transform: scale(0.1) translateY(-2000px);\\n    -webkit-transform-origin: center top;\\n    transform-origin: center top;\\n  }\\n}\\n@keyframes zoomOutUp {\\n  40% {\\n    opacity: 1;\\n    -webkit-transform: scale(0.475) translateY(60px);\\n    -ms-transform: scale(0.475) translateY(60px);\\n    transform: scale(0.475) translateY(60px);\\n    -webkit-animation-timing-function: linear;\\n    animation-timing-function: linear;\\n  }\\n  100% {\\n    opacity: 0;\\n    -webkit-transform: scale(0.1) translateY(-2000px);\\n    -ms-transform: scale(0.1) translateY(-2000px);\\n    transform: scale(0.1) translateY(-2000px);\\n    -webkit-transform-origin: center top;\\n    -ms-transform-origin: center top;\\n    transform-origin: center top;\\n  }\\n}\\n.jj .zoomOutUp {\\n  -webkit-animation-name: zoomOutUp;\\n  animation-name: zoomOutUp;\\n}\\n@-webkit-keyframes sizeWidth {\\n  0% {\\n    max-width: 0%;\\n  }\\n  100% {\\n    max-width: 100%;\\n  }\\n}\\n@keyframes sizeWidth {\\n  0% {\\n    max-width: 0%;\\n  }\\n  100% {\\n    max-width: 100%;\\n  }\\n}\\n.jj .sizeWidth {\\n  -webkit-animation-name: sizeWidth;\\n  animation-name: sizeWidth;\\n}\\n.jj .iconSpinOn:hover {\\n  -webkit-animation: iconSpin 2s infinite linear;\\n  -o-animation: iconSpin 2s infinite linear;\\n  animation: iconSpin 2s infinite linear;\\n}\\n.jj .iconSpin {\\n  -webkit-animation: iconSpin 2s infinite linear;\\n  -o-animation: iconSpin 2s infinite linear;\\n  animation: iconSpin 2s infinite linear;\\n}\\n.jj .iconSpin:hover {\\n  -webkit-animation: none;\\n  -o-animation: none;\\n  animation: none;\\n}\\n.jj .iconSpinOn:hover {\\n  -webkit-animation: iconSpin 2s infinite linear;\\n  -o-animation: iconSpin 2s infinite linear;\\n  animation: iconSpin 2s infinite linear;\\n}\\n.jj .over:hover .iconSpinOn {\\n  -webkit-animation: iconSpin 2s infinite linear;\\n  -o-animation: iconSpin 2s infinite linear;\\n  animation: iconSpin 2s infinite linear;\\n}\\n.jj .iconSpinReverse {\\n  -webkit-animation: iconSpinReverse 2s infinite linear;\\n  -o-animation: iconSpinReverse 2s infinite linear;\\n  animation: iconSpinReverse 2s infinite linear;\\n}\\n.jj .iconSpinReverse:hover {\\n  -webkit-animation: none;\\n  -o-animation: none;\\n  animation: none;\\n}\\n.jj .iconSpinReverseOn:hover {\\n  -webkit-animation: iconSpinReverse 2s infinite linear;\\n  -o-animation: iconSpinReverse 2s infinite linear;\\n  animation: iconSpinReverse 2s infinite linear;\\n}\\n@-webkit-keyframes iconSpin {\\n  0% {\\n    -webkit-transform: rotate(0);\\n    transform: rotate(0);\\n  }\\n  100% {\\n    -webkit-transform: rotate(359deg);\\n    transform: rotate(359deg);\\n  }\\n}\\n@-o-keyframes iconSpin {\\n  0% {\\n    -webkit-transform: rotate(0);\\n    -o-transform: rotate(0);\\n    transform: rotate(0);\\n  }\\n  100% {\\n    -webkit-transform: rotate(359deg);\\n    -o-transform: rotate(359deg);\\n    transform: rotate(359deg);\\n  }\\n}\\n@keyframes iconSpin {\\n  0% {\\n    /* -webkit-transform:rotate(0); */\\n    -o-transform: rotate(0);\\n    /* transform:rotate(0); */\\n  }\\n  100% {\\n    -webkit-transform: rotate(359deg);\\n    -o-transform: rotate(359deg);\\n    transform: rotate(359deg);\\n  }\\n}\\n@-webkit-keyframes iconSpinReverse {\\n  0% {\\n    -webkit-transform: rotate(0);\\n    transform: rotate(0);\\n  }\\n  100% {\\n    -webkit-transform: rotate(-359deg);\\n    transform: rotate(-359deg);\\n  }\\n}\\n@-o-keyframes iconSpinReverse {\\n  0% {\\n    -webkit-transform: rotate(0);\\n    -o-transform: rotate(0);\\n    transform: rotate(0);\\n  }\\n  100% {\\n    -webkit-transform: rotate(-359deg);\\n    -o-transform: rotate(-359deg);\\n    transform: rotate(-359deg);\\n  }\\n}\\n@keyframes iconSpinReverse {\\n  0% {\\n    -webkit-transform: rotate(0);\\n    -o-transform: rotate(0);\\n    transform: rotate(0);\\n  }\\n  100% {\\n    -webkit-transform: rotate(-359deg);\\n    -o-transform: rotate(-359deg);\\n    transform: rotate(-359deg);\\n  }\\n}\\n.jj .overSpin {\\n  -webkit-transition: all 0.5s;\\n  transition: all 0.5s;\\n  -ms-transform: rotate(0deg);\\n  -webkit-transform: rotate(0deg);\\n  transform: rotate(0deg);\\n}\\n.jj .overSpin:hover {\\n  -ms-transform: rotate(90deg);\\n  -webkit-transform: rotate(90deg);\\n  transform: rotate(90deg);\\n}\\n.jj .overSpinReverse {\\n  -webkit-transition: all 0.5s;\\n  transition: all 0.5s;\\n  -ms-transform: rotate(0deg);\\n  -webkit-transform: rotate(0deg);\\n  transform: rotate(0deg);\\n}\\n.jj .overSpinReverse:hover {\\n  -ms-transform: rotate(-90deg);\\n  -webkit-transform: rotate(-90deg);\\n  transform: rotate(-90deg);\\n}\\n/* ==JJCircle3d.640.class================ */\\n.jj .circle3d {\\n  min-width: 13px;\\n  min-height: 13px;\\n  width: 1.4em;\\n  border-radius: 50%;\\n  text-align: center;\\n  vertical-align: middle;\\n  font-size: 64px;\\n  position: relative;\\n  box-shadow: inset -0.1em -0.1em 1em #000, 0.1em 0.1em 0.2em black, inset 0px 0px 0.1em black;\\n  display: inline-block;\\n  color: white;\\n}\\n.jj .circle3d::after {\\n  background-color: rgba(255, 255, 255, 0.3);\\n  content: '';\\n  height: 45%;\\n  width: 12%;\\n  position: absolute;\\n  top: 4%;\\n  left: 15%;\\n  border-radius: 50%;\\n  transform: rotate(40deg);\\n}\\n.jj .circle3d.red {\\n  background-color: red;\\n}\\n.jj .circle3d.green {\\n  background-color: green;\\n}\\n.jj .circle3d.blue {\\n  background-color: blue;\\n}\\n.jj .circle3d.yellow {\\n  background-color: yellow;\\n}\\n/* ==JJCssElement.640.class================ */\\n.jj {\\n  /* Timer*/\\n}\\n.jj .jj-icon-menu-toggle {\\n  position: absolute;\\n  bottom: 30px;\\n  right: 30px;\\n  width: 40px;\\n  height: 40px;\\n  text-align: center;\\n  box-sizing: border-box;\\n  font-size: 16px;\\n  z-index: 10;\\n}\\n.jj .jj-icon-menu-toggle .menu-open {\\n  display: none;\\n}\\n.jj .jj-icon-menu-toggle .menu-open:checked + .menu-open-button .line-1 {\\n  background: #eeeeee;\\n}\\n.jj .jj-icon-menu-toggle .menu-open:checked + .menu-open-button .line-3 {\\n  background: #eeeeee;\\n}\\n.jj .jj-icon-menu-toggle .menu-item,\\n.jj .jj-icon-menu-toggle .menu-open-button {\\n  background: #eeeeee;\\n  border-radius: 100%;\\n  width: 40px;\\n  height: 40px;\\n  margin-left: -20px;\\n  position: absolute;\\n  color: #ffffff;\\n  text-align: center;\\n  line-height: 40px;\\n  -webkit-transform: translate3d(0, 0, 0);\\n  transform: translate3d(0, 0, 0) rotate(45deg);\\n  -webkit-transition: -webkit-transform ease-out 200ms;\\n  transition: -webkit-transform ease-out 200ms;\\n  transition: transform ease-out 200ms;\\n  transition: transform ease-out 200ms, -webkit-transform ease-out 200ms;\\n}\\n.jj .jj-icon-menu-toggle .menu-open-button {\\n  z-index: 2;\\n  -webkit-transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);\\n  transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);\\n  -webkit-transition-duration: 400ms;\\n  transition-duration: 400ms;\\n  -webkit-transform: scale(1.1, 1.1) translate3d(0, 0, 0);\\n  transform: scale(1.1, 1.1) translate3d(0, 0, 0);\\n  cursor: pointer;\\n  box-shadow: 3px 3px 0 0 rgba(0, 0, 0, 0.14);\\n  background-color: #fa7a7a;\\n}\\n.jj .jj-icon-menu-toggle .menu-open-button:hover {\\n  -webkit-transform: scale(1.2, 1.2) translate3d(0, 0, 0);\\n  transform: scale(1.2, 1.2) translate3d(0, 0, 0);\\n}\\n.jj .jj-icon-menu-toggle .menu-open-button.show {\\n  -webkit-transition-timing-function: linear;\\n  transition-timing-function: linear;\\n  -webkit-transition-duration: 200ms;\\n  transition-duration: 200ms;\\n  -webkit-transform: scale(0.8, 0.8) translate3d(0, 0, 0);\\n  transform: scale(0.8, 0.8) translate3d(0, 0, 0) rotate(405deg);\\n}\\n.jj .jj-icon-menu-toggle .menu-open-button.show ~ .menu-item {\\n  -webkit-transition-timing-function: cubic-bezier(0.935, 0, 0.34, 1.33);\\n  transition-timing-function: cubic-bezier(0.935, 0, 0.34, 1.33);\\n  transition-duration: 180ms;\\n  -webkit-transition-duration: 180ms;\\n}\\n.jj .jj-icon-menu-toggle .menu-open-button.show ~ .menu-item:nth-child(2) {\\n  -webkit-transform: translate3d(0px, -50px, 0);\\n  transform: translate3d(0px, -50px, 0);\\n}\\n.jj .jj-icon-menu-toggle .menu-open-button.show ~ .menu-item:nth-child(3) {\\n  -webkit-transform: translate3d(0, -100px, 0);\\n  transform: translate3d(0, -100px, 0);\\n}\\n.jj .jj-icon-menu-toggle .menu-open-button.show ~ .menu-item:nth-child(4) {\\n  -webkit-transform: translate3d(0, -150px, 0);\\n  transform: translate3d(0, -150px, 0);\\n}\\n.jj .jj-icon-menu-toggle .menu-open-button.show ~ .menu-item:nth-child(5) {\\n  -webkit-transform: translate3d(0, -200px, 0);\\n  transform: translate3d(0, -200px, 0);\\n}\\n.jj .jj-icon-menu-toggle .menu-open-button.show ~ .menu-item:nth-child(6) {\\n  -webkit-transform: translate3d(0, -250px, 0);\\n  transform: translate3d(0, -250px, 0);\\n}\\n.jj .jj-icon-menu-toggle .menu-open-button.show ~ .menu-item:nth-child(7) {\\n  -webkit-transform: translate3d(0, -300px, 0);\\n  transform: translate3d(0, -300px, 0);\\n}\\n.jj .jj-icon-menu-toggle .menu-item {\\n  box-shadow: 3px 3px 0 0 rgba(0, 0, 0, 0.14);\\n  text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.12);\\n  transition: all 0.1s ease 0s;\\n  -webkit-transition-duration: 180ms;\\n  transition-duration: 180ms;\\n}\\n.jj .jj-icon-menu-toggle .menu-item > * {\\n  pointer-events: none;\\n}\\n.jj .jj-icon-menu-toggle .menu-item t {\\n  color: var(--text3);\\n  position: absolute;\\n  right: 40px;\\n  border-radius: 25px;\\n  background-color: var(--basecolor2);\\n  overflow: hidden;\\n  width: 0;\\n  -webkit-transition: 0.4s;\\n  white-space: nowrap;\\n}\\n.jj .jj-icon-menu-toggle .menu-item:hover {\\n  background: #eeeeee !important;\\n  text-shadow: none;\\n}\\n.jj .jj-icon-menu-toggle .menu-item:hover t {\\n  width: 100px;\\n}\\n.jj .jj-icon-menu-toggle .menu-item:nth-child(2) {\\n  background-color: #669ae1;\\n}\\n.jj .jj-icon-menu-toggle .menu-item:nth-child(2):hover {\\n  color: #669ae1;\\n}\\n.jj .jj-icon-menu-toggle .menu-item:nth-child(3) {\\n  background-color: #70cc72;\\n}\\n.jj .jj-icon-menu-toggle .menu-item:nth-child(3):hover {\\n  color: #70cc72;\\n}\\n.jj .jj-icon-menu-toggle .menu-item:nth-child(4) {\\n  background-color: #fe4365;\\n}\\n.jj .jj-icon-menu-toggle .menu-item:nth-child(4):hover {\\n  color: #fe4365;\\n}\\n.jj .jj-icon-menu-toggle .menu-item:nth-child(5) {\\n  background-color: #c49cde;\\n}\\n.jj .jj-icon-menu-toggle .menu-item:nth-child(5):hover {\\n  color: #c49cde;\\n}\\n.jj .jj-icon-menu-toggle .menu-item:nth-child(6) {\\n  background-color: #fc913a;\\n}\\n.jj .jj-icon-menu-toggle .menu-item:nth-child(6):hover {\\n  color: #fc913a;\\n}\\n.jj .jj-icon-menu-toggle .menu-item:nth-child(7) {\\n  background-color: #62c2e4;\\n}\\n.jj .jj-icon-menu-toggle .menu-item:nth-child(7):hover {\\n  color: #62c2e4;\\n}\\n.jj .jj-icon-menu {\\n  position: absolute;\\n  bottom: 30px;\\n  right: 130px;\\n  width: 40px;\\n  height: 40px;\\n  text-align: center;\\n  box-sizing: border-box;\\n  font-size: 16px;\\n  z-index: 10;\\n}\\n.jj .jj-icon-menu .menu-open {\\n  display: none;\\n}\\n.jj .jj-icon-menu .menu-open:checked + .menu-open-button .line-1 {\\n  background: #eeeeee;\\n}\\n.jj .jj-icon-menu .menu-open:checked + .menu-open-button .line-3 {\\n  background: #eeeeee;\\n}\\n.jj .jj-icon-menu .menu-open:checked + .menu-open-button {\\n  -webkit-transition-timing-function: linear;\\n  transition-timing-function: linear;\\n  -webkit-transition-duration: 200ms;\\n  transition-duration: 200ms;\\n  -webkit-transform: scale(0.8, 0.8) translate3d(0, 0, 0);\\n  transform: scale(0.8, 0.8) translate3d(0, 0, 0) rotate(405deg);\\n}\\n.jj .jj-icon-menu .menu-open:checked ~ .menu-item {\\n  -webkit-transition-timing-function: cubic-bezier(0.935, 0, 0.34, 1.33);\\n  transition-timing-function: cubic-bezier(0.935, 0, 0.34, 1.33);\\n  transition-duration: 180ms;\\n  -webkit-transition-duration: 180ms;\\n}\\n.jj .jj-icon-menu .menu-open:checked ~ .menu-item:nth-child(3) {\\n  -webkit-transform: translate3d(0px, -50px, 0);\\n  transform: translate3d(0px, -50px, 0);\\n}\\n.jj .jj-icon-menu .menu-open:checked ~ .menu-item:nth-child(4) {\\n  -webkit-transform: translate3d(0, -100px, 0);\\n  transform: translate3d(0, -100px, 0);\\n}\\n.jj .jj-icon-menu .menu-open:checked ~ .menu-item:nth-child(5) {\\n  -webkit-transform: translate3d(0, -150px, 0);\\n  transform: translate3d(0, -150px, 0);\\n}\\n.jj .jj-icon-menu .menu-open:checked ~ .menu-item:nth-child(6) {\\n  -webkit-transform: translate3d(0, -200px, 0);\\n  transform: translate3d(0, -200px, 0);\\n}\\n.jj .jj-icon-menu .menu-open:checked ~ .menu-item:nth-child(7) {\\n  -webkit-transform: translate3d(0, -250px, 0);\\n  transform: translate3d(0, -250px, 0);\\n}\\n.jj .jj-icon-menu .menu-open:checked ~ .menu-item:nth-child(8) {\\n  -webkit-transform: translate3d(0, -300px, 0);\\n  transform: translate3d(0, -300px, 0);\\n}\\n.jj .jj-icon-menu .menu-item,\\n.jj .jj-icon-menu .menu-open-button {\\n  background: #eeeeee;\\n  border-radius: 100%;\\n  width: 40px;\\n  height: 40px;\\n  margin-left: -20px;\\n  position: absolute;\\n  color: #ffffff;\\n  text-align: center;\\n  line-height: 40px;\\n  -webkit-transform: translate3d(0, 0, 0);\\n  transform: translate3d(0, 0, 0) rotate(45deg);\\n  -webkit-transition: -webkit-transform ease-out 200ms;\\n  transition: -webkit-transform ease-out 200ms;\\n  transition: transform ease-out 200ms;\\n  transition: transform ease-out 200ms, -webkit-transform ease-out 200ms;\\n}\\n.jj .jj-icon-menu .menu-open-button {\\n  z-index: 2;\\n  -webkit-transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);\\n  transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);\\n  -webkit-transition-duration: 400ms;\\n  transition-duration: 400ms;\\n  -webkit-transform: scale(1.1, 1.1) translate3d(0, 0, 0);\\n  transform: scale(1.1, 1.1) translate3d(0, 0, 0);\\n  cursor: pointer;\\n  box-shadow: 3px 3px 0 0 rgba(0, 0, 0, 0.14);\\n  background-color: #fa7a7a;\\n}\\n.jj .jj-icon-menu .menu-open-button:hover {\\n  -webkit-transform: scale(1.2, 1.2) translate3d(0, 0, 0);\\n  transform: scale(1.2, 1.2) translate3d(0, 0, 0);\\n}\\n.jj .jj-icon-menu .menu-open-button .lines {\\n  width: 18px;\\n  height: 3px;\\n  background: #596778;\\n  display: block;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  margin-left: -8.5px;\\n  margin-top: -1px;\\n  -webkit-transition: -webkit-transform 200ms;\\n  transition: -webkit-transform 200ms;\\n  transition: transform 200ms;\\n  transition: transform 200ms, -webkit-transform 200ms;\\n}\\n.jj .jj-icon-menu .menu-open-button .lines.line-1 {\\n  background-color: white;\\n}\\n.jj .jj-icon-menu .menu-open-button .lines.line-3 {\\n  background-color: white;\\n  -webkit-transform: translate3d(0, 0, 0) rotate(-90deg);\\n  transform: translate3d(0, 0, 0) rotate(-90deg);\\n}\\n.jj .jj-icon-menu .menu-item {\\n  box-shadow: 3px 3px 0 0 rgba(0, 0, 0, 0.14);\\n  text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.12);\\n  transition: all 0.1s ease 0s;\\n  -webkit-transition-duration: 180ms;\\n  transition-duration: 180ms;\\n}\\n.jj .jj-icon-menu .menu-item > * {\\n  pointer-events: none;\\n}\\n.jj .jj-icon-menu .menu-item t {\\n  color: var(--text3);\\n  position: absolute;\\n  right: 40px;\\n  border-radius: 25px;\\n  background-color: var(--basecolor2);\\n  overflow: hidden;\\n  width: 0;\\n  -webkit-transition: 0.4s;\\n}\\n.jj .jj-icon-menu .menu-item:hover {\\n  background: #eeeeee !important;\\n  text-shadow: none;\\n}\\n.jj .jj-icon-menu .menu-item:hover t {\\n  width: 100px;\\n}\\n.jj .jj-icon-menu .menu-item:nth-child(3) {\\n  background-color: #669ae1;\\n}\\n.jj .jj-icon-menu .menu-item:nth-child(3):hover {\\n  color: #669ae1;\\n}\\n.jj .jj-icon-menu .menu-item:nth-child(4) {\\n  background-color: #70cc72;\\n}\\n.jj .jj-icon-menu .menu-item:nth-child(4):hover {\\n  color: #70cc72;\\n}\\n.jj .jj-icon-menu .menu-item:nth-child(5) {\\n  background-color: #fe4365;\\n}\\n.jj .jj-icon-menu .menu-item:nth-child(5):hover {\\n  color: #fe4365;\\n}\\n.jj .jj-icon-menu .menu-item:nth-child(6) {\\n  background-color: #c49cde;\\n}\\n.jj .jj-icon-menu .menu-item:nth-child(6):hover {\\n  color: #c49cde;\\n}\\n.jj .jj-icon-menu .menu-item:nth-child(7) {\\n  background-color: #fc913a;\\n}\\n.jj .jj-icon-menu .menu-item:nth-child(7):hover {\\n  color: #fc913a;\\n}\\n.jj .jj-icon-menu .menu-item:nth-child(8) {\\n  background-color: #62c2e4;\\n}\\n.jj .jj-icon-menu .menu-item:nth-child(8):hover {\\n  color: #62c2e4;\\n}\\n.jj .form-group.flex1 {\\n  display: flex;\\n  flex-direction: row;\\n}\\n.jj .form-group.flex1 > .control-label {\\n  -webkit-transition-duration: 0.3s;\\n  -o-transition-duration: 0.3s;\\n  transition-duration: 0.3s;\\n  flex: none;\\n  width: 100px;\\n}\\n.jj .form-group.flex1 > .form-control {\\n  flex-grow: 1;\\n  order: 1;\\n  -webkit-transition-duration: 0.3s;\\n  -o-transition-duration: 0.3s;\\n  transition-duration: 0.3s;\\n  border-bottom-width: 5px;\\n}\\n.jj .form-group.flex1 > *:nth-child(3) {\\n  order: 1;\\n}\\n.jj .form-group.flex2 {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  text-align: left;\\n}\\n.jj .form-group.flex2 > .control-label {\\n  -webkit-transition-duration: 0.3s;\\n  -o-transition-duration: 0.3s;\\n  transition-duration: 0.3s;\\n  flex: none;\\n  margin-left: 1rem;\\n}\\n.jj .form-group.flex2 > .form-control {\\n  flex-grow: 1;\\n  order: 1;\\n  -webkit-transition-duration: 0.3s;\\n  -o-transition-duration: 0.3s;\\n  transition-duration: 0.3s;\\n  border-bottom-width: 5px;\\n}\\n.jj .form-group.flex2 > .form-control:invalid {\\n  border: none;\\n  box-shadow: none;\\n  border-bottom: 1px dotted #ccc;\\n}\\n.jj .form-group.flex2 > .form-control:invalid + * {\\n  color: blue;\\n  transform: scale(1, 1.2) translateY(30px);\\n  pointer-events: none;\\n}\\n.jj .form-group.flex2 > .form-control:valid {\\n  border: 1px solid #ccc;\\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\\n  border-bottom-width: 5px;\\n}\\n.jj .form-group.flex2 > .form-control:valid + * {\\n  color: red;\\n}\\n.jj .form-group.flex2 > .form-control:focus {\\n  border: 1px solid #ccc;\\n  border-color: #66afe9;\\n  outline: 0;\\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6);\\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(102, 175, 233, 0.6);\\n}\\n.jj .form-group.flex2 > .form-control:focus + * {\\n  transform: scale(1, 1);\\n  transform: none;\\n}\\n.jj .form-group.flex2 > .form-control:required + *:after {\\n  color: red;\\n  content: '*';\\n}\\n.jj .form-group.flex2 > *:nth-child(3) {\\n  order: 2;\\n}\\n.jj .jj-chip {\\n  display: inline-block;\\n  padding: 0 25px;\\n  padding: 0;\\n  height: 50px;\\n  font-size: 16px;\\n  line-height: 50px;\\n  border-radius: 25px;\\n  background-color: var(--basecolor1);\\n  -webkit-transition: 0.4s;\\n  overflow: hidden;\\n}\\n.jj .jj-chip img {\\n  float: left;\\n  margin: 0 10px 0 -25px;\\n  margin: 0;\\n  height: 50px;\\n  width: 50px;\\n  border-radius: 50%;\\n}\\n.jj .jj-chip t {\\n  display: block;\\n  width: auto;\\n}\\n.jj .jj-chip * {\\n  pointer-events: none;\\n}\\n.jj .jj-chip.sm {\\n  height: 34px;\\n  font-size: 13px;\\n  line-height: 34px;\\n}\\n.jj .jj-chip.sm img {\\n  height: 34px;\\n  width: 34px;\\n}\\n.jj .jj-chip.animated {\\n  background-color: var(--basecolor2);\\n}\\n.jj .jj-chip.animated t {\\n  display: block;\\n  width: 0;\\n  -webkit-transition: 0.4s;\\n}\\n.jj .jj-chip.animated:hover t,\\n.jj .jj-chip.animated.on t {\\n  width: 100px;\\n}\\n.jj .cell-icon,\\n.jj .jj-cell-icon {\\n  font: normal normal normal 14px/1 FontAwesome;\\n  font-size: inherit;\\n  text-rendering: auto;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  padding-left: 1.5rem;\\n}\\n.jj .cell-icon:before,\\n.jj .jj-cell-icon:before {\\n  position: absolute;\\n  text-align: center;\\n  width: 1rem;\\n  content: '\\\\f116';\\n  margin-left: -1.3rem;\\n}\\n.jj .cell-icon.center:before,\\n.jj .jj-cell-icon.center:before {\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  width: auto;\\n  content: '\\\\f116';\\n  margin-right: 5px;\\n}\\n.jj .cell-icon.o:before,\\n.jj .jj-cell-icon.o:before {\\n  color: #f2a654;\\n}\\n.jj .cell-icon.b:before,\\n.jj .jj-cell-icon.b:before {\\n  color: #62a8ea;\\n}\\n.jj .cell-icon.r:before,\\n.jj .jj-cell-icon.r:before {\\n  color: #f96868;\\n}\\n.jj .cell-icon.g:before,\\n.jj .jj-cell-icon.g:before {\\n  color: #279566;\\n}\\n.jj .cell-icon.r8:before,\\n.jj .jj-cell-icon.r8:before {\\n  color: #d6494b;\\n}\\n.jj .cell-icon.h:before,\\n.jj .jj-cell-icon.h:before {\\n  color: #bdbdbd;\\n}\\n.jj .cell-icon.cw:before,\\n.jj .jj-cell-icon.cw:before {\\n  color: white;\\n}\\n.jj .cell-icon.cb:before,\\n.jj .jj-cell-icon.cb:before {\\n  color: black;\\n}\\n.jj .cell-icon.up:before,\\n.jj .jj-cell-icon.up:before {\\n  content: '\\\\f176';\\n}\\n.jj .cell-icon.down:before,\\n.jj .jj-cell-icon.down:before {\\n  content: '\\\\f175';\\n}\\n.jj .cell-icon.light:before,\\n.jj .jj-cell-icon.light:before {\\n  content: '\\\\f0eb';\\n}\\n.jj .cell-icon.circle:before,\\n.jj .jj-cell-icon.circle:before {\\n  content: '\\\\f111';\\n}\\n.jj .cell-icon.circle-o:before,\\n.jj .jj-cell-icon.circle-o:before {\\n  content: '\\\\f1db';\\n}\\n.jj .cell-icon.level0:before,\\n.jj .jj-cell-icon.level0:before {\\n  content: '\\\\f244';\\n}\\n.jj .cell-icon.level1:before,\\n.jj .jj-cell-icon.level1:before {\\n  content: '\\\\f243';\\n}\\n.jj .cell-icon.level2:before,\\n.jj .jj-cell-icon.level2:before {\\n  content: '\\\\f242';\\n}\\n.jj .cell-icon.level3:before,\\n.jj .jj-cell-icon.level3:before {\\n  content: '\\\\f241';\\n}\\n.jj .cell-icon.level4:before,\\n.jj .jj-cell-icon.level4:before {\\n  content: '\\\\f240';\\n}\\n.jj .cell-icon.namecard:before,\\n.jj .jj-cell-icon.namecard:before {\\n  content: '\\\\f2bc';\\n}\\n.jj .cell-icon.org:before,\\n.jj .jj-cell-icon.org:before {\\n  content: '\\\\f0f7';\\n}\\n.jj .cell-icon.info:before,\\n.jj .jj-cell-icon.info:before {\\n  content: '\\\\f06a';\\n}\\n.jj .filp-card {\\n  display: block;\\n  -webkit-perspective: 1000px;\\n  perspective: 1000px;\\n  -webkit-transform-style: preserve-3d;\\n  transform-style: preserve-3d;\\n  width: 300px;\\n  height: 200px;\\n  cursor: pointer;\\n}\\n.jj .filp-card > input {\\n  display: none !important;\\n}\\n.jj .filp-card > .card {\\n  position: relative;\\n  height: 100%;\\n  width: 100%;\\n  -webkit-transform-style: preserve-3d;\\n  transform-style: preserve-3d;\\n  -webkit-transition: all 600ms;\\n  transition: all 600ms;\\n  z-index: 20;\\n}\\n.jj .filp-card > .card div {\\n  position: absolute;\\n  height: 100%;\\n  width: 100%;\\n  background: #fff;\\n  text-align: center;\\n  line-height: 200px;\\n  -webkit-backface-visibility: hidden;\\n  backface-visibility: hidden;\\n  border-radius: 2px;\\n}\\n.jj .filp-card > .card .back {\\n  background: #222;\\n  color: #fff;\\n  -webkit-transform: rotateX(180deg);\\n  transform: rotateX(180deg);\\n}\\n.jj .filp-card:hover .card {\\n  -webkit-transform: rotateX(20deg);\\n  transform: rotateX(20deg);\\n  box-shadow: 0 20px 20px rgba(50, 50, 50, 0.2);\\n}\\n.jj .filp-card:hover :checked + .card {\\n  transform: rotateX(160deg);\\n  -webkit-transform: rotateX(160deg);\\n  box-shadow: 0 20px 20px rgba(255, 255, 255, 0.2);\\n}\\n.jj .filp-card :checked + .card {\\n  transform: rotateX(180deg);\\n  -webkit-transform: rotateX(180deg);\\n}\\n.jj .jj-stack-bar {\\n  width: 100%;\\n  max-width: 100%;\\n  text-align: center;\\n  border: 1px solid #ccc;\\n  height: 200px;\\n  padding: 20px 10px 10px 10px;\\n}\\n.jj .jj-stack-bar > .legend {\\n  list-style-type: none;\\n  padding-left: 0;\\n  display: inline-block;\\n}\\n.jj .jj-stack-bar > .legend li {\\n  float: left;\\n  padding-right: 20px;\\n}\\n.jj .jj-stack-bar > .legend li i {\\n  padding-right: 5px;\\n}\\n.jj .jj-stack-bar > .btn-group {\\n  float: right;\\n  margin-bottom: 10px;\\n}\\n.jj .jj-stack-bar > .progress {\\n  width: 100%;\\n  height: 60px;\\n}\\n.jj .jj-wrapper {\\n  background-color: #59488b;\\n  width: 800px;\\n  /*Typing Loader*/\\n  /*Location indicator */\\n  /* go in*/\\n  /*Battery*/\\n  /*help*/\\n  /*eye ball*/\\n  /*coffee cup*/\\n  /*square*/\\n  /*circle classick*/\\n  /*cloud*/\\n  /* Me */\\n}\\n.jj .jj-wrapper .cf:after {\\n  clear: both;\\n}\\n.jj .jj-wrapper a {\\n  text-decoration: none;\\n}\\n.jj .jj-wrapper a:hover {\\n  transition: all linear 0.2s;\\n}\\n.jj .jj-wrapper ::-moz-selection {\\n  background: #b3d4fc;\\n  text-shadow: none;\\n}\\n.jj .jj-wrapper ::selection {\\n  background: #b3d4fc;\\n  text-shadow: none;\\n}\\n.jj .jj-wrapper .span,\\n.jj .jj-wrapper .span_large {\\n  float: left;\\n  width: 100px;\\n  background-color: rgba(0, 0, 0, 0.02);\\n  height: 100px;\\n  vertical-align: middle;\\n  border-radius: 1px;\\n  margin-right: 100px;\\n}\\n.jj .jj-wrapper .span:last-child {\\n  margin-right: 0px;\\n}\\n.jj .jj-wrapper .timer {\\n  width: 120px;\\n  height: 120px;\\n  box-shadow: inset 0px 0px 0px 2px #fff;\\n  border-radius: 50%;\\n  position: relative;\\n  border: 1px solid red;\\n  margin: 38px auto;\\n}\\n.jj .jj-wrapper .timer:after,\\n.jj .jj-wrapper .timer:before {\\n  position: absolute;\\n  content: '';\\n  background-color: #fff;\\n}\\n.jj .jj-wrapper .timer:after {\\n  width: 60px;\\n  height: 2px;\\n  top: 60px;\\n  left: 60px;\\n  -webkit-transform-origin: 1px 1px;\\n  -moz-transform-origin: 1px 1px;\\n  transform-origin: 1px 1px;\\n  -webkit-animation: minhand 2s linear infinite;\\n  -moz-animation: minhand 2s linear infinite;\\n  animation: minhand 2s linear infinite;\\n}\\n.jj .jj-wrapper .timer:before {\\n  width: 40px;\\n  height: 2px;\\n  top: 60px;\\n  left: 60px;\\n  -webkit-transform-origin: 1px 1px;\\n  -moz-transform-origin: 1px 1px;\\n  transform-origin: 1px 1px;\\n  -webkit-animation: hrhand 8s linear infinite;\\n  -moz-animation: hrhand 8s linear infinite;\\n  animation: hrhand 8s linear infinite;\\n}\\n@-webkit-keyframes minhand {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n  }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n  }\\n}\\n@-moz-keyframes minhand {\\n  0% {\\n    -moz-transform: rotate(0deg);\\n  }\\n  100% {\\n    -moz-transform: rotate(360deg);\\n  }\\n}\\n@keyframes minhand {\\n  0% {\\n    transform: rotate(0deg);\\n  }\\n  100% {\\n    transform: rotate(360deg);\\n  }\\n}\\n@-webkit-keyframes hrhand {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n  }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n  }\\n}\\n@-moz-keyframes hrhand {\\n  0% {\\n    -moz-transform: rotate(0deg);\\n  }\\n  100% {\\n    -moz-transform: rotate(360deg);\\n  }\\n}\\n@keyframes hrhand {\\n  0% {\\n    transform: rotate(0deg);\\n  }\\n  100% {\\n    transform: rotate(360deg);\\n  }\\n}\\n.jj .jj-wrapper .dashboard {\\n  width: 100px;\\n  height: 100px;\\n  margin: 30px auto;\\n  border: 2px #ffffff solid;\\n  border-radius: 100%;\\n  position: relative;\\n  overflow: hidden;\\n  z-index: 1;\\n}\\n.jj .jj-wrapper .dashboard:after,\\n.jj .jj-wrapper .dashboard:before {\\n  position: absolute;\\n  content: '';\\n}\\n.jj .jj-wrapper .dashboard:after {\\n  position: absolute;\\n  left: 50%;\\n  width: 50%;\\n  height: 2px;\\n  top: 70%;\\n  -webkit-transform-origin: 1px 1px;\\n  -moz-transform-origin: 1px 1px;\\n  transform-origin: 1px 1px;\\n  background-color: red;\\n  -webkit-animation: dashboard_hand 2s linear infinite alternate;\\n  -moz-animation: dashboard_hand 2s linear infinite alternate;\\n  animation: dashboard_hand 2s linear infinite alternate;\\n}\\n.jj .jj-wrapper .dashboard:before {\\n  width: 150%;\\n  height: 100%;\\n  background-color: blue;\\n  top: 70%;\\n  left: -2px;\\n}\\n@-webkit-keyframes dashboard_hand {\\n  0% {\\n    -webkit-transform: rotate(-160deg);\\n  }\\n  100% {\\n    -webkit-transform: rotate(-20deg);\\n  }\\n}\\n@-moz-keyframes dashboard_hand {\\n  0% {\\n    -moz-transform: rotate(-160deg);\\n  }\\n  100% {\\n    -moz-transform: rotate(-20deg);\\n  }\\n}\\n@keyframes dashboard_hand {\\n  0% {\\n    transform: rotate(-160deg);\\n  }\\n  100% {\\n    transform: rotate(-20deg);\\n  }\\n}\\n.jj .jj-wrapper .typing_loader {\\n  width: 6px;\\n  height: 6px;\\n  border-radius: 50%;\\n  -webkit-animation: typing 1s linear infinite alternate;\\n  -moz-animation: Typing 1s linear infinite alternate;\\n  animation: typing 1s linear infinite alternate;\\n  margin: 46px auto;\\n  /* Not necessary- its only for layouting*/\\n  position: relative;\\n  left: -12px;\\n}\\n@-webkit-keyframes typing {\\n  0% {\\n    background-color: #ffffff;\\n    box-shadow: 12px 0px 0px 0px rgba(255, 255, 255, 0.2), 24px 0px 0px 0px rgba(255, 255, 255, 0.2);\\n  }\\n  25% {\\n    background-color: rgba(255, 255, 255, 0.4);\\n    box-shadow: 12px 0px 0px 0px #ffffff, 24px 0px 0px 0px rgba(255, 255, 255, 0.2);\\n  }\\n  75% {\\n    background-color: rgba(255, 255, 255, 0.4);\\n    box-shadow: 12px 0px 0px 0px rgba(255, 255, 255, 0.2), 24px 0px 0px 0px #ffffff;\\n  }\\n}\\n@-moz-keyframes typing {\\n  0% {\\n    background-color: #ffffff;\\n    box-shadow: 12px 0px 0px 0px rgba(255, 255, 255, 0.2), 24px 0px 0px 0px rgba(255, 255, 255, 0.2);\\n  }\\n  25% {\\n    background-color: rgba(255, 255, 255, 0.4);\\n    box-shadow: 12px 0px 0px 0px #ffffff, 24px 0px 0px 0px rgba(255, 255, 255, 0.2);\\n  }\\n  75% {\\n    background-color: rgba(255, 255, 255, 0.4);\\n    box-shadow: 12px 0px 0px 0px rgba(255, 255, 255, 0.2), 24px 0px 0px 0px #ffffff;\\n  }\\n}\\n@keyframes typing {\\n  0% {\\n    background-color: #ffffff;\\n    box-shadow: 12px 0px 0px 0px rgba(255, 255, 255, 0.2), 24px 0px 0px 0px rgba(255, 255, 255, 0.2);\\n  }\\n  25% {\\n    background-color: rgba(255, 255, 255, 0.4);\\n    box-shadow: 12px 0px 0px 0px #ffffff, 24px 0px 0px 0px rgba(255, 255, 255, 0.2);\\n  }\\n  75% {\\n    background-color: rgba(255, 255, 255, 0.4);\\n    box-shadow: 12px 0px 0px 0px rgba(255, 255, 255, 0.2), 24px 0px 0px 0px #ffffff;\\n  }\\n}\\n.jj .jj-wrapper .location_indicator {\\n  margin: 30px auto;\\n  position: relative;\\n  left: -9px;\\n}\\n.jj .jj-wrapper .location_indicator:before,\\n.jj .jj-wrapper .location_indicator:after {\\n  position: absolute;\\n  content: '';\\n}\\n.jj .jj-wrapper .location_indicator:before {\\n  width: 20px;\\n  height: 20px;\\n  border-radius: 100% 100% 100% 0;\\n  box-shadow: 0px 0px 0px 2px #ffffff;\\n  -webkit-animation: mapping 1s linear infinite;\\n  -moz-animation: mapping 1s linear infinite;\\n  animation: mapping 1s linear infinite;\\n  -webkit-transform: rotate(-46deg);\\n  -moz-transform: rotate(-46deg);\\n  transform: rotate(-46deg);\\n}\\n.jj .jj-wrapper .location_indicator:after {\\n  width: 30px;\\n  height: 10px;\\n  border-radius: 100%;\\n  left: 44px;\\n  background-color: rgba(255, 255, 255, 0.2);\\n  top: 24px;\\n  z-index: -1;\\n}\\n@-webkit-keyframes mapping {\\n  0% {\\n    top: 0;\\n  }\\n  50% {\\n    top: -5px;\\n  }\\n  100% {\\n    top: 0;\\n  }\\n}\\n@-moz-keyframes mapping {\\n  0% {\\n    top: 0;\\n  }\\n  50% {\\n    top: -5px;\\n  }\\n  100% {\\n    top: 0;\\n  }\\n}\\n@-keyframes mapping {\\n  0% {\\n    top: 0;\\n  }\\n  50% {\\n    top: -5px;\\n  }\\n  100% {\\n    top: 0;\\n  }\\n}\\n.jj .jj-wrapper .battery {\\n  width: 28px;\\n  height: 14px;\\n  border: 1px #fff solid;\\n  border-radius: 2px;\\n  position: relative;\\n  -webkit-animation: charge 5s linear infinite;\\n  -moz-animation: charge 5s linear infinite;\\n  animation: charge 5s linear infinite;\\n  top: 40px;\\n  margin: 0 auto;\\n}\\n.jj .jj-wrapper .battery:after {\\n  width: 2px;\\n  height: 7px;\\n  background-color: #fff;\\n  border-radius: 0px 1px 1px 0px;\\n  position: absolute;\\n  content: '';\\n  top: 2px;\\n  right: -4px;\\n}\\n@-webkit-keyframes charge {\\n  0% {\\n    box-shadow: inset 0px 0px 0px #fff;\\n  }\\n  100% {\\n    box-shadow: inset 30px 0px 0px #fff;\\n  }\\n}\\n@-moz-keyframes charge {\\n  0% {\\n    box-shadow: inset 0px 0px 0px #fff;\\n  }\\n  100% {\\n    box-shadow: inset 30px 0px 0px #fff;\\n  }\\n}\\n@keyframes charge {\\n  0% {\\n    box-shadow: inset 0px 0px 0px #fff;\\n  }\\n  100% {\\n    box-shadow: inset 30px 0px 0px #fff;\\n  }\\n}\\n.jj .jj-wrapper .magnifier {\\n  width: 20px;\\n  height: 20px;\\n  box-shadow: 0px 0px 0px 1px #fff;\\n  border-radius: 50%;\\n  position: relative;\\n  margin: 34px auto;\\n  -webkit-animation: magnify 1s linear infinite alternate;\\n  -moz-animation: magnify 1s linear infinite alternate;\\n  animation: magnify 1s linear infinite alternate;\\n}\\n.jj .jj-wrapper .magnifier:after,\\n.jj .jj-wrapper .magnifier:before {\\n  position: absolute;\\n  content: '';\\n}\\n.jj .jj-wrapper .magnifier:before {\\n  content: 'me';\\n  font-size: 12px;\\n  left: 2px;\\n  text-align: center;\\n  top: 2px;\\n}\\n.jj .jj-wrapper .magnifier:after {\\n  width: 2px;\\n  height: 8px;\\n  background-color: #fff;\\n  bottom: -6px;\\n  left: 20px;\\n  border-radius: 2px;\\n  -webkit-transform: rotate(-45deg);\\n  -moz-transform: rotate(-45deg);\\n  transform: rotate(-45deg);\\n}\\n@-webkit-keyframes magnify {\\n  0% {\\n    -webkit-transform: scale(1);\\n  }\\n  100% {\\n    -webkit-transform: scale(1.5);\\n  }\\n}\\n@-moz-keyframes magnify {\\n  0% {\\n    -moz-transform: scale(1);\\n  }\\n  100% {\\n    -moz-transform: scale(1.5);\\n  }\\n}\\n@keyframes magnify {\\n  0% {\\n    transform: scale(1);\\n  }\\n  100% {\\n    transform: scale(1.5);\\n  }\\n}\\n.jj .jj-wrapper .help {\\n  width: 30px;\\n  height: 30px;\\n  border: 1px #fff solid;\\n  border-radius: 50%;\\n  -webkit-animation: rotation 1s ease-in-out infinite;\\n  -moz-animation: rotation 1s ease-in-out infinite;\\n  animation: rotation 1s ease-in-out infinite;\\n  margin: 30px auto;\\n}\\n.jj .jj-wrapper .help:after {\\n  width: 5px;\\n  height: 5px;\\n  background-color: #ffffff;\\n  border-radius: 100%;\\n  position: absolute;\\n  content: '';\\n}\\n@-webkit-keyframes rotation {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n  }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n  }\\n}\\n@-moz-keyframes rotation {\\n  0% {\\n    -moz-transform: rotate(0deg);\\n  }\\n  100% {\\n    -moz-transform: rotate(360deg);\\n  }\\n}\\n@keyframes rotation {\\n  0% {\\n    transform: rotate(0deg);\\n  }\\n  100% {\\n    transform: rotate(360deg);\\n  }\\n}\\n.jj .jj-wrapper .eye {\\n  width: 20px;\\n  height: 20px;\\n  background-color: rgba(255, 255, 255, 0.8);\\n  border-radius: 50%;\\n  box-shadow: 30px 0px 0px 0px rgba(255, 255, 255, 0.8);\\n  position: relative;\\n  margin: 36px 26px;\\n}\\n.jj .jj-wrapper .eye:after {\\n  background-color: #59488b;\\n  width: 10px;\\n  height: 10px;\\n  box-shadow: 30px 0px 0px 0px #59488b;\\n  border-radius: 50%;\\n  left: 9px;\\n  top: 8px;\\n  position: absolute;\\n  content: '';\\n  -webkit-animation: eyeball 2s linear infinite alternate;\\n  -moz-animation: eyeball 2s linear infinite alternate;\\n  animation: eyeball 2s linear infinite alternate;\\n}\\n@-webkit-keyframes eyeball {\\n  0% {\\n    left: 9px;\\n  }\\n  100% {\\n    left: 1px;\\n  }\\n}\\n@-moz-keyframes eyeball {\\n  0% {\\n    left: 9px;\\n  }\\n  100% {\\n    left: 1px;\\n  }\\n}\\n@keyframes eyeball {\\n  0% {\\n    left: 9px;\\n  }\\n  100% {\\n    left: 1px;\\n  }\\n}\\n.jj .jj-wrapper .coffee_cup {\\n  width: 20px;\\n  height: 24px;\\n  border: 1px #ffffff solid;\\n  border-radius: 0px 0px 5px 5px;\\n  position: relative;\\n  margin: 36px auto;\\n}\\n.jj .jj-wrapper .coffee_cup:after,\\n.jj .jj-wrapper .coffee_cup:before {\\n  position: absolute;\\n  content: '';\\n}\\n.jj .jj-wrapper .coffee_cup:after {\\n  width: 5px;\\n  height: 12px;\\n  border: 1px #fff solid;\\n  border-left: none;\\n  border-radius: 0px 20px 20px 0px;\\n  left: 20px;\\n}\\n.jj .jj-wrapper .coffee_cup:before {\\n  width: 1px;\\n  height: 6px;\\n  background-color: #ffffff;\\n  top: -10px;\\n  left: 4px;\\n  box-shadow: 5px 0px 0px 0px #ffffff, 5px -5px 0px 0px #ffffff, 10px 0px 0px 0px #ffffff;\\n  -webkit-animation: steam 1s linear infinite alternate;\\n  -moz-animation: steam 1s linear infinite alternate;\\n  animation: steam 1s linear infinite alternate;\\n}\\n@-webkit-keyframes steam {\\n  0% {\\n    height: 0px;\\n  }\\n  100% {\\n    height: 6px;\\n  }\\n}\\n@-moz-keyframes steam {\\n  0% {\\n    height: 0px;\\n  }\\n  100% {\\n    height: 6px;\\n  }\\n}\\n@keyframes steam {\\n  0% {\\n    height: 0px;\\n  }\\n  100% {\\n    height: 6px;\\n  }\\n}\\n.jj .jj-wrapper .square {\\n  width: 20px;\\n  height: 20px;\\n  border: 1px #ffffff solid;\\n  margin: 36px auto;\\n  position: relative;\\n  -webkit-animation: fill_color 5s linear infinite;\\n  -moz-animation: fill_color 5s linear infinite;\\n  animation: fill_color 5s linear infinite;\\n}\\n.jj .jj-wrapper .square:after {\\n  width: 4px;\\n  height: 4px;\\n  position: absolute;\\n  content: '';\\n  background-color: #ffffff;\\n  top: -8px;\\n  left: 0px;\\n  -webkit-animation: square_check 1s ease-in-out infinite;\\n  -moz-animation: square_check 1s ease-in-out infinite;\\n  animation: square_check 1s ease-in-out infinite;\\n}\\n@-webkit-keyframes square_check {\\n  25% {\\n    left: 22px;\\n    top: -8px;\\n  }\\n  50% {\\n    left: 22px;\\n    top: 22px;\\n  }\\n  75% {\\n    left: -9px;\\n    top: 22px;\\n  }\\n  100% {\\n    left: -9px;\\n    top: -7px;\\n  }\\n}\\n@-moz-keyframes square_check {\\n  25% {\\n    left: 22px;\\n    top: -8px;\\n  }\\n  50% {\\n    left: 22px;\\n    top: 22px;\\n  }\\n  75% {\\n    left: -9px;\\n    top: 22px;\\n  }\\n  100% {\\n    left: -9px;\\n    top: -7px;\\n  }\\n}\\n@keyframes square_check {\\n  25% {\\n    left: 22px;\\n    top: -8px;\\n  }\\n  50% {\\n    left: 22px;\\n    top: 22px;\\n  }\\n  75% {\\n    left: -9px;\\n    top: 22px;\\n  }\\n  100% {\\n    left: -9px;\\n    top: -7px;\\n  }\\n}\\n@-webkit-keyframes fill_color {\\n  0% {\\n    box-shadow: inset 0px 0px 0px 0px rgba(255, 255, 255, 0.1);\\n  }\\n  100% {\\n    box-shadow: inset 0px -20px 0px 0px #ffffff;\\n  }\\n}\\n@-moz-keyframes fill_color {\\n  0% {\\n    box-shadow: inset 0px 0px 0px 0px rgba(255, 255, 255, 0.1);\\n  }\\n  100% {\\n    box-shadow: inset 0px -20px 0px 0px #ffffff;\\n  }\\n}\\n@keyframes fill_color {\\n  0% {\\n    box-shadow: inset 0px 0px 0px 0px rgba(255, 255, 255, 0.1);\\n  }\\n  100% {\\n    box-shadow: inset 0px -20px 0px 0px #ffffff;\\n  }\\n}\\n.jj .jj-wrapper .circle {\\n  margin: 40px auto;\\n  position: relative;\\n  width: 8px;\\n  height: 8px;\\n  background-color: rgba(255, 255, 255, 0.5);\\n  box-shadow: -14px 0px 0px #ffffff;\\n  border-radius: 50%;\\n  -webkit-animation: circle_classic 1s ease-in-out infinite alternate;\\n  -moz-animation: circle_classic 1s ease-in-out infinite alternate;\\n  animation: circle_classic 1s ease-in-out infinite alternate;\\n}\\n@-webkit-keyframes circle_classic {\\n  0% {\\n    opacity: 0.1;\\n    -webkit-transform: rotate(0deg) scale(0.5);\\n  }\\n  100% {\\n    opacity: 1;\\n    -webkit-transform: rotate(360deg) scale(1.2);\\n  }\\n}\\n@-moz-keyframes circle_classic {\\n  0% {\\n    opacity: 0.1;\\n    -moz-transform: rotate(0deg) scale(0.5);\\n  }\\n  100% {\\n    opacity: 1;\\n    -moz-transform: rotate(360deg) scale(1.2);\\n  }\\n}\\n@keyframes circle_classic {\\n  0% {\\n    opacity: 0.1;\\n    transform: rotate(0deg) scale(0.5);\\n  }\\n  100% {\\n    opacity: 1;\\n    transform: rotate(360deg) scale(1.2);\\n  }\\n}\\n.jj .jj-wrapper .cloud {\\n  margin: 42px 30px;\\n  width: 4px;\\n  height: 10px;\\n  opacity: 0.5;\\n  position: relative;\\n  box-shadow: 6px 0px 0px 0px #ffffff, 12px 0px 0px 0px #ffffff, 18px 0px 0px 0px #ffffff, 24px 0px 0px 0px #ffffff, 30px 0px 0px 0px #ffffff, 36px 0px 0px 0px #ffffff;\\n  -webkit-animation: rain 1s linear infinite alternate;\\n  -moz-animation: rain 1s linear infinite alternate;\\n  animation: rain 1s linear infinite alternate;\\n}\\n.jj .jj-wrapper .cloud:after {\\n  width: 40px;\\n  height: 10px;\\n  position: absolute;\\n  content: '';\\n  background-color: #ffffff;\\n  top: 0px;\\n  opacity: 1;\\n  -webkit-animation: line_flow 2s linear infinite reverse;\\n  -moz-animation: line_flow 2s linear infinite reverse;\\n  animation: line_flow 2s linear infinite reverse;\\n}\\n@-webkit-keyframes rain {\\n  0% {\\n    box-shadow: 6px 0px 0px 0px #ffffff, 12px 0px 0px 0px rgba(255, 255, 255, 0.9), 18px 0px 0px 0px rgba(255, 255, 255, 0.7), 24px 0px 0px 0px rgba(255, 255, 255, 0.6), 30px 0px 0px 0px rgba(255, 255, 255, 0.3), 36px 0px 0px 0px rgba(255, 255, 255, 0.2);\\n  }\\n  100% {\\n    box-shadow: 6px 0px 0px 0px rgba(255, 255, 255, 0.2), 12px 0px 0px 0px rgba(255, 255, 255, 0.3), 18px 0px 0px 0px rgba(255, 255, 255, 0.6), 24px 0px 0px 0px rgba(255, 255, 255, 0.7), 30px 0px 0px 0px rgba(255, 255, 255, 0.9), 36px 0px 0px 0px #ffffff;\\n    opacity: 1;\\n  }\\n}\\n@-moz-keyframes rain {\\n  0% {\\n    box-shadow: 6px 0px 0px 0px #ffffff, 12px 0px 0px 0px rgba(255, 255, 255, 0.9), 18px 0px 0px 0px rgba(255, 255, 255, 0.7), 24px 0px 0px 0px rgba(255, 255, 255, 0.6), 30px 0px 0px 0px rgba(255, 255, 255, 0.3), 36px 0px 0px 0px rgba(255, 255, 255, 0.2);\\n  }\\n  100% {\\n    box-shadow: 6px 0px 0px 0px rgba(255, 255, 255, 0.2), 12px 0px 0px 0px rgba(255, 255, 255, 0.3), 18px 0px 0px 0px rgba(255, 255, 255, 0.6), 24px 0px 0px 0px rgba(255, 255, 255, 0.7), 30px 0px 0px 0px rgba(255, 255, 255, 0.9), 36px 0px 0px 0px #ffffff;\\n    opacity: 1;\\n  }\\n}\\n@keyframes rain {\\n  0% {\\n    box-shadow: 6px 0px 0px 0px #ffffff, 12px 0px 0px 0px rgba(255, 255, 255, 0.9), 18px 0px 0px 0px rgba(255, 255, 255, 0.7), 24px 0px 0px 0px rgba(255, 255, 255, 0.6), 30px 0px 0px 0px rgba(255, 255, 255, 0.3), 36px 0px 0px 0px rgba(255, 255, 255, 0.2);\\n  }\\n  100% {\\n    box-shadow: 6px 0px 0px 0px rgba(255, 255, 255, 0.2), 12px 0px 0px 0px rgba(255, 255, 255, 0.3), 18px 0px 0px 0px rgba(255, 255, 255, 0.6), 24px 0px 0px 0px rgba(255, 255, 255, 0.7), 30px 0px 0px 0px rgba(255, 255, 255, 0.9), 36px 0px 0px 0px #ffffff;\\n    opacity: 1;\\n  }\\n}\\n@-webkit-keyframes line_flow {\\n  0% {\\n    width: 0px;\\n  }\\n  100% {\\n    width: 40px;\\n  }\\n}\\n@-moz-keyframes line_flow {\\n  0% {\\n    width: 0px;\\n  }\\n  100% {\\n    width: 40px;\\n  }\\n}\\n@keyframes line_flow {\\n  0% {\\n    width: 0px;\\n  }\\n  100% {\\n    width: 40px;\\n  }\\n}\\n.jj .jj-wrapper .aboutme {\\n  width: 700px;\\n  padding: 50px 0;\\n  border-top: 2px rgba(255, 255, 255, 0.03) solid;\\n}\\n.jj .jj-wrapper .viduthalai {\\n  background: url(../img/viduthalai.png) no-repeat;\\n  width: 100px;\\n  height: 100px;\\n  border-radius: 0 2px 2px 0;\\n  float: left;\\n  opacity: 0.5;\\n}\\n.jj .jj-wrapper .viduthalai:hover {\\n  opacity: 1;\\n}\\n.jj .jj-wrapper .intro {\\n  float: left;\\n  width: 400px;\\n  padding-left: 20px;\\n  color: rgba(255, 255, 255, 0.5);\\n}\\n.jj .jj-wrapper .intro a {\\n  color: rgba(255, 255, 255, 0.5);\\n}\\n.jj .jj-wrapper .intro a:hover {\\n  color: #ffffff;\\n}\\n.jj .jj-wrapper .intro span,\\n.jj .jj-wrapper p {\\n  font-size: 15px;\\n  font-weight: 200;\\n}\\n.jj .jj-wrapper .intro h3 {\\n  font-size: 20px;\\n  font-weight: 200;\\n  margin: 0px;\\n}\\n.jj .jj-wrapper .git {\\n  color: rgba(255, 255, 255, 0.5);\\n  float: right;\\n  text-align: right;\\n  padding: 10px 20px;\\n  border-radius: 2px;\\n  background-color: rgba(0, 0, 0, 0.3);\\n  font-weight: 200;\\n}\\n.jj .jj-wrapper .git:hover {\\n  background-color: rgba(0, 0, 0, 0.2);\\n}\\n.jj .jj-progress.vertical {\\n  position: relative;\\n  width: 50px;\\n  height: 100%;\\n  min-height: 100px;\\n  text-align: center;\\n  margin-bottom: 0px;\\n  display: inline-block;\\n}\\n.jj .jj-progress.vertical .progress-bar {\\n  position: absolute;\\n  width: 100%;\\n  bottom: 0;\\n}\\n.jj .jj-progress.vertical .progress-bar.animate {\\n  -webkit-transition: height 0.3s ease;\\n  -o-transition: height 0.3s ease;\\n  transition: height 0.3s ease;\\n}\\n.jj .jj-progress {\\n  height: 30px;\\n  margin-bottom: 1rem;\\n}\\n.jj .jj-progress .progress-bar {\\n  transition: none;\\n}\\n.jj .jj-progress .progress-bar.animate {\\n  -webkit-transition: width 0.3s ease;\\n  -o-transition: width 0.3s ease;\\n  transition: width 0.3s ease;\\n}\\n.jj .kpibox {\\n  position: relative;\\n  width: 100%;\\n  padding: 20px 0;\\n  display: flex;\\n  flex-direction: row;\\n  -webkit-print-color-adjust: exact;\\n}\\n.jj .kpibox > .bg-level {\\n  flex-grow: 1;\\n  padding: 15px;\\n  display: grid;\\n}\\n.jj .kpibox > .bg-level > div {\\n  border-radius: 3px;\\n  margin-bottom: 20px;\\n  color: #fff;\\n  padding: 15px;\\n  overflow: hidden;\\n  position: relative;\\n  white-space: none;\\n  opacity: 1;\\n  color: rgba(255, 255, 255, 0.8);\\n}\\n.jj .kpibox > .bg-level > div:hover {\\n  opacity: 0.9;\\n  color: #ffffff;\\n}\\n.jj .kpibox > .bg-level > div.btn {\\n  white-space: normal;\\n  display: block;\\n}\\n.jj .kpibox > .bg-level > div.disable {\\n  background-color: rgba(38, 50, 56, 0.1) !important;\\n  cursor: no-drop;\\n}\\n.jj .kpibox > .bg-level > div.disable:hover {\\n  opacity: 0.9;\\n  color: rgba(255, 255, 255, 0.8);\\n}\\n.jj .kpibox > .bg-level > div .stats-info h4 {\\n  font-size: 12px;\\n  margin: 5px 0;\\n  color: #fff;\\n}\\n.jj .kpibox > .bg-level > div .stats-info p {\\n  font-size: 24px;\\n  font-weight: 300;\\n  margin-bottom: 0;\\n}\\n.jj .kpibox > .bg-level > div .stats-icon {\\n  font-size: 42px;\\n  height: 56px;\\n  width: 56px;\\n  text-align: center;\\n  line-height: 56px;\\n  margin-left: 15px;\\n  color: #fff;\\n  position: absolute;\\n  right: 15px;\\n  top: 15px;\\n  opacity: 0.2;\\n  filter: alpha(opacity=20);\\n}\\n.jj .kpibox > .bg-level > div .stats-link a {\\n  display: block;\\n  margin: 15px -15px -15px;\\n  padding: 7px 15px;\\n  background: url(../img/transparent/black-0.4.png);\\n  background: rgba(0, 0, 0, 0.4);\\n  text-align: right;\\n  color: #ddd;\\n  font-weight: 300;\\n  text-decoration: none;\\n}\\n.jj .kpibox > .bg-level > div .stats-link a:focus {\\n  background: url(../img/transparent/black-0.6.png);\\n  background: rgba(0, 0, 0, 0.6);\\n  color: #fff;\\n}\\n.jj .kpibox > .bg-level > div .stats-link a:hover {\\n  background: url(../img/transparent/black-0.6.png);\\n  background: rgba(0, 0, 0, 0.6);\\n  color: #fff;\\n}\\n.jj .kpibox > .bg-level > div .stats-icon.stats-icon-lg {\\n  font-size: 52px;\\n  top: 12px;\\n  right: 21px;\\n}\\n.jj .kpibox > .bg-level > div .stats-title {\\n  position: relative;\\n  line-height: 1.1;\\n  font-size: 18px;\\n  margin: 2px 0 7px;\\n  color: #fff;\\n}\\n.jj .kpibox > .bg-level > div .stats-desc {\\n  color: #fff;\\n  color: rgba(255, 255, 255, 0.6);\\n  font-weight: 300;\\n  margin-bottom: 0;\\n}\\n.jj .kpibox > .bg-level > div .stats-number {\\n  font-size: 24px;\\n  font-weight: 300;\\n  margin-bottom: 10px;\\n}\\n.jj .kpibox > .bg-level > div .stats-progress {\\n  background: url(../img/transparent/black-0.2.png);\\n  background: rgba(0, 0, 0, 0.2);\\n  height: 2px;\\n  margin: 0 -15px 12px;\\n}\\n.jj .kpibox > .bg-level > div .stats-progress .progress-bar {\\n  background: #fff;\\n}\\n.jj .kpibox.kpibox-5 > .bg-level > div.bg-level-1 {\\n  background-color: #279566 !important;\\n}\\n.jj .kpibox.kpibox-5 > .bg-level > div.bg-level-2 {\\n  background-color: #d6494b !important;\\n}\\n.jj .kpibox.kpibox-5 > .bg-level > div.bg-level-3 {\\n  background-color: #3583ca !important;\\n}\\n.jj .kpibox.kpibox-5 > .bg-level > div.bg-level-4 {\\n  background-color: #20a8d8 !important;\\n}\\n.jj .kpibox.kpibox-5 > .bg-level > div.bg-level-5 {\\n  background-color: #e98f2e !important;\\n}\\n.jj .kpibox.kpibox-4 > .bg-level > div.bg-level-1 {\\n  background-color: #279566 !important;\\n}\\n.jj .kpibox.kpibox-4 > .bg-level > div.bg-level-2 {\\n  background-color: #d6494b !important;\\n}\\n.jj .kpibox.kpibox-4 > .bg-level > div.bg-level-3 {\\n  background-color: #3583ca !important;\\n}\\n.jj .kpibox.kpibox-4 > .bg-level > div.bg-level-4 {\\n  background-color: #e98f2e !important;\\n}\\n.jj .kpibox.kpibox-3 > .bg-level > div.bg-level-1 {\\n  background-color: #279566 !important;\\n}\\n.jj .kpibox.kpibox-3 > .bg-level > div.bg-level-2 {\\n  background-color: #3583ca !important;\\n}\\n.jj .kpibox.kpibox-3 > .bg-level > div.bg-level-3 {\\n  background-color: #e98f2e !important;\\n}\\n.jj .kpi-ibox {\\n  background-color: #3bafda;\\n  color: white;\\n  -webkit-print-color-adjust: exact;\\n}\\n.jj .kpi-ibox .j-head {\\n  float: left;\\n  display: inline-block;\\n  width: 30%;\\n  padding: 15px;\\n  padding-top: 30px;\\n  text-align: center;\\n}\\n.jj .kpi-ibox .j-container {\\n  background-color: #66c1e2;\\n  padding: 15px;\\n  display: inline-block;\\n  width: 70%;\\n}\\n.jj .kpi-ibox.-primary {\\n  background-color: #3bafda;\\n}\\n.jj .kpi-ibox.-primary .j-container {\\n  background-color: #66c1e2;\\n}\\n.jj .kpi-ibox.-success {\\n  background-color: #1abc9c;\\n}\\n.jj .kpi-ibox.-success .j-container {\\n  background-color: #28e1bd;\\n}\\n.jj .kpi-ibox.-info {\\n  background-color: #37cde6;\\n}\\n.jj .kpi-ibox.-info .j-container {\\n  background-color: #64d8ec;\\n}\\n.jj .kpi-ibox.-warning {\\n  background-color: #f7b84b;\\n}\\n.jj .kpi-ibox.-warning .j-container {\\n  background-color: #f9cb7c;\\n}\\n.jj .kpi-ibox.-danger {\\n  background-color: #f1556c;\\n}\\n.jj .kpi-ibox.-danger .j-container {\\n  background-color: #f58495;\\n}\\n.jj .kpi-ibox.-link {\\n  color: #333;\\n  background-color: #f1f5f7;\\n}\\n.jj .kpi-ibox.-link .j-container {\\n  background-color: #ffffff;\\n}\\n/* ==JJCustomToggle.640.class================ */\\n.jj input.custom-toggle[type='checkbox'] {\\n  --size: 1.5rem;\\n  --width: 1.7rem;\\n  --height: 1rem;\\n  position: relative;\\n  margin-left: var(--size);\\n  width: 0px;\\n  height: 0px;\\n  border: none;\\n}\\n.jj input.custom-toggle[type='checkbox']:before {\\n  position: absolute;\\n  display: block;\\n  top: -0.15rem;\\n  left: calc(var(--size) * -1);\\n  width: var(--width);\\n  height: var(--height);\\n  pointer-events: none;\\n  content: '';\\n  background-color: #fff;\\n  border: #adb5bd solid 1px;\\n  pointer-events: all;\\n  border-radius: 0.5rem;\\n  -webkit-transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\\n  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\\n  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\\n}\\n.jj input.custom-toggle[type='checkbox']:after {\\n  position: absolute;\\n  display: block;\\n  top: 0rem;\\n  width: calc(var(--height) - 4px);\\n  height: calc(var(--height) - 4px);\\n  left: calc(var(--size) * -1 + 2px);\\n  content: '';\\n  background: no-repeat 1% 50%;\\n  background-color: #adb5bd;\\n  border-radius: 0.5rem;\\n  -webkit-transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-transform 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\\n  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, -webkit-transform 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\\n  transition: transform 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n  transition: transform 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, -webkit-transform 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\\n}\\n.jj input.custom-toggle[type='checkbox']:checked:before {\\n  color: #3bafda;\\n  border-color: #3bafda;\\n  background-color: #3bafda;\\n}\\n.jj input.custom-toggle[type='checkbox']:checked:after {\\n  background-color: #fff;\\n  -webkit-transform: translateX(calc(var(--size) / 2));\\n  transform: translateX(calc(var(--size) / 2));\\n}\\n.jj .jj-toggle-box {\\n  display: inline-block;\\n}\\n.jj .jj-toggle-box > .list-group {\\n  display: flex;\\n  display: none;\\n  width: 340px;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  padding: 0.5rem;\\n  border: 1px solid #ccc;\\n  background-color: white;\\n  z-index: 1001;\\n}\\n.jj .jj-toggle-box > .list-group a {\\n  width: 30%;\\n  margin: 5px;\\n}\\n.jj .jj-toggle-box > .list-group a i {\\n  font-size: 2rem;\\n  display: block;\\n  text-align: center;\\n  height: 40px;\\n}\\n.jj .jj-toggle-box > .list-group a t {\\n  display: block;\\n  text-align: center;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n.jj .jj-toggle-box > .list-group.show {\\n  position: absolute;\\n  display: flex;\\n}\\n.jj .jj-toggle-box .toggle-right + .show {\\n  right: 0;\\n}\\n/* ==JJTimeline.class================ */\\n.jj {\\n  /* ------------------------------------------------------------------------\\njj-timeline\\n------------------------------------------------------------------------ */\\n}\\n.jj .jj-timeline .timeline {\\n  position: relative;\\n  padding: 0;\\n  margin-bottom: 22px;\\n  list-style: none;\\n  background: 0 0;\\n}\\n.jj .jj-timeline .timeline:before {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 50%;\\n  width: 2px;\\n  margin-left: -1px;\\n  content: \\\"\\\";\\n  background-color: #e4eaec;\\n}\\n.jj .jj-timeline .timeline:after {\\n  display: table;\\n  content: \\\"\\\";\\n}\\n.jj .jj-timeline .timeline:after {\\n  clear: both;\\n}\\n.jj .jj-timeline .timeline > li {\\n  position: relative;\\n  display: block;\\n  float: left;\\n  width: 50%;\\n  padding-right: 40px;\\n  margin-bottom: 60px;\\n}\\n.jj .jj-timeline .timeline > li:not(.timeline-period):after,\\n.jj .jj-timeline .timeline > li:not(.timeline-period):before {\\n  content: \\\" \\\";\\n}\\n.jj .jj-timeline .timeline > li:not(.timeline-period):after {\\n  clear: both;\\n}\\n.jj .jj-timeline .timeline > li.timeline-period {\\n  position: relative;\\n  z-index: 6;\\n  display: block;\\n  float: none;\\n  width: 200px;\\n  padding: 25px 10px;\\n  margin: 20px auto 30px;\\n  clear: both;\\n  font-size: 26px;\\n  text-align: center;\\n  text-transform: uppercase;\\n  background: #f1f4f5;\\n}\\n.jj .jj-timeline .timeline > li.timeline-period ~ .timeline-item {\\n  display: none;\\n  overflow: visible;\\n}\\n.jj .jj-timeline .timeline > li.timeline-period ~ .timeline-item ~ .timeline-period.on ~ * {\\n  display: block;\\n}\\n.jj .jj-timeline .timeline > li.timeline-period.on ~ .timeline-item {\\n  display: block;\\n}\\n.jj .jj-timeline .timeline > li.timeline-period.on ~ .timeline-item ~ .timeline-period:not(.on) ~ * {\\n  display: none;\\n}\\n.jj .jj-timeline .timeline > li.timeline-reverse {\\n  float: right;\\n  padding-right: 0;\\n  padding-left: 40px;\\n}\\n.jj .jj-timeline .timeline > li:last-child {\\n  margin-bottom: 0;\\n}\\n.jj .jj-timeline .timeline:not(.timeline-single) > li.timeline-period + .timeline-item + .timeline-item,\\n.jj .jj-timeline .timeline:not(.timeline-single) > li:not(.timeline-period):first-child + .timeline-item {\\n  margin-top: 90px;\\n}\\n.jj .jj-timeline .timeline-content {\\n  float: left;\\n  width: 100%;\\n  overflow: hidden;\\n  clear: left;\\n}\\n.jj .jj-timeline .timeline-reverse .timeline-content {\\n  float: right;\\n  clear: right;\\n}\\n.jj .jj-timeline .timeline-content > .widget {\\n  margin: 0;\\n}\\n.jj .jj-timeline .timeline-dot {\\n  position: absolute;\\n  right: 0;\\n  z-index: 11;\\n  color: #fff;\\n  text-align: center;\\n  cursor: pointer;\\n  background-color: #62a8ea;\\n  border-radius: 50%;\\n  top: 7.5px;\\n}\\n.jj .jj-timeline .timeline-reverse .timeline-dot {\\n  right: auto;\\n  left: 0;\\n  margin-right: 0;\\n}\\n.jj .jj-timeline .timeline .timeline-dot {\\n  width: 14px;\\n  height: 14px;\\n  margin-right: -7px;\\n  line-height: 14px;\\n}\\n.jj .jj-timeline .timeline .timeline-reverse .timeline-dot {\\n  margin-left: -7px;\\n}\\n.jj .jj-timeline .timeline.timeline-single {\\n  margin-left: 7px;\\n}\\n.jj .jj-timeline .timeline.timeline-single .timeline-dot {\\n  margin-left: -7px;\\n}\\n@media screen and (max-width: 767px) {\\n  .jj .jj-timeline .timeline {\\n    margin-left: 7px;\\n  }\\n  .jj .jj-timeline .timeline .timeline-dot {\\n    margin-left: -7px;\\n  }\\n}\\n.jj .jj-timeline .timeline-info {\\n  float: right;\\n  padding: 0 20px;\\n  margin-bottom: 22px;\\n  line-height: 28px;\\n  text-align: center;\\n  background: #e4eaec;\\n  border: 1px solid #e4eaec;\\n  border-radius: 20px;\\n}\\n.jj .jj-timeline .timeline-reverse .timeline-info {\\n  float: left;\\n}\\n.jj .jj-timeline .timeline-footer {\\n  position: absolute;\\n  right: 0;\\n  bottom: -30px;\\n  margin-right: 55px;\\n}\\n.jj .jj-timeline .timeline-footer .icon {\\n  margin-right: 0.3em;\\n}\\n.jj .jj-timeline .timeline-reverse .timeline-footer {\\n  right: auto;\\n  left: 0;\\n  margin-right: 0;\\n  margin-left: 55px;\\n}\\n.jj .jj-timeline .timeline-reverse + .timeline-reverse {\\n  margin-top: 0;\\n}\\n@media screen and (max-width: 767px) {\\n  .jj .jj-timeline .timeline:before {\\n    left: 0;\\n  }\\n  .jj .jj-timeline .timeline li.timeline-reverse,\\n  .jj .jj-timeline .timeline > li {\\n    float: none;\\n    width: 100%;\\n    padding-right: 0;\\n    padding-left: 40px;\\n    margin-top: 0;\\n    margin-bottom: 60px;\\n  }\\n  .jj .jj-timeline .timeline-content {\\n    float: none;\\n  }\\n  .jj .jj-timeline .timeline-dot {\\n    right: auto;\\n    left: 0;\\n    margin-right: 0;\\n    margin-left: -7px;\\n  }\\n  .jj .jj-timeline .timeline-info {\\n    display: inline-block;\\n    float: none;\\n  }\\n  .jj .jj-timeline .timeline-footer {\\n    right: auto;\\n    bottom: -26px;\\n    left: 0;\\n    margin-right: 0;\\n    margin-left: 40px;\\n  }\\n}\\n.jj .jj-timeline .timeline-single:before {\\n  left: 0;\\n}\\n.jj .jj-timeline .timeline-single > li {\\n  float: none;\\n  width: 100%;\\n  padding-right: 0;\\n  padding-left: 40px;\\n  margin-bottom: 60px;\\n}\\n.jj .jj-timeline .timeline-single .timeline-content {\\n  float: none;\\n}\\n.jj .jj-timeline .timeline-single .timeline-dot {\\n  right: auto;\\n  left: 0;\\n  margin-right: 0;\\n  margin-left: -7px;\\n}\\n.jj .jj-timeline .timeline-single .timeline-info {\\n  float: left;\\n}\\n.jj .jj-timeline .timeline-single .timeline-footer {\\n  right: auto;\\n  bottom: -26px;\\n  left: 0;\\n  margin-right: 0;\\n  margin-left: 40px;\\n}\\n.jj .jj-timeline .timeline-icon .timeline-dot {\\n  width: 40px;\\n  height: 40px;\\n  margin-right: -20px;\\n  line-height: 40px;\\n}\\n.jj .jj-timeline .timeline-icon .timeline-reverse .timeline-dot {\\n  margin-left: -20px;\\n}\\n.jj .jj-timeline .timeline-icon.timeline-single {\\n  margin-left: 20px;\\n}\\n.jj .jj-timeline .timeline-icon.timeline-single .timeline-dot {\\n  margin-left: -20px;\\n}\\n@media screen and (max-width: 767px) {\\n  .jj .jj-timeline .timeline-icon {\\n    margin-left: 20px;\\n  }\\n  .jj .jj-timeline .timeline-icon .timeline-dot {\\n    margin-left: -20px;\\n  }\\n}\\n.jj .jj-timeline .timeline-icon .timeline-dot {\\n  top: -5.5px;\\n}\\n.jj .jj-timeline .timeline-avatar .timeline-dot {\\n  width: 40px;\\n  height: 40px;\\n  margin-right: -20px;\\n  line-height: 40px;\\n}\\n.jj .jj-timeline .timeline-avatar .timeline-reverse .timeline-dot {\\n  margin-left: -20px;\\n}\\n.jj .jj-timeline .timeline-avatar.timeline-single {\\n  margin-left: 20px;\\n}\\n.jj .jj-timeline .timeline-avatar.timeline-single .timeline-dot {\\n  margin-left: -20px;\\n}\\n@media screen and (max-width: 767px) {\\n  .jj .jj-timeline .timeline-avatar {\\n    margin-left: 20px;\\n  }\\n  .jj .jj-timeline .timeline-avatar .timeline-dot {\\n    margin-left: -20px;\\n  }\\n}\\n.jj .jj-timeline .timeline-avatar-sm .timeline-dot {\\n  width: 30px;\\n  height: 30px;\\n  margin-right: -15px;\\n  line-height: 30px;\\n}\\n.jj .jj-timeline .timeline-avatar-sm .timeline-reverse .timeline-dot {\\n  margin-left: -15px;\\n}\\n.jj .jj-timeline .timeline-avatar-sm.timeline-single {\\n  margin-left: 15px;\\n}\\n.jj .jj-timeline .timeline-avatar-sm.timeline-single .timeline-dot {\\n  margin-left: -15px;\\n}\\n@media screen and (max-width: 767px) {\\n  .jj .jj-timeline .timeline-avatar-sm {\\n    margin-left: 15px;\\n  }\\n  .jj .jj-timeline .timeline-avatar-sm .timeline-dot {\\n    margin-left: -15px;\\n  }\\n}\\n.jj .jj-timeline .timeline-avatar-lg .timeline-dot {\\n  width: 50px;\\n  height: 50px;\\n  margin-right: -25px;\\n  line-height: 50px;\\n}\\n.jj .jj-timeline .timeline-avatar-lg .timeline-reverse .timeline-dot {\\n  margin-left: -25px;\\n}\\n.jj .jj-timeline .timeline-avatar-lg.timeline-single {\\n  margin-left: 25px;\\n}\\n.jj .jj-timeline .timeline-avatar-lg.timeline-single .timeline-dot {\\n  margin-left: -25px;\\n}\\n@media screen and (max-width: 767px) {\\n  .jj .jj-timeline .timeline-avatar-lg {\\n    margin-left: 25px;\\n  }\\n  .jj .jj-timeline .timeline-avatar-lg .timeline-dot {\\n    margin-left: -25px;\\n  }\\n}\\n.jj .jj-timeline .timeline-simple .timeline-dot {\\n  top: 0;\\n  margin-top: 10px;\\n}\\n.jj .jj-timeline .timeline-feed .timeline-dot {\\n  width: 30px;\\n  height: 30px;\\n  margin-right: -15px;\\n  line-height: 30px;\\n}\\n.jj .jj-timeline .timeline-feed .timeline-reverse .timeline-dot {\\n  margin-left: -15px;\\n}\\n.jj .jj-timeline .timeline-feed.timeline-single {\\n  margin-left: 15px;\\n}\\n.jj .jj-timeline .timeline-feed.timeline-single .timeline-dot {\\n  margin-left: -15px;\\n}\\n@media screen and (max-width: 767px) {\\n  .jj .jj-timeline .timeline-feed {\\n    margin-left: 15px;\\n  }\\n  .jj .jj-timeline .timeline-feed .timeline-dot {\\n    margin-left: -15px;\\n  }\\n}\\n.jj .jj-timeline .timeline-feed.timeline-simple .timeline-dot {\\n  margin-top: 5px;\\n}\\n.jj .jj-timeline .timeline-feed > li {\\n  padding-right: 30px;\\n  margin-bottom: 22px;\\n}\\n.jj .jj-timeline .timeline-feed > li.timeline-reverse {\\n  padding-left: 30px;\\n}\\n.jj .jj-timeline .timeline-feed.timeline-single > li {\\n  padding-left: 30px;\\n}\\n@media screen and (max-width: 767px) {\\n  .jj .jj-timeline .timeline-feed > li {\\n    padding-right: 30px;\\n    margin-bottom: 22px;\\n  }\\n}\\n.jj .jj-timeline .cover {\\n  overflow: hidden;\\n}\\n.jj .jj-timeline .cover-background {\\n  height: 100%;\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  -webkit-background-size: cover;\\n  background-size: cover;\\n}\\n.jj .jj-timeline .cover-image {\\n  width: 100%;\\n}\\n.jj .jj-timeline .cover-quote {\\n  position: relative;\\n  margin-bottom: 0;\\n  padding-left: 35px;\\n  border-left: none;\\n}\\n.jj .jj-timeline .cover-quote:after,\\n.jj .jj-timeline .cover-quote:before {\\n  position: absolute;\\n  top: -20px;\\n  font-size: 4em;\\n}\\n.jj .jj-timeline .cover-quote:before {\\n  left: 0;\\n  content: open-quote;\\n}\\n.jj .jj-timeline .cover-quote:after {\\n  right: 0;\\n  content: close-quote;\\n  visibility: hidden;\\n}\\n.jj .jj-timeline .cover-quote.blockquote-reverse {\\n  padding-right: 35px;\\n  padding-left: 20px;\\n  border-right: none;\\n}\\n.jj .jj-timeline .cover-quote.blockquote-reverse:before {\\n  right: 0;\\n  left: auto;\\n  content: close-quote;\\n}\\n.jj .jj-timeline .cover-gallery .carousel-inner img {\\n  width: 100%;\\n}\\n.jj .jj-timeline .cover-iframe {\\n  width: 100%;\\n  border: 0 none;\\n}\\n.jj .jj-timeline .overlay {\\n  position: relative;\\n  display: inline-block;\\n  width: 100%;\\n  max-width: 100%;\\n  margin: 0;\\n  overflow: hidden;\\n  vertical-align: middle;\\n  -webkit-transform: translateZ(0);\\n  transform: translateZ(0);\\n}\\n.jj .jj-timeline .overlay .overlay-figure,\\n.jj .jj-timeline .overlay > :first-child {\\n  width: 100%;\\n  max-width: 100%;\\n  margin-bottom: 0;\\n}\\n.jj .jj-timeline .overlay-panel {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  padding: 20px;\\n  color: #fff;\\n}\\n.jj .jj-timeline .overlay-panel a:not([class]) {\\n  color: inherit;\\n  text-decoration: underline;\\n}\\n.jj .jj-timeline .overlay-panel > :last-child {\\n  margin-bottom: 0;\\n}\\n.jj .jj-timeline .overlay-panel h1,\\n.jj .jj-timeline .overlay-panel h2,\\n.jj .jj-timeline .overlay-panel h3,\\n.jj .jj-timeline .overlay-panel h4,\\n.jj .jj-timeline .overlay-panel h5,\\n.jj .jj-timeline .overlay-panel h6 {\\n  color: inherit;\\n}\\n.jj .jj-timeline .overlay-hover:not(:hover) .overlay-panel:not(.overlay-background-fixed) {\\n  opacity: 0;\\n}\\n.jj .jj-timeline .overlay-background {\\n  background: rgba(0, 0, 0, 0.5);\\n}\\n.jj .jj-timeline .overlay-image {\\n  width: 100%;\\n  max-width: 100%;\\n  padding: 0;\\n}\\n.jj .jj-timeline .overlay-shade {\\n  background: rgba(0, 0, 0, 0) -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(255, 255, 255, 0)), color-stop(90%, rgba(255, 255, 255, 0.87)), to(#fff)) repeat scroll 0 0;\\n  background: rgba(0, 0, 0, 0) -webkit-linear-gradient(top, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.87) 90%, #fff 100%) repeat scroll 0 0;\\n  background: rgba(0, 0, 0, 0) -o-linear-gradient(top, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.87) 90%, #fff 100%) repeat scroll 0 0;\\n  background: rgba(0, 0, 0, 0) linear-gradient(to bottom, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.87) 90%, #fff 100%) repeat scroll 0 0;\\n}\\n.jj .jj-timeline .overlay-top {\\n  bottom: auto;\\n}\\n.jj .jj-timeline .overlay-bottom {\\n  top: auto;\\n}\\n.jj .jj-timeline .overlay-left {\\n  right: auto;\\n}\\n.jj .jj-timeline .overlay-right {\\n  left: auto;\\n}\\n.jj .jj-timeline .overlay-icon {\\n  font-size: 0;\\n  text-align: center;\\n}\\n.jj .jj-timeline .overlay-icon:before {\\n  display: inline-block;\\n  height: 100%;\\n  vertical-align: middle;\\n  content: \\\"\\\";\\n}\\n.jj .jj-timeline .overlay-icon .icon {\\n  display: inline-block;\\n  width: 32px;\\n  height: 32px;\\n  margin-right: 10px;\\n  margin-left: 10px;\\n  font-size: 32px;\\n  line-height: 1;\\n  color: #fff;\\n  text-decoration: none;\\n}\\n.jj .jj-timeline .overlay-anchor {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n}\\n.jj .jj-timeline .overlay-blur,\\n.jj .jj-timeline .overlay-fade,\\n.jj .jj-timeline .overlay-grayscale,\\n.jj .jj-timeline .overlay-scale,\\n.jj .jj-timeline .overlay-spin,\\n.jj .jj-timeline [class*=overlay-slide] {\\n  -webkit-transition-timing-function: ease-out;\\n  -o-transition-timing-function: ease-out;\\n  transition-timing-function: ease-out;\\n  -webkit-transition-duration: 0.3s;\\n  -o-transition-duration: 0.3s;\\n  transition-duration: 0.3s;\\n  -webkit-transition-property: opacity -webkit-transform -webkit-filter, opacity -webkit-transform filter;\\n  -o-transition-property: opacity -o-transform filter;\\n  transition-property: opacity transform filter;\\n}\\n.jj .jj-timeline .overlay-fade {\\n  opacity: 0.7;\\n}\\n.jj .jj-timeline .overlay-hover:hover .overlay-fade {\\n  opacity: 1;\\n}\\n.jj .jj-timeline .overlay-scale {\\n  -webkit-transform: scale(1);\\n  -ms-transform: scale(1);\\n  -o-transform: scale(1);\\n  transform: scale(1);\\n}\\n.jj .jj-timeline .overlay-hover:hover .overlay-scale {\\n  -webkit-transform: scale(1.1);\\n  -ms-transform: scale(1.1);\\n  -o-transform: scale(1.1);\\n  transform: scale(1.1);\\n}\\n.jj .jj-timeline .overlay-spin {\\n  -webkit-transform: scale(1) rotate(0);\\n  -ms-transform: scale(1) rotate(0);\\n  -o-transform: scale(1) rotate(0);\\n  transform: scale(1) rotate(0);\\n}\\n.jj .jj-timeline .overlay-hover:hover .overlay-spin {\\n  -webkit-transform: scale(1.1) rotate(3deg);\\n  -ms-transform: scale(1.1) rotate(3deg);\\n  -o-transform: scale(1.1) rotate(3deg);\\n  transform: scale(1.1) rotate(3deg);\\n}\\n.jj .jj-timeline .overlay-grayscale {\\n  filter: grayscale(100%);\\n  -webkit-filter: grayscale(100%);\\n}\\n.jj .jj-timeline .overlay-hover:hover .overlay-grayscale {\\n  filter: grayscale(0);\\n  -webkit-filter: grayscale(0);\\n}\\n.jj .jj-timeline [class*=overlay-slide] {\\n  opacity: 0;\\n}\\n.jj .jj-timeline .overlay-slide-top {\\n  -webkit-transform: translateY(-100%);\\n  -ms-transform: translateY(-100%);\\n  -o-transform: translateY(-100%);\\n  transform: translateY(-100%);\\n}\\n.jj .jj-timeline .overlay-slide-bottom {\\n  -webkit-transform: translateY(100%);\\n  -ms-transform: translateY(100%);\\n  -o-transform: translateY(100%);\\n  transform: translateY(100%);\\n}\\n.jj .jj-timeline .overlay-slide-left {\\n  -webkit-transform: translateX(-100%);\\n  -ms-transform: translateX(-100%);\\n  -o-transform: translateX(-100%);\\n  transform: translateX(-100%);\\n}\\n.jj .jj-timeline .overlay-slide-right {\\n  -webkit-transform: translateX(100%);\\n  -ms-transform: translateX(100%);\\n  -o-transform: translateX(100%);\\n  transform: translateX(100%);\\n}\\n.jj .jj-timeline .overlay-hover:hover [class*=overlay-slide] {\\n  opacity: 1;\\n  -webkit-transform: translateX(0) translateY(0);\\n  -ms-transform: translateX(0) translateY(0);\\n  -o-transform: translateX(0) translateY(0);\\n  transform: translateX(0) translateY(0);\\n}\\n.jj .jj-timeline.one-column {\\n  padding-left: 10px;\\n  overflow-y: auto;\\n  overflow-x: hidden;\\n  height: 100%;\\n}\\n.jj .jj-timeline.one-column .timeline:before {\\n  left: 0;\\n  background-color: #039cfd;\\n}\\n.jj .jj-timeline.one-column .timeline > .timeline-item {\\n  position: relative;\\n  display: block;\\n  padding-left: 10px;\\n  margin-bottom: 20px;\\n  margin-top: 0px! important;\\n  margin-left: 1px;\\n  width: 100%;\\n  font-size: 13px;\\n}\\n.jj .jj-timeline.one-column .timeline > .timeline-item:after {\\n  background-color: #ffffff;\\n  border-color: #039cfd;\\n  border-radius: 10px;\\n  border-style: solid;\\n  border-width: 2px;\\n  bottom: 0;\\n  content: '';\\n  height: 10px;\\n  left: 0;\\n  margin-left: -6px;\\n  position: absolute;\\n  top: 5px;\\n  width: 10px;\\n}\\n/* ==JJTabs.640.class================ */\\n.jj .jj-tabs-wrap {\\n  display: flex;\\n  flex-direction: column;\\n  position: relative;\\n  height: 100%;\\n  overflow: hidden;\\n}\\n.jj .jj-tabs-wrap > .jj-tabs {\\n  flex: none;\\n}\\n.jj .jj-tabs-wrap > .jj-tabs .nav-link > * {\\n  pointer-events: none;\\n}\\n.jj .jj-tabs-wrap > .tab-content {\\n  flex-grow: 1;\\n  padding-top: 5px;\\n  overflow: hidden;\\n}\\n.jj .jj-tabs-wrap > .tab-content > .tab-pane {\\n  position: relative;\\n  height: 100%;\\n  overflow: auto;\\n}\\n/* ==jjIconBox.class================ */\\n.jj .jj-icon-box {\\n  display: flex;\\n  flex-flow: row wrap;\\n}\\n.jj .jj-icon-box > * {\\n  width: 33%;\\n  margin: 0.1%;\\n  border-radius: 0.25rem;\\n}\\n.jj .jj-icon-box > * i {\\n  font-size: 2rem;\\n  display: block;\\n  text-align: center;\\n}\\n.jj .jj-icon-box > * t {\\n  display: block;\\n  text-align: center;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  padding-top: 1rem;\\n}\\n.jj .jj-icon-box.size-sm > * i {\\n  font-size: 1rem;\\n}\\n.jj .jj-icon-box.size-lg > * i {\\n  font-size: 4rem;\\n}\\n/* ==JJLineScroll.640.class================ */\\n.jj .jj-inline {\\n  overflow-x: scroll;\\n}\\n.jj .jj-inline > * {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: nowrap;\\n  margin-bottom: 10px;\\n}\\n.jj .jj-inline > * > * {\\n  flex: 0 0 100px;\\n  height: 100px;\\n  margin-right: 10px;\\n  background-color: skyblue;\\n  opacity: 0.6;\\n  text-align: center;\\n  line-height: 100px;\\n  font-size: 24px;\\n}\\n.jj .jj-inline > * > *:first-child {\\n  margin-left: 10px;\\n}\\n.jj .jj-inline > * > *:last-child {\\n  margin-right: 10px;\\n}\\n.jj .box-inline {\\n  display: -webkit-box;\\n  display: -moz-box;\\n  display: -ms-flexbox;\\n  display: -webkit-flex;\\n  display: flex;\\n  flex-flow: row;\\n  width: 100%;\\n  overflow: auto;\\n  -webkit-overflow-scrolling: touch;\\n  -ms-overflow-style: -ms-autohiding-scrollbar;\\n}\\n.jj .box-inline .box {\\n  flex: 0 0 auto;\\n  padding: 20px;\\n  color: white;\\n  background-color: crimson;\\n  border: 1px solid white;\\n  min-width: 200px;\\n}\\n.jj .box-inline .box.active {\\n  width: 100%;\\n  transition: all 0.6s ease;\\n  flex: none;\\n}\\n/* ==JJMenuIcon.640.class================ */\\n.jj .jj-top-menu-icon {\\n  position: relative;\\n  display: none;\\n  cursor: pointer;\\n  float: left;\\n  background-color: transparent;\\n  background-image: none;\\n  border: 1px solid transparent;\\n  margin-top: 10px;\\n}\\n.jj .jj-top-menu-icon .bar1,\\n.jj .jj-top-menu-icon .bar2,\\n.jj .jj-top-menu-icon .bar3 {\\n  width: 24px;\\n  height: 3px;\\n  background-color: var(--secondary);\\n  margin: 5px 0;\\n  transition: 0.4s;\\n  display: block;\\n  pointer-events: none;\\n}\\n.jj .jj-top-menu-icon.change .bar1 {\\n  -webkit-transform: rotate(-45deg) translate(-8px, 3px);\\n  transform: rotate(-45deg) translate(-8px, 3px);\\n}\\n.jj .jj-top-menu-icon.change .bar2 {\\n  opacity: 0;\\n}\\n.jj .jj-top-menu-icon.change .bar3 {\\n  -webkit-transform: rotate(45deg) translate(-8px, -4px);\\n  transform: rotate(45deg) translate(-8px, -4px);\\n}\\n@media (max-width: 767px) {\\n  .jj .jj-top-menu-icon {\\n    display: block !important;\\n  }\\n}\\n.jj .jj-top-menu-arrow-right {\\n  position: relative;\\n  display: block !important;\\n  cursor: pointer;\\n  float: left;\\n  background-color: transparent;\\n  background-image: none;\\n  border: 1px solid transparent;\\n  margin-top: 10px;\\n  margin-left: 10px;\\n}\\n.jj .jj-top-menu-arrow-right .bar1,\\n.jj .jj-top-menu-arrow-right .bar2,\\n.jj .jj-top-menu-arrow-right .bar3 {\\n  width: 24px;\\n  height: 3px;\\n  background-color: var(--secondary);\\n  background-color: black;\\n  margin: 5px 0;\\n  transition: 0.2s;\\n  display: block;\\n  pointer-events: none;\\n}\\n.jj .jj-top-menu-arrow-right [type='checkbox'] {\\n  display: none;\\n}\\n.jj .jj-top-menu-arrow-right [type='checkbox']:checked ~ .bar1 {\\n  -webkit-transform: rotate(-45deg) translate(-2px, -2px);\\n  transform: rotate(-45deg) translate(-2px, -2px);\\n}\\n.jj .jj-top-menu-arrow-right [type='checkbox']:checked ~ .bar3 {\\n  -webkit-transform: rotate(45deg) translate(-2px, 2px);\\n  transform: rotate(45deg) translate(-2px, 2px);\\n}\\n.jj .jj-top-menu-arrow-left {\\n  position: relative;\\n  display: block !important;\\n  cursor: pointer;\\n  float: left;\\n  background-color: transparent;\\n  background-image: none;\\n  border: 1px solid transparent;\\n  margin-top: 10px;\\n  margin-left: 10px;\\n}\\n.jj .jj-top-menu-arrow-left .bar1,\\n.jj .jj-top-menu-arrow-left .bar2,\\n.jj .jj-top-menu-arrow-left .bar3 {\\n  width: 24px;\\n  height: 3px;\\n  background-color: var(--secondary);\\n  background-color: black;\\n  margin: 5px 0;\\n  transition: 0.2s;\\n  display: block;\\n  pointer-events: none;\\n}\\n.jj .jj-top-menu-arrow-left [type='checkbox'] {\\n  display: none;\\n}\\n.jj .jj-top-menu-arrow-left [type='checkbox']:checked ~ .bar1 {\\n  -webkit-transform: rotate(45deg) translate(2px, -2px);\\n  transform: rotate(45deg) translate(2px, -2px);\\n}\\n.jj .jj-top-menu-arrow-left [type='checkbox']:checked ~ .bar3 {\\n  -webkit-transform: rotate(-45deg) translate(2px, 2px);\\n  transform: rotate(-45deg) translate(2px, 2px);\\n}\\n.jj .jj-top-menu-icon-check {\\n  position: relative;\\n  display: block !important;\\n  cursor: pointer;\\n  float: left;\\n  background-color: transparent;\\n  background-image: none;\\n  border: 1px solid transparent;\\n  margin-top: 10px;\\n  margin-left: 10px;\\n}\\n.jj .jj-top-menu-icon-check .bar1,\\n.jj .jj-top-menu-icon-check .bar2,\\n.jj .jj-top-menu-icon-check .bar3 {\\n  width: 24px;\\n  height: 3px;\\n  background-color: var(--secondary);\\n  background-color: black;\\n  margin: 5px 0;\\n  transition: 0.2s;\\n  display: block;\\n  pointer-events: none;\\n}\\n.jj .jj-top-menu-icon-check [type='checkbox'] {\\n  display: none;\\n}\\n.jj .jj-top-menu-icon-check [type='checkbox']:checked ~ .bar1 {\\n  -webkit-transform: rotate(-45deg) translate(-8px, 3px);\\n  transform: rotate(-45deg) translate(-8px, 3px);\\n}\\n.jj .jj-top-menu-icon-check [type='checkbox']:checked ~ .bar2 {\\n  opacity: 0;\\n}\\n.jj .jj-top-menu-icon-check [type='checkbox']:checked ~ .bar3 {\\n  -webkit-transform: rotate(45deg) translate(-8px, -4px);\\n  transform: rotate(45deg) translate(-8px, -4px);\\n}\\n/* ==DragComp.710.pkg.deploy================ */\\n/* ==JJDragable.640.class================ */\\n.jj .jjdragcomp {\\n  position: absolute !important;\\n}\\n.jj .jjdragcomp.starting {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  position: absolute !important;\\n  z-index: 1000;\\n}\\n.jj .jjdragcomp.starting.move-on {\\n  pointer-events: none;\\n}\\n.jj .freeze iframe {\\n  pointer-events: none;\\n}\\n/* ==JJMoveable.640.class================ */\\n/* ==JJResizable.640.class================ */\\n.jj .jj-resizable {\\n  outline: 0px;\\n}\\n.jj .jj-resizable .resizer {\\n  position: absolute;\\n  width: 5px;\\n  height: 5px;\\n  border-radius: 0;\\n  border: 0;\\n  pointer-events: auto;\\n  z-index: 1000;\\n}\\n.jj .jj-resizable .resizer:hover {\\n  background: #ccc;\\n  background: transparent;\\n}\\n.jj .jj-resizable .resizer[data-arrow=\\\"n\\\"] {\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  transform: none;\\n  cursor: n-resize;\\n  /*resizer cursor*/\\n}\\n.jj .jj-resizable .resizer[data-arrow=\\\"e\\\"] {\\n  right: 0;\\n  top: 0;\\n  height: 100%;\\n  transform: none;\\n  cursor: e-resize;\\n  /*resizer cursor*/\\n}\\n.jj .jj-resizable .resizer[data-arrow=\\\"s\\\"] {\\n  bottom: 0;\\n  left: 0;\\n  width: 100%;\\n  transform: none;\\n  cursor: s-resize;\\n  /*resizer cursor*/\\n}\\n.jj .jj-resizable .resizer[data-arrow=\\\"w\\\"] {\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  transform: none;\\n  cursor: w-resize;\\n  /*resizer cursor*/\\n}\\n.jj .jj-resizable .resizer[data-arrow=\\\"nw\\\"] {\\n  left: 0;\\n  top: 0;\\n  width: 15px;\\n  height: 15px;\\n  cursor: nw-resize;\\n  /*resizer cursor*/\\n}\\n.jj .jj-resizable .resizer[data-arrow=\\\"ne\\\"] {\\n  right: 0;\\n  top: 0;\\n  width: 15px;\\n  height: 15px;\\n  cursor: ne-resize;\\n}\\n.jj .jj-resizable .resizer[data-arrow=\\\"sw\\\"] {\\n  left: 0;\\n  bottom: 0;\\n  width: 15px;\\n  height: 15px;\\n  cursor: ne-resize;\\n}\\n.jj .jj-resizable .resizer[data-arrow=\\\"se\\\"] {\\n  right: 0;\\n  bottom: 0;\\n  width: 15px;\\n  height: 15px;\\n  cursor: nw-resize;\\n}\\n.jj .jj-resizable.resizing {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  pointer-events: auto;\\n}\\n.jj .freeze iframe {\\n  pointer-events: none;\\n}\\n.jj .jj-resizable.size-mark {\\n  outline: 2px solid #4286f4;\\n  z-index: 1000;\\n}\\n.jj .jj-resizable.size-mark .resizer {\\n  position: absolute;\\n  width: 20px;\\n  height: 20px;\\n  border-radius: 50%;\\n  /*magic to turn square into circle*/\\n  background: white;\\n  border: 2px solid #4286f4;\\n  pointer-events: auto;\\n}\\n.jj .jj-resizable.size-mark .resizer[data-arrow=\\\"n\\\"] {\\n  left: 50%;\\n  top: -10px;\\n  cursor: n-resize;\\n  /*resizer cursor*/\\n  transform: translate(-50%, 0);\\n}\\n.jj .jj-resizable.size-mark .resizer[data-arrow=\\\"e\\\"] {\\n  right: -10px;\\n  top: 50%;\\n  cursor: e-resize;\\n  /*resizer cursor*/\\n  transform: translate(0%, -50%);\\n}\\n.jj .jj-resizable.size-mark .resizer[data-arrow=\\\"s\\\"] {\\n  left: 50%;\\n  bottom: -10px;\\n  cursor: s-resize;\\n  /*resizer cursor*/\\n  transform: translate(-50%, 0);\\n}\\n.jj .jj-resizable.size-mark .resizer[data-arrow=\\\"w\\\"] {\\n  left: -10px;\\n  top: 50%;\\n  cursor: w-resize;\\n  /*resizer cursor*/\\n  transform: translate(0%, -50%);\\n}\\n.jj .jj-resizable.size-mark .resizer[data-arrow=\\\"nw\\\"] {\\n  left: -10px;\\n  top: -10px;\\n  cursor: nw-resize;\\n  /*resizer cursor*/\\n}\\n.jj .jj-resizable.size-mark .resizer[data-arrow=\\\"ne\\\"] {\\n  right: -10px;\\n  top: -10px;\\n  cursor: ne-resize;\\n}\\n.jj .jj-resizable.size-mark .resizer[data-arrow=\\\"sw\\\"] {\\n  left: -10px;\\n  bottom: -10px;\\n  cursor: ne-resize;\\n}\\n.jj .jj-resizable.size-mark .resizer[data-arrow=\\\"se\\\"] {\\n  right: -10px;\\n  bottom: -10px;\\n  cursor: nw-resize;\\n}\\n.jj .sizebarx {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  right: 0px;\\n  width: 5px;\\n  cursor: e-resize;\\n  z-index: 10;\\n}\\n.jj .sizebarx:hover {\\n  background-color: whitesmoke;\\n}\\n.jj .sizebarx.start {\\n  background-color: #ccc;\\n}\\n.jj .sizebarxw {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0px;\\n  width: 5px;\\n  cursor: w-resize;\\n  z-index: 10;\\n}\\n.jj .sizebarxw:hover {\\n  background-color: whitesmoke;\\n}\\n.jj .sizebarxw.start {\\n  background-color: #ccc;\\n}\\n.jj .sizebary {\\n  position: absolute;\\n  bottom: 0px;\\n  left: 0;\\n  right: 0;\\n  height: 5px;\\n  z-index: 10;\\n  cursor: s-resize;\\n}\\n.jj .sizebary:hover {\\n  background-color: whitesmoke;\\n}\\n.jj .sizebary.start {\\n  background-color: #ccc;\\n}\\n/* ==JJResizeBox.640.class================ */\\n.jj jj-resize-box {\\n  position: absolute;\\n  top: 50px;\\n  left: 100px;\\n  width: 100px;\\n  height: 100px;\\n  outline: 1px solid #4286f4;\\n  z-index: 1000;\\n  pointer-events: none;\\n}\\n.jj jj-resize-box > .size-mark.resizer {\\n  position: absolute;\\n  width: 10px;\\n  height: 10px;\\n  border-radius: 50%;\\n  background: white;\\n  border: 2px solid #4286f4;\\n  pointer-events: auto;\\n}\\n.jj jj-resize-box > .size-mark.resizer[data-arrow='top'] {\\n  left: 50%;\\n  top: -6px;\\n  cursor: n-resize;\\n  transform: translate(-50%, 0);\\n}\\n.jj jj-resize-box > .size-mark.resizer[data-arrow='right'] {\\n  right: -6px;\\n  top: 50%;\\n  cursor: e-resize;\\n  transform: translate(0%, -50%);\\n}\\n.jj jj-resize-box > .size-mark.resizer[data-arrow='bottom'] {\\n  left: 50%;\\n  bottom: -6px;\\n  cursor: s-resize;\\n  transform: translate(-50%, 0);\\n}\\n.jj jj-resize-box > .size-mark.resizer[data-arrow='left'] {\\n  left: -7px;\\n  top: 50%;\\n  cursor: w-resize;\\n  transform: translate(0%, -50%);\\n}\\n.jj jj-resize-box > .size-mark.resizer[data-arrow='top-left'] {\\n  left: -6px;\\n  top: -6px;\\n  cursor: nw-resize;\\n}\\n.jj jj-resize-box > .size-mark.resizer[data-arrow='top-right'] {\\n  right: -6px;\\n  top: -6px;\\n  cursor: nesw-resize;\\n}\\n.jj jj-resize-box > .size-mark.resizer[data-arrow='bottom-left'] {\\n  left: -7px;\\n  bottom: -6px;\\n  cursor: ne-resize;\\n}\\n.jj jj-resize-box > .size-mark.resizer[data-arrow='bottom-right'] {\\n  right: -6px;\\n  bottom: -6px;\\n  cursor: nw-resize;\\n}\\n.jj jj-resize-box .rotate-handle {\\n  position: absolute;\\n  width: 20px;\\n  height: 20px;\\n  border-radius: 50%;\\n  background: white;\\n  border: 3px solid #4286f4;\\n  pointer-events: auto;\\n  top: -30px;\\n  left: 50%;\\n  cursor: crosshair;\\n  transform: translate(-50%, 0);\\n  display: none;\\n}\\n.jj jj-resize-box .rotate-bar {\\n  position: absolute;\\n  width: 1px;\\n  height: 12px;\\n  left: 50%;\\n  top: -12px;\\n  border: 1px solid #4286f4;\\n  transform: translate(-50%, 0);\\n  display: none;\\n}\\n.jj jj-resize-box.rotate .rotate-handle,\\n.jj jj-resize-box.rotate .rotate-bar {\\n  display: initial;\\n}\\n.jj jj-resize-box[line-type='group'] {\\n  outline: 3px dotted #4286f4;\\n}\\n/* ==JJRotate.640.class================ */\\n.jj [rotatable] *,\\n.jj .rotating * {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  pointer-events: none;\\n}\\n/* ==JJSelector.640.class================ */\\n.jj .jj-selector {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  outline: none;\\n}\\n.jj .jj-selector .selected {\\n  background-color: var(--primary);\\n  color: var(--white);\\n}\\n.jj .selector-box {\\n  position: fixed;\\n  display: none;\\n  border: 1px dotted var(--warning);\\n  pointer-events: none;\\n}\\n/* ==JJSortable.640.class================ */\\n.jj .jj-sortable {\\n  min-height: 30px;\\n}\\n.jj .jj-sortable .sort-el {\\n  display: block;\\n  background-color: var(--warning);\\n}\\n.jj .jj-sortable.sorting {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  pointer-events: auto;\\n  cursor: move;\\n}\\n.jj .jj-sortable.sorting .sort-el {\\n  color: var(--warning);\\n  outline: 2px dotted #ccc !important;\\n}\\n.jj .jj-sortable.sorting .sort-el * {\\n  visibility: hidden;\\n}\\n.jj .cursor-el {\\n  position: fixed;\\n  display: block;\\n  background-color: var(--light);\\n  z-index: 100000;\\n  overflow: hidden;\\n  pointer-events: none;\\n}\\n.jj .cursor-el * {\\n  pointer-events: none;\\n}\\n/* ==JJSwiper.640.class================ */\\n.jj .jj-swiper {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  outline: none;\\n}\\n/* ==InputComp.710.pkg.deploy================ */\\n/* ==JJText.640.class================ */\\n.jj {\\n  /** 폼형 디자인 */\\n}\\n.jj .jj-hitem.form-group {\\n  display: block;\\n}\\n.jj .jj-hitem.form-group .control-label {\\n  padding: 0.5rem;\\n  margin-bottom: 0;\\n  min-width: 120px;\\n  position: relative;\\n}\\n.jj .jj-hitem.form-group input[type=\\\"range\\\"] {\\n  margin: 0;\\n}\\n.jj .jj-hitem.form-group .form-control {\\n  margin-bottom: 0;\\n}\\n.jj .jj-hitem.form-group .form-control:disabled,\\n.jj .jj-hitem.form-group .form-control[readonly] {\\n  background-color: var(--light) !important;\\n  opacity: 1;\\n}\\n.jj .jj-hitem.form-group .form-control:disabled {\\n  opacity: 0.8;\\n}\\n.jj .jj-hitem.form-group.size-sm > .control-label {\\n  padding: 0.4rem;\\n}\\n.jj .jj-hitem.form-group.size-sm > .control-content {\\n  padding: 0.2rem;\\n}\\n.jj .jj-hitem.form-group.size-sm > .control-content .form-control {\\n  padding: 0.1rem;\\n  height: calc(1.5em + 0.2rem + 2px);\\n}\\n.jj .jj-hitem .control-label {\\n  padding-left: 0.5rem !important;\\n}\\n.jj .jj-hitem .control-label::before {\\n  content: \\\"\\\";\\n  color: transparent;\\n  margin-left: -1rem;\\n  position: absolute;\\n  font: normal normal normal 14px/1 FontAwesome;\\n  font-size: 5px;\\n  top: 12px;\\n}\\n.jj .jj-hitem .control-label::after {\\n  content: \\\"\\\";\\n  margin-left: -1rem;\\n  position: absolute;\\n  font: normal normal normal 14px/1 FontAwesome;\\n  font-size: 5px;\\n  text-rendering: auto;\\n  -webkit-font-smoothing: antialiased;\\n  line-height: 1.3rem;\\n  padding-left: 1.5rem;\\n}\\n.jj .jj-hitem[default] .control-label::after,\\n.jj .jj-hitem[data-default] .control-label::after {\\n  content: \\\"\\\\F111\\\";\\n}\\n.jj .jj-hitem[required] .control-label::after,\\n.jj .jj-hitem[data-required] .control-label::after {\\n  content: \\\"\\\\F111\\\";\\n  color: var(--danger);\\n}\\n.jj .label-right .control-label {\\n  text-align: right;\\n  padding-right: 1rem;\\n}\\n.jj .label-right .jj-hitem[default] .control-label::before,\\n.jj .label-right .jj-hitem[data-default] .control-label::before {\\n  content: \\\"\\\\F111\\\";\\n}\\n.jj .label-right .jj-hitem[default] .control-label::after,\\n.jj .label-right .jj-hitem[data-default] .control-label::after {\\n  content: \\\"\\\";\\n}\\n.jj .label-right .jj-hitem[required] .control-label::before,\\n.jj .label-right .jj-hitem[data-required] .control-label::before {\\n  content: \\\"\\\\F111\\\";\\n  color: var(--danger);\\n}\\n.jj .label-right .jj-hitem[required] .control-label::after,\\n.jj .label-right .jj-hitem[data-required] .control-label::after {\\n  content: \\\"\\\";\\n  color: var(--danger);\\n}\\n.jj td > .jj-hitem {\\n  margin-bottom: 1rem;\\n}\\n.jj td > .jj-hitem .control-label {\\n  display: none;\\n}\\n/* ==JJBetween.640.class================ */\\n.jj jj-item-between .between-label {\\n  margin-left: 0.5rem;\\n  margin-right: 0.5rem;\\n}\\n.jj jj-item-between input {\\n  width: initial;\\n  display: inline-block;\\n}\\n/* ==JJCheck.640.class================ */\\n.jj jj-item-check .control-content {\\n  height: calc(1.5em + 0.9rem + 2px);\\n  padding: 0rem 0.9rem;\\n}\\n.jj jj-item-check .control-content .check-label {\\n  margin-right: 1rem;\\n  margin-top: 0.5rem;\\n}\\n.jj jj-item-check .control-content .check-label input {\\n  margin-right: 0.2rem;\\n}\\n.jj jj-item-check.block label {\\n  display: block;\\n}\\n/* ==JJDataFilter.640.class================ */\\n.jj jj-data-filter {\\n  position: relative;\\n  display: flex;\\n  flex-direction: row;\\n  padding: 0.7rem;\\n  background-color: var(--white);\\n  border: 1px solid #e7eaed;\\n  border-radius: 5px;\\n  margin-bottom: 1rem;\\n}\\n.jj jj-data-filter table.filter-table {\\n  flex-grow: 1;\\n  width: 1%;\\n  margin: 0;\\n}\\n.jj jj-data-filter table.filter-table th {\\n  background-color: #f1f5f7;\\n  padding: 0.5rem;\\n  font-weight: 600;\\n}\\n.jj jj-data-filter table.filter-table td {\\n  padding: 0.2rem;\\n}\\n.jj jj-data-filter table.filter-table td .form-control {\\n  padding: 0.2rem 0.5rem;\\n  height: 2rem;\\n}\\n.jj jj-data-filter table.filter-table td [type='checkbox'] {\\n  margin-top: 5px;\\n  width: 18px;\\n  height: 18px;\\n}\\n.jj jj-data-filter table.filter-table td .group-radio {\\n  padding-top: 0.2rem;\\n}\\n.jj jj-data-filter table.filter-table td .group-radio input[type='radio'] {\\n  width: 18px;\\n  height: 18px;\\n}\\n.jj jj-data-filter div.filter-col {\\n  flex-grow: 1;\\n}\\n.jj jj-data-filter div.filter-col .filter-group {\\n  display: flex;\\n  flex-direction: row;\\n  margin-top: -1px;\\n  margin-left: -1px;\\n  height: 39px;\\n}\\n.jj jj-data-filter div.filter-col .filter-group .filter-label {\\n  padding: 0.5rem;\\n  margin-bottom: 0;\\n  font-weight: 600;\\n  flex: none;\\n  width: 100px;\\n}\\n.jj jj-data-filter div.filter-col .filter-group .filter-control {\\n  padding: 0.2rem;\\n  flex-grow: 1;\\n}\\n.jj jj-data-filter div.filter-col .filter-group .filter-control .form-control {\\n  padding: 0.2rem 0.5rem;\\n  height: 2rem;\\n}\\n.jj jj-data-filter div.filter-col .filter-group .filter-control [type='checkbox'] {\\n  margin-top: 5px;\\n  width: 18px;\\n  height: 18px;\\n}\\n.jj jj-data-filter div.filter-col .filter-group .filter-control .group-radio {\\n  padding-top: 0.2rem;\\n}\\n.jj jj-data-filter div.filter-col .filter-group .filter-control .group-radio input[type='radio'] {\\n  width: 18px;\\n  height: 18px;\\n}\\n.jj jj-data-filter div.filter-col.form-horizontal {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-wrap: wrap;\\n  flex-wrap: wrap;\\n}\\n.jj jj-data-filter div.filter-col.form-horizontal .form-group {\\n  display: flex;\\n  flex-direction: row;\\n}\\n.jj jj-data-filter div.filter-col.form-horizontal .form-group > .control-label {\\n  padding: 0.5rem;\\n  margin-bottom: 0;\\n  font-weight: 600;\\n  flex: none;\\n  width: 100px;\\n}\\n.jj jj-data-filter div.filter-col.form-horizontal .form-group > .control-content {\\n  flex-grow: 1;\\n}\\n.jj jj-data-filter div.filter-col.form-horizontal .form-group > .control-content input[type='range'] {\\n  margin: 0;\\n}\\n.jj jj-data-filter .form-group {\\n  margin-bottom: 0;\\n}\\n.jj jj-data-filter .form-group > .control-label {\\n  padding: 0.5rem;\\n  margin-bottom: 0;\\n  font-weight: 600;\\n  flex: none;\\n  width: 100px;\\n}\\n.jj jj-data-filter .form-group > .control-content .form-control {\\n  padding: 0.2rem 0.5rem;\\n  height: 2rem;\\n}\\n.jj jj-data-filter .form-group > .control-content .form-control[type='radio'],\\n.jj jj-data-filter .form-group > .control-content .form-control[type='checkbox'] {\\n  width: 18px;\\n  height: 18px;\\n}\\n.jj jj-data-filter .filter-buttons {\\n  padding: 0 1rem;\\n  flex: none;\\n}\\n/* ==JJDataForm.640.class================ */\\n.jj jj-data-form,\\n.jj .jj-data-form {\\n  display: block;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-wrap: wrap;\\n  flex-wrap: wrap;\\n  margin-right: -12px;\\n  margin-left: -12px;\\n  --label-width: 120px;\\n}\\n.jj jj-data-form:empty,\\n.jj .jj-data-form:empty {\\n  width: 100%;\\n  height: 200px;\\n}\\n.jj jj-data-form .form-group,\\n.jj .jj-data-form .form-group {\\n  width: 100%;\\n}\\n.jj jj-data-form.form-horizontal .form-group,\\n.jj .jj-data-form.form-horizontal .form-group {\\n  display: flex;\\n  flex-direction: row;\\n}\\n.jj jj-data-form.form-horizontal .form-group > .control-label,\\n.jj .jj-data-form.form-horizontal .form-group > .control-label {\\n  flex: none;\\n}\\n.jj jj-data-form.form-horizontal .form-group > .control-content,\\n.jj .jj-data-form.form-horizontal .form-group > .control-content {\\n  flex-grow: 1;\\n}\\n.jj jj-data-form.form-horizontal .form-group > .control-content input[type='range'],\\n.jj .jj-data-form.form-horizontal .form-group > .control-content input[type='range'] {\\n  margin: 0;\\n}\\n.jj jj-data-form.form-box,\\n.jj .jj-data-form.form-box {\\n  padding: 0;\\n  border: 1px solid #ccc;\\n  border-width: 0px 1px 1px 0px;\\n}\\n.jj jj-data-form.form-box .form-group,\\n.jj .jj-data-form.form-box .form-group {\\n  display: flex!important;\\n  flex-direction: row!important;\\n  border: 1px solid #ccc;\\n  border-width: 1px 0px 0px 1px;\\n  padding: 0;\\n  margin-bottom: 0;\\n  background-color: var(--light);\\n}\\n.jj jj-data-form.form-box .form-group[required] .control-label::before,\\n.jj .jj-data-form.form-box .form-group[required] .control-label::before {\\n  content: \\\"\\\";\\n  margin-left: 0;\\n}\\n.jj jj-data-form.form-box .form-group[required] .control-label,\\n.jj .jj-data-form.form-box .form-group[required] .control-label {\\n  padding-left: 0.5rem !important;\\n}\\n.jj jj-data-form.form-box .form-group .control-label,\\n.jj .jj-data-form.form-box .form-group .control-label {\\n  padding: 0.5rem;\\n  margin-bottom: 0;\\n  font-weight: 600;\\n  flex: none;\\n  min-width: var(--label-width);\\n}\\n.jj jj-data-form.form-box .form-group .control-content,\\n.jj .jj-data-form.form-box .form-group .control-content {\\n  border-left: 1px solid #ced4da;\\n  flex-grow: 1;\\n}\\n.jj jj-data-form.form-box .form-group .control-content .form-control,\\n.jj .jj-data-form.form-box .form-group .control-content .form-control {\\n  border-width: 0;\\n  border-radius: 0;\\n}\\n.jj jj-data-form.form-box .form-group .control-content .input-group-append .input-group-text,\\n.jj .jj-data-form.form-box .form-group .control-content .input-group-append .input-group-text {\\n  border-width: 0 0 0 1px;\\n}\\n.jj jj-data-form.form-box jj-item-radio .control-content,\\n.jj .jj-data-form.form-box jj-item-radio .control-content {\\n  margin-top: 0;\\n  padding: 0.5rem;\\n  background-color: white;\\n}\\n.jj jj-data-form.form-horizontal,\\n.jj .jj-data-form.form-horizontal {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-wrap: wrap;\\n  flex-wrap: wrap;\\n  padding: 0;\\n  margin: 0;\\n}\\n.jj jj-data-form.form-horizontal .form-group,\\n.jj .jj-data-form.form-horizontal .form-group {\\n  padding: 0;\\n}\\n.jj jj-data-form.form-horizontal .form-group .control-label,\\n.jj .jj-data-form.form-horizontal .form-group .control-label {\\n  min-width: var(--label-width);\\n}\\n.jj jj-data-form table.form-table > tbody > tr th,\\n.jj .jj-data-form table.form-table > tbody > tr th {\\n  background-color: #f1f5f7;\\n  padding: 0.5rem;\\n  font-weight: 600;\\n}\\n.jj jj-data-form table.form-table > tbody > tr td,\\n.jj .jj-data-form table.form-table > tbody > tr td {\\n  padding: 0.2rem;\\n}\\n.jj jj-data-form table.form-table > tbody > tr td .form-control,\\n.jj .jj-data-form table.form-table > tbody > tr td .form-control {\\n  padding: 0.2rem 0.5rem;\\n  height: 2rem;\\n}\\n.jj jj-data-form table.form-table > tbody > tr td textarea.form-control,\\n.jj .jj-data-form table.form-table > tbody > tr td textarea.form-control {\\n  height: initial;\\n}\\n.jj jj-data-form table.form-table > tbody > tr td [type='checkbox'],\\n.jj .jj-data-form table.form-table > tbody > tr td [type='checkbox'] {\\n  margin-top: 5px;\\n}\\n/* ==JJDropDown.640.class================ */\\n.jj jj-item-dropdown .control-content {\\n  position: relative;\\n}\\n/* ==JJIcon.640.class================ */\\n/* ==JJImage.640.class================ */\\n.jj jj-item-image.jj-hitem.form-group {\\n  display: flex;\\n  flex-direction: column;\\n  position: relative;\\n  overflow: hidden;\\n}\\n.jj jj-item-image.jj-hitem.form-group .control-content {\\n  flex-grow: 1;\\n  overflow: hidden;\\n}\\n.jj jj-item-image.jj-hitem.form-group .control-content .jj-overlay-zoom {\\n  position: relative;\\n  display: block;\\n  height: 100%;\\n}\\n.jj jj-item-image.jj-hitem.form-group .control-content .jj-overlay-zoom img {\\n  object-fit: cover;\\n  height: 100%;\\n}\\n.jj jj-item-image.jj-hitem.form-group .control-content .jj-overlay-zoom input {\\n  padding: 0;\\n  top: 0;\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  border: none;\\n  mix-blend-mode: hue;\\n  cursor: pointer;\\n  color: transparent;\\n}\\n/* ==JJLabelPopup.640.class================ */\\n/* ==JJQR.640.class================ */\\n/* ==JJRadio.640.class================ */\\n.jj jj-item-radio label {\\n  margin-bottom: 0;\\n}\\n.jj jj-item-radio .control-content {\\n  margin-top: 0.5rem;\\n}\\n.jj jj-item-radio .control-content .radio-label {\\n  margin-right: 1rem;\\n}\\n.jj jj-item-radio .control-content input {\\n  margin-right: 0.2rem;\\n}\\n.jj jj-item-radio.block label {\\n  display: block;\\n}\\n/* ==JJRange.640.class================ */\\n.jj jj-item-range input[type='range'] {\\n  width: auto;\\n  margin: 0;\\n}\\n/* ==JJSelect.640.class================ */\\n/* ==JJTags.640.class================ */\\n.jj jj-item-tags .input-group {\\n  display: block;\\n  background-color: var(--white);\\n  border: 1px solid #ced4da;\\n  border-radius: 0.2rem;\\n  padding: 0.15rem 0.2rem 0 0.15rem;\\n  min-height: 38px;\\n}\\n.jj jj-item-tags .input-group .tag-items .alert {\\n  display: inline-block;\\n  margin: 0 0.2rem 0.15rem 0;\\n  padding: 0.2rem 2rem 0.2rem 0.3rem;\\n}\\n.jj jj-item-tags .input-group .tag-items .alert button.close {\\n  padding: 0.2rem 0.5rem;\\n  font-size: 1.2rem;\\n}\\n.jj jj-item-tags .input-group .tag-items .alert button.close * {\\n  pointer-events: none;\\n}\\n.jj jj-item-tags .input-group .tag-control {\\n  border: 0;\\n  background-color: transparent;\\n}\\n/* ==JJTextarea.640.class================ */\\n.jj jj-item-textarea.jj-hitem.form-group {\\n  display: flex;\\n  flex-direction: column;\\n  position: relative;\\n}\\n.jj jj-item-textarea.jj-hitem.form-group .control-content {\\n  flex-grow: 1;\\n}\\n.jj jj-item-textarea.jj-hitem.form-group .control-content .form-control {\\n  height: 100%;\\n}\\n/* ==JJLabel.640.class================ */\\n/* ==JJAttach.640.class================ */\\n.jj .jj-attch {\\n  min-height: 150px;\\n  border: 1px solid #ccc;\\n}\\n.jj .jj-attch a {\\n  color: var(--text3);\\n}\\n.jj .jj-attch a[href=\\\"\\\"] {\\n  pointer-events: none;\\n  color: var(--text1);\\n}\\n.jj .jj-attch button * {\\n  pointer-events: none;\\n}\\n.jj .jj-attch .alert.empty {\\n  display: none;\\n}\\n.jj .jj-attch .alert.empty::before {\\n  content: \\\"관련된 파일이 없습니다.\\\";\\n}\\n.jj .jj-attch.file-empty .alert.empty {\\n  display: block;\\n}\\n.jj .jj-attch .attch-file thead {\\n  display: none;\\n}\\n.jj .jj-attch[file-type=\\\"image\\\"] .post {\\n  text-align: center;\\n  position: relative;\\n}\\n.jj .jj-attch[file-type=\\\"image\\\"] .post a {\\n  position: relative;\\n}\\n.jj .jj-attch[file-type=\\\"image\\\"] .post a img {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  height: 100%;\\n  width: 100%;\\n  object-fit: cover;\\n}\\n.jj .jj-attch[file-type=\\\"image\\\"] .post a h5 {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  text-align: center;\\n}\\n.jj .jj-attch .imageWrap {\\n  padding: 10px;\\n}\\n.jj .jj-attch .attch-image .j-card {\\n  width: 150px;\\n  max-width: 22%;\\n}\\n.jj .jj-attch .attch-image .j-card .image-warp {\\n  height: 100px;\\n}\\n.jj .jj-attch .attch-link img {\\n  width: 100%;\\n  max-height: 250px;\\n  object-fit: cover;\\n}\\n.jj .jj-attch .attch-link .media-body {\\n  background-color: whitesmoke;\\n  padding: 5px;\\n}\\n.jj .jj-attch.win-drag {\\n  background-color: yellow;\\n  min-height: 150px;\\n}\\n.jj .jj-mobile .jj-attch .alert.empty {\\n  display: none;\\n}\\n.jj .jj-inline {\\n  overflow-x: auto;\\n}\\n.jj .jj-inline > * {\\n  width: 100%;\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: nowrap;\\n  margin-bottom: 10px;\\n}\\n.jj .jj-inline > * > * {\\n  flex: 0 0 100px;\\n  height: 100px;\\n  text-align: center;\\n  margin-right: 10px;\\n}\\n.jj .jj-inline > * > *:first-child {\\n  margin-left: 10px;\\n}\\n.jj .jj-inline > * > *:last-child {\\n  margin-right: 10px;\\n}\\n.jj .jj-inline > *.post > * {\\n  margin-right: 10px;\\n}\\n/* ==JJSyncAttach.640.class================ */\\n.jj .jj-attch {\\n  min-height: 150px;\\n  border: 1px solid #ccc;\\n}\\n.jj .jj-attch a {\\n  color: var(--text3);\\n}\\n.jj .jj-attch a[href=\\\"\\\"] {\\n  pointer-events: none;\\n  color: var(--text1);\\n}\\n.jj .jj-attch button * {\\n  pointer-events: none;\\n}\\n.jj .jj-attch .alert.empty {\\n  display: none;\\n}\\n.jj .jj-attch .alert.empty::before {\\n  content: \\\"관련된 파일이 없습니다.\\\";\\n}\\n.jj .jj-attch.file-empty .alert.empty {\\n  display: block;\\n}\\n.jj .jj-attch .attch-file thead {\\n  display: none;\\n}\\n.jj .jj-attch[file-type=\\\"image\\\"] .post {\\n  text-align: center;\\n  position: relative;\\n}\\n.jj .jj-attch[file-type=\\\"image\\\"] .post a {\\n  position: relative;\\n}\\n.jj .jj-attch[file-type=\\\"image\\\"] .post a img {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  height: 100%;\\n  width: 100%;\\n  object-fit: cover;\\n}\\n.jj .jj-attch[file-type=\\\"image\\\"] .post a h5 {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  text-align: center;\\n}\\n.jj .jj-attch .imageWrap {\\n  padding: 10px;\\n}\\n.jj .jj-attch .attch-image .j-card {\\n  width: 150px;\\n  max-width: 22%;\\n}\\n.jj .jj-attch .attch-image .j-card .image-warp {\\n  height: 100px;\\n}\\n.jj .jj-attch .attch-link img {\\n  width: 100%;\\n  max-height: 250px;\\n  object-fit: cover;\\n}\\n.jj .jj-attch .attch-link .media-body {\\n  background-color: whitesmoke;\\n  padding: 5px;\\n}\\n.jj .jj-attch.win-drag {\\n  background-color: yellow;\\n  min-height: 150px;\\n}\\n.jj .jj-mobile .jj-attch .alert.empty {\\n  display: none;\\n}\\n.jj .jj-inline {\\n  overflow-x: auto;\\n}\\n.jj .jj-inline > * {\\n  width: 100%;\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: nowrap;\\n  margin-bottom: 10px;\\n}\\n.jj .jj-inline > * > * {\\n  flex: 0 0 100px;\\n  height: 100px;\\n  text-align: center;\\n  margin-right: 10px;\\n}\\n.jj .jj-inline > * > *:first-child {\\n  margin-left: 10px;\\n}\\n.jj .jj-inline > * > *:last-child {\\n  margin-right: 10px;\\n}\\n.jj .jj-inline > *.post > * {\\n  margin-right: 10px;\\n}\\n/* ==JJFile.640.class================ */\\n/* ==JJDateBetween.640.class================ */\\n.jj jj-item-datebetween .between-label {\\n  margin-left: 0.5rem;\\n  margin-right: 0.5rem;\\n}\\n.jj jj-item-datebetween input {\\n  width: initial;\\n  display: inline-block;\\n}\\n/* ==JJZipcode.640.class================ */\\n.jj jj-item-zipcode .control-content {\\n  display: flex;\\n  flex-wrap: wrap;\\n}\\n.jj jj-item-zipcode .control-content .zip-code {\\n  width: 80px;\\n  flex: none;\\n}\\n.jj jj-item-zipcode .control-content .btn {\\n  width: 80px;\\n  height: 38px;\\n}\\n.jj jj-item-zipcode .control-content .addr1 {\\n  flex-grow: 1;\\n  width: auto;\\n}\\n.jj .form-box jj-item-zipcode .zip-code,\\n.jj .form-box jj-item-zipcode .addr1 {\\n  border-bottom: 1px solid #ccc !important;\\n}\\n/* ==JJButton.640.class================ */\\n.jj jj-item-button {\\n  margin-top: 2.2rem;\\n}\\n.jj jj-item-button button {\\n  width: 100%;\\n}\\n.jj .form-box jj-item-button,\\n.jj .form-horizontal jj-item-button {\\n  margin-top: 0;\\n}\\n.jj .form-box jj-item-button button,\\n.jj .form-horizontal jj-item-button button {\\n  width: 100%;\\n}\\n/* ==JJWaitLayer.class================ */\\n.jj .jj-wait-layer {\\n  position: absolute;\\n  background-color: var(--basecolor5);\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  opacity: 0.3;\\n  z-index: 10000;\\n}\\n.jj .jj-wait-layer h2 {\\n  text-align: center;\\n  top: 50%;\\n}\\n/* ==CustomComp.710.pkg.deploy================ */\\n/* ==JJCarousel.640.class================ */\\n.jj jj-carousel {\\n  display: block;\\n}\\n.jj jj-carousel :before {\\n  display: table;\\n  content: ' ';\\n}\\n.jj jj-carousel :after {\\n  display: table;\\n  content: ' ';\\n  clear: both;\\n}\\n.jj jj-carousel .carousel-caption[hidden] {\\n  display: none !important;\\n}\\n.jj jj-carousel .carousel-control-prev *,\\n.jj jj-carousel .carousel-control-next * {\\n  pointer-events: none;\\n}\\n.jj jj-carousel.height-fix .carousel-inner {\\n  height: 100% !important;\\n}\\n.jj jj-carousel.height-fix .carousel-inner .carousel-item {\\n  height: 100% !important;\\n}\\n.jj jj-carousel.height-fix .carousel-inner .carousel-item img {\\n  position: absolute;\\n  height: 100% !important;\\n  left: 50%;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%) translateX(-50%);\\n  max-width: fit-content;\\n}\\n/* ==JJChart640.class================ */\\n.jj jj-chart {\\n  display: block;\\n  position: relative;\\n  min-height: 300px;\\n}\\n/* ==JJChartMap.640.class================ */\\n.jj jj-chartmap {\\n  display: block;\\n  position: relative;\\n  min-height: 300px;\\n}\\n/* ==JJCircleChartSimple.640.class================ */\\n.jj {\\n  /****************************************************************\\n * CSS Percentage Circle\\n * Author: Andre Firchow\\n * http://circle.firchow.net/\\n*****************************************************************/\\n}\\n.jj jj-circle-c100 {\\n  display: inline-block;\\n}\\n.jj jj-circle-c100 .rect-auto,\\n.jj jj-circle-c100 .m100.p51 .slice,\\n.jj jj-circle-c100 .m100.p52 .slice,\\n.jj jj-circle-c100 .m100.p53 .slice,\\n.jj jj-circle-c100 .m100.p54 .slice,\\n.jj jj-circle-c100 .m100.p55 .slice,\\n.jj jj-circle-c100 .m100.p56 .slice,\\n.jj jj-circle-c100 .m100.p57 .slice,\\n.jj jj-circle-c100 .m100.p58 .slice,\\n.jj jj-circle-c100 .m100.p59 .slice,\\n.jj jj-circle-c100 .m100.p60 .slice,\\n.jj jj-circle-c100 .m100.p61 .slice,\\n.jj jj-circle-c100 .m100.p62 .slice,\\n.jj jj-circle-c100 .m100.p63 .slice,\\n.jj jj-circle-c100 .m100.p64 .slice,\\n.jj jj-circle-c100 .m100.p65 .slice,\\n.jj jj-circle-c100 .m100.p66 .slice,\\n.jj jj-circle-c100 .m100.p67 .slice,\\n.jj jj-circle-c100 .m100.p68 .slice,\\n.jj jj-circle-c100 .m100.p69 .slice,\\n.jj jj-circle-c100 .m100.p70 .slice,\\n.jj jj-circle-c100 .m100.p71 .slice,\\n.jj jj-circle-c100 .m100.p72 .slice,\\n.jj jj-circle-c100 .m100.p73 .slice,\\n.jj jj-circle-c100 .m100.p74 .slice,\\n.jj jj-circle-c100 .m100.p75 .slice,\\n.jj jj-circle-c100 .m100.p76 .slice,\\n.jj jj-circle-c100 .m100.p77 .slice,\\n.jj jj-circle-c100 .m100.p78 .slice,\\n.jj jj-circle-c100 .m100.p79 .slice,\\n.jj jj-circle-c100 .m100.p80 .slice,\\n.jj jj-circle-c100 .m100.p81 .slice,\\n.jj jj-circle-c100 .m100.p82 .slice,\\n.jj jj-circle-c100 .m100.p83 .slice,\\n.jj jj-circle-c100 .m100.p84 .slice,\\n.jj jj-circle-c100 .m100.p85 .slice,\\n.jj jj-circle-c100 .m100.p86 .slice,\\n.jj jj-circle-c100 .m100.p87 .slice,\\n.jj jj-circle-c100 .m100.p88 .slice,\\n.jj jj-circle-c100 .m100.p89 .slice,\\n.jj jj-circle-c100 .m100.p90 .slice,\\n.jj jj-circle-c100 .m100.p91 .slice,\\n.jj jj-circle-c100 .m100.p92 .slice,\\n.jj jj-circle-c100 .m100.p93 .slice,\\n.jj jj-circle-c100 .m100.p94 .slice,\\n.jj jj-circle-c100 .m100.p95 .slice,\\n.jj jj-circle-c100 .m100.p96 .slice,\\n.jj jj-circle-c100 .m100.p97 .slice,\\n.jj jj-circle-c100 .m100.p98 .slice,\\n.jj jj-circle-c100 .m100.p99 .slice,\\n.jj jj-circle-c100 .m100.p100 .slice {\\n  clip: rect(auto, auto, auto, auto);\\n}\\n.jj jj-circle-c100 .pie,\\n.jj jj-circle-c100 .m100 .bar,\\n.jj jj-circle-c100 .m100.p51 .fill,\\n.jj jj-circle-c100 .m100.p52 .fill,\\n.jj jj-circle-c100 .m100.p53 .fill,\\n.jj jj-circle-c100 .m100.p54 .fill,\\n.jj jj-circle-c100 .m100.p55 .fill,\\n.jj jj-circle-c100 .m100.p56 .fill,\\n.jj jj-circle-c100 .m100.p57 .fill,\\n.jj jj-circle-c100 .m100.p58 .fill,\\n.jj jj-circle-c100 .m100.p59 .fill,\\n.jj jj-circle-c100 .m100.p60 .fill,\\n.jj jj-circle-c100 .m100.p61 .fill,\\n.jj jj-circle-c100 .m100.p62 .fill,\\n.jj jj-circle-c100 .m100.p63 .fill,\\n.jj jj-circle-c100 .m100.p64 .fill,\\n.jj jj-circle-c100 .m100.p65 .fill,\\n.jj jj-circle-c100 .m100.p66 .fill,\\n.jj jj-circle-c100 .m100.p67 .fill,\\n.jj jj-circle-c100 .m100.p68 .fill,\\n.jj jj-circle-c100 .m100.p69 .fill,\\n.jj jj-circle-c100 .m100.p70 .fill,\\n.jj jj-circle-c100 .m100.p71 .fill,\\n.jj jj-circle-c100 .m100.p72 .fill,\\n.jj jj-circle-c100 .m100.p73 .fill,\\n.jj jj-circle-c100 .m100.p74 .fill,\\n.jj jj-circle-c100 .m100.p75 .fill,\\n.jj jj-circle-c100 .m100.p76 .fill,\\n.jj jj-circle-c100 .m100.p77 .fill,\\n.jj jj-circle-c100 .m100.p78 .fill,\\n.jj jj-circle-c100 .m100.p79 .fill,\\n.jj jj-circle-c100 .m100.p80 .fill,\\n.jj jj-circle-c100 .m100.p81 .fill,\\n.jj jj-circle-c100 .m100.p82 .fill,\\n.jj jj-circle-c100 .m100.p83 .fill,\\n.jj jj-circle-c100 .m100.p84 .fill,\\n.jj jj-circle-c100 .m100.p85 .fill,\\n.jj jj-circle-c100 .m100.p86 .fill,\\n.jj jj-circle-c100 .m100.p87 .fill,\\n.jj jj-circle-c100 .m100.p88 .fill,\\n.jj jj-circle-c100 .m100.p89 .fill,\\n.jj jj-circle-c100 .m100.p90 .fill,\\n.jj jj-circle-c100 .m100.p91 .fill,\\n.jj jj-circle-c100 .m100.p92 .fill,\\n.jj jj-circle-c100 .m100.p93 .fill,\\n.jj jj-circle-c100 .m100.p94 .fill,\\n.jj jj-circle-c100 .m100.p95 .fill,\\n.jj jj-circle-c100 .m100.p96 .fill,\\n.jj jj-circle-c100 .m100.p97 .fill,\\n.jj jj-circle-c100 .m100.p98 .fill,\\n.jj jj-circle-c100 .m100.p99 .fill,\\n.jj jj-circle-c100 .m100.p100 .fill {\\n  position: absolute;\\n  border: 0.08em solid #307bbb;\\n  width: 0.84em;\\n  height: 0.84em;\\n  clip: rect(0em, 0.5em, 1em, 0em);\\n  -webkit-border-radius: 50%;\\n  -moz-border-radius: 50%;\\n  -ms-border-radius: 50%;\\n  -o-border-radius: 50%;\\n  border-radius: 50%;\\n  -webkit-transform: rotate(0deg);\\n  -moz-transform: rotate(0deg);\\n  -ms-transform: rotate(0deg);\\n  -o-transform: rotate(0deg);\\n  transform: rotate(0deg);\\n}\\n.jj jj-circle-c100 .pie-fill,\\n.jj jj-circle-c100 .m100.p51 .bar:after,\\n.jj jj-circle-c100 .m100.p51 .fill,\\n.jj jj-circle-c100 .m100.p52 .bar:after,\\n.jj jj-circle-c100 .m100.p52 .fill,\\n.jj jj-circle-c100 .m100.p53 .bar:after,\\n.jj jj-circle-c100 .m100.p53 .fill,\\n.jj jj-circle-c100 .m100.p54 .bar:after,\\n.jj jj-circle-c100 .m100.p54 .fill,\\n.jj jj-circle-c100 .m100.p55 .bar:after,\\n.jj jj-circle-c100 .m100.p55 .fill,\\n.jj jj-circle-c100 .m100.p56 .bar:after,\\n.jj jj-circle-c100 .m100.p56 .fill,\\n.jj jj-circle-c100 .m100.p57 .bar:after,\\n.jj jj-circle-c100 .m100.p57 .fill,\\n.jj jj-circle-c100 .m100.p58 .bar:after,\\n.jj jj-circle-c100 .m100.p58 .fill,\\n.jj jj-circle-c100 .m100.p59 .bar:after,\\n.jj jj-circle-c100 .m100.p59 .fill,\\n.jj jj-circle-c100 .m100.p60 .bar:after,\\n.jj jj-circle-c100 .m100.p60 .fill,\\n.jj jj-circle-c100 .m100.p61 .bar:after,\\n.jj jj-circle-c100 .m100.p61 .fill,\\n.jj jj-circle-c100 .m100.p62 .bar:after,\\n.jj jj-circle-c100 .m100.p62 .fill,\\n.jj jj-circle-c100 .m100.p63 .bar:after,\\n.jj jj-circle-c100 .m100.p63 .fill,\\n.jj jj-circle-c100 .m100.p64 .bar:after,\\n.jj jj-circle-c100 .m100.p64 .fill,\\n.jj jj-circle-c100 .m100.p65 .bar:after,\\n.jj jj-circle-c100 .m100.p65 .fill,\\n.jj jj-circle-c100 .m100.p66 .bar:after,\\n.jj jj-circle-c100 .m100.p66 .fill,\\n.jj jj-circle-c100 .m100.p67 .bar:after,\\n.jj jj-circle-c100 .m100.p67 .fill,\\n.jj jj-circle-c100 .m100.p68 .bar:after,\\n.jj jj-circle-c100 .m100.p68 .fill,\\n.jj jj-circle-c100 .m100.p69 .bar:after,\\n.jj jj-circle-c100 .m100.p69 .fill,\\n.jj jj-circle-c100 .m100.p70 .bar:after,\\n.jj jj-circle-c100 .m100.p70 .fill,\\n.jj jj-circle-c100 .m100.p71 .bar:after,\\n.jj jj-circle-c100 .m100.p71 .fill,\\n.jj jj-circle-c100 .m100.p72 .bar:after,\\n.jj jj-circle-c100 .m100.p72 .fill,\\n.jj jj-circle-c100 .m100.p73 .bar:after,\\n.jj jj-circle-c100 .m100.p73 .fill,\\n.jj jj-circle-c100 .m100.p74 .bar:after,\\n.jj jj-circle-c100 .m100.p74 .fill,\\n.jj jj-circle-c100 .m100.p75 .bar:after,\\n.jj jj-circle-c100 .m100.p75 .fill,\\n.jj jj-circle-c100 .m100.p76 .bar:after,\\n.jj jj-circle-c100 .m100.p76 .fill,\\n.jj jj-circle-c100 .m100.p77 .bar:after,\\n.jj jj-circle-c100 .m100.p77 .fill,\\n.jj jj-circle-c100 .m100.p78 .bar:after,\\n.jj jj-circle-c100 .m100.p78 .fill,\\n.jj jj-circle-c100 .m100.p79 .bar:after,\\n.jj jj-circle-c100 .m100.p79 .fill,\\n.jj jj-circle-c100 .m100.p80 .bar:after,\\n.jj jj-circle-c100 .m100.p80 .fill,\\n.jj jj-circle-c100 .m100.p81 .bar:after,\\n.jj jj-circle-c100 .m100.p81 .fill,\\n.jj jj-circle-c100 .m100.p82 .bar:after,\\n.jj jj-circle-c100 .m100.p82 .fill,\\n.jj jj-circle-c100 .m100.p83 .bar:after,\\n.jj jj-circle-c100 .m100.p83 .fill,\\n.jj jj-circle-c100 .m100.p84 .bar:after,\\n.jj jj-circle-c100 .m100.p84 .fill,\\n.jj jj-circle-c100 .m100.p85 .bar:after,\\n.jj jj-circle-c100 .m100.p85 .fill,\\n.jj jj-circle-c100 .m100.p86 .bar:after,\\n.jj jj-circle-c100 .m100.p86 .fill,\\n.jj jj-circle-c100 .m100.p87 .bar:after,\\n.jj jj-circle-c100 .m100.p87 .fill,\\n.jj jj-circle-c100 .m100.p88 .bar:after,\\n.jj jj-circle-c100 .m100.p88 .fill,\\n.jj jj-circle-c100 .m100.p89 .bar:after,\\n.jj jj-circle-c100 .m100.p89 .fill,\\n.jj jj-circle-c100 .m100.p90 .bar:after,\\n.jj jj-circle-c100 .m100.p90 .fill,\\n.jj jj-circle-c100 .m100.p91 .bar:after,\\n.jj jj-circle-c100 .m100.p91 .fill,\\n.jj jj-circle-c100 .m100.p92 .bar:after,\\n.jj jj-circle-c100 .m100.p92 .fill,\\n.jj jj-circle-c100 .m100.p93 .bar:after,\\n.jj jj-circle-c100 .m100.p93 .fill,\\n.jj jj-circle-c100 .m100.p94 .bar:after,\\n.jj jj-circle-c100 .m100.p94 .fill,\\n.jj jj-circle-c100 .m100.p95 .bar:after,\\n.jj jj-circle-c100 .m100.p95 .fill,\\n.jj jj-circle-c100 .m100.p96 .bar:after,\\n.jj jj-circle-c100 .m100.p96 .fill,\\n.jj jj-circle-c100 .m100.p97 .bar:after,\\n.jj jj-circle-c100 .m100.p97 .fill,\\n.jj jj-circle-c100 .m100.p98 .bar:after,\\n.jj jj-circle-c100 .m100.p98 .fill,\\n.jj jj-circle-c100 .m100.p99 .bar:after,\\n.jj jj-circle-c100 .m100.p99 .fill,\\n.jj jj-circle-c100 .m100.p100 .bar:after,\\n.jj jj-circle-c100 .m100.p100 .fill {\\n  -webkit-transform: rotate(180deg);\\n  -moz-transform: rotate(180deg);\\n  -ms-transform: rotate(180deg);\\n  -o-transform: rotate(180deg);\\n  transform: rotate(180deg);\\n}\\n.jj jj-circle-c100 .m100 {\\n  position: relative;\\n  display: inline-block;\\n  font-size: 120px;\\n  width: 1em;\\n  height: 1em;\\n  -webkit-border-radius: 50%;\\n  -moz-border-radius: 50%;\\n  -ms-border-radius: 50%;\\n  -o-border-radius: 50%;\\n  border-radius: 50%;\\n  background-color: #cccccc;\\n}\\n.jj jj-circle-c100 .m100 *,\\n.jj jj-circle-c100 .m100 *:before,\\n.jj jj-circle-c100 .m100 *:after {\\n  -webkit-box-sizing: content-box;\\n  -moz-box-sizing: content-box;\\n  box-sizing: content-box;\\n}\\n.jj jj-circle-c100 .m100.center {\\n  float: none;\\n  margin: 0 auto;\\n}\\n.jj jj-circle-c100 .m100.big {\\n  font-size: 240px;\\n}\\n.jj jj-circle-c100 .m100.small {\\n  font-size: 80px;\\n}\\n.jj jj-circle-c100 .m100 > span {\\n  position: absolute;\\n  width: 100%;\\n  display: inline-block;\\n  z-index: 1;\\n  left: 0;\\n  transform: translate(0%, 30%);\\n  font-size: 0.2em;\\n  color: #cccccc;\\n  text-align: center;\\n  white-space: nowrap;\\n  -webkit-transition-property: all;\\n  -moz-transition-property: all;\\n  -o-transition-property: all;\\n  transition-property: all;\\n  -webkit-transition-duration: 0.2s;\\n  -moz-transition-duration: 0.2s;\\n  -o-transition-duration: 0.2s;\\n  transition-duration: 0.2s;\\n  -webkit-transition-timing-function: ease-out;\\n  -moz-transition-timing-function: ease-out;\\n  -o-transition-timing-function: ease-out;\\n  transition-timing-function: ease-out;\\n}\\n.jj jj-circle-c100 .m100 > span > p.title {\\n  font-size: 0.5em;\\n}\\n.jj jj-circle-c100 .m100:after {\\n  position: absolute;\\n  top: 0.08em;\\n  left: 0.08em;\\n  display: block;\\n  content: \\\" \\\";\\n  -webkit-border-radius: 50%;\\n  -moz-border-radius: 50%;\\n  -ms-border-radius: 50%;\\n  -o-border-radius: 50%;\\n  border-radius: 50%;\\n  background-color: whitesmoke;\\n  width: 0.84em;\\n  height: 0.84em;\\n  -webkit-transition-property: all;\\n  -moz-transition-property: all;\\n  -o-transition-property: all;\\n  transition-property: all;\\n  -webkit-transition-duration: 0.2s;\\n  -moz-transition-duration: 0.2s;\\n  -o-transition-duration: 0.2s;\\n  transition-duration: 0.2s;\\n  -webkit-transition-timing-function: ease-in;\\n  -moz-transition-timing-function: ease-in;\\n  -o-transition-timing-function: ease-in;\\n  transition-timing-function: ease-in;\\n}\\n.jj jj-circle-c100 .m100 .slice {\\n  position: absolute;\\n  width: 1em;\\n  height: 1em;\\n  clip: rect(0em, 1em, 1em, 0.5em);\\n}\\n.jj jj-circle-c100 .m100.p1 .bar {\\n  -webkit-transform: rotate(3.6deg);\\n  -moz-transform: rotate(3.6deg);\\n  -ms-transform: rotate(3.6deg);\\n  -o-transform: rotate(3.6deg);\\n  transform: rotate(3.6deg);\\n}\\n.jj jj-circle-c100 .m100.p2 .bar {\\n  -webkit-transform: rotate(7.2deg);\\n  -moz-transform: rotate(7.2deg);\\n  -ms-transform: rotate(7.2deg);\\n  -o-transform: rotate(7.2deg);\\n  transform: rotate(7.2deg);\\n}\\n.jj jj-circle-c100 .m100.p3 .bar {\\n  -webkit-transform: rotate(10.8deg);\\n  -moz-transform: rotate(10.8deg);\\n  -ms-transform: rotate(10.8deg);\\n  -o-transform: rotate(10.8deg);\\n  transform: rotate(10.8deg);\\n}\\n.jj jj-circle-c100 .m100.p4 .bar {\\n  -webkit-transform: rotate(14.4deg);\\n  -moz-transform: rotate(14.4deg);\\n  -ms-transform: rotate(14.4deg);\\n  -o-transform: rotate(14.4deg);\\n  transform: rotate(14.4deg);\\n}\\n.jj jj-circle-c100 .m100.p5 .bar {\\n  -webkit-transform: rotate(18deg);\\n  -moz-transform: rotate(18deg);\\n  -ms-transform: rotate(18deg);\\n  -o-transform: rotate(18deg);\\n  transform: rotate(18deg);\\n}\\n.jj jj-circle-c100 .m100.p6 .bar {\\n  -webkit-transform: rotate(21.6deg);\\n  -moz-transform: rotate(21.6deg);\\n  -ms-transform: rotate(21.6deg);\\n  -o-transform: rotate(21.6deg);\\n  transform: rotate(21.6deg);\\n}\\n.jj jj-circle-c100 .m100.p7 .bar {\\n  -webkit-transform: rotate(25.2deg);\\n  -moz-transform: rotate(25.2deg);\\n  -ms-transform: rotate(25.2deg);\\n  -o-transform: rotate(25.2deg);\\n  transform: rotate(25.2deg);\\n}\\n.jj jj-circle-c100 .m100.p8 .bar {\\n  -webkit-transform: rotate(28.8deg);\\n  -moz-transform: rotate(28.8deg);\\n  -ms-transform: rotate(28.8deg);\\n  -o-transform: rotate(28.8deg);\\n  transform: rotate(28.8deg);\\n}\\n.jj jj-circle-c100 .m100.p9 .bar {\\n  -webkit-transform: rotate(32.4deg);\\n  -moz-transform: rotate(32.4deg);\\n  -ms-transform: rotate(32.4deg);\\n  -o-transform: rotate(32.4deg);\\n  transform: rotate(32.4deg);\\n}\\n.jj jj-circle-c100 .m100.p10 .bar {\\n  -webkit-transform: rotate(36deg);\\n  -moz-transform: rotate(36deg);\\n  -ms-transform: rotate(36deg);\\n  -o-transform: rotate(36deg);\\n  transform: rotate(36deg);\\n}\\n.jj jj-circle-c100 .m100.p11 .bar {\\n  -webkit-transform: rotate(39.6deg);\\n  -moz-transform: rotate(39.6deg);\\n  -ms-transform: rotate(39.6deg);\\n  -o-transform: rotate(39.6deg);\\n  transform: rotate(39.6deg);\\n}\\n.jj jj-circle-c100 .m100.p12 .bar {\\n  -webkit-transform: rotate(43.2deg);\\n  -moz-transform: rotate(43.2deg);\\n  -ms-transform: rotate(43.2deg);\\n  -o-transform: rotate(43.2deg);\\n  transform: rotate(43.2deg);\\n}\\n.jj jj-circle-c100 .m100.p13 .bar {\\n  -webkit-transform: rotate(46.8deg);\\n  -moz-transform: rotate(46.8deg);\\n  -ms-transform: rotate(46.8deg);\\n  -o-transform: rotate(46.8deg);\\n  transform: rotate(46.8deg);\\n}\\n.jj jj-circle-c100 .m100.p14 .bar {\\n  -webkit-transform: rotate(50.4deg);\\n  -moz-transform: rotate(50.4deg);\\n  -ms-transform: rotate(50.4deg);\\n  -o-transform: rotate(50.4deg);\\n  transform: rotate(50.4deg);\\n}\\n.jj jj-circle-c100 .m100.p15 .bar {\\n  -webkit-transform: rotate(54deg);\\n  -moz-transform: rotate(54deg);\\n  -ms-transform: rotate(54deg);\\n  -o-transform: rotate(54deg);\\n  transform: rotate(54deg);\\n}\\n.jj jj-circle-c100 .m100.p16 .bar {\\n  -webkit-transform: rotate(57.6deg);\\n  -moz-transform: rotate(57.6deg);\\n  -ms-transform: rotate(57.6deg);\\n  -o-transform: rotate(57.6deg);\\n  transform: rotate(57.6deg);\\n}\\n.jj jj-circle-c100 .m100.p17 .bar {\\n  -webkit-transform: rotate(61.2deg);\\n  -moz-transform: rotate(61.2deg);\\n  -ms-transform: rotate(61.2deg);\\n  -o-transform: rotate(61.2deg);\\n  transform: rotate(61.2deg);\\n}\\n.jj jj-circle-c100 .m100.p18 .bar {\\n  -webkit-transform: rotate(64.8deg);\\n  -moz-transform: rotate(64.8deg);\\n  -ms-transform: rotate(64.8deg);\\n  -o-transform: rotate(64.8deg);\\n  transform: rotate(64.8deg);\\n}\\n.jj jj-circle-c100 .m100.p19 .bar {\\n  -webkit-transform: rotate(68.4deg);\\n  -moz-transform: rotate(68.4deg);\\n  -ms-transform: rotate(68.4deg);\\n  -o-transform: rotate(68.4deg);\\n  transform: rotate(68.4deg);\\n}\\n.jj jj-circle-c100 .m100.p20 .bar {\\n  -webkit-transform: rotate(72deg);\\n  -moz-transform: rotate(72deg);\\n  -ms-transform: rotate(72deg);\\n  -o-transform: rotate(72deg);\\n  transform: rotate(72deg);\\n}\\n.jj jj-circle-c100 .m100.p21 .bar {\\n  -webkit-transform: rotate(75.6deg);\\n  -moz-transform: rotate(75.6deg);\\n  -ms-transform: rotate(75.6deg);\\n  -o-transform: rotate(75.6deg);\\n  transform: rotate(75.6deg);\\n}\\n.jj jj-circle-c100 .m100.p22 .bar {\\n  -webkit-transform: rotate(79.2deg);\\n  -moz-transform: rotate(79.2deg);\\n  -ms-transform: rotate(79.2deg);\\n  -o-transform: rotate(79.2deg);\\n  transform: rotate(79.2deg);\\n}\\n.jj jj-circle-c100 .m100.p23 .bar {\\n  -webkit-transform: rotate(82.8deg);\\n  -moz-transform: rotate(82.8deg);\\n  -ms-transform: rotate(82.8deg);\\n  -o-transform: rotate(82.8deg);\\n  transform: rotate(82.8deg);\\n}\\n.jj jj-circle-c100 .m100.p24 .bar {\\n  -webkit-transform: rotate(86.4deg);\\n  -moz-transform: rotate(86.4deg);\\n  -ms-transform: rotate(86.4deg);\\n  -o-transform: rotate(86.4deg);\\n  transform: rotate(86.4deg);\\n}\\n.jj jj-circle-c100 .m100.p25 .bar {\\n  -webkit-transform: rotate(90deg);\\n  -moz-transform: rotate(90deg);\\n  -ms-transform: rotate(90deg);\\n  -o-transform: rotate(90deg);\\n  transform: rotate(90deg);\\n}\\n.jj jj-circle-c100 .m100.p26 .bar {\\n  -webkit-transform: rotate(93.6deg);\\n  -moz-transform: rotate(93.6deg);\\n  -ms-transform: rotate(93.6deg);\\n  -o-transform: rotate(93.6deg);\\n  transform: rotate(93.6deg);\\n}\\n.jj jj-circle-c100 .m100.p27 .bar {\\n  -webkit-transform: rotate(97.2deg);\\n  -moz-transform: rotate(97.2deg);\\n  -ms-transform: rotate(97.2deg);\\n  -o-transform: rotate(97.2deg);\\n  transform: rotate(97.2deg);\\n}\\n.jj jj-circle-c100 .m100.p28 .bar {\\n  -webkit-transform: rotate(100.8deg);\\n  -moz-transform: rotate(100.8deg);\\n  -ms-transform: rotate(100.8deg);\\n  -o-transform: rotate(100.8deg);\\n  transform: rotate(100.8deg);\\n}\\n.jj jj-circle-c100 .m100.p29 .bar {\\n  -webkit-transform: rotate(104.4deg);\\n  -moz-transform: rotate(104.4deg);\\n  -ms-transform: rotate(104.4deg);\\n  -o-transform: rotate(104.4deg);\\n  transform: rotate(104.4deg);\\n}\\n.jj jj-circle-c100 .m100.p30 .bar {\\n  -webkit-transform: rotate(108deg);\\n  -moz-transform: rotate(108deg);\\n  -ms-transform: rotate(108deg);\\n  -o-transform: rotate(108deg);\\n  transform: rotate(108deg);\\n}\\n.jj jj-circle-c100 .m100.p31 .bar {\\n  -webkit-transform: rotate(111.6deg);\\n  -moz-transform: rotate(111.6deg);\\n  -ms-transform: rotate(111.6deg);\\n  -o-transform: rotate(111.6deg);\\n  transform: rotate(111.6deg);\\n}\\n.jj jj-circle-c100 .m100.p32 .bar {\\n  -webkit-transform: rotate(115.2deg);\\n  -moz-transform: rotate(115.2deg);\\n  -ms-transform: rotate(115.2deg);\\n  -o-transform: rotate(115.2deg);\\n  transform: rotate(115.2deg);\\n}\\n.jj jj-circle-c100 .m100.p33 .bar {\\n  -webkit-transform: rotate(118.8deg);\\n  -moz-transform: rotate(118.8deg);\\n  -ms-transform: rotate(118.8deg);\\n  -o-transform: rotate(118.8deg);\\n  transform: rotate(118.8deg);\\n}\\n.jj jj-circle-c100 .m100.p34 .bar {\\n  -webkit-transform: rotate(122.4deg);\\n  -moz-transform: rotate(122.4deg);\\n  -ms-transform: rotate(122.4deg);\\n  -o-transform: rotate(122.4deg);\\n  transform: rotate(122.4deg);\\n}\\n.jj jj-circle-c100 .m100.p35 .bar {\\n  -webkit-transform: rotate(126deg);\\n  -moz-transform: rotate(126deg);\\n  -ms-transform: rotate(126deg);\\n  -o-transform: rotate(126deg);\\n  transform: rotate(126deg);\\n}\\n.jj jj-circle-c100 .m100.p36 .bar {\\n  -webkit-transform: rotate(129.6deg);\\n  -moz-transform: rotate(129.6deg);\\n  -ms-transform: rotate(129.6deg);\\n  -o-transform: rotate(129.6deg);\\n  transform: rotate(129.6deg);\\n}\\n.jj jj-circle-c100 .m100.p37 .bar {\\n  -webkit-transform: rotate(133.2deg);\\n  -moz-transform: rotate(133.2deg);\\n  -ms-transform: rotate(133.2deg);\\n  -o-transform: rotate(133.2deg);\\n  transform: rotate(133.2deg);\\n}\\n.jj jj-circle-c100 .m100.p38 .bar {\\n  -webkit-transform: rotate(136.8deg);\\n  -moz-transform: rotate(136.8deg);\\n  -ms-transform: rotate(136.8deg);\\n  -o-transform: rotate(136.8deg);\\n  transform: rotate(136.8deg);\\n}\\n.jj jj-circle-c100 .m100.p39 .bar {\\n  -webkit-transform: rotate(140.4deg);\\n  -moz-transform: rotate(140.4deg);\\n  -ms-transform: rotate(140.4deg);\\n  -o-transform: rotate(140.4deg);\\n  transform: rotate(140.4deg);\\n}\\n.jj jj-circle-c100 .m100.p40 .bar {\\n  -webkit-transform: rotate(144deg);\\n  -moz-transform: rotate(144deg);\\n  -ms-transform: rotate(144deg);\\n  -o-transform: rotate(144deg);\\n  transform: rotate(144deg);\\n}\\n.jj jj-circle-c100 .m100.p41 .bar {\\n  -webkit-transform: rotate(147.6deg);\\n  -moz-transform: rotate(147.6deg);\\n  -ms-transform: rotate(147.6deg);\\n  -o-transform: rotate(147.6deg);\\n  transform: rotate(147.6deg);\\n}\\n.jj jj-circle-c100 .m100.p42 .bar {\\n  -webkit-transform: rotate(151.2deg);\\n  -moz-transform: rotate(151.2deg);\\n  -ms-transform: rotate(151.2deg);\\n  -o-transform: rotate(151.2deg);\\n  transform: rotate(151.2deg);\\n}\\n.jj jj-circle-c100 .m100.p43 .bar {\\n  -webkit-transform: rotate(154.8deg);\\n  -moz-transform: rotate(154.8deg);\\n  -ms-transform: rotate(154.8deg);\\n  -o-transform: rotate(154.8deg);\\n  transform: rotate(154.8deg);\\n}\\n.jj jj-circle-c100 .m100.p44 .bar {\\n  -webkit-transform: rotate(158.4deg);\\n  -moz-transform: rotate(158.4deg);\\n  -ms-transform: rotate(158.4deg);\\n  -o-transform: rotate(158.4deg);\\n  transform: rotate(158.4deg);\\n}\\n.jj jj-circle-c100 .m100.p45 .bar {\\n  -webkit-transform: rotate(162deg);\\n  -moz-transform: rotate(162deg);\\n  -ms-transform: rotate(162deg);\\n  -o-transform: rotate(162deg);\\n  transform: rotate(162deg);\\n}\\n.jj jj-circle-c100 .m100.p46 .bar {\\n  -webkit-transform: rotate(165.6deg);\\n  -moz-transform: rotate(165.6deg);\\n  -ms-transform: rotate(165.6deg);\\n  -o-transform: rotate(165.6deg);\\n  transform: rotate(165.6deg);\\n}\\n.jj jj-circle-c100 .m100.p47 .bar {\\n  -webkit-transform: rotate(169.2deg);\\n  -moz-transform: rotate(169.2deg);\\n  -ms-transform: rotate(169.2deg);\\n  -o-transform: rotate(169.2deg);\\n  transform: rotate(169.2deg);\\n}\\n.jj jj-circle-c100 .m100.p48 .bar {\\n  -webkit-transform: rotate(172.8deg);\\n  -moz-transform: rotate(172.8deg);\\n  -ms-transform: rotate(172.8deg);\\n  -o-transform: rotate(172.8deg);\\n  transform: rotate(172.8deg);\\n}\\n.jj jj-circle-c100 .m100.p49 .bar {\\n  -webkit-transform: rotate(176.4deg);\\n  -moz-transform: rotate(176.4deg);\\n  -ms-transform: rotate(176.4deg);\\n  -o-transform: rotate(176.4deg);\\n  transform: rotate(176.4deg);\\n}\\n.jj jj-circle-c100 .m100.p50 .bar {\\n  -webkit-transform: rotate(180deg);\\n  -moz-transform: rotate(180deg);\\n  -ms-transform: rotate(180deg);\\n  -o-transform: rotate(180deg);\\n  transform: rotate(180deg);\\n}\\n.jj jj-circle-c100 .m100.p51 .bar {\\n  -webkit-transform: rotate(183.6deg);\\n  -moz-transform: rotate(183.6deg);\\n  -ms-transform: rotate(183.6deg);\\n  -o-transform: rotate(183.6deg);\\n  transform: rotate(183.6deg);\\n}\\n.jj jj-circle-c100 .m100.p52 .bar {\\n  -webkit-transform: rotate(187.2deg);\\n  -moz-transform: rotate(187.2deg);\\n  -ms-transform: rotate(187.2deg);\\n  -o-transform: rotate(187.2deg);\\n  transform: rotate(187.2deg);\\n}\\n.jj jj-circle-c100 .m100.p53 .bar {\\n  -webkit-transform: rotate(190.8deg);\\n  -moz-transform: rotate(190.8deg);\\n  -ms-transform: rotate(190.8deg);\\n  -o-transform: rotate(190.8deg);\\n  transform: rotate(190.8deg);\\n}\\n.jj jj-circle-c100 .m100.p54 .bar {\\n  -webkit-transform: rotate(194.4deg);\\n  -moz-transform: rotate(194.4deg);\\n  -ms-transform: rotate(194.4deg);\\n  -o-transform: rotate(194.4deg);\\n  transform: rotate(194.4deg);\\n}\\n.jj jj-circle-c100 .m100.p55 .bar {\\n  -webkit-transform: rotate(198deg);\\n  -moz-transform: rotate(198deg);\\n  -ms-transform: rotate(198deg);\\n  -o-transform: rotate(198deg);\\n  transform: rotate(198deg);\\n}\\n.jj jj-circle-c100 .m100.p56 .bar {\\n  -webkit-transform: rotate(201.6deg);\\n  -moz-transform: rotate(201.6deg);\\n  -ms-transform: rotate(201.6deg);\\n  -o-transform: rotate(201.6deg);\\n  transform: rotate(201.6deg);\\n}\\n.jj jj-circle-c100 .m100.p57 .bar {\\n  -webkit-transform: rotate(205.2deg);\\n  -moz-transform: rotate(205.2deg);\\n  -ms-transform: rotate(205.2deg);\\n  -o-transform: rotate(205.2deg);\\n  transform: rotate(205.2deg);\\n}\\n.jj jj-circle-c100 .m100.p58 .bar {\\n  -webkit-transform: rotate(208.8deg);\\n  -moz-transform: rotate(208.8deg);\\n  -ms-transform: rotate(208.8deg);\\n  -o-transform: rotate(208.8deg);\\n  transform: rotate(208.8deg);\\n}\\n.jj jj-circle-c100 .m100.p59 .bar {\\n  -webkit-transform: rotate(212.4deg);\\n  -moz-transform: rotate(212.4deg);\\n  -ms-transform: rotate(212.4deg);\\n  -o-transform: rotate(212.4deg);\\n  transform: rotate(212.4deg);\\n}\\n.jj jj-circle-c100 .m100.p60 .bar {\\n  -webkit-transform: rotate(216deg);\\n  -moz-transform: rotate(216deg);\\n  -ms-transform: rotate(216deg);\\n  -o-transform: rotate(216deg);\\n  transform: rotate(216deg);\\n}\\n.jj jj-circle-c100 .m100.p61 .bar {\\n  -webkit-transform: rotate(219.6deg);\\n  -moz-transform: rotate(219.6deg);\\n  -ms-transform: rotate(219.6deg);\\n  -o-transform: rotate(219.6deg);\\n  transform: rotate(219.6deg);\\n}\\n.jj jj-circle-c100 .m100.p62 .bar {\\n  -webkit-transform: rotate(223.2deg);\\n  -moz-transform: rotate(223.2deg);\\n  -ms-transform: rotate(223.2deg);\\n  -o-transform: rotate(223.2deg);\\n  transform: rotate(223.2deg);\\n}\\n.jj jj-circle-c100 .m100.p63 .bar {\\n  -webkit-transform: rotate(226.8deg);\\n  -moz-transform: rotate(226.8deg);\\n  -ms-transform: rotate(226.8deg);\\n  -o-transform: rotate(226.8deg);\\n  transform: rotate(226.8deg);\\n}\\n.jj jj-circle-c100 .m100.p64 .bar {\\n  -webkit-transform: rotate(230.4deg);\\n  -moz-transform: rotate(230.4deg);\\n  -ms-transform: rotate(230.4deg);\\n  -o-transform: rotate(230.4deg);\\n  transform: rotate(230.4deg);\\n}\\n.jj jj-circle-c100 .m100.p65 .bar {\\n  -webkit-transform: rotate(234deg);\\n  -moz-transform: rotate(234deg);\\n  -ms-transform: rotate(234deg);\\n  -o-transform: rotate(234deg);\\n  transform: rotate(234deg);\\n}\\n.jj jj-circle-c100 .m100.p66 .bar {\\n  -webkit-transform: rotate(237.6deg);\\n  -moz-transform: rotate(237.6deg);\\n  -ms-transform: rotate(237.6deg);\\n  -o-transform: rotate(237.6deg);\\n  transform: rotate(237.6deg);\\n}\\n.jj jj-circle-c100 .m100.p67 .bar {\\n  -webkit-transform: rotate(241.2deg);\\n  -moz-transform: rotate(241.2deg);\\n  -ms-transform: rotate(241.2deg);\\n  -o-transform: rotate(241.2deg);\\n  transform: rotate(241.2deg);\\n}\\n.jj jj-circle-c100 .m100.p68 .bar {\\n  -webkit-transform: rotate(244.8deg);\\n  -moz-transform: rotate(244.8deg);\\n  -ms-transform: rotate(244.8deg);\\n  -o-transform: rotate(244.8deg);\\n  transform: rotate(244.8deg);\\n}\\n.jj jj-circle-c100 .m100.p69 .bar {\\n  -webkit-transform: rotate(248.4deg);\\n  -moz-transform: rotate(248.4deg);\\n  -ms-transform: rotate(248.4deg);\\n  -o-transform: rotate(248.4deg);\\n  transform: rotate(248.4deg);\\n}\\n.jj jj-circle-c100 .m100.p70 .bar {\\n  -webkit-transform: rotate(252deg);\\n  -moz-transform: rotate(252deg);\\n  -ms-transform: rotate(252deg);\\n  -o-transform: rotate(252deg);\\n  transform: rotate(252deg);\\n}\\n.jj jj-circle-c100 .m100.p71 .bar {\\n  -webkit-transform: rotate(255.6deg);\\n  -moz-transform: rotate(255.6deg);\\n  -ms-transform: rotate(255.6deg);\\n  -o-transform: rotate(255.6deg);\\n  transform: rotate(255.6deg);\\n}\\n.jj jj-circle-c100 .m100.p72 .bar {\\n  -webkit-transform: rotate(259.2deg);\\n  -moz-transform: rotate(259.2deg);\\n  -ms-transform: rotate(259.2deg);\\n  -o-transform: rotate(259.2deg);\\n  transform: rotate(259.2deg);\\n}\\n.jj jj-circle-c100 .m100.p73 .bar {\\n  -webkit-transform: rotate(262.8deg);\\n  -moz-transform: rotate(262.8deg);\\n  -ms-transform: rotate(262.8deg);\\n  -o-transform: rotate(262.8deg);\\n  transform: rotate(262.8deg);\\n}\\n.jj jj-circle-c100 .m100.p74 .bar {\\n  -webkit-transform: rotate(266.4deg);\\n  -moz-transform: rotate(266.4deg);\\n  -ms-transform: rotate(266.4deg);\\n  -o-transform: rotate(266.4deg);\\n  transform: rotate(266.4deg);\\n}\\n.jj jj-circle-c100 .m100.p75 .bar {\\n  -webkit-transform: rotate(270deg);\\n  -moz-transform: rotate(270deg);\\n  -ms-transform: rotate(270deg);\\n  -o-transform: rotate(270deg);\\n  transform: rotate(270deg);\\n}\\n.jj jj-circle-c100 .m100.p76 .bar {\\n  -webkit-transform: rotate(273.6deg);\\n  -moz-transform: rotate(273.6deg);\\n  -ms-transform: rotate(273.6deg);\\n  -o-transform: rotate(273.6deg);\\n  transform: rotate(273.6deg);\\n}\\n.jj jj-circle-c100 .m100.p77 .bar {\\n  -webkit-transform: rotate(277.2deg);\\n  -moz-transform: rotate(277.2deg);\\n  -ms-transform: rotate(277.2deg);\\n  -o-transform: rotate(277.2deg);\\n  transform: rotate(277.2deg);\\n}\\n.jj jj-circle-c100 .m100.p78 .bar {\\n  -webkit-transform: rotate(280.8deg);\\n  -moz-transform: rotate(280.8deg);\\n  -ms-transform: rotate(280.8deg);\\n  -o-transform: rotate(280.8deg);\\n  transform: rotate(280.8deg);\\n}\\n.jj jj-circle-c100 .m100.p79 .bar {\\n  -webkit-transform: rotate(284.4deg);\\n  -moz-transform: rotate(284.4deg);\\n  -ms-transform: rotate(284.4deg);\\n  -o-transform: rotate(284.4deg);\\n  transform: rotate(284.4deg);\\n}\\n.jj jj-circle-c100 .m100.p80 .bar {\\n  -webkit-transform: rotate(288deg);\\n  -moz-transform: rotate(288deg);\\n  -ms-transform: rotate(288deg);\\n  -o-transform: rotate(288deg);\\n  transform: rotate(288deg);\\n}\\n.jj jj-circle-c100 .m100.p81 .bar {\\n  -webkit-transform: rotate(291.6deg);\\n  -moz-transform: rotate(291.6deg);\\n  -ms-transform: rotate(291.6deg);\\n  -o-transform: rotate(291.6deg);\\n  transform: rotate(291.6deg);\\n}\\n.jj jj-circle-c100 .m100.p82 .bar {\\n  -webkit-transform: rotate(295.2deg);\\n  -moz-transform: rotate(295.2deg);\\n  -ms-transform: rotate(295.2deg);\\n  -o-transform: rotate(295.2deg);\\n  transform: rotate(295.2deg);\\n}\\n.jj jj-circle-c100 .m100.p83 .bar {\\n  -webkit-transform: rotate(298.8deg);\\n  -moz-transform: rotate(298.8deg);\\n  -ms-transform: rotate(298.8deg);\\n  -o-transform: rotate(298.8deg);\\n  transform: rotate(298.8deg);\\n}\\n.jj jj-circle-c100 .m100.p84 .bar {\\n  -webkit-transform: rotate(302.4deg);\\n  -moz-transform: rotate(302.4deg);\\n  -ms-transform: rotate(302.4deg);\\n  -o-transform: rotate(302.4deg);\\n  transform: rotate(302.4deg);\\n}\\n.jj jj-circle-c100 .m100.p85 .bar {\\n  -webkit-transform: rotate(306deg);\\n  -moz-transform: rotate(306deg);\\n  -ms-transform: rotate(306deg);\\n  -o-transform: rotate(306deg);\\n  transform: rotate(306deg);\\n}\\n.jj jj-circle-c100 .m100.p86 .bar {\\n  -webkit-transform: rotate(309.6deg);\\n  -moz-transform: rotate(309.6deg);\\n  -ms-transform: rotate(309.6deg);\\n  -o-transform: rotate(309.6deg);\\n  transform: rotate(309.6deg);\\n}\\n.jj jj-circle-c100 .m100.p87 .bar {\\n  -webkit-transform: rotate(313.2deg);\\n  -moz-transform: rotate(313.2deg);\\n  -ms-transform: rotate(313.2deg);\\n  -o-transform: rotate(313.2deg);\\n  transform: rotate(313.2deg);\\n}\\n.jj jj-circle-c100 .m100.p88 .bar {\\n  -webkit-transform: rotate(316.8deg);\\n  -moz-transform: rotate(316.8deg);\\n  -ms-transform: rotate(316.8deg);\\n  -o-transform: rotate(316.8deg);\\n  transform: rotate(316.8deg);\\n}\\n.jj jj-circle-c100 .m100.p89 .bar {\\n  -webkit-transform: rotate(320.4deg);\\n  -moz-transform: rotate(320.4deg);\\n  -ms-transform: rotate(320.4deg);\\n  -o-transform: rotate(320.4deg);\\n  transform: rotate(320.4deg);\\n}\\n.jj jj-circle-c100 .m100.p90 .bar {\\n  -webkit-transform: rotate(324deg);\\n  -moz-transform: rotate(324deg);\\n  -ms-transform: rotate(324deg);\\n  -o-transform: rotate(324deg);\\n  transform: rotate(324deg);\\n}\\n.jj jj-circle-c100 .m100.p91 .bar {\\n  -webkit-transform: rotate(327.6deg);\\n  -moz-transform: rotate(327.6deg);\\n  -ms-transform: rotate(327.6deg);\\n  -o-transform: rotate(327.6deg);\\n  transform: rotate(327.6deg);\\n}\\n.jj jj-circle-c100 .m100.p92 .bar {\\n  -webkit-transform: rotate(331.2deg);\\n  -moz-transform: rotate(331.2deg);\\n  -ms-transform: rotate(331.2deg);\\n  -o-transform: rotate(331.2deg);\\n  transform: rotate(331.2deg);\\n}\\n.jj jj-circle-c100 .m100.p93 .bar {\\n  -webkit-transform: rotate(334.8deg);\\n  -moz-transform: rotate(334.8deg);\\n  -ms-transform: rotate(334.8deg);\\n  -o-transform: rotate(334.8deg);\\n  transform: rotate(334.8deg);\\n}\\n.jj jj-circle-c100 .m100.p94 .bar {\\n  -webkit-transform: rotate(338.4deg);\\n  -moz-transform: rotate(338.4deg);\\n  -ms-transform: rotate(338.4deg);\\n  -o-transform: rotate(338.4deg);\\n  transform: rotate(338.4deg);\\n}\\n.jj jj-circle-c100 .m100.p95 .bar {\\n  -webkit-transform: rotate(342deg);\\n  -moz-transform: rotate(342deg);\\n  -ms-transform: rotate(342deg);\\n  -o-transform: rotate(342deg);\\n  transform: rotate(342deg);\\n}\\n.jj jj-circle-c100 .m100.p96 .bar {\\n  -webkit-transform: rotate(345.6deg);\\n  -moz-transform: rotate(345.6deg);\\n  -ms-transform: rotate(345.6deg);\\n  -o-transform: rotate(345.6deg);\\n  transform: rotate(345.6deg);\\n}\\n.jj jj-circle-c100 .m100.p97 .bar {\\n  -webkit-transform: rotate(349.2deg);\\n  -moz-transform: rotate(349.2deg);\\n  -ms-transform: rotate(349.2deg);\\n  -o-transform: rotate(349.2deg);\\n  transform: rotate(349.2deg);\\n}\\n.jj jj-circle-c100 .m100.p98 .bar {\\n  -webkit-transform: rotate(352.8deg);\\n  -moz-transform: rotate(352.8deg);\\n  -ms-transform: rotate(352.8deg);\\n  -o-transform: rotate(352.8deg);\\n  transform: rotate(352.8deg);\\n}\\n.jj jj-circle-c100 .m100.p99 .bar {\\n  -webkit-transform: rotate(356.4deg);\\n  -moz-transform: rotate(356.4deg);\\n  -ms-transform: rotate(356.4deg);\\n  -o-transform: rotate(356.4deg);\\n  transform: rotate(356.4deg);\\n}\\n.jj jj-circle-c100 .m100.p100 .bar {\\n  -webkit-transform: rotate(360deg);\\n  -moz-transform: rotate(360deg);\\n  -ms-transform: rotate(360deg);\\n  -o-transform: rotate(360deg);\\n  transform: rotate(360deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"1\\\"] .bar {\\n  -webkit-transform: rotate(3.6deg);\\n  -moz-transform: rotate(3.6deg);\\n  -ms-transform: rotate(3.6deg);\\n  -o-transform: rotate(3.6deg);\\n  transform: rotate(3.6deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"2\\\"] .bar {\\n  -webkit-transform: rotate(7.2deg);\\n  -moz-transform: rotate(7.2deg);\\n  -ms-transform: rotate(7.2deg);\\n  -o-transform: rotate(7.2deg);\\n  transform: rotate(7.2deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"3\\\"] .bar {\\n  -webkit-transform: rotate(10.8deg);\\n  -moz-transform: rotate(10.8deg);\\n  -ms-transform: rotate(10.8deg);\\n  -o-transform: rotate(10.8deg);\\n  transform: rotate(10.8deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"4\\\"] .bar {\\n  -webkit-transform: rotate(14.4deg);\\n  -moz-transform: rotate(14.4deg);\\n  -ms-transform: rotate(14.4deg);\\n  -o-transform: rotate(14.4deg);\\n  transform: rotate(14.4deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"5\\\"] .bar {\\n  -webkit-transform: rotate(18deg);\\n  -moz-transform: rotate(18deg);\\n  -ms-transform: rotate(18deg);\\n  -o-transform: rotate(18deg);\\n  transform: rotate(18deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"6\\\"] .bar {\\n  -webkit-transform: rotate(21.6deg);\\n  -moz-transform: rotate(21.6deg);\\n  -ms-transform: rotate(21.6deg);\\n  -o-transform: rotate(21.6deg);\\n  transform: rotate(21.6deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"7\\\"] .bar {\\n  -webkit-transform: rotate(25.2deg);\\n  -moz-transform: rotate(25.2deg);\\n  -ms-transform: rotate(25.2deg);\\n  -o-transform: rotate(25.2deg);\\n  transform: rotate(25.2deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"8\\\"] .bar {\\n  -webkit-transform: rotate(28.8deg);\\n  -moz-transform: rotate(28.8deg);\\n  -ms-transform: rotate(28.8deg);\\n  -o-transform: rotate(28.8deg);\\n  transform: rotate(28.8deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"9\\\"] .bar {\\n  -webkit-transform: rotate(32.4deg);\\n  -moz-transform: rotate(32.4deg);\\n  -ms-transform: rotate(32.4deg);\\n  -o-transform: rotate(32.4deg);\\n  transform: rotate(32.4deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"10\\\"] .bar {\\n  -webkit-transform: rotate(36deg);\\n  -moz-transform: rotate(36deg);\\n  -ms-transform: rotate(36deg);\\n  -o-transform: rotate(36deg);\\n  transform: rotate(36deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"11\\\"] .bar {\\n  -webkit-transform: rotate(39.6deg);\\n  -moz-transform: rotate(39.6deg);\\n  -ms-transform: rotate(39.6deg);\\n  -o-transform: rotate(39.6deg);\\n  transform: rotate(39.6deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"12\\\"] .bar {\\n  -webkit-transform: rotate(43.2deg);\\n  -moz-transform: rotate(43.2deg);\\n  -ms-transform: rotate(43.2deg);\\n  -o-transform: rotate(43.2deg);\\n  transform: rotate(43.2deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"13\\\"] .bar {\\n  -webkit-transform: rotate(46.8deg);\\n  -moz-transform: rotate(46.8deg);\\n  -ms-transform: rotate(46.8deg);\\n  -o-transform: rotate(46.8deg);\\n  transform: rotate(46.8deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"14\\\"] .bar {\\n  -webkit-transform: rotate(50.4deg);\\n  -moz-transform: rotate(50.4deg);\\n  -ms-transform: rotate(50.4deg);\\n  -o-transform: rotate(50.4deg);\\n  transform: rotate(50.4deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"15\\\"] .bar {\\n  -webkit-transform: rotate(54deg);\\n  -moz-transform: rotate(54deg);\\n  -ms-transform: rotate(54deg);\\n  -o-transform: rotate(54deg);\\n  transform: rotate(54deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"16\\\"] .bar {\\n  -webkit-transform: rotate(57.6deg);\\n  -moz-transform: rotate(57.6deg);\\n  -ms-transform: rotate(57.6deg);\\n  -o-transform: rotate(57.6deg);\\n  transform: rotate(57.6deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"17\\\"] .bar {\\n  -webkit-transform: rotate(61.2deg);\\n  -moz-transform: rotate(61.2deg);\\n  -ms-transform: rotate(61.2deg);\\n  -o-transform: rotate(61.2deg);\\n  transform: rotate(61.2deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"18\\\"] .bar {\\n  -webkit-transform: rotate(64.8deg);\\n  -moz-transform: rotate(64.8deg);\\n  -ms-transform: rotate(64.8deg);\\n  -o-transform: rotate(64.8deg);\\n  transform: rotate(64.8deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"19\\\"] .bar {\\n  -webkit-transform: rotate(68.4deg);\\n  -moz-transform: rotate(68.4deg);\\n  -ms-transform: rotate(68.4deg);\\n  -o-transform: rotate(68.4deg);\\n  transform: rotate(68.4deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"20\\\"] .bar {\\n  -webkit-transform: rotate(72deg);\\n  -moz-transform: rotate(72deg);\\n  -ms-transform: rotate(72deg);\\n  -o-transform: rotate(72deg);\\n  transform: rotate(72deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"21\\\"] .bar {\\n  -webkit-transform: rotate(75.6deg);\\n  -moz-transform: rotate(75.6deg);\\n  -ms-transform: rotate(75.6deg);\\n  -o-transform: rotate(75.6deg);\\n  transform: rotate(75.6deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"22\\\"] .bar {\\n  -webkit-transform: rotate(79.2deg);\\n  -moz-transform: rotate(79.2deg);\\n  -ms-transform: rotate(79.2deg);\\n  -o-transform: rotate(79.2deg);\\n  transform: rotate(79.2deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"23\\\"] .bar {\\n  -webkit-transform: rotate(82.8deg);\\n  -moz-transform: rotate(82.8deg);\\n  -ms-transform: rotate(82.8deg);\\n  -o-transform: rotate(82.8deg);\\n  transform: rotate(82.8deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"24\\\"] .bar {\\n  -webkit-transform: rotate(86.4deg);\\n  -moz-transform: rotate(86.4deg);\\n  -ms-transform: rotate(86.4deg);\\n  -o-transform: rotate(86.4deg);\\n  transform: rotate(86.4deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"25\\\"] .bar {\\n  -webkit-transform: rotate(90deg);\\n  -moz-transform: rotate(90deg);\\n  -ms-transform: rotate(90deg);\\n  -o-transform: rotate(90deg);\\n  transform: rotate(90deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"26\\\"] .bar {\\n  -webkit-transform: rotate(93.6deg);\\n  -moz-transform: rotate(93.6deg);\\n  -ms-transform: rotate(93.6deg);\\n  -o-transform: rotate(93.6deg);\\n  transform: rotate(93.6deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"27\\\"] .bar {\\n  -webkit-transform: rotate(97.2deg);\\n  -moz-transform: rotate(97.2deg);\\n  -ms-transform: rotate(97.2deg);\\n  -o-transform: rotate(97.2deg);\\n  transform: rotate(97.2deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"28\\\"] .bar {\\n  -webkit-transform: rotate(100.8deg);\\n  -moz-transform: rotate(100.8deg);\\n  -ms-transform: rotate(100.8deg);\\n  -o-transform: rotate(100.8deg);\\n  transform: rotate(100.8deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"29\\\"] .bar {\\n  -webkit-transform: rotate(104.4deg);\\n  -moz-transform: rotate(104.4deg);\\n  -ms-transform: rotate(104.4deg);\\n  -o-transform: rotate(104.4deg);\\n  transform: rotate(104.4deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"30\\\"] .bar {\\n  -webkit-transform: rotate(108deg);\\n  -moz-transform: rotate(108deg);\\n  -ms-transform: rotate(108deg);\\n  -o-transform: rotate(108deg);\\n  transform: rotate(108deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"31\\\"] .bar {\\n  -webkit-transform: rotate(111.6deg);\\n  -moz-transform: rotate(111.6deg);\\n  -ms-transform: rotate(111.6deg);\\n  -o-transform: rotate(111.6deg);\\n  transform: rotate(111.6deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"32\\\"] .bar {\\n  -webkit-transform: rotate(115.2deg);\\n  -moz-transform: rotate(115.2deg);\\n  -ms-transform: rotate(115.2deg);\\n  -o-transform: rotate(115.2deg);\\n  transform: rotate(115.2deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"33\\\"] .bar {\\n  -webkit-transform: rotate(118.8deg);\\n  -moz-transform: rotate(118.8deg);\\n  -ms-transform: rotate(118.8deg);\\n  -o-transform: rotate(118.8deg);\\n  transform: rotate(118.8deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"34\\\"] .bar {\\n  -webkit-transform: rotate(122.4deg);\\n  -moz-transform: rotate(122.4deg);\\n  -ms-transform: rotate(122.4deg);\\n  -o-transform: rotate(122.4deg);\\n  transform: rotate(122.4deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"35\\\"] .bar {\\n  -webkit-transform: rotate(126deg);\\n  -moz-transform: rotate(126deg);\\n  -ms-transform: rotate(126deg);\\n  -o-transform: rotate(126deg);\\n  transform: rotate(126deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"36\\\"] .bar {\\n  -webkit-transform: rotate(129.6deg);\\n  -moz-transform: rotate(129.6deg);\\n  -ms-transform: rotate(129.6deg);\\n  -o-transform: rotate(129.6deg);\\n  transform: rotate(129.6deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"37\\\"] .bar {\\n  -webkit-transform: rotate(133.2deg);\\n  -moz-transform: rotate(133.2deg);\\n  -ms-transform: rotate(133.2deg);\\n  -o-transform: rotate(133.2deg);\\n  transform: rotate(133.2deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"38\\\"] .bar {\\n  -webkit-transform: rotate(136.8deg);\\n  -moz-transform: rotate(136.8deg);\\n  -ms-transform: rotate(136.8deg);\\n  -o-transform: rotate(136.8deg);\\n  transform: rotate(136.8deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"39\\\"] .bar {\\n  -webkit-transform: rotate(140.4deg);\\n  -moz-transform: rotate(140.4deg);\\n  -ms-transform: rotate(140.4deg);\\n  -o-transform: rotate(140.4deg);\\n  transform: rotate(140.4deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"40\\\"] .bar {\\n  -webkit-transform: rotate(144deg);\\n  -moz-transform: rotate(144deg);\\n  -ms-transform: rotate(144deg);\\n  -o-transform: rotate(144deg);\\n  transform: rotate(144deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"41\\\"] .bar {\\n  -webkit-transform: rotate(147.6deg);\\n  -moz-transform: rotate(147.6deg);\\n  -ms-transform: rotate(147.6deg);\\n  -o-transform: rotate(147.6deg);\\n  transform: rotate(147.6deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"42\\\"] .bar {\\n  -webkit-transform: rotate(151.2deg);\\n  -moz-transform: rotate(151.2deg);\\n  -ms-transform: rotate(151.2deg);\\n  -o-transform: rotate(151.2deg);\\n  transform: rotate(151.2deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"43\\\"] .bar {\\n  -webkit-transform: rotate(154.8deg);\\n  -moz-transform: rotate(154.8deg);\\n  -ms-transform: rotate(154.8deg);\\n  -o-transform: rotate(154.8deg);\\n  transform: rotate(154.8deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"44\\\"] .bar {\\n  -webkit-transform: rotate(158.4deg);\\n  -moz-transform: rotate(158.4deg);\\n  -ms-transform: rotate(158.4deg);\\n  -o-transform: rotate(158.4deg);\\n  transform: rotate(158.4deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"45\\\"] .bar {\\n  -webkit-transform: rotate(162deg);\\n  -moz-transform: rotate(162deg);\\n  -ms-transform: rotate(162deg);\\n  -o-transform: rotate(162deg);\\n  transform: rotate(162deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"46\\\"] .bar {\\n  -webkit-transform: rotate(165.6deg);\\n  -moz-transform: rotate(165.6deg);\\n  -ms-transform: rotate(165.6deg);\\n  -o-transform: rotate(165.6deg);\\n  transform: rotate(165.6deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"47\\\"] .bar {\\n  -webkit-transform: rotate(169.2deg);\\n  -moz-transform: rotate(169.2deg);\\n  -ms-transform: rotate(169.2deg);\\n  -o-transform: rotate(169.2deg);\\n  transform: rotate(169.2deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"48\\\"] .bar {\\n  -webkit-transform: rotate(172.8deg);\\n  -moz-transform: rotate(172.8deg);\\n  -ms-transform: rotate(172.8deg);\\n  -o-transform: rotate(172.8deg);\\n  transform: rotate(172.8deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"49\\\"] .bar {\\n  -webkit-transform: rotate(176.4deg);\\n  -moz-transform: rotate(176.4deg);\\n  -ms-transform: rotate(176.4deg);\\n  -o-transform: rotate(176.4deg);\\n  transform: rotate(176.4deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"50\\\"] .bar {\\n  -webkit-transform: rotate(180deg);\\n  -moz-transform: rotate(180deg);\\n  -ms-transform: rotate(180deg);\\n  -o-transform: rotate(180deg);\\n  transform: rotate(180deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"51\\\"] .bar {\\n  -webkit-transform: rotate(183.6deg);\\n  -moz-transform: rotate(183.6deg);\\n  -ms-transform: rotate(183.6deg);\\n  -o-transform: rotate(183.6deg);\\n  transform: rotate(183.6deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"52\\\"] .bar {\\n  -webkit-transform: rotate(187.2deg);\\n  -moz-transform: rotate(187.2deg);\\n  -ms-transform: rotate(187.2deg);\\n  -o-transform: rotate(187.2deg);\\n  transform: rotate(187.2deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"53\\\"] .bar {\\n  -webkit-transform: rotate(190.8deg);\\n  -moz-transform: rotate(190.8deg);\\n  -ms-transform: rotate(190.8deg);\\n  -o-transform: rotate(190.8deg);\\n  transform: rotate(190.8deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"54\\\"] .bar {\\n  -webkit-transform: rotate(194.4deg);\\n  -moz-transform: rotate(194.4deg);\\n  -ms-transform: rotate(194.4deg);\\n  -o-transform: rotate(194.4deg);\\n  transform: rotate(194.4deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"55\\\"] .bar {\\n  -webkit-transform: rotate(198deg);\\n  -moz-transform: rotate(198deg);\\n  -ms-transform: rotate(198deg);\\n  -o-transform: rotate(198deg);\\n  transform: rotate(198deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"56\\\"] .bar {\\n  -webkit-transform: rotate(201.6deg);\\n  -moz-transform: rotate(201.6deg);\\n  -ms-transform: rotate(201.6deg);\\n  -o-transform: rotate(201.6deg);\\n  transform: rotate(201.6deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"57\\\"] .bar {\\n  -webkit-transform: rotate(205.2deg);\\n  -moz-transform: rotate(205.2deg);\\n  -ms-transform: rotate(205.2deg);\\n  -o-transform: rotate(205.2deg);\\n  transform: rotate(205.2deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"58\\\"] .bar {\\n  -webkit-transform: rotate(208.8deg);\\n  -moz-transform: rotate(208.8deg);\\n  -ms-transform: rotate(208.8deg);\\n  -o-transform: rotate(208.8deg);\\n  transform: rotate(208.8deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"59\\\"] .bar {\\n  -webkit-transform: rotate(212.4deg);\\n  -moz-transform: rotate(212.4deg);\\n  -ms-transform: rotate(212.4deg);\\n  -o-transform: rotate(212.4deg);\\n  transform: rotate(212.4deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"60\\\"] .bar {\\n  -webkit-transform: rotate(216deg);\\n  -moz-transform: rotate(216deg);\\n  -ms-transform: rotate(216deg);\\n  -o-transform: rotate(216deg);\\n  transform: rotate(216deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"61\\\"] .bar {\\n  -webkit-transform: rotate(219.6deg);\\n  -moz-transform: rotate(219.6deg);\\n  -ms-transform: rotate(219.6deg);\\n  -o-transform: rotate(219.6deg);\\n  transform: rotate(219.6deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"62\\\"] .bar {\\n  -webkit-transform: rotate(223.2deg);\\n  -moz-transform: rotate(223.2deg);\\n  -ms-transform: rotate(223.2deg);\\n  -o-transform: rotate(223.2deg);\\n  transform: rotate(223.2deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"63\\\"] .bar {\\n  -webkit-transform: rotate(226.8deg);\\n  -moz-transform: rotate(226.8deg);\\n  -ms-transform: rotate(226.8deg);\\n  -o-transform: rotate(226.8deg);\\n  transform: rotate(226.8deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"64\\\"] .bar {\\n  -webkit-transform: rotate(230.4deg);\\n  -moz-transform: rotate(230.4deg);\\n  -ms-transform: rotate(230.4deg);\\n  -o-transform: rotate(230.4deg);\\n  transform: rotate(230.4deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"65\\\"] .bar {\\n  -webkit-transform: rotate(234deg);\\n  -moz-transform: rotate(234deg);\\n  -ms-transform: rotate(234deg);\\n  -o-transform: rotate(234deg);\\n  transform: rotate(234deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"66\\\"] .bar {\\n  -webkit-transform: rotate(237.6deg);\\n  -moz-transform: rotate(237.6deg);\\n  -ms-transform: rotate(237.6deg);\\n  -o-transform: rotate(237.6deg);\\n  transform: rotate(237.6deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"67\\\"] .bar {\\n  -webkit-transform: rotate(241.2deg);\\n  -moz-transform: rotate(241.2deg);\\n  -ms-transform: rotate(241.2deg);\\n  -o-transform: rotate(241.2deg);\\n  transform: rotate(241.2deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"68\\\"] .bar {\\n  -webkit-transform: rotate(244.8deg);\\n  -moz-transform: rotate(244.8deg);\\n  -ms-transform: rotate(244.8deg);\\n  -o-transform: rotate(244.8deg);\\n  transform: rotate(244.8deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"69\\\"] .bar {\\n  -webkit-transform: rotate(248.4deg);\\n  -moz-transform: rotate(248.4deg);\\n  -ms-transform: rotate(248.4deg);\\n  -o-transform: rotate(248.4deg);\\n  transform: rotate(248.4deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"70\\\"] .bar {\\n  -webkit-transform: rotate(252deg);\\n  -moz-transform: rotate(252deg);\\n  -ms-transform: rotate(252deg);\\n  -o-transform: rotate(252deg);\\n  transform: rotate(252deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"71\\\"] .bar {\\n  -webkit-transform: rotate(255.6deg);\\n  -moz-transform: rotate(255.6deg);\\n  -ms-transform: rotate(255.6deg);\\n  -o-transform: rotate(255.6deg);\\n  transform: rotate(255.6deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"72\\\"] .bar {\\n  -webkit-transform: rotate(259.2deg);\\n  -moz-transform: rotate(259.2deg);\\n  -ms-transform: rotate(259.2deg);\\n  -o-transform: rotate(259.2deg);\\n  transform: rotate(259.2deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"73\\\"] .bar {\\n  -webkit-transform: rotate(262.8deg);\\n  -moz-transform: rotate(262.8deg);\\n  -ms-transform: rotate(262.8deg);\\n  -o-transform: rotate(262.8deg);\\n  transform: rotate(262.8deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"74\\\"] .bar {\\n  -webkit-transform: rotate(266.4deg);\\n  -moz-transform: rotate(266.4deg);\\n  -ms-transform: rotate(266.4deg);\\n  -o-transform: rotate(266.4deg);\\n  transform: rotate(266.4deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"75\\\"] .bar {\\n  -webkit-transform: rotate(270deg);\\n  -moz-transform: rotate(270deg);\\n  -ms-transform: rotate(270deg);\\n  -o-transform: rotate(270deg);\\n  transform: rotate(270deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"76\\\"] .bar {\\n  -webkit-transform: rotate(273.6deg);\\n  -moz-transform: rotate(273.6deg);\\n  -ms-transform: rotate(273.6deg);\\n  -o-transform: rotate(273.6deg);\\n  transform: rotate(273.6deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"77\\\"] .bar {\\n  -webkit-transform: rotate(277.2deg);\\n  -moz-transform: rotate(277.2deg);\\n  -ms-transform: rotate(277.2deg);\\n  -o-transform: rotate(277.2deg);\\n  transform: rotate(277.2deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"78\\\"] .bar {\\n  -webkit-transform: rotate(280.8deg);\\n  -moz-transform: rotate(280.8deg);\\n  -ms-transform: rotate(280.8deg);\\n  -o-transform: rotate(280.8deg);\\n  transform: rotate(280.8deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"79\\\"] .bar {\\n  -webkit-transform: rotate(284.4deg);\\n  -moz-transform: rotate(284.4deg);\\n  -ms-transform: rotate(284.4deg);\\n  -o-transform: rotate(284.4deg);\\n  transform: rotate(284.4deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"80\\\"] .bar {\\n  -webkit-transform: rotate(288deg);\\n  -moz-transform: rotate(288deg);\\n  -ms-transform: rotate(288deg);\\n  -o-transform: rotate(288deg);\\n  transform: rotate(288deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"81\\\"] .bar {\\n  -webkit-transform: rotate(291.6deg);\\n  -moz-transform: rotate(291.6deg);\\n  -ms-transform: rotate(291.6deg);\\n  -o-transform: rotate(291.6deg);\\n  transform: rotate(291.6deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"82\\\"] .bar {\\n  -webkit-transform: rotate(295.2deg);\\n  -moz-transform: rotate(295.2deg);\\n  -ms-transform: rotate(295.2deg);\\n  -o-transform: rotate(295.2deg);\\n  transform: rotate(295.2deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"83\\\"] .bar {\\n  -webkit-transform: rotate(298.8deg);\\n  -moz-transform: rotate(298.8deg);\\n  -ms-transform: rotate(298.8deg);\\n  -o-transform: rotate(298.8deg);\\n  transform: rotate(298.8deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"84\\\"] .bar {\\n  -webkit-transform: rotate(302.4deg);\\n  -moz-transform: rotate(302.4deg);\\n  -ms-transform: rotate(302.4deg);\\n  -o-transform: rotate(302.4deg);\\n  transform: rotate(302.4deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"85\\\"] .bar {\\n  -webkit-transform: rotate(306deg);\\n  -moz-transform: rotate(306deg);\\n  -ms-transform: rotate(306deg);\\n  -o-transform: rotate(306deg);\\n  transform: rotate(306deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"86\\\"] .bar {\\n  -webkit-transform: rotate(309.6deg);\\n  -moz-transform: rotate(309.6deg);\\n  -ms-transform: rotate(309.6deg);\\n  -o-transform: rotate(309.6deg);\\n  transform: rotate(309.6deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"87\\\"] .bar {\\n  -webkit-transform: rotate(313.2deg);\\n  -moz-transform: rotate(313.2deg);\\n  -ms-transform: rotate(313.2deg);\\n  -o-transform: rotate(313.2deg);\\n  transform: rotate(313.2deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"88\\\"] .bar {\\n  -webkit-transform: rotate(316.8deg);\\n  -moz-transform: rotate(316.8deg);\\n  -ms-transform: rotate(316.8deg);\\n  -o-transform: rotate(316.8deg);\\n  transform: rotate(316.8deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"89\\\"] .bar {\\n  -webkit-transform: rotate(320.4deg);\\n  -moz-transform: rotate(320.4deg);\\n  -ms-transform: rotate(320.4deg);\\n  -o-transform: rotate(320.4deg);\\n  transform: rotate(320.4deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"90\\\"] .bar {\\n  -webkit-transform: rotate(324deg);\\n  -moz-transform: rotate(324deg);\\n  -ms-transform: rotate(324deg);\\n  -o-transform: rotate(324deg);\\n  transform: rotate(324deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"91\\\"] .bar {\\n  -webkit-transform: rotate(327.6deg);\\n  -moz-transform: rotate(327.6deg);\\n  -ms-transform: rotate(327.6deg);\\n  -o-transform: rotate(327.6deg);\\n  transform: rotate(327.6deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"92\\\"] .bar {\\n  -webkit-transform: rotate(331.2deg);\\n  -moz-transform: rotate(331.2deg);\\n  -ms-transform: rotate(331.2deg);\\n  -o-transform: rotate(331.2deg);\\n  transform: rotate(331.2deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"93\\\"] .bar {\\n  -webkit-transform: rotate(334.8deg);\\n  -moz-transform: rotate(334.8deg);\\n  -ms-transform: rotate(334.8deg);\\n  -o-transform: rotate(334.8deg);\\n  transform: rotate(334.8deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"94\\\"] .bar {\\n  -webkit-transform: rotate(338.4deg);\\n  -moz-transform: rotate(338.4deg);\\n  -ms-transform: rotate(338.4deg);\\n  -o-transform: rotate(338.4deg);\\n  transform: rotate(338.4deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"95\\\"] .bar {\\n  -webkit-transform: rotate(342deg);\\n  -moz-transform: rotate(342deg);\\n  -ms-transform: rotate(342deg);\\n  -o-transform: rotate(342deg);\\n  transform: rotate(342deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"96\\\"] .bar {\\n  -webkit-transform: rotate(345.6deg);\\n  -moz-transform: rotate(345.6deg);\\n  -ms-transform: rotate(345.6deg);\\n  -o-transform: rotate(345.6deg);\\n  transform: rotate(345.6deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"97\\\"] .bar {\\n  -webkit-transform: rotate(349.2deg);\\n  -moz-transform: rotate(349.2deg);\\n  -ms-transform: rotate(349.2deg);\\n  -o-transform: rotate(349.2deg);\\n  transform: rotate(349.2deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"98\\\"] .bar {\\n  -webkit-transform: rotate(352.8deg);\\n  -moz-transform: rotate(352.8deg);\\n  -ms-transform: rotate(352.8deg);\\n  -o-transform: rotate(352.8deg);\\n  transform: rotate(352.8deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"99\\\"] .bar {\\n  -webkit-transform: rotate(356.4deg);\\n  -moz-transform: rotate(356.4deg);\\n  -ms-transform: rotate(356.4deg);\\n  -o-transform: rotate(356.4deg);\\n  transform: rotate(356.4deg);\\n}\\n.jj jj-circle-c100 .m100[data-value=\\\"100\\\"] .bar {\\n  -webkit-transform: rotate(360deg);\\n  -moz-transform: rotate(360deg);\\n  -ms-transform: rotate(360deg);\\n  -o-transform: rotate(360deg);\\n  transform: rotate(360deg);\\n}\\n.jj jj-circle-c100 .m100:hover {\\n  cursor: default;\\n}\\n.jj jj-circle-c100 .m100 > span {\\n  font-size: 0.3em;\\n  color: #307bbb;\\n}\\n.jj jj-circle-c100 .m100.dark {\\n  background-color: #777777;\\n}\\n.jj jj-circle-c100 .m100.dark .bar,\\n.jj jj-circle-c100 .m100.dark .fill {\\n  border-color: #c6ff00 !important;\\n}\\n.jj jj-circle-c100 .m100.dark > span {\\n  color: #777777;\\n}\\n.jj jj-circle-c100 .m100.dark:after {\\n  background-color: #666666;\\n}\\n.jj jj-circle-c100 .m100.dark:hover > span {\\n  color: #c6ff00;\\n}\\n.jj jj-circle-c100 .m100.green .bar,\\n.jj jj-circle-c100 .m100.green .fill {\\n  border-color: #4db53c !important;\\n}\\n.jj jj-circle-c100 .m100.green:hover > span {\\n  color: #4db53c;\\n}\\n.jj jj-circle-c100 .m100.green.dark .bar,\\n.jj jj-circle-c100 .m100.green.dark .fill {\\n  border-color: #5fd400 !important;\\n}\\n.jj jj-circle-c100 .m100.green.dark:hover > span {\\n  color: #5fd400;\\n}\\n.jj jj-circle-c100 .m100.orange .bar,\\n.jj jj-circle-c100 .m100.orange .fill {\\n  border-color: #dd9d22 !important;\\n}\\n.jj jj-circle-c100 .m100.orange:hover > span {\\n  color: #dd9d22;\\n}\\n.jj jj-circle-c100 .m100.orange.dark .bar,\\n.jj jj-circle-c100 .m100.orange.dark .fill {\\n  border-color: #e08833 !important;\\n}\\n.jj jj-circle-c100 .m100.orange.dark:hover > span {\\n  color: #e08833;\\n}\\n/* ==JJCircleChart.640.class================ */\\n.jj jj-circlechart {\\n  position: relative;\\n  display: block;\\n  width: 100%;\\n}\\n.jj jj-circlechart .circular-chart {\\n  display: block;\\n  margin: 10px auto;\\n}\\n.jj jj-circlechart .circular-chart .circle-bg {\\n  fill: none;\\n  stroke: #eee;\\n  stroke-width: 3.8;\\n}\\n.jj jj-circlechart .circular-chart .circle {\\n  fill: none;\\n  stroke-width: 2.8;\\n  stroke-linecap: round;\\n  stroke: #4cc790;\\n}\\n.jj jj-circlechart .circular-chart .percentage {\\n  fill: #666;\\n  font-family: sans-serif;\\n  font-size: 0.5em;\\n  text-anchor: middle;\\n}\\n.jj jj-circlechart[data-color='orange'] .circle {\\n  stroke: #ff9f00;\\n}\\n.jj jj-circlechart[data-color='green'] .circle {\\n  stroke: #4cc790;\\n}\\n.jj jj-circlechart[data-color='blue'] .circle {\\n  stroke: #3c9ee5;\\n}\\n/* ==JJFloatChart.640,class================ */\\n.jj jj-float {\\n  display: block;\\n  position: relative;\\n  min-height: 100px;\\n}\\n/* ==JJGauge.640.class================ */\\n.jj jj-gauge {\\n  display: block;\\n  position: relative;\\n  min-width: 100px;\\n  min-height: 50px;\\n}\\n.jj jj-gauge canvas {\\n  width: 100%;\\n}\\n/* ==JJGradientBar.640.class================ */\\n.jj jj-gradient-bar {\\n  position: relative;\\n  display: block;\\n}\\n.jj jj-gradient-bar[data-direction='horizontal'] {\\n  background: -webkit-linear-gradient(left, #008299, #5cd1e5);\\n  background: -moz-linear-gradient(left, #008299, #5cd1e5);\\n  background: -ms-linear-gradient(left, #008299, #5cd1e5);\\n  background: -o-linear-gradient(left, #008299, #5cd1e5);\\n  background: linear-gradient(-90deg, #008299, #5cd1e5);\\n  background-size: 80%;\\n  background-repeat: no-repeat;\\n  color: blue;\\n  text-align: left;\\n  margin-bottom: 1px;\\n  min-height: 1.5em;\\n}\\n.jj jj-gradient-bar[data-direction='horizontal'] t {\\n  position: absolute;\\n  top: 50%;\\n  transform: translateY(-50%);\\n}\\n.jj jj-gradient-bar[data-direction='vertical'] {\\n  background: -webkit-linear-gradient(0deg, #008299, #5cd1e5);\\n  background: -moz-linear-gradient(0deg, #008299, #5cd1e5);\\n  background: -ms-linear-gradient(0deg, #008299, #5cd1e5);\\n  background: -o-linear-gradient(0deg, #008299, #5cd1e5);\\n  background: linear-gradient(-180deg, #008299, #5cd1e5);\\n  background-size: 100% 80%;\\n  background-repeat: no-repeat;\\n  background-position: center bottom;\\n  color: blue;\\n  margin-bottom: 1px;\\n  text-align: center;\\n  padding-top: 10px;\\n}\\n/* ==JJProgressBar.640.class================ */\\n/* ==JJSankey.640.class================ */\\n.jj jj-sankey {\\n  display: block;\\n  position: relative;\\n  width: 800px;\\n  height: 400px;\\n}\\n.jj jj-sankey .link {\\n  fill: none;\\n  stroke: #000;\\n  stroke-opacity: 0.2;\\n}\\n.jj jj-sankey .link:hover {\\n  stroke-opacity: 0.5;\\n}\\n/* ==JJDiagram.640.class================ */\\n.jj jj-diagram {\\n  position: relative;\\n  display: block;\\n  border: 5px solid #ccc;\\n  background-color: white;\\n  height: 100%;\\n  min-height: 300px;\\n  overflow: auto;\\n}\\n.jj jj-diagram .w {\\n  padding: 5px;\\n  position: absolute;\\n  z-index: 4;\\n  border: 1px solid #2e6f9a;\\n  box-shadow: 2px 2px 19px #e0e0e0;\\n  -o-box-shadow: 2px 2px 19px #e0e0e0;\\n  -webkit-box-shadow: 2px 2px 19px #e0e0e0;\\n  -moz-box-shadow: 2px 2px 19px #e0e0e0;\\n  -moz-border-radius: 8px;\\n  border-radius: 8px;\\n  cursor: move;\\n  background-color: var(--basecolor1);\\n  color: var(--text3);\\n  font-size: 11px;\\n  -webkit-transition: background-color 0.25s ease-in;\\n  -moz-transition: background-color 0.25s ease-in;\\n  transition: background-color 0.25s ease-in;\\n}\\n.jj jj-diagram .w:hover {\\n  background-color: var(--basecolor4);\\n  color: var(--text1);\\n}\\n.jj jj-diagram .w:hover .ep {\\n  display: block;\\n}\\n.jj jj-diagram .aLabel {\\n  -webkit-transition: background-color 0.25s ease-in;\\n  -moz-transition: background-color 0.25s ease-in;\\n  transition: background-color 0.25s ease-in;\\n}\\n.jj jj-diagram .aLabel.jtk-hover,\\n.jj jj-diagram .jtk-source-hover,\\n.jj jj-diagram .jtk-target-hover {\\n  background-color: #1e8151;\\n  color: white;\\n}\\n.jj jj-diagram .aLabel {\\n  background-color: white;\\n  opacity: 0.8;\\n  padding: 0.3em;\\n  border-radius: 0.5em;\\n  border: 1px solid #346789;\\n  cursor: pointer;\\n  z-index: 3;\\n}\\n.jj jj-diagram .ep {\\n  display: none;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  width: 1em;\\n  height: 1em;\\n  background-color: orange;\\n  cursor: pointer;\\n  box-shadow: 0 0 2px black;\\n  -webkit-transition: -webkit-box-shadow 0.25s ease-in;\\n  -moz-transition: -moz-box-shadow 0.25s ease-in;\\n  transition: box-shadow 0.25s ease-in;\\n  transform: translate(-50%, -50%);\\n}\\n.jj jj-diagram .ep:hover {\\n  box-shadow: 0 0 6px black;\\n}\\n.jj jj-diagram[data-mode='runtime'] .ep {\\n  display: none !important;\\n}\\n.jj jj-diagram .jtk-connector,\\n.jj jj-diagram .jtk-endpoint {\\n  z-index: 3;\\n}\\n.jj jj-diagram .jtk-connector.selected path,\\n.jj jj-diagram .jtk-endpoint.selected path {\\n  stroke: #e9595b !important;\\n}\\n.jj jj-diagram .jtk-connector.selected path:last-child,\\n.jj jj-diagram .jtk-endpoint.selected path:last-child {\\n  fill: #e9595b !important;\\n}\\n.jj jj-diagram .dragHover {\\n  border: 2px solid orange;\\n}\\n.jj jj-diagram path,\\n.jj jj-diagram .jtk-endpoint {\\n  cursor: pointer;\\n}\\n.jj jj-diagram .group-container {\\n  position: absolute;\\n  width: 200px;\\n  height: 200px;\\n  border-radius: 12px;\\n  background-color: WhiteSmoke;\\n  font-size: 12px;\\n  cursor: move;\\n}\\n.jj jj-diagram .group-container .title {\\n  background-color: #abc1bb;\\n  padding: 0 16px;\\n  font-size: 13px;\\n  line-height: 30px;\\n  border-radius: 10px 10px 0 0;\\n}\\n.jj jj-diagram .group-container ul {\\n  margin-left: 25px;\\n  padding: 0;\\n}\\n.jj jj-diagram .group-container ul li {\\n  list-style-type: circle;\\n  margin-bottom: 7px;\\n}\\n.jj jj-diagram .group-container.collapsed {\\n  height: 40px !important;\\n  overflow: hidden;\\n}\\n.jj jj-diagram .group-container.collapsed > .group-body {\\n  display: none;\\n}\\n.jj jj-diagram .group-container .del,\\n.jj jj-diagram .group-container .node-collapse {\\n  position: absolute;\\n  top: 5px;\\n  right: 5px;\\n  background-color: white;\\n  padding: 1px;\\n  cursor: pointer;\\n  font-size: 13px;\\n  width: 20px;\\n  height: 20px;\\n  border-radius: 50%;\\n  text-align: center;\\n  display: block;\\n}\\n.jj jj-diagram .group-container .del:after {\\n  content: 'X';\\n}\\n.jj jj-diagram .group-container .node-collapse {\\n  right: 29px;\\n  text-align: center;\\n}\\n.jj jj-diagram .group-container .node-collapse:after {\\n  content: '-';\\n}\\n.jj jj-diagram .group-container.collapsed .node-collapse:after {\\n  content: '+';\\n}\\n.jj jj-diagram .group-container .del[delete-all] {\\n  background-color: pink;\\n}\\n.jj jj-diagram .group-container.selected {\\n  opacity: 0.8;\\n}\\n.jj jj-diagram .group-image {\\n  display: flex;\\n  flex-direction: column;\\n  overflow: hidden;\\n  border: 1px solid #ccc;\\n}\\n.jj jj-diagram .group-image > .group-body {\\n  flex-grow: 1;\\n  background-size: cover;\\n  min-height: 100px;\\n  border: 5px solid white;\\n}\\n.jj jj-diagram .image-item img {\\n  width: auto;\\n  height: auto;\\n  border-radius: 0;\\n}\\n.jj jj-diagram .jtk-connector path {\\n  stroke-width: 1;\\n}\\n.jj jj-diagram .jtk-group-collapsed .w,\\n.jj jj-diagram .jtk-group-collapsed ul,\\n.jj jj-diagram .jtk-group-collapsed .container,\\n.jj jj-diagram .jtk-group-collapsed .name {\\n  display: none;\\n}\\n.jj jj-diagram .jtk-drag-hover {\\n  outline: 4px solid cornflowerblue;\\n}\\n.jj jj-diagram .katavorio-ghost-proxy {\\n  outline: 2px solid red;\\n}\\n.jj jj-diagram .w[objtype='table'] {\\n  padding: 0;\\n  overflow: hidden;\\n}\\n.jj jj-diagram .w[objtype='table'] > .table-wrap {\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n}\\n.jj jj-diagram .w[objtype='table'] > .table-wrap > h4 {\\n  flex-grow: 0;\\n}\\n.jj jj-diagram .w[objtype='table'] > .table-wrap > ul {\\n  flex-grow: 1;\\n  overflow: auto;\\n}\\n/* ==JJErdDiagram.640.class================ */\\n.jj jj-erd-diagram {\\n  position: relative;\\n  display: block;\\n  border: 5px solid #ccc;\\n  background-color: white;\\n  height: 100%;\\n  min-height: 300px;\\n  overflow: auto;\\n}\\n.jj jj-erd-diagram .w {\\n  padding: 5px;\\n  position: absolute;\\n  z-index: 4;\\n  border: 1px solid #2e6f9a;\\n  min-width: 100px;\\n  cursor: move;\\n  color: var(--secondary);\\n  font-size: 11px;\\n  -webkit-transition: background-color 0.25s ease-in;\\n  -moz-transition: background-color 0.25s ease-in;\\n  transition: background-color 0.25s ease-in;\\n}\\n.jj jj-erd-diagram .w .list-group-item {\\n  background-color: transparent;\\n}\\n.jj jj-erd-diagram .w > img {\\n  width: 100%;\\n  height: 100%;\\n}\\n.jj jj-erd-diagram .w [data-render=\\\"JJChart\\\"] {\\n  width: 100%;\\n  height: 100%;\\n}\\n.jj jj-erd-diagram .w:hover {\\n  color: var(--text1);\\n  box-shadow: 2px 2px 19px #e0e0e0;\\n  -o-box-shadow: 2px 2px 19px #e0e0e0;\\n  -webkit-box-shadow: 2px 2px 19px #e0e0e0;\\n  -moz-box-shadow: 2px 2px 19px #e0e0e0;\\n  -moz-border-radius: 8px;\\n  border-radius: 8px;\\n}\\n.jj jj-erd-diagram .w:hover .ep {\\n  display: block;\\n}\\n.jj jj-erd-diagram .aLabel {\\n  -webkit-transition: background-color 0.25s ease-in;\\n  -moz-transition: background-color 0.25s ease-in;\\n  transition: background-color 0.25s ease-in;\\n}\\n.jj jj-erd-diagram .aLabel.jtk-hover,\\n.jj jj-erd-diagram .jtk-source-hover,\\n.jj jj-erd-diagram .jtk-target-hover {\\n  background-color: #1e8151;\\n  color: white;\\n}\\n.jj jj-erd-diagram .aLabel {\\n  background-color: white;\\n  opacity: 0.8;\\n  padding: 0.3em;\\n  border-radius: 0.5em;\\n  border: 1px solid #346789;\\n  cursor: pointer;\\n  z-index: 3;\\n}\\n.jj jj-erd-diagram .ep {\\n  display: none;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  width: 1em;\\n  height: 1em;\\n  background-color: orange;\\n  cursor: pointer;\\n  box-shadow: 0 0 2px black;\\n  -webkit-transition: -webkit-box-shadow 0.25s ease-in;\\n  -moz-transition: -moz-box-shadow 0.25s ease-in;\\n  transition: box-shadow 0.25s ease-in;\\n  transform: translate(-50%, -50%);\\n}\\n.jj jj-erd-diagram .ep:hover {\\n  box-shadow: 0 0 6px black;\\n}\\n.jj jj-erd-diagram .jtk-connector,\\n.jj jj-erd-diagram .jtk-endpoint {\\n  z-index: 3;\\n}\\n.jj jj-erd-diagram .jtk-connector.selected path,\\n.jj jj-erd-diagram .jtk-endpoint.selected path {\\n  stroke: #e9595b !important;\\n}\\n.jj jj-erd-diagram .jtk-connector.selected path:last-child,\\n.jj jj-erd-diagram .jtk-endpoint.selected path:last-child {\\n  fill: #e9595b !important;\\n}\\n.jj jj-erd-diagram .dragHover {\\n  border: 2px solid orange;\\n}\\n.jj jj-erd-diagram path,\\n.jj jj-erd-diagram .jtk-endpoint {\\n  cursor: pointer;\\n}\\n.jj jj-erd-diagram .group-container {\\n  position: absolute;\\n  display: flex;\\n  flex-direction: column;\\n  width: 200px;\\n  height: 200px;\\n  border-radius: 12px;\\n  background-color: WhiteSmoke;\\n  font-size: 12px;\\n  cursor: move;\\n}\\n.jj jj-erd-diagram .group-container > .title {\\n  background-color: #ABC1BB;\\n  padding: 0 16px;\\n  font-size: 13px;\\n  line-height: 30px;\\n  border-radius: 10px 10px 0 0;\\n  flex: none;\\n}\\n.jj jj-erd-diagram .group-container > .group-body {\\n  flex-grow: 1;\\n}\\n.jj jj-erd-diagram .group-container ul {\\n  margin-left: 25px;\\n  padding: 0;\\n}\\n.jj jj-erd-diagram .group-container ul li {\\n  list-style-type: circle;\\n  margin-bottom: 7px;\\n}\\n.jj jj-erd-diagram .group-container.collapsed {\\n  height: 40px!important;\\n  overflow: hidden;\\n}\\n.jj jj-erd-diagram .group-container.collapsed > .group-body {\\n  display: none;\\n}\\n.jj jj-erd-diagram .group-container .del,\\n.jj jj-erd-diagram .group-container .node-collapse {\\n  position: absolute;\\n  top: 5px;\\n  right: 5px;\\n  background-color: white;\\n  padding: 1px;\\n  cursor: pointer;\\n  font-size: 13px;\\n  width: 20px;\\n  height: 20px;\\n  border-radius: 50%;\\n  text-align: center;\\n  display: block;\\n}\\n.jj jj-erd-diagram .group-container .del:after {\\n  content: \\\"X\\\";\\n}\\n.jj jj-erd-diagram .group-container .node-collapse {\\n  right: 29px;\\n  text-align: center;\\n}\\n.jj jj-erd-diagram .group-container .node-collapse:after {\\n  content: \\\"-\\\";\\n}\\n.jj jj-erd-diagram .group-container.collapsed .node-collapse:after {\\n  content: \\\"+\\\";\\n}\\n.jj jj-erd-diagram .group-container .del[delete-all] {\\n  background-color: pink;\\n}\\n.jj jj-erd-diagram .group-container.selected {\\n  opacity: 0.8;\\n}\\n.jj jj-erd-diagram .group-image {\\n  display: flex;\\n  flex-direction: column;\\n  overflow: hidden;\\n  border: 1px solid #ccc;\\n}\\n.jj jj-erd-diagram .group-image > .group-body {\\n  flex-grow: 1;\\n  background-size: cover;\\n  min-height: 100px;\\n  border: 5px solid white;\\n}\\n.jj jj-erd-diagram .image-item img {\\n  width: auto;\\n  height: auto;\\n  border-radius: 0;\\n}\\n.jj jj-erd-diagram .jtk-connector path {\\n  stroke-width: 1;\\n}\\n.jj jj-erd-diagram .jtk-group-collapsed .w,\\n.jj jj-erd-diagram .jtk-group-collapsed ul,\\n.jj jj-erd-diagram .jtk-group-collapsed .container,\\n.jj jj-erd-diagram .jtk-group-collapsed .name {\\n  display: none;\\n}\\n.jj jj-erd-diagram .jtk-drag-hover {\\n  outline: 4px solid cornflowerblue;\\n}\\n.jj jj-erd-diagram .katavorio-ghost-proxy {\\n  outline: 2px solid red;\\n}\\n.jj jj-erd-diagram .w[objtype=\\\"table\\\"] {\\n  padding: 0;\\n  overflow: hidden;\\n}\\n.jj jj-erd-diagram .w[objtype=\\\"table\\\"] > .table-wrap {\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n}\\n.jj jj-erd-diagram .w[objtype=\\\"table\\\"] > .table-wrap > h4 {\\n  flex-grow: 0;\\n}\\n.jj jj-erd-diagram .w[objtype=\\\"table\\\"] > .table-wrap > ul {\\n  flex-grow: 1;\\n  overflow: auto;\\n}\\n.jj jj-erd-diagram[data-mode=\\\"runtime\\\"] .group-container .del,\\n.jj jj-erd-diagram[data-mode=\\\"runtime\\\"] .group-container .node-collapse {\\n  display: none;\\n}\\n.jj jj-erd-diagram[data-mode=\\\"runtime\\\"] .ep {\\n  display: none!important;\\n}\\n/* ==JJDiv4box.640.class================ */\\n.jj jj-div4box {\\n  position: relative;\\n  display: block;\\n  height: 100%;\\n  width: 100%;\\n}\\n.jj jj-div4box > .toolbar {\\n  position: relative;\\n  display: block;\\n  height: 30px;\\n}\\n.jj jj-div4box > .box40-warp {\\n  position: absolute;\\n  display: block;\\n  top: 30px;\\n  bottom: 0px;\\n  width: 100%;\\n}\\n.jj jj-div4box > .box40-warp > .box1,\\n.jj jj-div4box > .box40-warp > .box2,\\n.jj jj-div4box > .box40-warp > .box3,\\n.jj jj-div4box > .box40-warp > .box4 {\\n  border: 1px solid #ccc;\\n  position: absolute;\\n  background-color: white;\\n  overflow: hidden;\\n  -webkit-transition: 0.4s;\\n}\\n.jj jj-div4box > .box40-warp > .dragbar-x,\\n.jj jj-div4box > .box40-warp > .dragbar-x2 {\\n  position: absolute;\\n  width: 10px;\\n  height: 100%;\\n  transform: translateX(-5px);\\n  background-color: transparent;\\n  display: none;\\n  z-index: 10;\\n  cursor: w-resize;\\n}\\n.jj jj-div4box > .box40-warp > .dragbar-x:hover,\\n.jj jj-div4box > .box40-warp > .dragbar-x2:hover {\\n  cursor: w-resize;\\n}\\n.jj jj-div4box > .box40-warp > .dragbar-x.starting,\\n.jj jj-div4box > .box40-warp > .dragbar-x2.starting {\\n  cursor: n-resize;\\n  background-color: #ccc;\\n}\\n.jj jj-div4box > .box40-warp > .dragbar-y,\\n.jj jj-div4box > .box40-warp > .dragbar-y2 {\\n  position: absolute;\\n  height: 10px;\\n  transform: translateY(-5px);\\n  width: 100%;\\n  display: none;\\n  background-color: transparent;\\n  z-index: 10;\\n  cursor: n-resize;\\n}\\n.jj jj-div4box > .box40-warp > .dragbar-y:hover,\\n.jj jj-div4box > .box40-warp > .dragbar-y2:hover {\\n  cursor: n-resize;\\n}\\n.jj jj-div4box > .box40-warp > .dragbar-y.starting,\\n.jj jj-div4box > .box40-warp > .dragbar-y2.starting {\\n  cursor: n-resize;\\n  background-color: #ccc;\\n}\\n.jj jj-div4box .btn-group.tabbox {\\n  display: none;\\n}\\n.jj jj-div4box.tr-off .box1,\\n.jj jj-div4box.tr-off .box2,\\n.jj jj-div4box.tr-off .box3,\\n.jj jj-div4box.tr-off .box4 {\\n  -webkit-transition: none;\\n}\\n.jj jj-div4box[view-type=\\\"showTab\\\"] .btn-group.tabbox,\\n.jj jj-div4box[view-type=\\\"showTabH\\\"] .btn-group.tabbox {\\n  display: block;\\n}\\n/* ==JJCodeEditor.640.class================ */\\n.jj jj-code-editor {\\n  display: block;\\n  position: relative;\\n  height: 100%;\\n  min-height: 200px;\\n  overflow: hidden;\\n  border-top: 1px solid #ccc;\\n  border-bottom: 1px solid #ccc;\\n}\\n.jj jj-code-editor:before {\\n  display: table;\\n  content: \\\" \\\";\\n}\\n.jj jj-code-editor:after {\\n  clear: both;\\n}\\n.jj jj-code-editor ul.user-list {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  z-index: 10;\\n}\\n.jj jj-code-editor ul.user-list img {\\n  height: 24px;\\n  width: 24px;\\n  border-radius: 16px;\\n  border: 3px solid #ccc;\\n}\\n.jj jj-code-editor ul.user-list li {\\n  padding: 0;\\n}\\n.jj jj-code-editor .CodeMirror {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  height: auto;\\n  font-family: Consolas;\\n}\\n.jj jj-code-editor .CodeMirror .CodeMirror-lines {\\n  padding-bottom: calc(100% - 20px);\\n}\\n.jj jj-code-editor .CodeMirror div.CodeMirror-cursor {\\n  border-left: 2px solid blue;\\n}\\n.jj jj-code-editor .CodeMirror .CodeMirror-lint-mark-warning {\\n  border-bottom: 2px solid blue;\\n}\\n.jj jj-code-editor .powered-by-firepad {\\n  display: none;\\n}\\n.jj jj-code-editor .CodeMirror-fullscreen {\\n  z-index: 109;\\n}\\n.jj jj-code-editor .firepad .CodeMirror.CodeMirror-fullscreen {\\n  position: fixed;\\n}\\n/* ==JJCodeEditorTern.class================ */\\n/* ==JJHighlight.640.class================ */\\n.jj jj-highlight {\\n  white-space: pre;\\n  font-size: 0.8rem;\\n}\\n.jj jj-highlight table {\\n  white-space: pre;\\n  font-family: Consolas, monospace, monospace !important;\\n  font-size: 0.8rem;\\n}\\n.jj .hljs-ln-numbers {\\n  text-align: right;\\n  border-right: 1px solid #ccc;\\n  padding-right: 5px !important;\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n}\\n.jj .hljs-ln-numbers + * {\\n  padding-left: 5px !important;\\n}\\n/* ==JJSummernote.640.class================ */\\n.jj jj-code-editor {\\n  display: block;\\n  position: relative;\\n  height: 100%;\\n  min-height: 200px;\\n  overflow: hidden;\\n  border-top: 1px solid #ccc;\\n  border-bottom: 1px solid #ccc;\\n}\\n.jj jj-code-editor:before {\\n  display: table;\\n  content: ' ';\\n}\\n.jj jj-code-editor:after {\\n  clear: both;\\n}\\n.jj jj-code-editor ul.user-list {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  z-index: 10;\\n}\\n.jj jj-code-editor ul.user-list img {\\n  height: 24px;\\n  width: 24px;\\n  border-radius: 16px;\\n  border: 3px solid #ccc;\\n}\\n.jj jj-code-editor ul.user-list li {\\n  padding: 0;\\n}\\n.jj jj-code-editor .CodeMirror {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  height: auto;\\n  font-family: Consolas;\\n}\\n.jj jj-code-editor .CodeMirror .CodeMirror-lines {\\n  padding-bottom: calc(100% - 20px);\\n}\\n.jj jj-code-editor .CodeMirror div.CodeMirror-cursor {\\n  border-left: 2px solid blue;\\n}\\n.jj jj-code-editor .CodeMirror .CodeMirror-lint-mark-warning {\\n  border-bottom: 2px solid blue;\\n}\\n.jj jj-code-editor .powered-by-firepad {\\n  display: none;\\n}\\n.jj jj-code-editor .CodeMirror-fullscreen {\\n  z-index: 109;\\n}\\n.jj jj-code-editor .firepad .CodeMirror.CodeMirror-fullscreen {\\n  position: fixed;\\n}\\n/* ==JJFrameViewer.640.class================ */\\n.jj jj-frame-viewer,\\n.jj .jj-frame-viewer {\\n  position: relative;\\n  display: block;\\n  width: 100%;\\n  height: 100%;\\n  border: 5px solid darkgray;\\n  background-color: darkgray;\\n  overflow: hidden;\\n}\\n.jj jj-frame-viewer > .jj-view-toolbar,\\n.jj .jj-frame-viewer > .jj-view-toolbar,\\n.jj jj-frame-viewer > .jj-vhtml-toolbar,\\n.jj .jj-frame-viewer > .jj-vhtml-toolbar {\\n  display: block;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  line-height: 1.75rem;\\n  overflow: hidden;\\n}\\n.jj jj-frame-viewer > .jj-view-toolbar select,\\n.jj .jj-frame-viewer > .jj-view-toolbar select,\\n.jj jj-frame-viewer > .jj-vhtml-toolbar select,\\n.jj .jj-frame-viewer > .jj-vhtml-toolbar select {\\n  width: 10rem;\\n  display: inline-block;\\n  height: auto;\\n  padding: 0.1rem;\\n  min-height: 2rem;\\n}\\n.jj jj-frame-viewer > .jj-view-toolbar label,\\n.jj .jj-frame-viewer > .jj-view-toolbar label,\\n.jj jj-frame-viewer > .jj-vhtml-toolbar label,\\n.jj .jj-frame-viewer > .jj-vhtml-toolbar label {\\n  margin-bottom: 0;\\n}\\n.jj jj-frame-viewer > .jj-view-toolbar .btn *,\\n.jj .jj-frame-viewer > .jj-view-toolbar .btn *,\\n.jj jj-frame-viewer > .jj-vhtml-toolbar .btn *,\\n.jj .jj-frame-viewer > .jj-vhtml-toolbar .btn * {\\n  pointer-events: none;\\n}\\n.jj jj-frame-viewer .item-option-box,\\n.jj .jj-frame-viewer .item-option-box {\\n  text-align: center;\\n  padding: 0.2rem;\\n  background-color: var(--white);\\n  min-height: 2.5rem;\\n}\\n.jj jj-frame-viewer > nav,\\n.jj .jj-frame-viewer > nav {\\n  height: 30px;\\n}\\n.jj jj-frame-viewer > nav ol.breadcrumb,\\n.jj .jj-frame-viewer > nav ol.breadcrumb {\\n  padding: 3px;\\n  margin: 0;\\n}\\n.jj jj-frame-viewer > nav ol.breadcrumb a,\\n.jj .jj-frame-viewer > nav ol.breadcrumb a {\\n  font-size: 0.8rem;\\n}\\n.jj jj-frame-viewer > nav .box-inline,\\n.jj .jj-frame-viewer > nav .box-inline {\\n  display: -webkit-box;\\n  display: -moz-box;\\n  display: -ms-flexbox;\\n  display: -webkit-flex;\\n  display: flex;\\n  flex-flow: row;\\n  width: 100%;\\n  overflow: auto;\\n  -webkit-overflow-scrolling: touch;\\n  -ms-overflow-style: -ms-autohiding-scrollbar;\\n}\\n.jj jj-frame-viewer > nav .box-inline > *,\\n.jj .jj-frame-viewer > nav .box-inline > * {\\n  flex: 0 0 auto;\\n}\\n.jj jj-frame-viewer > nav ::-webkit-scrollbar,\\n.jj .jj-frame-viewer > nav ::-webkit-scrollbar {\\n  width: 8px;\\n  height: 8px;\\n  border: 3px solid #fff;\\n}\\n.jj jj-frame-viewer > nav ::-webkit-scrollbar-button:start:decrement,\\n.jj .jj-frame-viewer > nav ::-webkit-scrollbar-button:start:decrement,\\n.jj jj-frame-viewer > nav ::-webkit-scrollbar-button:end:increment,\\n.jj .jj-frame-viewer > nav ::-webkit-scrollbar-button:end:increment {\\n  display: block;\\n  height: 10px;\\n}\\n.jj jj-frame-viewer > nav ::-webkit-scrollbar-track,\\n.jj .jj-frame-viewer > nav ::-webkit-scrollbar-track {\\n  background: #efefef;\\n  -webkit-border-radius: 10px;\\n  border-radius: 10px;\\n  -webkit-box-shadow: inset 0 0 4px rgba(0, 0, 0, 0.2);\\n}\\n.jj jj-frame-viewer > nav ::-webkit-scrollbar-thumb,\\n.jj .jj-frame-viewer > nav ::-webkit-scrollbar-thumb {\\n  height: 50px;\\n  width: 50px;\\n  background: rgba(0, 0, 0, 0.2);\\n  -webkit-border-radius: 8px;\\n  border-radius: 8px;\\n  -webkit-box-shadow: inset 0 0 4px rgba(0, 0, 0, 0.1);\\n}\\n.jj jj-frame-viewer > .frameView,\\n.jj .jj-frame-viewer > .frameView {\\n  position: relative;\\n  flex-grow: 1;\\n  width: 100%;\\n  overflow: auto;\\n  display: block;\\n  position: absolute;\\n  top: 1.75rem;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n}\\n.jj jj-frame-viewer > .frameView > .iframe-view,\\n.jj .jj-frame-viewer > .frameView > .iframe-view {\\n  position: relative;\\n  border: 0;\\n  height: 100%;\\n  background-color: #fff;\\n  border-radius: 0px;\\n  display: block;\\n  margin: 0 auto;\\n}\\n.jj jj-frame-viewer > .frameView > .iframe-view.ws-full,\\n.jj .jj-frame-viewer > .frameView > .iframe-view.ws-full {\\n  width: 100%;\\n  margin: auto;\\n}\\n.jj jj-frame-viewer > .frameView > .iframe-view.ws-television,\\n.jj .jj-frame-viewer > .frameView > .iframe-view.ws-television {\\n  width: 1200px;\\n  margin: auto;\\n}\\n.jj jj-frame-viewer > .frameView > .iframe-view.ws-desktop,\\n.jj .jj-frame-viewer > .frameView > .iframe-view.ws-desktop {\\n  width: 992px;\\n}\\n.jj jj-frame-viewer > .frameView > .iframe-view.ws-laptop,\\n.jj .jj-frame-viewer > .frameView > .iframe-view.ws-laptop {\\n  width: 768px;\\n}\\n.jj jj-frame-viewer > .frameView > .iframe-view.ws-tablet,\\n.jj .jj-frame-viewer > .frameView > .iframe-view.ws-tablet {\\n  flex-grow: 0;\\n  width: 608px;\\n  height: 720px;\\n  margin: 0 auto;\\n  border: 16px black solid;\\n  border-top-width: 60px;\\n  border-bottom-width: 60px;\\n  border-radius: 36px;\\n  overflow: visible;\\n}\\n.jj jj-frame-viewer > .frameView > .iframe-view.ws-tablet:before,\\n.jj .jj-frame-viewer > .frameView > .iframe-view.ws-tablet:before {\\n  content: '';\\n  display: block;\\n  width: 60px;\\n  height: 10px;\\n  position: absolute;\\n  top: -30px;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  background: #333;\\n  border-radius: 10px;\\n}\\n.jj jj-frame-viewer > .frameView > .iframe-view.ws-tablet:after,\\n.jj .jj-frame-viewer > .frameView > .iframe-view.ws-tablet:after {\\n  content: '';\\n  display: block;\\n  width: 35px;\\n  height: 35px;\\n  position: absolute;\\n  left: 50%;\\n  bottom: -65px;\\n  transform: translate(-50%, -50%);\\n  background: #333;\\n  border-radius: 50%;\\n}\\n.jj jj-frame-viewer > .frameView > .iframe-view.ws-phone,\\n.jj .jj-frame-viewer > .frameView > .iframe-view.ws-phone {\\n  flex-grow: 0;\\n  width: 407px;\\n  height: 800px;\\n  margin: 0 auto;\\n  border: 16px black solid;\\n  border-top-width: 60px;\\n  border-bottom-width: 60px;\\n  border-radius: 36px;\\n  overflow: visible;\\n}\\n.jj jj-frame-viewer > .frameView > .iframe-view.ws-phone:before,\\n.jj .jj-frame-viewer > .frameView > .iframe-view.ws-phone:before {\\n  content: '';\\n  display: block;\\n  width: 60px;\\n  height: 5px;\\n  position: absolute;\\n  top: -30px;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  background: #333;\\n  border-radius: 10px;\\n}\\n.jj jj-frame-viewer > .frameView > .iframe-view.ws-phone:after,\\n.jj .jj-frame-viewer > .frameView > .iframe-view.ws-phone:after {\\n  content: '';\\n  display: block;\\n  width: 35px;\\n  height: 35px;\\n  position: absolute;\\n  left: 50%;\\n  bottom: -65px;\\n  transform: translate(-50%, -50%);\\n  background: #333;\\n  border-radius: 50%;\\n}\\n/* ==JJDynamicGrid.640.class================ */\\n.jj jj-dynamic-grid {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.jj jj-dynamic-grid .table-head-warp {\\n  display: inline-block;\\n  flex-grow: 0;\\n  overflow: hidden;\\n  overflow-y: scroll;\\n  flex: none;\\n  position: relative;\\n}\\n.jj jj-dynamic-grid .table-head-warp::-webkit-scrollbar-button:start:decrement,\\n.jj jj-dynamic-grid .table-head-warp::-webkit-scrollbar-button:end:increment {\\n  height: 0px;\\n}\\n.jj jj-dynamic-grid .table-head-warp::-webkit-scrollbar-track {\\n  background: #efefef;\\n  -webkit-border-radius: 0px !important;\\n  border-radius: 0px !important;\\n  -webkit-box-shadow: none;\\n}\\n.jj jj-dynamic-grid .table-head-warp::-webkit-scrollbar-thumb {\\n  display: none;\\n}\\n.jj jj-dynamic-grid .table-body-warp {\\n  flex-grow: 1;\\n  overflow: auto;\\n  overflow-y: scroll;\\n  margin-top: -1px;\\n  margin-bottom: -5px;\\n  position: relative;\\n}\\n.jj jj-dynamic-grid table {\\n  table-layout: fixed;\\n  width: 100px;\\n  border: 1px solid var(--secondary);\\n  border-collapse: collapse;\\n}\\n.jj jj-dynamic-grid table tbody tr.hover {\\n  background-color: var(--info);\\n  color: var(--white);\\n}\\n.jj jj-dynamic-grid table tbody tr.selected {\\n  background-color: var(--primary);\\n  color: var(--white);\\n}\\n.jj jj-dynamic-grid table tbody tr.selected.hover {\\n  background-color: var(--success);\\n  color: var(--white);\\n}\\n.jj jj-dynamic-grid table thead.sum tr,\\n.jj jj-dynamic-grid table tfoot.sum tr {\\n  background-color: var(--light);\\n  font-weight: bold;\\n}\\n.jj jj-dynamic-grid table th,\\n.jj jj-dynamic-grid table td {\\n  border: 1px solid var(--secondary);\\n  padding: 3px;\\n  font-size: 12px;\\n}\\n.jj jj-dynamic-grid table th {\\n  text-align: center;\\n}\\n.jj jj-dynamic-grid table td {\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n}\\n.jj jj-dynamic-grid table td.num {\\n  text-align: right;\\n}\\n.jj jj-dynamic-grid table.fix-table {\\n  position: absolute;\\n  left: 0px;\\n  top: 0px;\\n  background-color: var(--light);\\n}\\n.jj jj-dynamic-grid table tr.on[group] ~ [level='1'] {\\n  display: none;\\n}\\n/* ==JJGrid.640.class================ */\\n.jj jj-grid {\\n  display: block;\\n  position: relative;\\n}\\n.jj jj-grid table {\\n  table-layout: fixed;\\n  width: 100px;\\n  border-spacing: 0px;\\n  border: 1px solid #cccccc;\\n  margin-bottom: 0px;\\n  border-collapse: separate;\\n  min-width: 100%;\\n  font-size: 0.9rem;\\n}\\n.jj jj-grid table tr {\\n  line-height: 1.5rem;\\n}\\n.jj jj-grid table .sizeEmpty {\\n  width: 100%;\\n  pointer-events: none;\\n}\\n.jj jj-grid table > thead > tr > th {\\n  border-right: 1px solid #b1bcca;\\n  border-bottom: 1px solid #b1bcca;\\n  border: 1px solid #b1bcca;\\n  text-align: center;\\n  font-weight: bold;\\n  padding: 2px;\\n  border-width: 0px 1px 1px 0px;\\n  vertical-align: middle;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  cursor: pointer;\\n  position: relative;\\n}\\n.jj jj-grid table > thead > tr > th.trCheck {\\n  text-align: center;\\n}\\n.jj jj-grid table > thead > tr > th.trCheck > label.trchk {\\n  background: url(/cm/NUSS_UI/image/chk_WF_BgN.png);\\n  width: 14px;\\n  height: 14px;\\n  user-select: none;\\n  background-size: 100% 100%! important;\\n  display: inline-block;\\n  cursor: pointer;\\n}\\n.jj jj-grid table > thead > tr > th.trCheck.checked label.trchk {\\n  background: url(/cm/NUSS_UI/image/chk_WF_btnImage.png) no-repeat 0px 50%;\\n}\\n.jj jj-grid table > thead > tr > th.select,\\n.jj jj-grid table > thead > tr > th.sort-clone {\\n  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #b1bcca), color-stop(100%, #ebf2fc));\\n}\\n.jj jj-grid table > thead > tr > th > label {\\n  line-height: 1;\\n  margin-bottom: 0;\\n}\\n.jj jj-grid table > thead > tr > th[order] .sortIcon {\\n  color: black;\\n}\\n.jj jj-grid table > thead > tr > th .sortIcon {\\n  display: inline-block;\\n  width: 17px;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  position: absolute;\\n  border-left: 1px solid transparent;\\n  background-color: transparent;\\n  vertical-align: middle;\\n  color: transparent;\\n}\\n.jj jj-grid table > thead > tr > th .sortIcon:hover {\\n  border-left: 1px solid #b1bcca;\\n  background-color: ghostwhite;\\n  color: black;\\n  cursor: pointer;\\n}\\n.jj jj-grid table > thead > tr > th .sortIcon i {\\n  pointer-events: none;\\n}\\n.jj jj-grid table > thead > tr > th[order=\\\"asc\\\"] .sortIcon {\\n  color: black;\\n}\\n.jj jj-grid table > thead > tr > th[order=\\\"asc\\\"] .sortIcon i::before {\\n  content: \\\"\\\\F15D\\\";\\n}\\n.jj jj-grid table > thead > tr > th[order=\\\"desc\\\"] .sortIcon {\\n  color: black;\\n}\\n.jj jj-grid table > thead > tr > th[order=\\\"desc\\\"] .sortIcon i::before {\\n  content: \\\"\\\\F15E\\\";\\n}\\n.jj jj-grid table > tbody {\\n  color: var(--dark);\\n}\\n.jj jj-grid table > tbody > tr {\\n  line-height: 28px;\\n}\\n.jj jj-grid table > tbody > tr.selected {\\n  background-color: var(--primary) !important;\\n  color: var(--white) !important;\\n}\\n.jj jj-grid table > tbody > tr.selected a,\\n.jj jj-grid table > tbody > tr.selected label,\\n.jj jj-grid table > tbody > tr.selected select {\\n  font-weight: bold!important;\\n}\\n.jj jj-grid table > tbody > tr.selected:hover {\\n  background-color: #D8F0EE;\\n}\\n.jj jj-grid table > tbody > tr.checked {\\n  font-weight: 600;\\n}\\n.jj jj-grid table > tbody > tr.checked > td.trCheck > i::before {\\n  content: \\\"\\\\F046\\\";\\n}\\n.jj jj-grid table > tbody > tr[_crud_=\\\"C\\\"] {\\n  color: var(--info);\\n}\\n.jj jj-grid table > tbody > tr[_crud_=\\\"U\\\"] {\\n  color: var(--success);\\n  font-style: italic;\\n}\\n.jj jj-grid table > tbody > tr[_crud_=\\\"D\\\"] {\\n  color: var(--danger);\\n  text-decoration: line-through;\\n  font-style: italic;\\n  opacity: 0.8;\\n}\\n.jj jj-grid table > tbody > tr > td {\\n  padding: 1px 3px 0px 3px;\\n  border-bottom: 1px solid #cccccc;\\n  border-right: 1px solid #cccccc;\\n  vertical-align: middle;\\n  text-align: center;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  position: relative;\\n  font-weight: inherit;\\n  color: inherit;\\n}\\n.jj jj-grid table > tbody > tr > td.num,\\n.jj jj-grid table > tbody > tr > td.trCheck {\\n  text-align: center;\\n  vertical-align: middle;\\n}\\n.jj jj-grid table > tbody > tr > td.num *,\\n.jj jj-grid table > tbody > tr > td.trCheck * {\\n  pointer-events: none;\\n}\\n.jj jj-grid table > tbody > tr > td.num i::before,\\n.jj jj-grid table > tbody > tr > td.trCheck i::before {\\n  content: \\\"\\\\F096\\\";\\n}\\n.jj jj-grid table > tbody > tr > td.noti {\\n  background-position: left top;\\n  background-size: 7px;\\n}\\n.jj jj-grid table > tfoot {\\n  background-color: bisque;\\n  border-top: 1px solid #b1bcca;\\n  border-right: 1px solid #b1bcca;\\n  background-color: #f1e5ea;\\n}\\n.jj jj-grid table > tfoot > tr {\\n  line-height: 28px;\\n}\\n.jj jj-grid table > tfoot > tr > td {\\n  padding: 1px 3px 0px 3px;\\n  border-bottom: 1px solid #cccccc;\\n  border-right: 1px solid #cccccc;\\n  vertical-align: middle;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  position: relative;\\n  font-weight: inherit;\\n  background-color: #f1e5ea;\\n}\\n.jj jj-grid > .grid-warp {\\n  position: relative;\\n  top: 0px;\\n  margin-right: 10px;\\n  overflow: auto;\\n}\\n.jj jj-grid.no-scroll > .grid-warp {\\n  margin-right: 0px;\\n  overflow-x: hidden;\\n}\\n.jj jj-grid.no-scroll .sArea {\\n  display: none;\\n}\\n.jj jj-grid.no-scroll-y > .grid-warp {\\n  margin-right: 0px!important;\\n  overflow-y: hidden;\\n}\\n.jj jj-grid.no-scroll-y .sArea {\\n  display: none;\\n}\\n.jj jj-grid > .fix-grid-warp {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  border-right: 0px solid gray;\\n  overflow: hidden;\\n}\\n.jj jj-grid > .fix-grid-warp table {\\n  border-right: 0;\\n  min-width: 1%;\\n  background-color: var(--light);\\n}\\n.jj jj-grid > .size-bar {\\n  position: absolute;\\n  border: 1px solid transparent;\\n  display: none;\\n  width: 5px;\\n  top: 0;\\n  z-index: 10;\\n  cursor: ew-resize;\\n}\\n.jj jj-grid > .size-bar.on {\\n  display: block;\\n}\\n.jj jj-grid > .sArea {\\n  position: absolute;\\n  top: 0;\\n  width: 10px;\\n  right: 1px;\\n  float: right;\\n  border: 1px solid #DDD;\\n  z-index: 100;\\n  height: 100%;\\n  border-width: 1px;\\n  background-color: ghostwhite;\\n  border-radius: 5px;\\n}\\n.jj jj-grid > .sArea > .uScrCur {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  min-height: 30px;\\n  display: block;\\n  border: 1px solid #959595;\\n  background-color: #A7A7A7;\\n  border-radius: 5px;\\n  cursor: ns-resize;\\n}\\n.jj jj-grid.col-sorting {\\n  outline: none;\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  outline: 1px solid blue;\\n}\\n.jj jj-grid.col-sorting .sort-select-item {\\n  display: none;\\n}\\n.jj jj-grid.resizing {\\n  cursor: ew-resize;\\n}\\n.jj jj-grid.resizing .grid-warp,\\n.jj jj-grid.resizing .fix-grid-warp {\\n  pointer-events: none;\\n}\\n.jj jj-grid.resizing > .size-bar {\\n  pointer-events: none;\\n  border-right: 1px solid black;\\n}\\n.jj jj-grid .form-control {\\n  padding: 0px 5px;\\n  height: auto;\\n  width: 100%;\\n  border: 0;\\n}\\n.jj jj-grid button {\\n  padding: 0.1rem 0.5rem;\\n  line-height: 1rem;\\n  display: block;\\n  width: 100%;\\n}\\n.jj jj-grid input[type=\\\"checkbox\\\"] {\\n  border: 2px solid ccc;\\n  margin-top: 0;\\n  margin-right: 0;\\n  width: 20px;\\n  height: 20px;\\n  padding: 3px;\\n}\\n.jj jj-grid.fixed table .sizeEmpty {\\n  width: 0!important;\\n}\\n.jj .data-grid-warp {\\n  overflow: auto;\\n}\\n.jj table.grid560 {\\n  margin-bottom: 10px;\\n  position: relative;\\n}\\n.jj table.grid560.fixed {\\n  table-layout: fixed;\\n}\\n.jj table.grid560.fixed th,\\n.jj table.grid560.fixed td {\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n}\\n.jj table.grid560 table,\\n.jj table.grid560 th,\\n.jj table.grid560 td {\\n  border: 1px solid #BDBDBD;\\n  border-collapse: collapse;\\n}\\n.jj table.grid560 thead {\\n  background-color: #e1eaf8;\\n  background-image: liner-gradient(top, #f4f7fd 0%, #ebf2fc 100%);\\n  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #f4f7fd), color-stop(100%, #ebf2fc));\\n  background-image: -ms-linear-gradient(top, #f4f7fd 0%, #ebf2fc 100%);\\n  background-image: -moz-linear-gradient(top, #f4f7fd 0%, #ebf2fc 100%);\\n}\\n.jj table.grid560 thead tr th {\\n  cursor: pointer;\\n  position: relative;\\n  text-align: center;\\n  border-bottom-width: 1px;\\n}\\n.jj table.grid560 thead tr th:after {\\n  position: absolute;\\n  font: normal normal normal 14px/1 FontAwesome;\\n  font-size: inherit;\\n  text-rendering: auto;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  float: right;\\n  width: 24px;\\n  text-align: center;\\n  right: 2px;\\n  content: \\\"\\\\f0dc\\\";\\n  opacity: 0.2;\\n}\\n.jj table.grid560 thead tr th.asc:after {\\n  content: \\\"\\\\f160\\\";\\n  opacity: 0.6;\\n}\\n.jj table.grid560 thead tr th.desc:after {\\n  content: \\\"\\\\f161\\\";\\n  opacity: 0.6;\\n}\\n.jj table.grid560 thead tr th._select_ {\\n  width: 40px;\\n}\\n.jj table.grid560 thead tr th._rno_ {\\n  width: 40px;\\n}\\n.jj table.grid560 thead tr th._crud_ {\\n  width: 40px;\\n}\\n.jj table.grid560 tbody tr[_crud_=\\\"R\\\"] {\\n  background-color: transparent;\\n}\\n.jj table.grid560 tbody tr[_crud_=\\\"U\\\"] {\\n  background-color: #BCD8F1;\\n}\\n.jj table.grid560 tbody tr[_crud_=\\\"D\\\"] {\\n  background-color: #FAB4B4;\\n}\\n.jj table.grid560 .sortBar {\\n  position: fixed;\\n  border-right: 5px solid transfer;\\n  z-index: 10;\\n  cursor: e-resize;\\n}\\n.jj table.grid560 .sortBar.show {\\n  border-right: 5px solid #FAFAFA;\\n}\\n.jj table.grid560 .sortBar.resize {\\n  border-right: 5px solid #BDBDBD;\\n}\\n.jj table.grid560 td {\\n  vertical-align: middle!important;\\n}\\n.jj table.grid560 td.left {\\n  text-align: left;\\n}\\n.jj table.grid560 td.right {\\n  text-align: right;\\n}\\n.jj table.grid560 td.center {\\n  text-align: center;\\n}\\n.jj table.grid560 td._select_ {\\n  text-align: center;\\n}\\n.jj table.grid560 td._select_:after {\\n  cursor: pointer;\\n  font: normal normal normal 14px/1 FontAwesome;\\n  font-size: 1.2em;\\n  text-rendering: auto;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  text-align: center;\\n  content: \\\"\\\\f096\\\";\\n  opacity: 0.6;\\n}\\n.jj table.grid560 td._select_.selected::after,\\n.jj table.grid560 td._select_.true::after {\\n  content: \\\"\\\\f046\\\";\\n}\\n.jj table.grid570 {\\n  color: #0E3979;\\n  max-width: none;\\n  border-collapse: collapse;\\n  text-align: center;\\n  border-top: 3px solid #307bbb;\\n}\\n.jj table.grid570 th,\\n.jj table.grid570 td {\\n  position: relative;\\n  text-align: center;\\n  vertical-align: middle;\\n  border: 1px solid #B2BAD2;\\n}\\n.jj table.grid570 > thead {\\n  background-color: #e1eaf2;\\n  font-weight: bold;\\n}\\n.jj table.grid570 > thead > tr > th {\\n  border-color: #B2BAD2;\\n  border-width: 1px 1px 1px 1px;\\n  border-style: solid;\\n  font-weight: bold;\\n  color: #0E3979;\\n}\\n.jj table.grid570 > tbody {\\n  background-color: #FFFFFF;\\n}\\n.jj table.grid570 > tbody > tr > th {\\n  background-color: #e1eaf2;\\n  border: 1px solid #B2BAD2;\\n}\\n.jj table.grid570 > tbody > tr > td {\\n  padding: 3px;\\n  border: 0;\\n  font-size: 100%;\\n  vertical-align: middle;\\n  border: 1px solid #B2BAD2;\\n  overflow: hidden;\\n  word-wrap: normal;\\n  word-break: normal;\\n  border-collapse: collapse;\\n}\\n.jj table.grid570 > tbody > tr > td.text-right {\\n  text-align: right;\\n}\\n.jj table.grid570 > tbody > tr > td.text-left {\\n  text-align: left;\\n}\\n.jj table.grid570 > tbody > tr:nth-of-type(odd) {\\n  background-color: #efefef;\\n}\\n.jj table.grid570 > tbody > tr[_crud_=\\\"R\\\"] {\\n  background-color: white;\\n}\\n.jj table.grid570 > tbody > tr[_crud_=\\\"U\\\"] {\\n  background-color: #BCD8F1;\\n}\\n.jj table.grid570 > tbody > tr[_crud_=\\\"D\\\"] {\\n  background-color: #FAB4B4;\\n}\\n.jj table.grid570 > tbody > tr[editable=\\\"false\\\"] td * {\\n  display: none;\\n}\\n.jj table.grid570 > tbody > tr[editable=\\\"true\\\"] {\\n  background-color: inherit;\\n}\\n.jj table.grid570 td input {\\n  width: 100%;\\n  border: 0;\\n}\\n.jj table.grid570 td input[type=\\\"number\\\"] {\\n  text-align: right;\\n}\\n.jj table.nowarp td {\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n}\\n/* ==JJExcel.640.class================ */\\n.jj jj-excel {\\n  position: relative;\\n  display: block;\\n  background-color: white;\\n  border: 1px solid var(--gray);\\n  overflow: auto;\\n  padding: 5px 5px 15px 5px;\\n  min-height: 300px;\\n}\\n.jj jj-excel .excelWrap {\\n  min-height: 300px;\\n}\\n.jj jj-excel .excelWrap:empty:before {\\n  content: \\\"업로드할 파일을 선택하세요\\\";\\n}\\n.jj jj-excel .excelWrap:empty:focus {\\n  border: 1px solid yellow;\\n}\\n.jj jj-excel .excelWrap.win-drag {\\n  background-color: yellow;\\n}\\n.jj jj-excel table {\\n  table-layout: fixed;\\n  border: 1px solid var(--secondary);\\n  border-collapse: collapse;\\n  display: fixed;\\n}\\n.jj jj-excel table th,\\n.jj jj-excel table td {\\n  border: 1px solid var(--secondary);\\n  padding: 3px;\\n  font-size: 12px;\\n  color: black;\\n  min-width: 130px;\\n}\\n.jj jj-excel table th {\\n  text-align: center;\\n  background-color: var(--light);\\n}\\n.jj jj-excel table th input {\\n  width: 60%;\\n}\\n.jj jj-excel table th select {\\n  width: 38%;\\n  padding: 2px 0;\\n}\\n/* ==JJAppGrid.640.class================ */\\n.jj jj-app-grid {\\n  display: block;\\n  position: relative;\\n}\\n.jj jj-app-grid > .grid-toolbar {\\n  display: flex;\\n  -webkit-box-pack: justify!important;\\n  -ms-flex-pack: justify!important;\\n  justify-content: space-between !important;\\n}\\n.jj jj-app-grid table {\\n  table-layout: fixed;\\n  width: 100px;\\n  border-spacing: 0px;\\n  border: 1px solid #cccccc;\\n  margin-bottom: 0px;\\n  border-collapse: separate;\\n  min-width: 100%;\\n  font-size: 0.9rem;\\n}\\n.jj jj-app-grid table tr {\\n  line-height: 1.5rem;\\n}\\n.jj jj-app-grid table .sizeEmpty {\\n  width: 100%;\\n  pointer-events: none;\\n}\\n.jj jj-app-grid table > thead > tr > th,\\n.jj jj-app-grid table > thead > tr > td {\\n  font-weight: bold;\\n  border-right: 1px solid #b1bcca;\\n  border-bottom: 1px solid #b1bcca;\\n  background-color: #e1eaf8;\\n  text-align: center;\\n  color: #393f48;\\n  padding: 2px;\\n  vertical-align: middle;\\n  position: relative;\\n}\\n.jj jj-app-grid table > thead > tr > th.trCheck,\\n.jj jj-app-grid table > thead > tr > td.trCheck {\\n  text-align: center;\\n}\\n.jj jj-app-grid table > thead > tr > th.trCheck > label.trchk,\\n.jj jj-app-grid table > thead > tr > td.trCheck > label.trchk {\\n  background: url(/cm/NUSS_UI/image/chk_WF_BgN.png);\\n  width: 14px;\\n  height: 14px;\\n  user-select: none;\\n  background-size: 100% 100%! important;\\n  display: inline-block;\\n  cursor: pointer;\\n}\\n.jj jj-app-grid table > thead > tr > th.trCheck.checked label.trchk,\\n.jj jj-app-grid table > thead > tr > td.trCheck.checked label.trchk {\\n  background: url(/cm/NUSS_UI/image/chk_WF_btnImage.png) no-repeat 0px 50%;\\n}\\n.jj jj-app-grid table > thead > tr > th.select,\\n.jj jj-app-grid table > thead > tr > td.select,\\n.jj jj-app-grid table > thead > tr > th.sort-clone,\\n.jj jj-app-grid table > thead > tr > td.sort-clone {\\n  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #b1bcca), color-stop(100%, #ebf2fc));\\n}\\n.jj jj-app-grid table > thead > tr > th > label,\\n.jj jj-app-grid table > thead > tr > td > label {\\n  width: 100%;\\n  line-height: 1;\\n  margin-bottom: 0;\\n  font-weight: 500;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n.jj jj-app-grid table > thead > tr > th[order] .sortIcon,\\n.jj jj-app-grid table > thead > tr > td[order] .sortIcon {\\n  color: black;\\n}\\n.jj jj-app-grid table > thead > tr > th .sortIcon,\\n.jj jj-app-grid table > thead > tr > td .sortIcon {\\n  display: inline-block;\\n  width: 17px;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  position: absolute;\\n  border-left: 1px solid transparent;\\n  background-color: transparent;\\n  vertical-align: middle;\\n  color: transparent;\\n}\\n.jj jj-app-grid table > thead > tr > th .sortIcon:hover,\\n.jj jj-app-grid table > thead > tr > td .sortIcon:hover {\\n  border-left: 1px solid #b1bcca;\\n  background-color: ghostwhite;\\n  color: black;\\n  cursor: pointer;\\n}\\n.jj jj-app-grid table > thead > tr > th .sortIcon i,\\n.jj jj-app-grid table > thead > tr > td .sortIcon i {\\n  pointer-events: none;\\n}\\n.jj jj-app-grid table > thead > tr > th[order=\\\"asc\\\"] .sortIcon,\\n.jj jj-app-grid table > thead > tr > td[order=\\\"asc\\\"] .sortIcon {\\n  color: black;\\n}\\n.jj jj-app-grid table > thead > tr > th[order=\\\"asc\\\"] .sortIcon i::before,\\n.jj jj-app-grid table > thead > tr > td[order=\\\"asc\\\"] .sortIcon i::before {\\n  content: \\\"\\\\F15D\\\";\\n}\\n.jj jj-app-grid table > thead > tr > th[order=\\\"desc\\\"] .sortIcon,\\n.jj jj-app-grid table > thead > tr > td[order=\\\"desc\\\"] .sortIcon {\\n  color: black;\\n}\\n.jj jj-app-grid table > thead > tr > th[order=\\\"desc\\\"] .sortIcon i::before,\\n.jj jj-app-grid table > thead > tr > td[order=\\\"desc\\\"] .sortIcon i::before {\\n  content: \\\"\\\\F15E\\\";\\n}\\n.jj jj-app-grid table > thead > tr > td {\\n  font-size: 12px;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n}\\n.jj jj-app-grid table > tbody {\\n  color: var(--dark);\\n}\\n.jj jj-app-grid table > tbody > tr {\\n  line-height: 28px;\\n}\\n.jj jj-app-grid table > tbody > tr.selected {\\n  background-color: var(--primary) !important;\\n  color: var(--white) !important;\\n}\\n.jj jj-app-grid table > tbody > tr.selected a,\\n.jj jj-app-grid table > tbody > tr.selected label,\\n.jj jj-app-grid table > tbody > tr.selected select {\\n  font-weight: bold!important;\\n}\\n.jj jj-app-grid table > tbody > tr.selected:hover {\\n  background-color: #D8F0EE;\\n}\\n.jj jj-app-grid table > tbody > tr.checked {\\n  font-weight: 600;\\n}\\n.jj jj-app-grid table > tbody > tr.checked > td.trCheck > i::before {\\n  content: \\\"\\\\F046\\\";\\n}\\n.jj jj-app-grid table > tbody > tr[_crud_=\\\"C\\\"] {\\n  color: var(--info);\\n}\\n.jj jj-app-grid table > tbody > tr[_crud_=\\\"U\\\"] {\\n  color: var(--success);\\n  font-style: italic;\\n}\\n.jj jj-app-grid table > tbody > tr[_crud_=\\\"D\\\"] {\\n  color: var(--danger);\\n  text-decoration: line-through;\\n  font-style: italic;\\n  opacity: 0.8;\\n}\\n.jj jj-app-grid table > tbody > tr > td {\\n  padding: 1px 3px 0px 3px;\\n  border-bottom: 1px solid #cccccc;\\n  border-right: 1px solid #cccccc;\\n  vertical-align: middle;\\n  text-align: center;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  position: relative;\\n  font-weight: inherit;\\n  color: inherit;\\n}\\n.jj jj-app-grid table > tbody > tr > td.num,\\n.jj jj-app-grid table > tbody > tr > td.trCheck {\\n  text-align: center;\\n  vertical-align: middle;\\n}\\n.jj jj-app-grid table > tbody > tr > td.num *,\\n.jj jj-app-grid table > tbody > tr > td.trCheck * {\\n  pointer-events: none;\\n}\\n.jj jj-app-grid table > tbody > tr > td.num i::before,\\n.jj jj-app-grid table > tbody > tr > td.trCheck i::before {\\n  content: \\\"\\\\F096\\\";\\n}\\n.jj jj-app-grid table > tbody > tr > td.noti {\\n  background-position: left top;\\n  background-size: 7px;\\n}\\n.jj jj-app-grid table > tfoot {\\n  background-color: bisque;\\n  border-top: 1px solid #b1bcca;\\n  border-right: 1px solid #b1bcca;\\n  background-color: #f1e5ea;\\n}\\n.jj jj-app-grid table > tfoot > tr {\\n  line-height: 28px;\\n}\\n.jj jj-app-grid table > tfoot > tr > td {\\n  padding: 1px 3px 0px 3px;\\n  border-bottom: 1px solid #cccccc;\\n  border-right: 1px solid #cccccc;\\n  vertical-align: middle;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  position: relative;\\n  font-weight: inherit;\\n  background-color: #f1e5ea;\\n}\\n.jj jj-app-grid > .grid-warp {\\n  position: relative;\\n  top: 0px;\\n  margin-right: 10px;\\n  overflow: auto;\\n}\\n.jj jj-app-grid.no-scroll > .grid-warp {\\n  margin-right: 0px;\\n  overflow-x: hidden;\\n}\\n.jj jj-app-grid.no-scroll .sArea {\\n  display: none;\\n}\\n.jj jj-app-grid.no-scroll-y > .grid-warp {\\n  margin-right: 0px!important;\\n  overflow-y: hidden;\\n}\\n.jj jj-app-grid.no-scroll-y .sArea {\\n  display: none;\\n}\\n.jj jj-app-grid > .fix-grid-warp {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  border-right: 0px solid gray;\\n  overflow: hidden;\\n  background-color: white;\\n}\\n.jj jj-app-grid > .fix-grid-warp table {\\n  border-right: 0;\\n  min-width: 1%;\\n}\\n.jj jj-app-grid > .size-bar {\\n  position: absolute;\\n  border: 1px solid transparent;\\n  display: none;\\n  width: 5px;\\n  top: 0;\\n  z-index: 10;\\n  cursor: ew-resize;\\n}\\n.jj jj-app-grid > .size-bar.on {\\n  display: block;\\n}\\n.jj jj-app-grid > .sArea {\\n  position: absolute;\\n  top: 0;\\n  width: 10px;\\n  right: 1px;\\n  float: right;\\n  border: 1px solid #DDD;\\n  z-index: 100;\\n  height: 100%;\\n  border-width: 1px;\\n  background-color: ghostwhite;\\n  border-radius: 5px;\\n}\\n.jj jj-app-grid > .sArea > .uScrCur {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  min-height: 30px;\\n  display: block;\\n  border: 1px solid #959595;\\n  background-color: #A7A7A7;\\n  border-radius: 5px;\\n  cursor: ns-resize;\\n}\\n.jj jj-app-grid.col-sorting {\\n  outline: none;\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  outline: 1px solid blue;\\n}\\n.jj jj-app-grid.col-sorting .sort-select-item {\\n  display: none;\\n}\\n.jj jj-app-grid.resizing {\\n  cursor: ew-resize;\\n}\\n.jj jj-app-grid.resizing .grid-warp,\\n.jj jj-app-grid.resizing .fix-grid-warp {\\n  pointer-events: none;\\n}\\n.jj jj-app-grid.resizing > .size-bar {\\n  pointer-events: none;\\n  border-right: 1px solid black;\\n}\\n.jj jj-app-grid .form-control {\\n  padding: 0px 5px;\\n  height: auto;\\n  width: 100%;\\n  border: 0;\\n}\\n.jj jj-app-grid button {\\n  padding: 0.1rem 0.5rem;\\n  line-height: 1rem;\\n  display: block;\\n  width: 100%;\\n}\\n.jj jj-app-grid input[type=\\\"checkbox\\\"] {\\n  border: 2px solid ccc;\\n  margin-top: 0;\\n  margin-right: 0;\\n  width: 20px;\\n  height: 20px;\\n  padding: 3px;\\n}\\n.jj jj-app-grid.fixed table .sizeEmpty {\\n  width: 0!important;\\n}\\n.jj .data-grid-warp {\\n  overflow: auto;\\n}\\n.jj table.grid560 {\\n  margin-bottom: 10px;\\n  position: relative;\\n}\\n.jj table.grid560.fixed {\\n  table-layout: fixed;\\n}\\n.jj table.grid560.fixed th,\\n.jj table.grid560.fixed td {\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n}\\n.jj table.grid560 table,\\n.jj table.grid560 th,\\n.jj table.grid560 td {\\n  border: 1px solid #BDBDBD;\\n  border-collapse: collapse;\\n}\\n.jj table.grid560 thead {\\n  background-color: #e1eaf8;\\n  background-image: liner-gradient(top, #f4f7fd 0%, #ebf2fc 100%);\\n  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #f4f7fd), color-stop(100%, #ebf2fc));\\n  background-image: -ms-linear-gradient(top, #f4f7fd 0%, #ebf2fc 100%);\\n  background-image: -moz-linear-gradient(top, #f4f7fd 0%, #ebf2fc 100%);\\n}\\n.jj table.grid560 thead tr th {\\n  cursor: pointer;\\n  position: relative;\\n  text-align: center;\\n  border-bottom-width: 1px;\\n}\\n.jj table.grid560 thead tr th:after {\\n  position: absolute;\\n  font: normal normal normal 14px/1 FontAwesome;\\n  font-size: inherit;\\n  text-rendering: auto;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  float: right;\\n  width: 24px;\\n  text-align: center;\\n  right: 2px;\\n  content: \\\"\\\\f0dc\\\";\\n  opacity: 0.2;\\n}\\n.jj table.grid560 thead tr th.asc:after {\\n  content: \\\"\\\\f160\\\";\\n  opacity: 0.6;\\n}\\n.jj table.grid560 thead tr th.desc:after {\\n  content: \\\"\\\\f161\\\";\\n  opacity: 0.6;\\n}\\n.jj table.grid560 thead tr th._select_ {\\n  width: 40px;\\n}\\n.jj table.grid560 thead tr th._rno_ {\\n  width: 40px;\\n}\\n.jj table.grid560 thead tr th._crud_ {\\n  width: 40px;\\n}\\n.jj table.grid560 tbody tr[_crud_=\\\"R\\\"] {\\n  background-color: transparent;\\n}\\n.jj table.grid560 tbody tr[_crud_=\\\"U\\\"] {\\n  background-color: #BCD8F1;\\n}\\n.jj table.grid560 tbody tr[_crud_=\\\"D\\\"] {\\n  background-color: #FAB4B4;\\n}\\n.jj table.grid560 .sortBar {\\n  position: fixed;\\n  border-right: 5px solid transfer;\\n  z-index: 10;\\n  cursor: e-resize;\\n}\\n.jj table.grid560 .sortBar.show {\\n  border-right: 5px solid #FAFAFA;\\n}\\n.jj table.grid560 .sortBar.resize {\\n  border-right: 5px solid #BDBDBD;\\n}\\n.jj table.grid560 td {\\n  vertical-align: middle!important;\\n}\\n.jj table.grid560 td.left {\\n  text-align: left;\\n}\\n.jj table.grid560 td.right {\\n  text-align: right;\\n}\\n.jj table.grid560 td.center {\\n  text-align: center;\\n}\\n.jj table.grid560 td._select_ {\\n  text-align: center;\\n}\\n.jj table.grid560 td._select_:after {\\n  cursor: pointer;\\n  font: normal normal normal 14px/1 FontAwesome;\\n  font-size: 1.2em;\\n  text-rendering: auto;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  text-align: center;\\n  content: \\\"\\\\f096\\\";\\n  opacity: 0.6;\\n}\\n.jj table.grid560 td._select_.selected::after,\\n.jj table.grid560 td._select_.true::after {\\n  content: \\\"\\\\f046\\\";\\n}\\n.jj table.grid570 {\\n  color: #0E3979;\\n  max-width: none;\\n  border-collapse: collapse;\\n  text-align: center;\\n  border-top: 3px solid #307bbb;\\n}\\n.jj table.grid570 th,\\n.jj table.grid570 td {\\n  position: relative;\\n  text-align: center;\\n  vertical-align: middle;\\n  border: 1px solid #B2BAD2;\\n}\\n.jj table.grid570 > thead {\\n  background-color: #e1eaf2;\\n  font-weight: bold;\\n}\\n.jj table.grid570 > thead > tr > th {\\n  border-color: #B2BAD2;\\n  border-width: 1px 1px 1px 1px;\\n  border-style: solid;\\n  font-weight: bold;\\n  color: #0E3979;\\n}\\n.jj table.grid570 > tbody {\\n  background-color: #FFFFFF;\\n}\\n.jj table.grid570 > tbody > tr > th {\\n  background-color: #e1eaf2;\\n  border: 1px solid #B2BAD2;\\n}\\n.jj table.grid570 > tbody > tr > td {\\n  padding: 3px;\\n  border: 0;\\n  font-size: 100%;\\n  vertical-align: middle;\\n  border: 1px solid #B2BAD2;\\n  overflow: hidden;\\n  word-wrap: normal;\\n  word-break: normal;\\n  border-collapse: collapse;\\n}\\n.jj table.grid570 > tbody > tr > td.text-right {\\n  text-align: right;\\n}\\n.jj table.grid570 > tbody > tr > td.text-left {\\n  text-align: left;\\n}\\n.jj table.grid570 > tbody > tr:nth-of-type(odd) {\\n  background-color: #efefef;\\n}\\n.jj table.grid570 > tbody > tr[_crud_=\\\"R\\\"] {\\n  background-color: white;\\n}\\n.jj table.grid570 > tbody > tr[_crud_=\\\"U\\\"] {\\n  background-color: #BCD8F1;\\n}\\n.jj table.grid570 > tbody > tr[_crud_=\\\"D\\\"] {\\n  background-color: #FAB4B4;\\n}\\n.jj table.grid570 > tbody > tr[editable=\\\"false\\\"] td * {\\n  display: none;\\n}\\n.jj table.grid570 > tbody > tr[editable=\\\"true\\\"] {\\n  background-color: inherit;\\n}\\n.jj table.grid570 td input {\\n  width: 100%;\\n  border: 0;\\n}\\n.jj table.grid570 td input[type=\\\"number\\\"] {\\n  text-align: right;\\n}\\n.jj table.nowarp td {\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n}\\n/* ==JJFilter.640.class================ */\\n.jj jj-app-filter,\\n.jj .jj-app-filter {\\n  margin-bottom: 10px;\\n  display: block;\\n  font-size: 0.9rem;\\n}\\n.jj jj-app-filter .list-group,\\n.jj .jj-app-filter .list-group {\\n  display: flex;\\n  -webkit-box-orient: horizontal;\\n  -webkit-box-direction: normal;\\n  -ms-flex-direction: row;\\n  flex-direction: row;\\n  padding: 0.1rem;\\n}\\n.jj jj-app-filter .list-group .list-group-item,\\n.jj .jj-app-filter .list-group .list-group-item {\\n  display: flex;\\n  -webkit-box-pack: justify;\\n  -ms-flex-pack: justify;\\n  justify-content: space-between;\\n  padding: 0.5rem;\\n  background-color: var(--cyan);\\n  color: var(--white);\\n}\\n.jj jj-app-filter .list-group .list-group-item code,\\n.jj .jj-app-filter .list-group .list-group-item code {\\n  font-size: inherit;\\n  color: #f672a7;\\n}\\n.jj jj-app-filter .list-group .list-group-item .fa-remove,\\n.jj .jj-app-filter .list-group .list-group-item .fa-remove {\\n  margin-left: 1rem;\\n  margin-top: 0.3rem;\\n}\\n.jj jj-app-filter .filter-box,\\n.jj .jj-app-filter .filter-box {\\n  display: flex;\\n}\\n.jj jj-app-filter .dropdown-menu,\\n.jj .jj-app-filter .dropdown-menu {\\n  width: 250px;\\n}\\n.jj jj-app-filter .dropdown-menu .item-box,\\n.jj .jj-app-filter .dropdown-menu .item-box {\\n  height: 200px;\\n  overflow: auto;\\n}\\n.jj jj-app-filter .dropdown-menu .item-box label,\\n.jj .jj-app-filter .dropdown-menu .item-box label {\\n  display: block;\\n  font-weight: normal;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n}\\n.jj jj-app-filter .btn,\\n.jj .jj-app-filter .btn {\\n  padding: 0.2rem 0.5rem;\\n}\\n.jj jj-app-filter input,\\n.jj .jj-app-filter input,\\n.jj jj-app-filter select,\\n.jj .jj-app-filter select {\\n  border: 1px solid #ced4da;\\n}\\n/* ==JJExcelLayout.640.class================ */\\n.jj jj-excel-layout {\\n  position: relative;\\n  display: block;\\n  background-color: white;\\n  border: 1px solid var(--gray);\\n  overflow: auto;\\n  padding: 5px 5px 15px 5px;\\n  min-height: 300px;\\n}\\n.jj jj-excel-layout .excelWrap {\\n  min-height: 300px;\\n}\\n.jj jj-excel-layout .excelWrap:empty:before {\\n  content: \\\"업로드할 파일을 선택하세요\\\";\\n}\\n.jj jj-excel-layout .excelWrap:empty:focus {\\n  border: 1px solid yellow;\\n}\\n.jj jj-excel-layout .excelWrap.win-drag {\\n  background-color: yellow;\\n}\\n.jj jj-excel-layout .excelWrap table {\\n  table-layout: fixed;\\n  border: 1px solid var(--secondary);\\n  border-collapse: collapse;\\n  display: fixed;\\n}\\n.jj jj-excel-layout .excelWrap table thead {\\n  background-color: var(--light);\\n}\\n.jj jj-excel-layout .excelWrap table thead td {\\n  font-weight: bold;\\n  text-align: center;\\n}\\n.jj jj-excel-layout .excelWrap table th,\\n.jj jj-excel-layout .excelWrap table td {\\n  border: 1px solid var(--secondary);\\n  padding: 3px;\\n  font-size: 12px;\\n  color: black;\\n  min-width: 130px;\\n}\\n.jj jj-excel-layout .excelWrap table th {\\n  text-align: center;\\n  background-color: var(--light);\\n}\\n.jj jj-excel-layout .excelWrap table th input {\\n  width: 60%;\\n}\\n.jj jj-excel-layout .excelWrap table th select {\\n  width: 38%;\\n  padding: 2px 0;\\n}\\n/* ==JJColor.640.class================ */\\n/* ==JJMenu.640.class================ */\\n.jj jj-menu {\\n  display: block;\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n  overflow: visible;\\n}\\n.jj jj-menu[data-theme='white'] {\\n  background-color: white;\\n}\\n.jj jj-menu[data-theme='white'] a {\\n  background-color: white !important;\\n  color: var(--basecolor5) !important;\\n}\\n.jj jj-menu[data-theme='white'] .navbar-nav > .open > a,\\n.jj jj-menu[data-theme='white'] .navbar-nav > .open > a:focus,\\n.jj jj-menu[data-theme='white'] .navbar-nav > .open > a:hover {\\n  background-color: initial !important;\\n}\\n.jj jj-menu[data-theme='white'] .nav .dropdown-menu a {\\n  background-color: white !important;\\n}\\n.jj jj-menu[data-theme='white'] .nav .dropdown-menu a {\\n  background-color: white !important;\\n}\\n.jj jj-menu[data-theme='white'] .nav .dropdown-menu {\\n  background-color: white !important;\\n}\\n.jj jj-menu[data-theme='white'] nav.navbar .nav a:focus,\\n.jj jj-menu[data-theme='white'] nav.navbar .nav a:active,\\n.jj jj-menu[data-theme='white'] nav.navbar .nav a.active {\\n  background-color: var(--basecolor1) !important;\\n  color: var(--basecolor4) !important;\\n}\\n.jj jj-menu[data-theme='dropdown'] .navbar-nav {\\n  overflow: hidden;\\n  background-color: #333;\\n  list-style: none;\\n}\\n.jj jj-menu[data-theme='dropdown'] .navbar-nav .navbar a {\\n  float: left;\\n  font-size: 16px;\\n  color: white;\\n  text-align: center;\\n  padding: 14px 16px;\\n  text-decoration: none;\\n}\\n.jj jj-menu[data-theme='dropdown'] .navbar-nav .dropdown {\\n  float: left;\\n  overflow: hidden;\\n}\\n.jj jj-menu[data-theme='dropdown'] .navbar-nav .dropdown .dropbtn {\\n  font-size: 16px;\\n  border: none;\\n  outline: none;\\n  color: white;\\n  padding: 14px 16px;\\n  background-color: inherit;\\n  font-family: inherit;\\n  margin: 0;\\n}\\n.jj jj-menu[data-theme='dropdown'] .navbar-nav .navbar a:hover,\\n.jj jj-menu[data-theme='dropdown'] .navbar-nav .dropdown:hover .dropbtn {\\n  background-color: red;\\n}\\n.jj jj-menu[data-theme='dropdown'] .navbar-nav .dropdown-content {\\n  display: none;\\n  position: absolute;\\n  background-color: #f9f9f9;\\n  min-width: 160px;\\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\\n  z-index: 1;\\n}\\n.jj jj-menu[data-theme='dropdown'] .navbar-nav .dropdown-content a {\\n  float: none;\\n  color: black;\\n  padding: 12px 16px;\\n  text-decoration: none;\\n  display: block;\\n  text-align: left;\\n}\\n.jj jj-menu[data-theme='dropdown'] .navbar-nav .dropdown-content a:hover {\\n  background-color: #ddd;\\n}\\n.jj jj-menu[data-theme='dropdown'] .navbar-nav .dropdown:hover .dropdown-content {\\n  display: block;\\n}\\n.jj jj-menu .navigation-menu .arrow-down {\\n  display: inline-block;\\n}\\n.jj jj-menu .navigation-menu .arrow-down:after {\\n  border-color: initial;\\n  border-style: solid;\\n  border-width: 0 0 1px 1px;\\n  content: '';\\n  height: 0.4em;\\n  display: inline-block;\\n  right: 5px;\\n  top: 50%;\\n  margin-left: 5px;\\n  -webkit-transform: rotate(-45deg) translateY(-50%);\\n  transform: rotate(-45deg) translateY(-50%);\\n  -webkit-transform-origin: top;\\n  transform-origin: top;\\n  -webkit-transition: all 0.3s ease-out;\\n  transition: all 0.3s ease-out;\\n  width: 0.4em;\\n}\\n.jj jj-menu .metismenu {\\n  padding: 0;\\n}\\n.jj jj-menu .metismenu > li > a {\\n  color: #6e768e;\\n  display: block;\\n  padding: 13px 20px;\\n  position: relative;\\n  -webkit-transition: all 0.4s;\\n  transition: all 0.4s;\\n  font-family: Roboto, sans-serif;\\n  font-size: 0.925rem;\\n}\\n.jj jj-menu .metismenu > li > a > i {\\n  display: inline-block;\\n  line-height: 1.0625rem;\\n  margin: 0 10px 0 0;\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 20px;\\n}\\n.jj jj-menu .metismenu > li > a > span {\\n  vertical-align: middle;\\n}\\n.jj jj-menu .metismenu > li > ul {\\n  padding: 0;\\n  padding-left: 35px;\\n}\\n.jj jj-menu .metismenu > li > ul li a {\\n  padding: 8px 20px;\\n  color: #6e768e;\\n  display: block;\\n  position: relative;\\n  -webkit-transition: all 0.4s;\\n  transition: all 0.4s;\\n}\\n.jj jj-menu .metismenu > li > ul ul {\\n  padding-left: 20px;\\n}\\n.jj jj-menu .metismenu li {\\n  list-style: none;\\n}\\n.jj jj-menu .metismenu li > a > * {\\n  pointer-events: none;\\n}\\n.jj jj-menu .metismenu li > ul {\\n  display: none;\\n}\\n.jj jj-menu .metismenu li.mm-active > a > span.menu-arrow {\\n  -webkit-transform: rotate(90deg);\\n  transform: rotate(90deg);\\n}\\n.jj jj-menu .metismenu li.mm-active > ul {\\n  display: block;\\n}\\n.jj jj-menu .metismenu .mm-collapse:not(.mm-show) {\\n  display: none;\\n}\\n.jj jj-menu .metismenu .menu-arrow {\\n  -webkit-transition: -webkit-transform 0.15s;\\n  transition: -webkit-transform 0.15s;\\n  transition: transform 0.15s;\\n  transition: transform 0.15s, -webkit-transform 0.15s;\\n  position: absolute;\\n  right: 20px;\\n  display: inline-block;\\n  font-family: 'Material Design Icons';\\n  text-rendering: auto;\\n  line-height: 1.5rem;\\n  font-size: 1.1rem;\\n  -webkit-transform: translate(0, 0);\\n  transform: translate(0, 0);\\n}\\n.jj jj-menu .metismenu .menu-arrow:before {\\n  content: '\\\\F142';\\n}\\n.jj jj-menu .metismenu .nav-second-level li a.active,\\n.jj jj-menu .metismenu .nav-thrid-level li a.active {\\n  color: var(--primary);\\n}\\n.jj jj-menu .card-menu {\\n  padding: 0;\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: space-between;\\n}\\n.jj jj-menu .card-menu > li {\\n  width: 24%;\\n  border: 1px solid #ccc;\\n  margin-bottom: 1rem;\\n}\\n.jj jj-menu .card-menu > li.has-submenu > a {\\n  margin-bottom: 0.5rem;\\n}\\n.jj jj-menu .card-menu > li > a {\\n  color: #6e768e;\\n  display: block;\\n  padding: 13px 20px;\\n  position: relative;\\n  -webkit-transition: all 0.4s;\\n  transition: all 0.4s;\\n  font-family: Roboto, sans-serif;\\n  font-size: 0.925rem;\\n  background-color: var(--card);\\n  padding: 5px;\\n  margin-bottom: 5rem;\\n}\\n.jj jj-menu .card-menu > li > a > i {\\n  display: inline-block;\\n  line-height: 1.0625rem;\\n  margin: 0 10px 0 0;\\n  text-align: center;\\n  vertical-align: middle;\\n  width: 20px;\\n}\\n.jj jj-menu .card-menu > li > a > span {\\n  vertical-align: middle;\\n}\\n.jj jj-menu .card-menu > li > ul {\\n  padding: 0;\\n}\\n.jj jj-menu .card-menu > li > ul li a {\\n  padding: 8px 20px;\\n  color: #6e768e;\\n  display: block;\\n  position: relative;\\n  -webkit-transition: all 0.4s;\\n  transition: all 0.4s;\\n}\\n.jj jj-menu .card-menu li {\\n  list-style: none;\\n}\\n.jj jj-menu .card-menu li > a > * {\\n  pointer-events: none;\\n}\\n.jj jj-menu .card-menu li.mm-active > a > span.menu-arrow {\\n  -webkit-transform: rotate(90deg);\\n  transform: rotate(90deg);\\n}\\n.jj jj-menu .card-menu li.mm-active > ul {\\n  display: block;\\n}\\n.jj jj-menu .card-menu .mm-collapse:not(.mm-show) {\\n  display: none;\\n}\\n.jj jj-menu .card-menu .menu-arrow {\\n  -webkit-transition: -webkit-transform 0.15s;\\n  transition: -webkit-transform 0.15s;\\n  transition: transform 0.15s;\\n  transition: transform 0.15s, -webkit-transform 0.15s;\\n  position: absolute;\\n  right: 20px;\\n  display: inline-block;\\n  font-family: 'Material Design Icons';\\n  text-rendering: auto;\\n  line-height: 1.5rem;\\n  font-size: 1.1rem;\\n  -webkit-transform: translate(0, 0);\\n  transform: translate(0, 0);\\n}\\n.jj jj-menu .card-menu .menu-arrow:before {\\n  content: '\\\\F142';\\n}\\n.jj.enlarged jj-menu {\\n  overflow: visible;\\n}\\n.jj side jj-menu {\\n  overflow-y: auto;\\n  overflow-x: hidden;\\n  flex-grow: 1;\\n}\\n.jj side jj-menu ul,\\n.jj side jj-menu li {\\n  list-style: none;\\n  text-align: left;\\n  margin: 0;\\n  padding: 0;\\n}\\n.jj side jj-menu > ul {\\n  overflow: hidden;\\n}\\n.jj side jj-menu > ul a {\\n  display: block;\\n  padding: 5px;\\n  color: var(--text3);\\n}\\n.jj side jj-menu > ul a:hover {\\n  background-color: var(--basecolor2);\\n}\\n.jj side jj-menu > ul a.active {\\n  background-color: var(--basecolor3);\\n}\\n.jj side jj-menu > ul a.active:hover {\\n  background-color: var(--basecolor4);\\n}\\n.jj side jj-menu > ul .dropdown > a:after {\\n  float: right;\\n  right: 5px;\\n  font: normal normal normal 14px/1 FontAwesome;\\n  text-rendering: auto;\\n  -webkit-font-smoothing: antialiased;\\n  font-size: 17px;\\n  content: '\\\\F0DA';\\n}\\n.jj side jj-menu > ul .dropdown > a.on:after {\\n  -webkit-transform: rotate(90deg);\\n  -ms-transform: rotate(90deg);\\n  transform: rotate(90deg);\\n}\\n.jj side jj-menu > ul li > a {\\n  padding-left: 10px;\\n}\\n.jj side jj-menu > ul li li > a {\\n  padding-left: 20px;\\n}\\n/* ==JJTree.640.class================ */\\n.jj .jj-tree {\\n  display: block;\\n  position: relative;\\n  padding: 0;\\n  margin-bottom: 0;\\n  overflow: auto;\\n  opacity: 0.8;\\n  height: 600px;\\n  padding-bottom: 200px;\\n  /**\\n  스타일 종류를 선언함\\n  */\\n}\\n.jj .jj-tree ul {\\n  margin-bottom: 0;\\n}\\n.jj .jj-tree ul li {\\n  list-style: none;\\n  position: relative;\\n  padding-left: 1.5rem;\\n}\\n.jj .jj-tree ul li a {\\n  position: relative;\\n  display: block;\\n  padding-left: 0.3rem;\\n  line-height: 1.3rem;\\n  border-top: 2px dotted transparent;\\n  border-bottom: 2px dotted transparent;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  color: inherit;\\n  cursor: pointer;\\n}\\n.jj .jj-tree ul li a:hover {\\n  background-color: #fafafa;\\n}\\n.jj .jj-tree ul li a.select {\\n  background-color: #eeeeee;\\n}\\n.jj .jj-tree ul li a.select:hover {\\n  background-color: #e0e0e0;\\n}\\n.jj .jj-tree ul li a.select .jj-tree-check {\\n  color: black;\\n}\\n.jj .jj-tree ul li a.dragover {\\n  background-color: yellow;\\n}\\n.jj .jj-tree ul li a.dragover[position=\\\"top\\\"] {\\n  border-top: 2px dotted red;\\n}\\n.jj .jj-tree ul li a.dragover[position=\\\"bottom\\\"] {\\n  border-bottom: 2px dotted blue;\\n}\\n.jj .jj-tree ul li a.dragover[position=\\\"inner\\\"] {\\n  border-top: 2px dotted red;\\n  border-bottom: 2px dotted blue;\\n}\\n.jj .jj-tree ul li a.drop {\\n  background-color: orange;\\n}\\n.jj .jj-tree ul li a .jj-tree-check {\\n  line-height: 1.2rem;\\n  cursor: pointer;\\n  position: relative;\\n  width: 1.5rem;\\n  height: 1rem;\\n  display: inline-block;\\n}\\n.jj .jj-tree ul li a .jj-tree-check::after {\\n  position: absolute;\\n  width: 1rem;\\n  height: 1rem;\\n  top: 4px;\\n  display: block;\\n  background-color: white;\\n  font: normal normal normal 14px/1 FontAwesome;\\n  font-size: 1rem;\\n  text-rendering: auto;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  content: \\\"\\\\F046\\\";\\n  content: \\\"\\\\f00c\\\";\\n  content: \\\" \\\";\\n  border: 1px dotted #d5dbe0;\\n  opacity: 0.9;\\n}\\n.jj .jj-tree ul li a .jj-tree-check.checked::after {\\n  content: \\\"\\\\f00c\\\";\\n}\\n.jj .jj-tree ul li a .fa {\\n  position: relative;\\n  display: inline-block;\\n}\\n.jj .jj-tree ul li a i.icon {\\n  pointer-events: none;\\n}\\n.jj .jj-tree ul li a t {\\n  pointer-events: none;\\n}\\n.jj .jj-tree ul li a > .addon {\\n  margin-left: 1rem;\\n}\\n.jj .jj-tree ul li ul {\\n  margin-left: -1.5rem;\\n  padding-left: 0.7rem;\\n  display: none;\\n}\\n.jj .jj-tree ul li.has-child > .jj-tree-folding {\\n  cursor: pointer;\\n}\\n.jj .jj-tree ul li.has-child > .jj-tree-folding::after {\\n  position: absolute;\\n  top: 0.4rem;\\n  left: 0.5rem;\\n  display: block;\\n  width: 0.7rem;\\n  font: normal normal normal 14px/1 FontAwesome;\\n  font-size: inherit;\\n  text-rendering: auto;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  content: \\\"\\\\f107\\\";\\n  content: \\\"\\\\f105\\\";\\n  content: \\\"\\\\F196\\\";\\n  opacity: 0.9;\\n}\\n.jj .jj-tree ul li.has-child.show > .jj-tree-folding::after {\\n  content: \\\"\\\\F147\\\";\\n}\\n.jj .jj-tree ul li.has-child.show > ul {\\n  display: block;\\n}\\n.jj .jj-tree > ul {\\n  margin-left: 0;\\n  padding-left: 0;\\n}\\n.jj .jj-tree.toggle-hidden ul {\\n  padding-left: 1.5rem;\\n}\\n.jj .jj-tree.toggle-hidden ul li {\\n  padding-left: 0px!important;\\n}\\n.jj .jj-tree.toggle-hidden ul li > .toggle {\\n  display: none;\\n}\\n.jj .jj-tree.guide-line li::before {\\n  content: '';\\n  position: absolute;\\n  left: 13px;\\n  top: 0;\\n  bottom: 0px;\\n  border-left: 1px dotted gray;\\n}\\n.jj .jj-tree.guide-line li .jj-tree-folding::before {\\n  content: '';\\n  position: absolute;\\n  left: 0.8rem;\\n  width: 0.8rem;\\n  top: 0.72rem;\\n  border-top: 1px dotted gray;\\n}\\n.jj .jj-tree.guide-line li:last-child::before {\\n  content: '';\\n  position: absolute;\\n  left: 13px;\\n  top: 0;\\n  bottom: 15px;\\n  border-left: 1px dotted gray;\\n}\\n.jj .jj-tree.guide-line li .toggle {\\n  background-color: white;\\n}\\n.jj .jj-tree.guide-line li .toggle i:before {\\n  content: \\\"\\\\F196\\\";\\n}\\n.jj .jj-tree.guide-line li[data-expanded=\\\"true\\\"] .toggle > i {\\n  -webkit-transform: rotate(0deg) !important;\\n  /* Safari */\\n  transform: rotate(0deg) !important;\\n}\\n.jj .jj-tree.guide-line li[data-expanded=\\\"true\\\"] > .toggle i:before {\\n  content: \\\"\\\\F147\\\";\\n}\\n.jj .jj-tree.caret-arrow li.has-child > .jj-tree-folding::after {\\n  content: \\\"\\\\F0DA\\\";\\n  font-size: 1.2rem;\\n  top: 0.2rem;\\n}\\n.jj .jj-tree.caret-arrow li.has-child.show > .jj-tree-folding::after {\\n  content: \\\"\\\\F0D7\\\";\\n}\\n/* ==JJDomTree.640.class================ */\\n/* ==JJFileReadTree.640.class================ */\\n.jj jj-file-read-tree.jj-tree a.dragover {\\n  background-color: yellow;\\n}\\n.jj jj-file-read-tree.jj-tree a.dragover[position='top'] {\\n  border-top: 2px dotted red;\\n  border-bottom: 2px dotted blue;\\n}\\n.jj jj-file-read-tree.jj-tree a.dragover[position='bottom'] {\\n  border-top: 2px dotted red;\\n  border-bottom: 2px dotted blue;\\n}\\n.jj jj-file-read-tree.jj-tree a.dragover[position='inner'] {\\n  border-top: 2px dotted red;\\n  border-bottom: 2px dotted blue;\\n}\\n/* ==JJFileTree.640.class================ */\\n.jj jj-filetree.jj-tree {\\n  background-color: white;\\n  color: var(--dark);\\n}\\n.jj jj-filetree.jj-tree a.dragover {\\n  background-color: yellow;\\n}\\n.jj jj-filetree.jj-tree a.dragover[position='top'] {\\n  border-top: 2px dotted red;\\n  border-bottom: 2px dotted blue;\\n}\\n.jj jj-filetree.jj-tree a.dragover[position='bottom'] {\\n  border-top: 2px dotted red;\\n  border-bottom: 2px dotted blue;\\n}\\n.jj jj-filetree.jj-tree a.dragover[position='inner'] {\\n  border-top: 2px dotted red;\\n  border-bottom: 2px dotted blue;\\n}\\n/* ==JJAttribute.640.class================ */\\n.jj jj-attribute {\\n  display: block;\\n  position: relative;\\n}\\n.jj jj-attribute table {\\n  width: 100%;\\n  font-size: 12px;\\n  list-style: none;\\n  padding: 0;\\n  margin-bottom: 10px;\\n  table-layout: fixed;\\n}\\n.jj jj-attribute table tr {\\n  height: 20px;\\n}\\n.jj jj-attribute table tr th {\\n  padding: 3px;\\n}\\n.jj jj-attribute table tr th button {\\n  float: left;\\n  width: 17px;\\n}\\n.jj jj-attribute table tr th button:not(:last-child) {\\n  margin-right: 1px;\\n}\\n.jj jj-attribute table tr td {\\n  background-color: #fff;\\n}\\n.jj jj-attribute table tr td[colspan='2'] > * {\\n  width: 25%;\\n  float: left;\\n}\\n.jj jj-attribute table tr td[colspan='2'] > * .dropdown-menu {\\n  width: 50px;\\n}\\n.jj jj-attribute table .btn,\\n.jj jj-attribute table .input-group .btn,\\n.jj jj-attribute table .form-control {\\n  padding: 3px;\\n  height: 20px;\\n  font-size: 12px;\\n  border: none;\\n  border-radius: 0;\\n  box-shadow: none;\\n  transition: none;\\n}\\n.jj jj-attribute table textarea {\\n  height: 70px;\\n  padding: 3px 5px;\\n  min-width: 220px;\\n}\\n.jj jj-attribute [method] * {\\n  pointer-events: none;\\n}\\n/* ==JJElToolbar.640.class================ */\\n/* ==JJFrameEditor.640.class================ */\\n/* ==JJStyle.640.class================ */\\n.jj jj-style {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.jj jj-style input[method='findtext'] {\\n  flex: none;\\n}\\n.jj jj-style ul[method='styleTree'] {\\n  flex-grow: 1;\\n  font-size: 12px;\\n  list-style: none;\\n  padding: 0;\\n  margin-bottom: 0;\\n  background-color: white;\\n}\\n.jj jj-style ul[method='styleTree'] li {\\n  list-style: none;\\n  padding: 0;\\n}\\n.jj jj-style ul[method='styleTree'] li > label {\\n  display: block;\\n  margin-bottom: 1px;\\n  line-height: 20px;\\n  padding: 2px;\\n  position: relative;\\n}\\n.jj jj-style ul[method='styleTree'] li > label.usedata > span.attr-label {\\n  font-weight: 700;\\n  color: blue;\\n}\\n.jj jj-style ul[method='styleTree'] li > label.childdata > span.attr-label {\\n  font-weight: 700;\\n  color: red;\\n}\\n.jj jj-style ul[method='styleTree'] li > label > span.attr-label {\\n  width: 180px;\\n  font-weight: normal;\\n}\\n.jj jj-style ul[method='styleTree'] li > label > span.attr-label i.fa {\\n  font-size: 14px;\\n  margin-left: 10px;\\n}\\n.jj jj-style ul[method='styleTree'] li > label > .input-group {\\n  width: 130px;\\n  position: absolute;\\n  top: 2px;\\n  right: 0;\\n  border: 1px solid;\\n}\\n.jj jj-style ul[method='styleTree'] li > label > .input-group .btn.dropdown-toggle {\\n  padding: 0 3px !important;\\n}\\n.jj jj-style ul[method='styleTree'] li > label:hover {\\n  background-color: var(--gray);\\n  color: var(--white);\\n}\\n.jj jj-style ul[method='styleTree'] li > label.group {\\n  width: 100%;\\n  background-color: var(--light);\\n  display: block;\\n}\\n.jj jj-style ul[method='styleTree'] li > label.group:hover {\\n  background-color: var(--gray);\\n  color: var(--white);\\n}\\n.jj jj-style ul[method='styleTree'] > li > ul > li > label {\\n  padding-left: 10px;\\n}\\n.jj jj-style ul[method='styleTree'] > li > ul > li > ul > li > label {\\n  padding-left: 20px;\\n}\\n.jj jj-style ul[method='styleTree'] > li > ul > li > ul > li > ul > li > label {\\n  padding-left: 30px;\\n}\\n.jj jj-style ul[method='styleTree'] li.collapsed > ul {\\n  display: none;\\n}\\n.jj jj-style ul[method='styleTree'] ul {\\n  padding: 0;\\n}\\n.jj jj-style .input-group .btn,\\n.jj jj-style .form-control {\\n  color: black;\\n  padding: 3px;\\n  height: 20px;\\n  font-size: 12px;\\n  border: none;\\n  border-radius: 0;\\n  box-shadow: none;\\n  transition: none;\\n}\\n.jj jj-style textarea.dropdown-menu {\\n  padding: 5px 10px;\\n  height: 70px;\\n}\\n/* ==JJVhtmlEditor.640.class================ */\\n.jj jj-vhtml-editor {\\n  position: relative;\\n  display: block;\\n  overflow-y: auto;\\n  overflow-x: hidden;\\n  height: 100%;\\n  border: 1px solid #ccc;\\n  background-color: white;\\n}\\n.jj jj-vhtml-editor.excute {\\n  height: 100%;\\n}\\n.jj jj-vhtml-editor.excute > .area-tool,\\n.jj jj-vhtml-editor.excute > .dragBox,\\n.jj jj-vhtml-editor.excute > jj-resize-box,\\n.jj jj-vhtml-editor.excute > .drop-holder {\\n  display: none !important;\\n}\\n.jj jj-vhtml-editor.excute > .area-editor {\\n  display: none !important;\\n}\\n.jj jj-vhtml-editor.excute > .area-viewer {\\n  display: block;\\n}\\n.jj jj-vhtml-editor > .area-tool {\\n  height: 0px;\\n}\\n.jj jj-vhtml-editor > .area-editor {\\n  position: relative;\\n  height: 100%;\\n  padding: 10px;\\n}\\n.jj jj-vhtml-editor > .area-editor.un-select *:hover {\\n  outline: 1px solid green;\\n}\\n.jj jj-vhtml-editor > .area-editor.un-select > section:hover {\\n  outline: 2px solid blue;\\n}\\n.jj jj-vhtml-editor > .area-editor .row,\\n.jj jj-vhtml-editor > .area-editor .row > [class*='col-'],\\n.jj jj-vhtml-editor > .area-editor .container,\\n.jj jj-vhtml-editor > .area-editor .container-fluid,\\n.jj jj-vhtml-editor > .area-editor .tab-pane {\\n  padding-bottom: 10px;\\n}\\n.jj jj-vhtml-editor > .area-editor .row:empty,\\n.jj jj-vhtml-editor > .area-editor .row > [class*='col-']:empty,\\n.jj jj-vhtml-editor > .area-editor .container:empty,\\n.jj jj-vhtml-editor > .area-editor .container-fluid:empty,\\n.jj jj-vhtml-editor > .area-editor .tab-pane:empty {\\n  height: 100px;\\n  border: 0.5px dotted #ccc;\\n}\\n.jj jj-vhtml-editor > .area-editor .row:empty:before,\\n.jj jj-vhtml-editor > .area-editor .row > [class*='col-']:empty:before,\\n.jj jj-vhtml-editor > .area-editor .container:empty:before,\\n.jj jj-vhtml-editor > .area-editor .container-fluid:empty:before,\\n.jj jj-vhtml-editor > .area-editor .tab-pane:empty:before {\\n  content: '선택해서 내용을 입력해주세요';\\n}\\n.jj jj-vhtml-editor > .area-editor a {\\n  display: inline-block;\\n}\\n.jj jj-vhtml-editor > .area-editor .drag-el {\\n  opacity: 0.5;\\n}\\n.jj jj-vhtml-editor > .area-editor .container,\\n.jj jj-vhtml-editor > .area-editor .container-fluid {\\n  padding-top: 5px;\\n  padding-bottom: 5px;\\n}\\n.jj jj-vhtml-editor > .area-editor .row {\\n  padding-bottom: 10px;\\n}\\n.jj jj-vhtml-editor > .area-editor jj-hee * {\\n  pointer-events: none;\\n}\\n.jj jj-vhtml-editor > .area-editor [data-render] *,\\n.jj jj-vhtml-editor > .area-editor .nodrop *,\\n.jj jj-vhtml-editor > .area-editor .group-editor * {\\n  pointer-events: none;\\n}\\n.jj jj-vhtml-editor > .area-editor svg * {\\n  pointer-events: none;\\n  -webkit-user-drag: none;\\n}\\n.jj jj-vhtml-editor > .area-editor .app-youtube * {\\n  pointer-events: none;\\n}\\n.jj jj-vhtml-editor > .area-editor iframe,\\n.jj jj-vhtml-editor > .area-editor iframe * {\\n  pointer-events: none;\\n  -webkit-user-drag: none;\\n}\\n.jj jj-vhtml-editor > .area-editor p:not([data-render] *),\\n.jj jj-vhtml-editor > .area-editor div:not(.clearfix):not([contenteditable]):empty,\\n.jj jj-vhtml-editor > .area-editor p:not([contenteditable]):not(.clearfix):empty {\\n  height: 100px;\\n  border: 0.5px dotted #ccc;\\n}\\n.jj jj-vhtml-editor > .area-editor p:not([data-render] *):before,\\n.jj jj-vhtml-editor > .area-editor div:not(.clearfix):not([contenteditable]):empty:before,\\n.jj jj-vhtml-editor > .area-editor p:not([contenteditable]):not(.clearfix):empty:before {\\n  content: '선택해서 내용을 입력해주세요.';\\n}\\n.jj jj-vhtml-editor > .area-editor [vhtml-group] * {\\n  pointer-events: none;\\n}\\n.jj jj-vhtml-editor > .area-editor.show-href a[href]::after {\\n  font: normal normal normal 14px/1 FontAwesome;\\n  font-size: 8px;\\n  text-rendering: auto;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  content: '\\\\F13D';\\n  color: blue;\\n  background-color: yellow;\\n  padding: 3px;\\n}\\n.jj jj-vhtml-editor > .area-editor.show-href a[href]:hover::after {\\n  background-color: red;\\n}\\n.jj jj-vhtml-editor > .area-editor .dragover {\\n  outline: 2px dotted red;\\n}\\n.jj jj-vhtml-editor > .area-editor [group] * {\\n  pointer-events: none;\\n}\\n.jj jj-vhtml-editor > .area-viewer {\\n  display: none;\\n  position: relative;\\n  width: 100%;\\n  min-height: 100%;\\n}\\n.jj jj-vhtml-editor .dragBox {\\n  position: fixed;\\n  bottom: -100%;\\n  width: 200px;\\n  height: 50px;\\n  font-size: 18px;\\n  padding: 10px 20px;\\n  background-color: blue;\\n  border: 1px solid black;\\n}\\n.jj jj-vhtml-editor .dragBox img {\\n  border: 3px solid yellow;\\n}\\n.jj jj-vhtml-editor .drop-holder {\\n  border: 1px solid #4286f4;\\n  background-color: #4286f4;\\n  border-radius: 0;\\n  height: 10px;\\n  position: absolute;\\n  z-index: 110;\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -khtml-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  pointer-events: none;\\n}\\n.jj jj-vhtml-editor .drop-holder[position='top'] {\\n  border-top-left-radius: 20px;\\n  border-top-right-radius: 20px;\\n  background-color: red;\\n}\\n.jj jj-vhtml-editor .drop-holder[position='bottom'] {\\n  border-bottom-left-radius: 20px;\\n  border-bottom-right-radius: 20px;\\n  background-color: blue;\\n}\\n.jj jj-vhtml-editor .drop-holder[position='left'] {\\n  border-top-left-radius: 20px;\\n  border-bottom-left-radius: 20px;\\n}\\n.jj jj-vhtml-editor .drop-holder[position='right'] {\\n  border-top-right-radius: 20px;\\n  border-bottom-right-radius: 20px;\\n}\\n.jj jj-vhtml-editor .drop-holder[position='inner'] {\\n  border-radius: 5px;\\n  margin-left: 10px;\\n}\\n/* ==JJBookmark.630.class================ */\\n.jj jj-bookmark {\\n  display: block;\\n  position: relative;\\n}\\n.jj jj-bookmark > .bookmark-wrap {\\n  position: sticky;\\n  --display: inline-block;\\n  --padding-right: 12px;\\n  --padding-left: 12px;\\n  z-index: 9999;\\n  top: 0px;\\n}\\n/* ==JHRealtimeChart.class================ */\\n.jj jh-chart canvas {\\n  border: 1px solid #ccc;\\n  background-color: white;\\n  margin-left: 35px;\\n}\\n.jj jh-chart .tootip {\\n  visibility: hidden;\\n}\\n.jj jh-chart .chart {\\n  border: 1px solid blue;\\n  display: inline-block;\\n  position: relative;\\n}\\n.jj jh-chart .tootip {\\n  width: 10px;\\n  height: 10px;\\n  border: 2px solid red;\\n  border-radius: 50%;\\n  color: black;\\n  position: absolute;\\n  top: 15px;\\n  left: 15px;\\n  transition: all 0.2s ease-out;\\n}\\n.jj jh-chart .tootip:hover {\\n  background-color: yellow;\\n}\\n.jj jh-chart:hover .tootip {\\n  visibility: visible;\\n}\\n/* ==webKitCheck.640.class================ */\\n.jj input[type='checkbox'],\\n.jj input[type='radio'] {\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  -ms-appearance: none;\\n  appearance: none;\\n  display: inline-block;\\n  vertical-align: middle;\\n  margin-top: 0;\\n  margin-right: 4px;\\n}\\n.jj input[type='checkbox'] {\\n  border: 2px solid #555;\\n  width: 18px;\\n  height: 18px;\\n  outline: none;\\n  padding: 4px;\\n}\\n.jj input[type='checkbox']:checked {\\n  background: #555;\\n  background-clip: content-box;\\n}\\n.jj input[type='radio'] {\\n  border: 2px solid #555;\\n  border-radius: 10px;\\n  width: 18px;\\n  height: 18px;\\n  outline: none;\\n  padding: 4px;\\n}\\n.jj input[type='radio']:checked {\\n  background: #555;\\n  background-clip: content-box;\\n}\\n.jj input[type='range'] {\\n  -webkit-appearance: none;\\n  width: 100%;\\n  height: 5px;\\n  border-radius: 5px;\\n  background: #d3d3d3;\\n  margin: 10px 0;\\n  opacity: 0.7;\\n}\\n.jj input[type='range']:hover {\\n  opacity: 1;\\n}\\n.jj input[type='range']::-webkit-slider-thumb {\\n  -webkit-appearance: none;\\n  appearance: none;\\n  width: 18px;\\n  height: 18px;\\n  border-radius: 50%;\\n  background: #4caf50;\\n  cursor: pointer;\\n}\\n.jj input[type='range']::-webkit-slider-thumb:before {\\n  content: '100';\\n}\\n.jj input[type='range']::-webkit-slider-thumb:after {\\n  content: '200';\\n}\\n.jj input[type='range']::-moz-range-thumb {\\n  width: 18px;\\n  height: 18px;\\n  border-radius: 50%;\\n  background: #4caf50;\\n  cursor: pointer;\\n}\\n.jj input[type='range']::-moz-range-thumb:before {\\n  content: '100';\\n}\\n.jj input[type='range']::-moz-range-thumb:after {\\n  content: '200';\\n}\\n/* ==HMIComp.710.pkg.deploy================ */\\n/* ==JJHmiDiagram.640.class================ */\\n.jj jj-hmi-diagram {\\n  position: relative;\\n  display: block;\\n  background-color: white;\\n  height: 100%;\\n  min-height: 300px;\\n  overflow: auto;\\n  background-size: contain;\\n  background-repeat: no-repeat;\\n}\\n.jj jj-hmi-diagram .w {\\n  position: absolute;\\n  width: 100px;\\n  height: 100px;\\n  cursor: move;\\n  border: 0;\\n  color: var(--secondary);\\n  font-size: 11px;\\n  -webkit-transition: background-color 0.25s ease-in;\\n  -moz-transition: background-color 0.25s ease-in;\\n  transition: background-color 0.25s ease-in;\\n}\\n.jj jj-hmi-diagram .w.mark {\\n  outline: 2px dotted red;\\n}\\n.jj jj-hmi-diagram .w .list-group-item {\\n  background-color: transparent;\\n}\\n.jj jj-hmi-diagram .w > img {\\n  width: 100%;\\n  height: 100%;\\n}\\n.jj jj-hmi-diagram .w [data-render=\\\"JJChart\\\"] {\\n  min-width: 100px;\\n  min-height: 50px;\\n  width: 100%;\\n  height: 100%;\\n}\\n.jj jj-hmi-diagram .w:hover {\\n  color: var(--text1);\\n  -moz-border-radius: 8px;\\n  border-radius: 8px;\\n}\\n.jj jj-hmi-diagram .w:hover .ep {\\n  display: block;\\n}\\n.jj jj-hmi-diagram .w:hover.no-move {\\n  box-shadow: none;\\n  -o-box-shadow: none;\\n  -webkit-box-shadow: none;\\n  -moz-box-shadow: none;\\n  -moz-border-radius: 0;\\n  border-radius: 0;\\n}\\n.jj jj-hmi-diagram .aLabel {\\n  -webkit-transition: background-color 0.25s ease-in;\\n  -moz-transition: background-color 0.25s ease-in;\\n  transition: background-color 0.25s ease-in;\\n}\\n.jj jj-hmi-diagram .aLabel.jtk-hover,\\n.jj jj-hmi-diagram .jtk-source-hover,\\n.jj jj-hmi-diagram .jtk-target-hover {\\n  background-color: #1e8151;\\n  color: white;\\n}\\n.jj jj-hmi-diagram .aLabel {\\n  background-color: white;\\n  opacity: 0.8;\\n  padding: 0.3em;\\n  border-radius: 0.5em;\\n  border: 1px solid #346789;\\n  cursor: pointer;\\n  z-index: 3;\\n}\\n.jj jj-hmi-diagram .ep {\\n  display: none;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  width: 1em;\\n  height: 1em;\\n  background-color: orange;\\n  cursor: pointer;\\n  box-shadow: 0 0 2px black;\\n  -webkit-transition: -webkit-box-shadow 0.25s ease-in;\\n  -moz-transition: -moz-box-shadow 0.25s ease-in;\\n  transition: box-shadow 0.25s ease-in;\\n  transform: translate(-50%, -50%);\\n}\\n.jj jj-hmi-diagram .ep:hover {\\n  box-shadow: 0 0 6px black;\\n}\\n.jj jj-hmi-diagram .jtk-connector,\\n.jj jj-hmi-diagram .jtk-endpoint {\\n  z-index: 3;\\n}\\n.jj jj-hmi-diagram .jtk-connector.selected path,\\n.jj jj-hmi-diagram .jtk-endpoint.selected path {\\n  stroke: #e9595b !important;\\n}\\n.jj jj-hmi-diagram .jtk-connector.selected path:last-child,\\n.jj jj-hmi-diagram .jtk-endpoint.selected path:last-child {\\n  fill: #e9595b !important;\\n}\\n.jj jj-hmi-diagram .dragHover {\\n  border: 2px solid orange;\\n}\\n.jj jj-hmi-diagram path,\\n.jj jj-hmi-diagram .jtk-endpoint {\\n  cursor: pointer;\\n}\\n.jj jj-hmi-diagram .group-container {\\n  position: absolute;\\n  display: flex;\\n  flex-direction: column;\\n  width: 200px;\\n  height: 200px;\\n  border-radius: 12px;\\n  background-color: WhiteSmoke;\\n  font-size: 12px;\\n  cursor: move;\\n}\\n.jj jj-hmi-diagram .group-container > .title {\\n  background-color: #ABC1BB;\\n  padding: 0 16px;\\n  font-size: 13px;\\n  line-height: 30px;\\n  border-radius: 10px 10px 0 0;\\n  flex: none;\\n}\\n.jj jj-hmi-diagram .group-container > .group-body {\\n  flex-grow: 1;\\n}\\n.jj jj-hmi-diagram .group-container ul {\\n  margin-left: 25px;\\n  padding: 0;\\n}\\n.jj jj-hmi-diagram .group-container ul li {\\n  list-style-type: circle;\\n  margin-bottom: 7px;\\n}\\n.jj jj-hmi-diagram .group-container.collapsed {\\n  height: 40px!important;\\n  overflow: hidden;\\n}\\n.jj jj-hmi-diagram .group-container.collapsed > .group-body {\\n  display: none;\\n}\\n.jj jj-hmi-diagram .group-container .del,\\n.jj jj-hmi-diagram .group-container .node-collapse {\\n  position: absolute;\\n  top: 5px;\\n  right: 5px;\\n  background-color: white;\\n  padding: 1px;\\n  cursor: pointer;\\n  font-size: 13px;\\n  width: 20px;\\n  height: 20px;\\n  border-radius: 50%;\\n  text-align: center;\\n  display: block;\\n}\\n.jj jj-hmi-diagram .group-container .del:after {\\n  content: \\\"X\\\";\\n}\\n.jj jj-hmi-diagram .group-container .node-collapse {\\n  right: 29px;\\n  text-align: center;\\n}\\n.jj jj-hmi-diagram .group-container .node-collapse:after {\\n  content: \\\"-\\\";\\n}\\n.jj jj-hmi-diagram .group-container.collapsed .node-collapse:after {\\n  content: \\\"+\\\";\\n}\\n.jj jj-hmi-diagram .group-container .del[delete-all] {\\n  background-color: pink;\\n}\\n.jj jj-hmi-diagram .group-container.selected {\\n  opacity: 0.8;\\n}\\n.jj jj-hmi-diagram .hmi-groupbox {\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n  min-height: 3rem;\\n  background-color: whitesmoke;\\n}\\n.jj jj-hmi-diagram .group-image {\\n  display: flex;\\n  flex-direction: column;\\n  overflow: hidden;\\n  border: 1px solid #ccc;\\n}\\n.jj jj-hmi-diagram .group-image > .group-body {\\n  flex-grow: 1;\\n  background-size: cover;\\n  min-height: 100px;\\n  border: 5px solid white;\\n}\\n.jj jj-hmi-diagram .image-item img {\\n  width: auto;\\n  height: auto;\\n  border-radius: 0;\\n}\\n.jj jj-hmi-diagram .jtk-connector path {\\n  stroke-width: 1;\\n}\\n.jj jj-hmi-diagram .jtk-group-collapsed .w,\\n.jj jj-hmi-diagram .jtk-group-collapsed ul,\\n.jj jj-hmi-diagram .jtk-group-collapsed .container,\\n.jj jj-hmi-diagram .jtk-group-collapsed .name {\\n  display: none;\\n}\\n.jj jj-hmi-diagram .jtk-drag-hover {\\n  outline: 4px solid cornflowerblue;\\n}\\n.jj jj-hmi-diagram .katavorio-ghost-proxy {\\n  outline: 2px solid red;\\n}\\n.jj jj-hmi-diagram .w[objtype=\\\"table\\\"] {\\n  padding: 0;\\n  overflow: hidden;\\n}\\n.jj jj-hmi-diagram .w[objtype=\\\"table\\\"] > .table-wrap {\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n}\\n.jj jj-hmi-diagram .w[objtype=\\\"table\\\"] > .table-wrap > h4 {\\n  flex-grow: 0;\\n}\\n.jj jj-hmi-diagram .w[objtype=\\\"table\\\"] > .table-wrap > ul {\\n  flex-grow: 1;\\n  overflow: auto;\\n}\\n.jj jj-hmi-diagram[data-mode=\\\"runtime\\\"] .group-container .del,\\n.jj jj-hmi-diagram[data-mode=\\\"runtime\\\"] .group-container .node-collapse {\\n  display: none;\\n}\\n.jj jj-hmi-diagram[data-mode=\\\"runtime\\\"] .ep {\\n  display: none!important;\\n}\\n/* ==JJHmiIcon.640.class================ */\\n.jj jj-hmi-icon {\\n  position: relative;\\n  display: block;\\n  width: 100%;\\n  height: 100%;\\n  min-height: 10px;\\n  min-width: 10px;\\n  cursor: pointer;\\n  background-color: transparent;\\n}\\n.jj jj-hmi-icon * {\\n  pointer-events: none;\\n}\\n.jj jj-hmi-icon > img {\\n  width: 100%;\\n  height: 100%;\\n}\\n.jj jj-hmi-icon > img.filter-blue {\\n  filter: hue-rotate(60deg);\\n}\\n.jj jj-hmi-icon > img.filter-pink {\\n  filter: hue-rotate(120deg);\\n}\\n.jj jj-hmi-icon > img.filter-red {\\n  filter: hue-rotate(220deg);\\n}\\n.jj jj-hmi-icon > img.filter-gray {\\n  filter: brightness(0.1) contrast(0.2);\\n}\\n.jj jj-hmi-icon > img.filter-yellow {\\n  filter: hue-rotate(270deg);\\n}\\n.jj jj-hmi-icon > img.rotate {\\n  transform-origin: right bottom;\\n  transition: all 0.5s ease-out;\\n}\\n.jj jj-hmi-icon[readonly] {\\n  cursor: no-drop;\\n}\\n/* ==JJHmiDigital.640.class================ */\\n.jj jj-hmi-digital {\\n  position: relative;\\n  display: block;\\n  padding: 0.5rem;\\n  height: 100%;\\n  background-color: var(--dark);\\n  color: var(--info);\\n  text-align: right;\\n  margin: 0;\\n}\\n.jj jj-hmi-digital.font1 {\\n  font-family: 'digital-7.mono';\\n}\\n.jj jj-hmi-digital.font2 {\\n  font-family: 'ShareTechMono-Regular';\\n}\\n.jj jj-hmi-digital[readonly] {\\n  cursor: no-drop;\\n}\\n/* ==JJHmiPad.640.class================ */\\n.jj jj-hmi-pad {\\n  position: relative;\\n  display: block;\\n  width: 100%;\\n  height: 100%;\\n  background-color: var(--dark);\\n  overflow: hidden;\\n  padding: 12px;\\n}\\n.jj jj-hmi-pad .slider-pointer {\\n  font-size: 24px;\\n  color: white;\\n  left: 0;\\n  top: 0;\\n}\\n.jj jj-hmi-pad table {\\n  border-collapse: collapse;\\n  width: 100%;\\n  height: 100%;\\n}\\n.jj jj-hmi-pad table td {\\n  border: 1px solid #ccc;\\n}\\n.jj .w[data-hmi-element=\\\"jj-hmi-pad\\\"] {\\n  width: 200px;\\n  height: 200px;\\n}\\n/* ==JJHmiDevice.640.class================ */\\n.jj jj-hmi-device {\\n  position: relative;\\n  display: block;\\n  width: 100%;\\n  height: 100%;\\n  cursor: pointer;\\n  background-color: transparent;\\n}\\n.jj jj-hmi-device * {\\n  pointer-events: none;\\n}\\n.jj jj-hmi-device > img {\\n  width: 100%;\\n  height: 100%;\\n}\\n.jj jj-hmi-device.filter-blue img {\\n  filter: hue-rotate(60deg);\\n}\\n.jj jj-hmi-device.filter-pink img {\\n  filter: hue-rotate(120deg);\\n}\\n.jj jj-hmi-device.filter-red img {\\n  filter: hue-rotate(220deg);\\n}\\n.jj jj-hmi-device.filter-gray img {\\n  filter: brightness(0.1) contrast(0.2);\\n}\\n.jj jj-hmi-device.filter-yellow img {\\n  filter: hue-rotate(270deg);\\n}\\n.jj .w[data-hmi-element=\\\"jj-hmi-device\\\"] {\\n  width: 100px;\\n  height: 150px;\\n}\\n/* ==JJHmiImage.640.class================ */\\n.jj jj-hmi-image {\\n  position: relative;\\n  display: block;\\n  width: 100%;\\n  height: 100%;\\n  background-size: contain;\\n  background-repeat: no-repeat;\\n}\\n.jj .w[data-hmi-element=\\\"jj-hmi-image\\\"] {\\n  width: 500px;\\n  height: 300px;\\n}\\n/* ==JJHmiHtml.640.class================ */\\n.jj jj-hmi-html {\\n  position: relative;\\n  display: block;\\n  width: 100%;\\n  height: 100%;\\n  min-width: 20px;\\n}\\n/* ==JJHmiLine.640.class================ */\\n.jj jj-hmi-line {\\n  position: relative;\\n  display: block;\\n  width: 100%;\\n  height: 100%;\\n}\\n.jj .w[data-hmi-element=\\\"jj-hmi-line\\\"] {\\n  width: 300px;\\n  height: 10px;\\n}\\n/* ==JJHmiRealChart.640.class================ */\\n.jj jj-real-chart {\\n  position: relative;\\n  display: block;\\n  width: 100%;\\n  height: 100%;\\n  min-width: 20px;\\n  min-height: 20px;\\n  background-color: var(--dark);\\n}\\n/* ==JJHmiDial.640.class================ */\\n.jj jj-hmi-dial {\\n  position: relative;\\n  display: block;\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden;\\n}\\n.jj jj-hmi-dial .dial {\\n  width: 100%;\\n  height: 100%;\\n  border: 1px solid #ccc;\\n  display: block;\\n  position: relative;\\n  border-radius: 50%;\\n  background-size: contain;\\n  background-repeat: no-repeat;\\n}\\n.jj jj-hmi-dial .dial .mark {\\n  position: relative;\\n  display: block;\\n  margin: 10px auto;\\n  width: 10%;\\n  height: 10%;\\n  min-width: 15px;\\n  min-height: 15px;\\n  background-color: black;\\n  border-radius: 50%;\\n}\\n.jj jj-hmi-dial .dial-title {\\n  position: absolute;\\n  top: 40%;\\n  left: 50%;\\n  transform: translateX(-50%);\\n  z-index: 2;\\n}\\n.jj jj-hmi-dial[readonly] {\\n  cursor: no-drop;\\n}\\n/* ==HMISSEvents.640.class================ */\\n/* ==JJDao.710.pkg.deploy================ */\\n/* ==JJBatis.640.class================ */\\n/* ==JJBatisDBA.640.class================ */\\n/* ==JJDataExpoler.640.class================ */\\n.jj jj-data-expoler {\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n}\\n.jj jj-data-expoler > ul {\\n  flex-grow: 1;\\n}\\n.jj jj-data-expoler > .helper {\\n  flex: none;\\n  background-color: var(--light);\\n}\\n\",\"script\":\"/* ==appFont.class================ */\\n/* ==Core.710.pkg.deploy================ */\\n/* ==JJInit.640.class================ */\\n/**\\n * @classdesc JJ 모듈 관리를 위한 클래스\\n */\\nclass JJModule {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      activeAop: false,\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 모듈을 생성한다.\\n   * @example -\\n   */\\n  _render() {}\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {}\\n\\n  /**\\n   * @desc 이벤트를 삭제한다.\\n   * @example -\\n   */\\n  _clearEvent() {}\\n\\n  /**\\n   * @desc AopException 이벤트를 처리한다.\\n   * @example -\\n   */\\n  _onAopException() {\\n    let extFunctions = ['constructor', 'value'];\\n\\n    Object.getOwnPropertyNames(Object.getPrototypeOf(this)).forEach(\\n      propertyName => {\\n        if (\\n          !extFunctions.includes(propertyName) &&\\n          typeof this[propertyName] == 'function'\\n        ) {\\n          let orgName = '_org_' + propertyName;\\n\\n          this[orgName] = this[propertyName];\\n\\n          Object.defineProperty(this, orgName, {\\n            enumerable: false,\\n            configurable: false\\n          });\\n\\n          this[propertyName] = (...params) => {\\n            try {\\n              return this[orgName](...params);\\n            } catch (ex) {\\n              if (ex.constructor.name == 'JJAopException') {\\n                throw new JJAopException(propertyName, this, ex);\\n              } else if (ex.constructor.name == 'JJBizStop') {\\n                throw new JJBizStop(ex);\\n              } else {\\n                throw new JJAopException(propertyName, this, ex);\\n              }\\n            }\\n          };\\n        }\\n      }\\n    );\\n  }\\n\\n  /**\\n   * @desc 생성자\\n   * @param {Object} - 기본 옵션\\n   * @example -\\n   */\\n  constructor(options) {\\n    this.options = Object.assign(this._defaultOption(), options);\\n    this._render();\\n    this._setEvent();\\n    this.init();\\n  }\\n\\n  /**\\n   * @desc 옵션을 설정한다.\\n   * @param {Object} - 대상 옵션\\n   * @return {Object} - 변경된 옵션\\n   * @example -\\n   */\\n  setOptions(options) {\\n    Object.assign(this.options, options);\\n\\n    return this.options;\\n  }\\n\\n  /**\\n   * @desc 모듈을 초기화한다.\\n   * @param {Object} - 기본 옵션\\n   * @example -\\n   */\\n  init(options) {}\\n\\n  /**\\n   * @desc 모듈을 삭제한다.\\n   * @example -\\n   */\\n  destroy() {\\n    this._clearEvent();\\n  }\\n}\\n\\n/**\\n * @classdesc JJ 엘리먼트 관리를 위한 클래스\\n */\\nclass JJElement extends HTMLElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      require: [],\\n      activeAop: false,\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render() {}\\n\\n  /**\\n   * @desc 폼의 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setFromEvent() {}\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {}\\n\\n  /**\\n   * @desc 이벤트를 삭제한다.\\n   * @example -\\n   */\\n  _clearEvent() {}\\n\\n  /**\\n   * @desc jj-id, id 속성을 가진 엘리먼트를 설정한다.\\n   * @example -\\n   */\\n  _setElementId() {\\n    this.querySelectorAll('[jj-id],[id]').forEach(el => {\\n      let id = el.id || el.getAttribute('jj-id');\\n\\n      if (id) {\\n        this[id] = el;\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 엘리먼트의 jj-commend에서 메소드와 파라미터를 추출하여 등록한다.\\n   * @param {String} - 대상 커멘드 문자열\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _cmdParaApply(cmdString, event) {\\n    const methodReg = new RegExp(/\\\\w+|\\\\(.+\\\\)/, 'gm');\\n    const paraReg = new RegExp(/[a-zA-Z0-9가-힣-%/#._() ]+/, 'gm');\\n\\n    let method, paras;\\n    let methodSplit = cmdString.match(methodReg);\\n\\n    if (methodSplit) {\\n      method = methodSplit[0];\\n\\n      if (this[method]) {\\n        //event.preventDefault();\\n        event.stopPropagation();\\n        event.stopImmediatePropagation();\\n\\n        let para = methodSplit[1];\\n\\n        if (para) {\\n          para = para.startsWith('(') ? para.substr(1, 200) : para;\\n          para = para.endsWith(')') ? para.substr(0, para.length - 1) : para;\\n          paras = para.match(paraReg).map(p => {\\n            let ret;\\n\\n            switch (p) {\\n              case 'e':\\n                ret = event;\\n\\n                break;\\n              case 'null':\\n                ret = null;\\n\\n                break;\\n              default:\\n                ret = p;\\n            }\\n\\n            return ret;\\n          });\\n\\n          paras.push(event);\\n\\n          Reflect.apply(this[method], this, paras);\\n        } else {\\n          Reflect.apply(this[method], this, [event]);\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc AopException 이벤트를 처리한다.\\n   * @throw {JJAopException|JJBizStop} - 이벤트 처리에 대한 예외\\n   * @return {Function} - 지정된 함수 호출\\n   * @example -\\n   */\\n  _onAopException() {\\n    let extFunctions = ['constructor', 'value'];\\n\\n    Object.getOwnPropertyNames(Object.getPrototypeOf(this)).forEach(\\n      propertyName => {\\n        if (\\n          !extFunctions.includes(propertyName) &&\\n          typeof this[propertyName] == 'function'\\n        ) {\\n          let orgName = '_org_' + propertyName;\\n\\n          this[orgName] = this[propertyName];\\n\\n          Object.defineProperty(this, orgName, {\\n            enumerable: false,\\n            configurable: false\\n          });\\n\\n          this[propertyName] = (...params) => {\\n            try {\\n              return this[orgName](...params);\\n            } catch (ex) {\\n              if (ex.constructor.name == 'JJAopException') {\\n                throw new JJAopException(propertyName, this, ex);\\n              } else if (ex.constructor.name == 'JJBizStop') {\\n                throw new JJBizStop(ex);\\n              } else {\\n                throw new JJAopException(propertyName, this, ex);\\n              }\\n            }\\n          };\\n        }\\n      }\\n    );\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 삭제한다.\\n   * @example -\\n   */\\n  _destroy() {\\n    this._clearEvent();\\n    this.$empty();\\n  }\\n\\n  /**\\n   * @desc 생성자\\n   * @example -\\n   */\\n  constructor() {\\n    super();\\n\\n    this.options = Object.assign(this._defaultOption(), this.dataset);\\n\\n    if (this.options.activeAop) {\\n      this._onAopException();\\n    }\\n\\n    this.requirePromise = new Promise((resolv, reject) => {\\n      this.requireResolv = resolv;\\n    });\\n\\n    if (this.options.require) {\\n      Promise.all(\\n        this.options.require.map(item => Jinja.require.load(item))\\n      ).then(values => this.requireResolv(values));\\n    }\\n  }\\n\\n  /**\\n   * @desc 엘리먼트 옵션을 설정한다.\\n   * @param {Object} - 대상 옵션\\n   * @return {Object} - 변경된 옵션\\n   * @example -\\n   */\\n  setOptions(options) {\\n    Object.assign(this.options, options);\\n    return this.options;\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 초기화한다.\\n   * @example -\\n   */\\n  init() {}\\n\\n  /**\\n   * @desc 엘리먼트를 삭제한다.\\n   * @example -\\n   */\\n  destroy() {\\n    this.remove();\\n  }\\n\\n  /**\\n   * @desc 돔연결 이벤트 콜백을 처리한다.\\n   * @example -\\n   */\\n  connectedCallback() {\\n    this.containerForm = this.closest(`.jj-form`);\\n    this._render();\\n    this._setElementId();\\n    this._setFromEvent();\\n    this._setEvent();\\n    this.init();\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 Dom에 연결해제 후처리를 한다.\\n   * @example -\\n   */\\n  disconnectedCallback() {\\n    this._destroy();\\n  }\\n\\n  /**\\n   * @desc 엘리먼트 속성변경 이벤트 콜백을 처리한다.\\n   * @param {String} - 속성명\\n   * @param {*} - 이전값\\n   * @param {*} - 신규값\\n   * @example -\\n   */\\n  attributeChangedCallback(attrName, oldVal, newVal) {}\\n\\n  /**\\n   * @desc 엘리먼트 위치이동 이벤트 콜백을 처리한다.\\n   * @param {Document} - 이전문서\\n   * @param {Document} - 대상문서\\n   * @example -\\n   */\\n  adoptedCallback(oldDoc, newDoc) {}\\n}\\n\\n/**\\n * @classdesc JJ 컴포넌트 관리를 위한 클래스\\n */\\nclass JJElComponent {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      activeAop: false,\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 생성한다.\\n   * @example -\\n   */\\n  _render() {}\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {}\\n\\n  /**\\n   * @desc 이벤트를 삭제한다.\\n   * @example -\\n   */\\n  _clearEvent() {}\\n\\n  /**\\n   * @desc AopException 발생시 후처리를 한다.\\n   * @throw {JJAopException|JJBizStop} - \\n   * @return {} - \\n   * @example -\\n   */\\n  _onAopException() {\\n    let extFunctions = ['constructor', 'value'];\\n\\n    Object.getOwnPropertyNames(Object.getPrototypeOf(this)).forEach(\\n      propertyName => {\\n        if (\\n          !extFunctions.includes(propertyName) &&\\n          typeof this[propertyName] == 'function'\\n        ) {\\n          let orgName = '_org_' + propertyName;\\n\\n          this[orgName] = this[propertyName];\\n\\n          Object.defineProperty(this, orgName, {\\n            enumerable: false,\\n            configurable: false\\n          });\\n\\n          this[propertyName] = (...params) => {\\n            try {\\n              return this[orgName](...params);\\n            } catch (ex) {\\n              if (ex.constructor.name == 'JJAopException') {\\n                throw new JJAopException(propertyName, this, ex);\\n              } else if (ex.constructor.name == 'JJBizStop') {\\n                throw new JJBizStop(ex);\\n              } else {\\n                throw new JJAopException(propertyName, this, ex);\\n              }\\n            }\\n          };\\n        }\\n      }\\n    );\\n  }\\n\\n  /**\\n   * @desc 생성자\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  constructor(el, options) {\\n    this.options = Object.assign(this._defaultOption(), options);\\n\\n    if (this.options.activeAop) {\\n      this._onAopException();\\n    }\\n\\n    this.el = el;\\n\\n    this._render();\\n    this._setEvent();\\n    this.init();\\n  }\\n\\n  /**\\n   * @desc 옵션을 설정한다.\\n   * @param {Object} - 옵션\\n   * @return {Object} - 변경된 옵션\\n   * @example -\\n   */\\n  setOptions(options) {\\n    Object.assign(this.options, options);\\n\\n    return this.options;\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 초기화한다.\\n   * @example -\\n   */\\n  init() {}\\n\\n  /**\\n   * @desc 컴포넌트를 삭제한다.\\n   * @example -\\n   */\\n  destroy() {\\n    this._clearEvent();\\n    this.el = null;\\n  }\\n}\\n\\n/**\\n * @classdesc Aop 예외처리 관리를 위한 클래스\\n */\\nclass JJAopException extends Error {\\n  /**\\n   * @desc 생성자\\n   * @param {Function} - 대상 메소드\\n   * @param {Class} - 대상 클래스\\n   * @param {...*} - 기타 파라미터\\n   * @example -\\n   */\\n  constructor(method, sourceClass, ...params) {\\n    super(...params);\\n\\n    if (Error.captureStackTrace) {\\n      Error.captureStackTrace(this, JJAopException);\\n    }\\n\\n    this.innerEx = params[0];\\n    this.method = method;\\n    this.sourceClass = sourceClass;\\n  }\\n}\\n/* ==JJApplication.640.class================ */\\n\\n/**\\n * @constant {Class} Jinja - 모듈을 담을 객체\\n */\\nvar Jinja;\\n\\nif (!APP_MODE) {\\n  /**\\n   * @constant {String} - 어플리케이션 모드 구분값\\n   */\\n  var APP_MODE = new URL(document.location).searchParams.get('m') || 'run';\\n}\\n\\n/**\\n * @constant {String} - 디버깅 모드 구분값\\n */\\nconst DEBUG_MODE = new URL(document.location).searchParams.get('d') == 'y';\\n\\n/**\\n * @constant {String} - 어드민 모드 구분값\\n */\\nconst ADMIN_MODE = new URL(document.location).searchParams.get('a') == 'n';\\n\\n/**\\n * @constant {String} - 리로드 주기 구분값\\n */\\nconst RELOAD_CYCLE = new URL(document.location).searchParams.get('r');\\n\\n/**\\n * @constant {String} CDN_SERVER - CDN 서버 경로\\n */\\nconst CDN_SERVER = '';\\n\\n/**\\n * @constant {String} - 권한 구분값\\n * @default admin,dba\\n */\\nconst ROLE = 'admin,dba';\\n\\n/**\\n * @classdesc 어플리케이션 관리를 위한 클래스\\n */\\nclass JJApplication extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   */\\n  _defaultOption() {\\n    return {\\n      moduleOption: {},\\n      objClass: 'jj',\\n      appDomain: workspaceMeta.options.appInfo.siteDomain,\\n      activeAop: false,\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 어플리케이션을 초기화한다.\\n   * @example -\\n   */\\n  init() {\\n    this.classList.add(this.options.objClass);\\n    \\n    this.Jinja = Jinja = this;\\n    this.modulePromise = {};\\n    this.modulePromiseResolv = {};\\n    if(workspaceMeta.options.appInfo.siteDomain){\\n      document.domain = workspaceMeta.options.appInfo.siteDomain||\\\"appspeed.net\\\";\\n    }    \\n    if(workspaceMeta.options.style && workspaceMeta.options.style.colorClass){\\n      this.classList.add(workspaceMeta.options.style.colorClass);\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 모듈을 추가한다.\\n   * @param {String} - 모듈명 \\n   * @param {Class} - 모듈\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  addModule(name, moduleClass, options) {\\n    let _options = Object.assign(\\n      {\\n        app: this,\\n        moduleName: name,\\n      },\\n      this.options.moduleOption[name],\\n      options\\n    );\\n\\n    if (_options.dependency) {\\n      if (!this.modulePromise[_options.dependency]) {\\n        this.modulePromise[_options.dependency] = new Promise(\\n          (resolv, reject) => {\\n            this.modulePromiseResolv[_options.dependency] = resolv;\\n          }\\n        );\\n      }\\n\\n      this.modulePromise[_options.dependency].then(() => {\\n        this[name] = new moduleClass(_options);\\n\\n        if (this.modulePromiseResolv[name]) {\\n          this.modulePromiseResolv[name]();\\n        }\\n      });\\n    } else {\\n      this[name] = new moduleClass(_options);\\n\\n      if (this.modulePromiseResolv[name]) {\\n        this.modulePromiseResolv[name]();\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 모듈을 삭제한다.\\n   * @param {String} - 모듈명\\n   * @example -\\n   */\\n  removeModule(name) {\\n    this[name].destroy();\\n  }\\n}\\n\\ncustomElements.define('jj-application', JJApplication);\\n\\nif (!Jinja) {\\n  let el = document.createElement('jj-application');\\n\\n  document.body.appendChild(el);\\n}\\n/* ==JJLog.640.class================ */\\n\\n/**\\n * @classdesc JJ 로그 관리를 위한 클래스\\n */\\nclass JJLog extends JJModule {\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this._consolLogwarn();\\n\\n    this.oldDebug = console.debug;\\n    this.oldInfo = console.info;\\n    this.oldWarn = console.warn;\\n    this.oldError = console.error;\\n    this.oldLog = console.log;\\n\\n    console.debug = this._debug.bind(this);\\n    console.info = this._info.bind(this);\\n    console.warn = this._warn.bind(this);\\n    console.error = this._error.bind(this);\\n    console.log = this._log.bind(this);\\n\\n    console.todo = this._todo.bind(this);\\n\\n    this.options.isActive = true;\\n  }\\n\\n  /**\\n   * @desc console창에 AppSpeed 불법사용 경고 문구를 출력한다.\\n   * @example -\\n   */\\n  _consolLogwarn() {\\n    console.info(\\n      '%c AppSpeed의 소스를 이용하거나 개발모드에서 복사하는 행위는 불법으로 간주합니다.',\\n      'background: red; color: yellow; font-size: x-large'\\n    );\\n  }\\n\\n  /**\\n   * @desc JJLog 헤더 정보를 반환한다.\\n   * @return {Array} - 로그 헤더 정보\\n   * @example -\\n   */\\n  _logHead() {\\n    return [new Date().toLocaleString(), location.href];\\n  }\\n\\n  /**\\n   * @desc JJLog debug 로그를 남긴다.\\n   * @param {...*} - 기타 파라미터\\n   * @example -\\n   */\\n  _debug(...params) {\\n    this.oldDebug.apply(console, params);\\n\\n    console.trace();\\n  }\\n\\n  /**\\n   * @desc JJLog info 로그를 남긴다.\\n   * @param {...*} - 기타 파라미터\\n   * @example -\\n   */\\n  _info(...params) {\\n    if (this.options.isActive) {\\n      this.oldInfo.apply(console, params);\\n    }\\n  }\\n\\n  /**\\n   * @desc JJLog warn 로그를 남긴다.\\n   * @param {...*} - 기타 파라미터\\n   * @example -\\n   */\\n  _warn(...params) {\\n    if (this.options.isActive) {\\n      console.group();\\n\\n      this.oldInfo.apply(console, this._logHead());\\n      this.oldWarn.apply(console, params);\\n\\n      console.trace();\\n      console.groupEnd();\\n    }\\n  }\\n\\n  /**\\n   * @desc JJLog error 로그를 남긴다.\\n   * @param {...*} - 기타 파라미터\\n   * @example -\\n   */\\n  _error(...params) {\\n    if (params[0].type == 'jjHeeClose') return;\\n\\n    console.group();\\n\\n    this.oldInfo.apply(console, this._logHead());\\n    this.oldError.apply(console, params);\\n\\n    console.groupEnd();\\n  }\\n\\n  /**\\n   * @desc JJLog log 로그를 남긴다.\\n   * @param {...*} - 기타 파라미터\\n   * @example -\\n   */\\n  _log(...params) {\\n    this.oldLog.apply(console, params);\\n  }\\n\\n  /**\\n   * @desc JJLog log 로그를 남기고 Alert창을 호출한다.\\n   * @param {...*} - 기타 파라미터\\n   * @example -\\n   */\\n  _alert(...params) {\\n    if (this.options.isActive) {\\n      this._log(params);\\n      this.oldAlert.apply(window, [params.join('\\\\n')]);\\n    }\\n  }\\n\\n  /**\\n   * @desc todo 내용을 warn 로그로 남긴다.\\n   * @param {...*} - 기타 파라미터\\n   * @example -\\n   */\\n  _todo(...params) {\\n    if (this.options.isActive) {\\n      console.group();\\n\\n      this.oldInfo.apply(console, this._logHead());\\n      this.oldWarn.apply(console, params);\\n\\n      console.trace();\\n      console.groupEnd();\\n    }\\n  }\\n\\n  /**\\n   * @desc JJLog의 활성화여부를 설정한다.\\n   * @param {Boolean} - 활성화여부\\n   * @example -\\n   */\\n  setActive(isActive) {\\n    this.options.isActive = isActive;\\n  }\\n\\n  /**\\n   * @desc 모듈명을 반환한다.\\n   */\\n  who() {\\n    alert('JJLog');\\n  }\\n}\\n\\nJinja.addModule('log', JJLog);\\n/* ==JJEvent.640.class================ */\\n\\n/**\\n * @classdesc 이벤트 관리를 위한 클래스\\n */\\nclass JJEvent extends JJModule {\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this._events = {};\\n    this._eventTarget = Jinja || document.body;\\n  }\\n\\n  /**\\n   * @desc 이벤트가 발생하여 등록된 리스너를 찾아서 전달한다.\\n   * @param {String} - 이벤트 유형\\n   * @param {String} - 핸들러명\\n   * @param {Object} - 이벤트 데이터\\n   * @param {Object} - 이벤트 옵션\\n   * @example -\\n   */\\n  dispatch(eventType, handleName, eventData, eventOption) {\\n    if (this._events[eventType] === undefined) {\\n      //console.error(`EventMap:event()\\\\n 이벤트[${eventType}]를 ${handleName}가 발생하려는데 등록된 리스너가 없어서 발생시키지 않았습니다.`);\\n\\n      return;\\n    }\\n\\n    if (typeof handleName == 'string') {\\n      //console.info(`EventMap:event()\\\\n 이벤트[${eventType}]를 ${handleName}가 발생하였습니다.`);\\n\\n      this.getEventTarget(eventType).dispatchEvent(\\n        new CustomEvent(eventType, eventData, eventOption)\\n      );\\n    } else if (handleName === undefined) {\\n      console.debug(`EventMap:event()\\\\n 이벤트[${eventType}]를 알수없는 이름으로 발생하였습니다.`);\\n\\n      this.getEventTarget(eventType).dispatchEvent(\\n        new CustomEvent(eventType, eventData, eventOption)\\n      );\\n    } else if (typeof handleName == 'object') {\\n      console.debug(`EventMap:event()\\\\n 이벤트[${eventType}]를 알수없는 이름으로 발생하였습니다.`);\\n\\n      eventOption = eventData;\\n      eventData = handleName;\\n\\n      this.getEventTarget(eventType).dispatchEvent(\\n        new CustomEvent(eventType, eventData, eventOption)\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @desc 이벤트 대상을 반환한다.\\n   * @param {String} - 이벤트 유형\\n   * @return {Element} - 이벤트 대상\\n   * @example -\\n   */\\n  getEventTarget(eventType) {\\n    if (['popstate', 'hashchange', 'message'].includes(eventType)) {\\n      return window;\\n    } else {\\n      return this._eventTarget;\\n    }\\n  }\\n\\n  /**\\n   * @desc 이벤트 리스너를 반환한다.\\n   * @param {String} - 이벤트 유형\\n   * @param {String} - 핸들러명\\n   * @return {function} - 이벤트 리스너\\n   * @example -\\n   */\\n  get(eventType, handleName) {\\n    if (this._events[eventType]) {\\n      return this._events[eventType].get(handleName);\\n    } else {\\n      return null;\\n    }\\n  }\\n\\n  /**\\n   * @desc 이벤트 리스너를 등록한다.\\n   * @param {String} - 이벤트 유형\\n   * @param {String} - 핸들러명\\n   * @param {function} - 핸들러\\n   * @param {Boolean} - 수정여부\\n   * @example -\\n   */\\n  add(eventType, handleName, handler, isUpdate) {\\n    if (!this._events[eventType]) {\\n      this._events[eventType] = new Map();\\n\\n      this.getEventTarget(eventType).addEventListener(eventType, e => {\\n        for (let [handeName, handler] of this._events[eventType]) {\\n          if (e.cancelBubble) {\\n          } else {\\n            handler(e);\\n          }\\n        }\\n      },\\n      {\\n        passive: false,\\n        once: false,\\n        capture: true\\n      });\\n    } else {\\n      if (this._events[eventType].has(handleName) && !isUpdate) {\\n        if (!['edit', 'open'].includes(APP_MODE)) {\\n          console.error(`EventMap:add()\\\\n 등록된 이벤트 ${eventType}의 핸들러 [${handleName}]을 중복 등록 요청이 취소되었습니다..`);\\n        }\\n\\n        return;\\n      }\\n    }\\n\\n    this._events[eventType].set(handleName, handler);\\n  }\\n\\n  /**\\n   * @desc 이벤트 리스너를 삭제한다.\\n   * @param {String} - 이벤트 유형\\n   * @param {String} - 핸들러명\\n   * @example -\\n   */\\n  remove(eventType, handleName) {\\n    if (handleName) {\\n      this._events[eventType].delete(handleName);\\n    } else {\\n      this._events[eventType].clear();\\n    }\\n  }\\n\\n  /**\\n   * @desc 모듈명을 반환한다.\\n   */\\n  who() {\\n    alert('JJEvent');\\n  }\\n}\\n\\nJinja.addModule('event', JJEvent);\\n/* ==JJStore.640.class================ */\\n\\n/**\\n * @classdesc JJ Storage 관리를 위한 클래스\\n */\\nclass JJStore extends JJModule {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      \\\"apiVersion\\\": workspaceMeta.options.appInfo.apiVersion||\\\"v61\\\"\\n    };\\n  }    \\n  /**\\n   * @desc 스토리지를 초기화한다.\\n   * @example -\\n   */\\n  _render() {\\n    this._dataMap = new Map();\\n    this._myMemory = {};\\n  }\\n\\n  /**\\n   * @desc 개인변수를 기록함\\n   * @param {String} - 키\\n   * @param {String} - 데이터\\n   * @example - Jinja.store.setMymemory(\\\"개발모드\\\", \\\"100\\\")\\n   * \\n   */\\n  setMymemory(key, value){\\n    if (Jinja.uo.USER_ID){\\n      let itemKey = \\\"mymemory\\\"+ Jinja.uo.USER_ID;\\n      this._myMemory[key] = value;\\n      localStorage.setItem(itemKey, Jinja.global.string(this._myMemory));\\n    }\\n  }\\n  /**\\n   * @desc 개인변수를 읽어옮\\n   * @param {String} - 키\\n   * @param {String} - 초기데이터\\n   * @return {*} - 데이터\\n   * @example - Jinja.store.getMymemory(\\\"개발모드\\\")\\n   */\\n  getMymemory(key, defValue){\\n    let result;\\n    result = this._myMemory[key];\\n    if(result === undefined && defValue !== undefined){\\n      result = defValue;\\n      this.setMymemory(key, defValue);\\n    }\\n    return result;\\n  }\\n  /**\\n   * @desc 시작시 개인변수를 로컬스토리지에서 읽어옮\\n   * @example -\\n   */\\n  loadMymemory(){\\n    if (Jinja.uo && Jinja.uo.USER_ID){\\n      let itemKey = \\\"mymemory\\\"+ Jinja.uo.USER_ID;\\n      try{\\n        if(localStorage.getItem(itemKey)){\\n          this._myMemory = Jinja.global.json(localStorage.getItem(itemKey))||{};\\n        }\\n      }\\n      catch(e){\\n        this._myMemory = {};\\n      }  \\n    }\\n  }\\n  \\n  /**\\n   * @desc 지정한 데이터를 localStorage에 저장한다.\\n   * @param {String} - 키\\n   * @return {*} - 데이터\\n   * @example -\\n   */\\n  localStorage(key, data) {\\n    if (key.endsWith('.deploy')) return;\\n\\n    if (data === undefined) {\\n      return localStorage.getItem(key);\\n    } else {\\n      localStorage.setItem(key, data);\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 키의 localStorage 데이터를 삭제한다.\\n   * @param {String} - 키\\n   * @example -\\n   */\\n  localStorageClear(key) {\\n    if (key) {\\n      localStorage.removeItem(key);\\n    } else {\\n      localStorage.clear();\\n    }\\n  }\\n\\n  /**\\n   * @desc _dataMap 데이터를 저장하거나 반환한다.\\n   * @param {String} - 키\\n   * @return {*} - 데이터\\n   * @example -\\n   */\\n  dataMap(key, data) {\\n    if (data === undefined) {\\n      return this._dataMap.get(key);\\n    } else {\\n      this._dataMap.set(key, data);\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 키의 _dataMap 데이터를 삭제한다.\\n   * @param {String} - 키\\n   * @example -\\n   */\\n  dataMapClear(key) {\\n    this._dataMap.clear(key);\\n  }\\n\\n  /**\\n   * @desc 지정한 쿠키를 조회, 생성, 수정, 삭제한다.\\n   * @param {String} - 쿠키명\\n   * @param {Object} - 데이터\\n   * @param {Number} - 만료기간\\n   * @return {String} - 쿠키값\\n   * @example -\\n   */\\n  cookie(key, data, expireTime) {\\n    if (data === undefined) {\\n      return decodeURI(\\n        document.cookie.replace(\\n          new RegExp(`(?:(?:^|.*;\\\\\\\\s*)${key}\\\\\\\\s*\\\\\\\\=\\\\\\\\s*([^;]*).*$)|^.*$`),\\n          '$1'\\n        )\\n      );\\n    } else {\\n      data = Jinja.global.string(data);\\n\\n      if (expireTime) {\\n        let cur = new Date();\\n\\n        cur.setDate(cur.getDate() + expireTime);\\n\\n        document.cookie = `${encodeURI(key)}=${encodeURI(data)}; path=/; expires=${cur.toGMTString()};`;\\n      } else {\\n        document.cookie = `${encodeURI(key)}=${encodeURI(data)}; path=/;`;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 쿠키를 삭제한다.\\n   * @param {String} - 쿠키명\\n   * @example -\\n   */\\n  cookieClear(key) {\\n    let cur = new Date();\\n\\n    cur.setDate(cur.getDate() - 1);\\n\\n    document.cookie = `${encodeURI(key)}= ; expires=${cur.toGMTString()}; path=/`;\\n  }\\n\\n  /**\\n   * @desc 인증 쿠키를 반환한다.\\n   * @return {String} - 쿠키값\\n   * @example -\\n   */\\n  getAuthCookie() {\\n    let workspace;\\n    let keyName;\\n//     if(this.options.apiVersion == \\\"v61\\\"){\\n//       workspace = `${document.location.pathname.split('/')[2]}`;\\n//     }\\n//     else if(document.location.host.split(\\\".\\\")[1] == \\\"appspeed\\\" && document.location.host.split(\\\".\\\")[0].startsWith(\\\"dev710-\\\")) {\\n//       workspace = document.location.host.split(\\\".\\\")[0].replace(\\\"dev710-\\\",\\\"\\\");\\n//     }\\n//     else if(document.location.host.split(\\\".\\\")[1] == \\\"appspeed\\\") {\\n//       workspace = document.location.host.split(\\\".\\\")[0];\\n//     }\\n\\t\\tif(this.options.apiVersion == \\\"v61\\\"){\\n      if (document.location.pathname.split('/')[1] == \\\"apps\\\"){\\n        workspace = document.location.pathname.split('/')[2];\\n      } else if(document.location.host.split(\\\".\\\")[0].startsWith(\\\"dev710-\\\")){\\n        workspace = document.location.host.split(\\\".\\\")[0].replace(\\\"dev710-\\\",\\\"\\\");\\n      } else if(document.location.host.split(\\\".\\\")[1] == \\\"appspeed\\\"){\\n        workspace = document.location.host.split(\\\".\\\")[0];\\n      } else {\\n        workspace = \\\"studio\\\";\\n      }\\n    \\tkeyName = `${workspace}_${this.options.apiVersion}_${location.port || '80'}`;\\n    } else {\\n\\t\\t\\tkeyName = workspaceMeta.options.appInfo.cookie||`testappspeed`;      \\n    }    \\n    \\n    return this.cookie(keyName);\\n  }\\n\\n  /**\\n   * @desc 클립보드 데이터를 저장하거나 반환한다.\\n   * @param {*} - 대상 데이터\\n   * @return {*} - 클립보드 데이터\\n   * @example -\\n   */\\n  clipBoard(data) {\\n    if (data) {\\n      if (window.clipboardData) {\\n        window.clipboardData.setData('Text', text);\\n      } else if (navigator.clipboard) {\\n        navigator.clipboard.writeText(data);\\n      } else {\\n        Jinja.clipboardData = data;\\n      }\\n    } else {\\n      if (window.clipboardData) {\\n        return window.clipboardData.getData('Text');\\n      } else if (navigator.clipboard) {\\n        return navigator.clipboard.readText();\\n      } else {\\n        return Jinja.clipboardData;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 모듈명을 반환한다.\\n   */\\n  who() {\\n    alert('JJStore');\\n  }\\n}\\n\\nJinja.addModule('store', JJStore);\\n\\nJinja.event.add(\\\"jjAppStart\\\", \\\"store.getMymemory\\\", e=>{\\n  Jinja.store.loadMymemory();\\n});\\n\\n/* ==JJAjax.640.class================ */\\n\\n/**\\n * @classdesc 비동기 통신관리를 위한 클래스\\n */\\nclass JJAjax extends JJModule {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      \\\"apiVersion\\\": workspaceMeta.options.appInfo.apiVersion||\\\"v61\\\",\\n      \\\"ajaxOption\\\": {\\n        \\\"method\\\": '',\\n        \\\"credentials\\\": 'same-origin',\\n        \\\"headers\\\": {\\n          \\\"Accept\\\": 'application/json; charset=UTF-8',\\n          'Content-type': 'application/json; charset=UTF-8',\\n          \\\"Authorization\\\": workspaceMeta.options.otp || ''\\n        }\\n      }\\n    };\\n  }\\n\\n  /**\\n   * @desc 비동기화 네트워크 통신을 한다.\\n   * @param {String} - URL\\n   * @param {Object} - 옵션\\n   * @throws {JJAjaxException} - 통신오류 메세지\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  _fetch(url, options) {\\n    let ajaxOption = Object.assign({}, this.options.ajaxOption, options);\\n\\n    return fetch(url, ajaxOption)\\n      .then(response => {\\n      return Promise.all([response.ok, response.json()]);\\n    })\\n      .then(([responseOk, body]) => {\\n      if (responseOk) {\\n        return body;\\n      } else {\\n        throw body;\\n      }\\n    })\\n      .catch(ex => {\\n      if (ex.error) {\\n        throw new JJAjaxException(ex.error);\\n      } else {\\n        console.error(ex);\\n      }\\n    });\\n  }\\n\\n  init(){\\n    this.resourceCache ={};\\n    this.launcherCache ={};\\n    this.pathCache ={};\\n\\n    //     Jinja.event.add(\\\"jjAppStart\\\", \\\"ajax.CacheStart\\\", e=>{\\n\\n    //       if(workspaceMeta.options.appInfo.homeFolderId){\\n\\n    //         this.excute(`getRecursiveID.sql`, {\\n    //           \\\"id\\\": workspaceMeta.options.appInfo.homeFolderId\\n    //         })\\n    //           .then(result=>{\\n    //           let appsUri = \\\"\\\" ;\\n    //           if(document.location.pathname.split(\\\"/\\\")[1] == \\\"apps\\\"){\\n    //             appsUri = \\\"/apps/\\\"+document.location.pathname.split(\\\"/\\\")[2];\\n    //           }\\n    //           result.rows.forEach(row=>{\\n    //             this.resourceCache[row.URI]=row;\\n    //             if([\\\"page\\\", \\\"vhtml\\\"].includes(row.TYPE)){\\n    //               row.DEPTH_NAME =  \\\"/\\\" +row.DEPTH_NAME.split(\\\"/\\\").slice(1).join(\\\"/\\\");\\n    //               let _path = appsUri+ row.DEPTH_NAME;\\n    //               this.pathCache[_path]=row;\\n    //             }\\n    //           })\\n    //         })\\n    //       }\\n    //       let resources = [\\n    //         \\\"launcher.640.color.info\\\",\\n    //         \\\"launcher.640.well.info\\\",\\n    //         \\\"launcher.640.board.info\\\",\\n    //         \\\"launcher.640.sql.info\\\",\\n    //         \\\"launcher.640.api.info\\\",\\n    //         \\\"launcher.640.text.info\\\",\\n    //         \\\"launcher.640.calendar.info\\\",\\n    //         \\\"launcher.640.less.info\\\",\\n    //         \\\"launcher.640.javascript.info\\\",\\n    //         \\\"launcher.640.erd.info\\\",\\n    //         \\\"launcher.640.diagram.info\\\",\\n    //         \\\"launcher.640.html.info\\\",\\n    //         \\\"launcher.640.css.info\\\",\\n    //         \\\"launcher.640.theme.info\\\",\\n    //         \\\"launcher.640.deploy.info\\\",\\n    //         \\\"launcher.640.page.info\\\",\\n    //         \\\"launcher.640.component.info\\\",\\n    //         \\\"launcher.640.json.info\\\",\\n    //         \\\"launcher.640.word.info\\\",\\n    //         \\\"launcher.640.image.info\\\",\\n    //         \\\"launcher.640.vhtml.info\\\",\\n    //         \\\"launcher.640.workspace.info\\\",\\n    //         \\\"launcher.640.package.info\\\",\\n    //         \\\"launcher.640.menu.info\\\",\\n    //         \\\"launcher.640.formapp.info\\\",\\n    //         \\\"launcher.640.hmi.info\\\",\\n    //         \\\"launcher.640.yaml.info\\\"  \\n    //       ];\\n\\n    //       this.getResources(resources)\\n    //         .then(result=>{\\n    //         let urls = [];\\n    //         result.rows.forEach(row=>{\\n    //           this.resourceCache[row.URI] = row;\\n    //           row._body = Jinja.global.json(row.BODY);\\n\\n    //           if(row._body.studio) \\turls.push(row._body.studio);\\n    //           if(row._body.runtime) urls.push(row._body.runtime);\\n\\n    //           this.launcherCache[row._body.name] = row._body;\\n    //         })\\n\\n    //         return urls;\\n    //       })\\n    //         .then(urls=>this.getResources(urls))\\n    //         .then(result=>result.rows.forEach(row=>this.resourceCache[row.URI]=row))\\n    //     });\\n  }\\n\\n\\n  /**\\n   * @desc 비동기화 네트워크 통신으로 데이터를 조회한다.\\n   * @param {String} - URL\\n   * @param {Object} - 조회 조건\\n   * @param {Object} - 옵션\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  get(url, data, options) {\\n    return this._fetch(\\n      Jinja.global.map2getPara(url, data),\\n      Object.assign(\\n        {\\n          method: 'GET'\\n        },\\n        options\\n      )\\n    );\\n  }\\n\\n  /**\\n   * @desc 비동기화 네트워크 통신으로 데이터를 저장한다.\\n   * @param {String} - URL\\n   * @param {Object} - 데이터\\n   * @param {Object} - 옵션\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  post(url, data, options) {\\n    return this._fetch(\\n      url,\\n      Object.assign(\\n        {\\n          method: 'POST',\\n          body: Jinja.global.string(data) || '{}'\\n        },\\n        options\\n      )\\n    );\\n  }\\n\\n  /**\\n   * @desc 비동기화 네트워크 통신으로 데이터를 수정한다.\\n   * @param {String} - URL\\n   * @param {Object} - 데이터\\n   * @param {Object} - 옵션\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  patch(url, data, options) {\\n    return this._fetch(\\n      url,\\n      Object.assign(\\n        {\\n          method: 'PATCH',\\n          body: Jinja.global.string(data) || '{}'\\n        },\\n        options\\n      )\\n    );\\n  }\\n\\n  /**\\n   * @desc 비동기화 네트워크 통신으로 데이터를 삭제한다.\\n   * @param {String} - URL\\n   * @param {Object} - 데이터\\n   * @param {Object} - 옵션\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  delete(url, data, options) {\\n    return this._fetch(\\n      Jinja.global.map2getPara(url, data),\\n      Object.assign(\\n        {\\n          method: 'DELETE'\\n        },\\n        options\\n      )\\n    );\\n  }\\n\\n  /**\\n   * @desc 지정한 파일을 조회하여 JSON 데이터로 반환한다.\\n   * @param {String} - URI\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  getJson(uri) {\\n    return this.get(`/${this.options.apiVersion}/site/fileUri/${uri}`);\\n  }\\n\\n\\n  jBatisSvcExcute(svcUri, para){\\n    return this.post(`/${this.options.apiVersion}/jbatis/${workspaceMeta.options.appInfo.jbatisId}/excute/get/${svcUri}`, para)\\n      .catch(e=>{\\n      alert(`ajax excute \\\"${uri}\\\" 실행이 실패하였습니다.`)\\n    })\\n  }\\n\\n  excute(uri, para){\\n    return this.post(`/${this.options.apiVersion}/jbatis/studio/excute/get/${uri}`, para)\\n      .catch(e=>{\\n      alert(`ajax excute \\\"${uri}\\\" 실행이 실패하였습니다.`)\\n    })\\n  }\\n\\n  getResourceUri(uri){\\n    return this.post(`/${this.options.apiVersion}/site/resource/${uri}`)\\n      .catch(e=>{\\n      alert(`ajax getResourceUri \\\"${uri}\\\" 실행이 실패하였습니다.`)\\n    })\\n  }\\n\\n  getJsonFileUri(uri, options){\\n    let url = `/${this.options.apiVersion}/site/fileUri/${uri}`;\\n    let ajaxOption = Object.assign({}, \\n        this.options.ajaxOption,\\n        {\\n      \\t\\tmethod: 'GET'\\n    \\t\\t},\\n\\t\\t\\t\\toptions);\\n    \\n    return fetch(url, ajaxOption)\\n      .then(response => {\\n      return Promise.all([response.ok, response.text()]);\\n    })\\n      .then(([responseOk, body]) => {\\n      if (responseOk) {\\n        return Jinja.global.json(body);\\n      } else {\\n        throw body;\\n      }\\n    })\\n      .catch(ex => {\\n      alert(`ajax getJsonFileUri \\\"${uri}\\\" 실행이 실패하였습니다.`)\\n    });\\n  }  \\n\\n\\n  getResources(resources){\\n    return  this.excute('getResource.sql', {\\n      \\\"uri\\\": resources\\n    })\\n      .catch(e=>{\\n      alert(`ajax excute \\\"${uri}\\\" 실행이 실패하였습니다.`)\\n    })\\n  }  \\n\\n\\n  /**\\n   * @desc 외부 네트워크 통신을 한다.(method : get)\\n   * @param {String} - URL\\n   * @param {Object} - 조회조건\\n   * @param {Object} - 옵션\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  proxyGet(url, data, option) {\\n    data.url = url;\\n\\n    let defaultOption = {\\n      method: 'POST',\\n      credentials: 'same-origin',\\n      headers: {\\n        Accept: 'application/json; charset=UTF-8',\\n        'Content-type': 'application/json; charset=UTF-8'\\n      },\\n      body: Jinja.global.string(data)\\n    };\\n\\n    Object.assign(defaultOption, option);\\n\\n    return this._fetch(`/${this.options.apiVersion}/proxy/get`, defaultOption);\\n  }\\n\\n  /**\\n   * @desc 외부 네트워크 통신을 한다.(method : post)\\n   * @param {String} - URL\\n   * @param {Object} - 데이터\\n   * @param {Object} - 옵션\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  proxyPost(url, data, option) {\\n    data.url = url;\\n\\n    let defaultOption = {\\n      method: 'POST',\\n      credentials: 'same-origin',\\n      headers: {\\n        Accept: 'application/json; charset=UTF-8',\\n        'Content-type': 'application/json; charset=UTF-8'\\n      },\\n      body: Jinja.global.string(data)\\n    };\\n\\n    Object.assign(defaultOption, option);\\n\\n    return this._fetch(`/${this.options.apiVersion}/proxy/post`, defaultOption);\\n  }\\n\\n  /**\\n   * @see {@link https://github.com/camsong/fetch-jsonp|GitHub}\\n   * @licence MIT\\n   * @desc JSONP 네트워크 통신을 한다.\\n   * @param {String} - URL\\n   * @param {Object} - 데이터\\n   * @param {Object} - 옵션\\n   * @return {Promise} - 실행결과\\n   * @example -\\n   */\\n  fetchJsonp(_url, data = {}, options = {}) {\\n    const defaultOptions = {\\n      timeout: 5000,\\n      jsonpCallback: 'jsoncallback',\\n      jsonpCallbackFunction: null\\n    };\\n\\n    let url = _url;\\n    const timeout = options.timeout || defaultOptions.timeout;\\n    const jsonpCallback = options.jsonpCallback || defaultOptions.jsonpCallback;\\n\\n    if (data) {\\n      if (!url.endsWith('?')) url += '?';\\n\\n      url += Object.keys(data)\\n        .map(function (k) {\\n        return encodeURIComponent(k) + '=' + encodeURIComponent(data[k]);\\n      })\\n        .join('&');\\n    }\\n\\n    let timeoutId;\\n\\n    return new Promise((resolve, reject) => {\\n      const callbackFunction =\\n            options.jsonpCallbackFunction || this.generateCallbackFunction();\\n      const scriptId = `${jsonpCallback}_${callbackFunction}`;\\n\\n      window[callbackFunction] = response => {\\n        resolve(Promise.resolve(response));\\n        if (timeoutId) clearTimeout(timeoutId);\\n        this.removeScript(scriptId);\\n        this.clearFunction(callbackFunction);\\n      };\\n\\n      url += url.indexOf('?') === -1 ? '?' : '&';\\n\\n      const jsonpScript = document.createElement('script');\\n\\n      jsonpScript.setAttribute('src', `${url}${jsonpCallback}=${callbackFunction}`);\\n\\n      if (options.charset) {\\n        jsonpScript.setAttribute('charset', options.charset);\\n      }\\n\\n      jsonpScript.id = scriptId;\\n\\n      document.getElementsByTagName('head')[0].appendChild(jsonpScript);\\n\\n      timeoutId = setTimeout(() => {\\n        reject(new Error(`JSONP request to ${_url} timed out`));\\n\\n        this.clearFunction(callbackFunction);\\n        this.removeScript(scriptId);\\n\\n        window[callbackFunction] = () => {\\n          this.clearFunction(callbackFunction);\\n        };\\n      }, timeout);\\n\\n      jsonpScript.onerror = () => {\\n        reject(new Error(`JSONP request to ${_url} failed`));\\n\\n        this.clearFunction(callbackFunction);\\n        this.removeScript(scriptId);\\n\\n        if (timeoutId) clearTimeout(timeoutId);\\n      };\\n    });\\n  }\\n\\n  /**\\n   * @desc 콜백함수를 생성한다.\\n   * @example -\\n   */\\n  generateCallbackFunction() {\\n    return `jsonp_${Date.now()}_${Math.ceil(Math.random() * 100000)}`;\\n  }\\n\\n  /**\\n   * @desc 지정한 함수를 삭제한다.\\n   * @param {String} - 함수명\\n   * @example -\\n   */\\n  clearFunction(name) {\\n    try {\\n      delete window[name];\\n    } catch (e) {\\n      window[name] = undefined;\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 스크립트를 삭제한다.\\n   * @param {String} - 대상아이디\\n   * @example -\\n   */\\n  removeScript(id) {\\n    const script = document.getElementById(id);\\n\\n    if (script) {\\n      document.getElementsByTagName('head')[0].removeChild(script);\\n    }\\n  }\\n\\n  /**\\n   * @desc 이미지를 업로드한다.\\n   * @param {File} 파일 목록\\n   * @param {Object} - 옵션\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  imageUpload(files, options) {\\n    let url = `/${this.options.apiVersion}/driver/upload/create`;\\n    let formData = new FormData();\\n\\n    for (let index in files) {\\n      let file = files[index];\\n\\n      formData.append('file[' + index + ']', file);\\n    }\\n\\n    let defaultOption = {\\n      method: 'POST',\\n      credentials: 'same-origin',\\n      headers: {\\n        Accept: 'application/json; charset=UTF-8',\\n        Authorization: workspaceMeta.options.otp || ''\\n      },\\n      body: formData\\n    };\\n\\n    Object.assign(defaultOption, options);\\n\\n    return this._fetch(url, defaultOption);\\n  }\\n\\n  /**\\n   * @desc 이미지를 업로드한다.\\n   * @param {File} 파일 목록\\n   * @param {Object} - 옵션\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  imageUploadApps(files, options) {\\n    let workspace = workspaceMeta.options.appInfo.workspaceUri;\\n\\n    if(!workspace) {\\n      alert('워크스페이스가 설정되지 않았습니다.');\\n\\n      return false;\\n    }\\n\\n    let url = `/apps/${workspace}/${this.options.apiVersion}/driver/upload/create`;\\n    let formData = new FormData();\\n\\n    for (let index in files) {\\n      let file = files[index];\\n\\n      formData.append('file[' + index + ']', file);\\n    }\\n\\n    let defaultOption = {\\n      method: 'POST',\\n      credentials: 'same-origin',\\n      headers: {\\n        Accept: 'application/json; charset=UTF-8',\\n        Authorization: workspaceMeta.options.otp || ''\\n      },\\n      body: formData\\n    };\\n\\n    Object.assign(defaultOption, options);\\n\\n    return this._fetch(url, defaultOption);\\n  }\\n\\n  /**\\n   * @desc 사용자 사진을 업로드한다.\\n   * @param {File} 파일\\n   * @param {Object} - 옵션\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  myImageUpload(files, options) {\\n    let url = `/${this.options.apiVersion}/driver/upload/myimage`;\\n    let formData = new FormData();\\n\\n    formData.append('file[0]', files[0]);\\n\\n    let defaultOption = {\\n      method: 'POST',\\n      credentials: 'same-origin',\\n      headers: {\\n        Accept: 'application/json; charset=UTF-8',\\n        Authorization: workspaceMeta.options.otp || ''\\n      },\\n      body: formData\\n    };\\n\\n    Object.assign(defaultOption, options);\\n\\n    return this._fetch(url, defaultOption);\\n  }\\n\\n  /**\\n   * @desc 엑셀파일을 업로드한다.\\n   * @param {String} - URL\\n   * @param {File} - 파일목록\\n   * @param {Object} - 옵션\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  excelUpload(url, files, options) {\\n    let formData = new FormData();\\n\\n    for (let index in files) {\\n      let file = files[index];\\n\\n      formData.append('file[' + index + ']', file);\\n    }\\n\\n    let defaultOption = {\\n      method: 'POST',\\n      credentials: 'same-origin',\\n      headers: {\\n        Accept: 'application/json; charset=UTF-8',\\n        Authorization: workspaceMeta.options.otp || '',\\n      },\\n      body: formData,\\n    };\\n\\n    Object.assign(defaultOption, options);\\n\\n    return this._fetch(url, defaultOption);\\n  }\\n\\n  /**\\n   * @desc 지정한 웹페이지의 정보를(meta) 조회한다.\\n   * @param {String} - URL\\n   * @param {String} - 데이터 케릭터셋\\n   * @return {Object} - 웹페이지정보\\n   * @example -\\n   */\\n  getLinkInfo(url, charset) {\\n    charset = charset || 'utf-8';\\n    charset = charset.toLowerCase();\\n\\n    let result = {\\n      url: url,\\n      charset: charset,\\n      title: '',\\n      description: '',\\n      image: '',\\n      iframe: ''\\n    };\\n\\n    return this.post('/v61/proxy/getWebPage', {\\n      url: url,\\n      charset: charset\\n    })\\n      .then(data => {\\n      let charset = getTag(/<meta(?=.*charset(\\\\s+)?=(\\\\s+)?['\\\"]?([^\\\"')]*))/gm,data.result);\\n\\n      if (charset) {\\n        charset = charset.toLowerCase();\\n\\n        if (charset != charset) {\\n          return this.getLinkInfo(url, charset);\\n        }\\n      }\\n\\n      if (data.result.length < 10000) {\\n        result.iframe = getTag(/(?=.*iframe)(?=.*allowfullscreen).*src=\\\"([^\\\")]*)\\\"/gm, data.result);\\n\\n        if (result.iframe) {\\n          if (result.iframe.startsWith('http')) {\\n          } else {\\n            result.iframe = getHost(url) + iframe;\\n          }\\n\\n          return this.getLinkInfo(result.iframe, charset);\\n        }\\n      }\\n\\n      result.title = getTag(/<title>([^<]+)<\\\\/title>/gm, data.result);\\n\\n      if (!result.title) {\\n        title = getTag(/<meta(\\\\s+)property(\\\\s+)?=(\\\\s+)?\\\"og\\\\:title\\\"(\\\\s+)?content(\\\\s+)?=(\\\\s+)?\\\"([^\\\")]*)\\\"/gm, data.result);\\n      }\\n\\n      if (!result.title) {\\n        result.title = getTag(/meta\\\\sname\\\\=\\\\\\\"title\\\\\\\"\\\\scontent=\\\"([^\\\"]*)\\\"/gm,data.result);\\n      }\\n\\n      if (!result.title) {\\n        result.title = getTag(/<meta(?=.*og\\\\:title)(?=.*content(\\\\s+)?\\\\=(\\\\s+)?\\\"([^\\\")]*))/gm, data.result);\\n      }\\n\\n      if (!result.title) {\\n        result.title = getTag(/<title>([^<]+)<\\\\/title>/gm, data.result);\\n      }\\n\\n      result.description = getTag(/meta\\\\sname\\\\=\\\\\\\"description\\\\\\\"\\\\scontent=\\\"([^\\\"]*)\\\"/gm, data.result);\\n\\n      if (!result.description) {\\n        result.description = getTag(/<meta(?=.*og\\\\:description)(?=.*content(\\\\s+)?\\\\=(\\\\s+)?\\\"([^\\\")]*))/gm, data.result);\\n      }\\n\\n      result.image = getTag(/<meta(\\\\s+)property(\\\\s+)?=(\\\\s+)?\\\"og\\\\:image\\\"(\\\\s+)?content(\\\\s+)?=(\\\\s+)?\\\"([^\\\")]*)\\\"/gm, data.result);\\n\\n      if (!result.image) {\\n        result.image = getTag(/<meta(?=.*og\\\\:image)(?=.*content(\\\\s+)?\\\\=(\\\\s+)?\\\"([^\\\")]*))/gm, data.result);\\n      }\\n\\n      if (result.image) {\\n        if (result.image.startsWith('http')) {\\n        } else {\\n          result.image = getHost(result.url) + result.image;\\n        }\\n      }\\n\\n      result.html = `<div class=\\\"media\\\">`;\\n\\n      if (result.image) {\\n        result.html += `<img class=\\\"img-responsive\\\" src=\\\"${result.image}\\\">`;\\n      }\\n\\n      result.html += `<div class=\\\"media-body\\\">`;\\n      result.html += `<h4 class=\\\"media-heading\\\"><a href=\\\"${result.url}\\\" target=\\\"_blank\\\">${result.title}</a></h4>`;\\n\\n      if (result.description) {\\n        result.html += `<p>${result.description}</p>`;\\n      }\\n\\n      result.html += `</div>`;\\n      result.html += `</div>`;\\n\\n      return result;\\n    })\\n      .catch(ex => {\\n      return ex;\\n    });\\n\\n    function getHost(url) {\\n      return url.split('/').splice(0, 3).join('/');\\n    }\\n\\n    function getTag(regex, text) {\\n      let result, m;\\n\\n      while ((m = regex.exec(text)) !== null) {\\n        if (m.index === regex.lastIndex) {\\n          regex.lastIndex++;\\n        }\\n\\n        m.forEach((match, groupIndex) => {\\n          if (\\n            groupIndex > 0 &&\\n            !result &&\\n            match &&\\n            match.trim() &&\\n            match != 'undefined'\\n          ) {\\n            result = match;\\n          }\\n        });\\n      }\\n\\n      return decode(result);\\n    }\\n\\n    function decode(text) {\\n      let result = text;\\n\\n      if (text) {\\n        let textarea = document.createElement('textarea');\\n\\n        textarea.innerHTML = text;\\n        result = textarea.value;\\n      }\\n\\n      return result;\\n    }\\n  }\\n\\n  /**\\n   * @desc 모듈명을 반환한다.\\n   * @example -\\n   */\\n  who() {\\n    alert('JJAjax');\\n  }\\n}\\n\\nJinja.addModule('ajax', JJAjax);\\n/* ==JJDom.640.class================ */\\n\\n/**\\n * @classdesc Dom 관리를 위한 클래스\\n */\\nclass JJDom extends JJModule {\\n  /**\\n   * @desc selectors에 매칭되는 가장가까운 상위객체를 반환한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {Element} - 조건 셀렉터\\n   * @param {Element} - 최상위 엘리먼트\\n   * @return {Element} - 가장 가까운 상위 엘리먼트\\n   * @example -\\n   */\\n  closest(el, selectors, root) {\\n    let elem = el;\\n    let result;\\n\\n    for (; elem && elem !== (root || this.options.app.el); elem = elem.parentNode) {\\n      if (!elem.matches) break;\\n      if (elem.matches(selectors) ) {\\n        result = elem;\\n        \\n        break;\\t\\t\\t\\t\\t\\t\\n      }\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc selectors에 매칭되는 모든 상위객체를 반환한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {Element} - 조건 셀렉터\\n   * @param {Element} - 최상위 엘리먼트\\n   * @return {Array} - 상위객체 목록\\n   * @example -\\n   */\\n  closestAll(el, selectors, root) {\\n    let elem = el;\\n    let result = [];\\n\\n    for (; elem && elem !== (root || this.options.app.el); elem = elem.parentNode) {\\n      if (elem.matches(selectors)) {\\n        result.push(elem);\\n      }\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 상위객체 목록을 반환한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {Element} - 최상위 엘리먼트\\n   * @param {Element} - 조건 셀렉터\\n   * @return {Array} - 상위객체 목록\\n   * @example -\\n   */\\n  parents(el, root, selectors) {\\n    let elem = el;\\n    let result = [];\\n\\n    for (\\n      ;\\n      elem && elem !== (root || this.options.app.el);\\n      elem = elem.parentElement\\n    ) {\\n      if (selectors) {\\n        if (elem.matches(selectors)) {\\n          result.push(elem);\\n        }\\n      } else {\\n        result.push(elem);\\n      }\\n    }\\n\\n    return result.reverse();\\n  }\\n\\n  /**\\n   * @desc 엘리먼트 안의 가장 첫번째 자식으로 추가한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {Element} - 추가할 Html\\n   * @return {Element} - 추가된 엘리먼트\\n   * @example -\\n   */\\n  prepend(el, html) {\\n    el.insertAdjacentHTML('afterbegin', html);\\n\\n    return el.firstElementChild;\\n  }\\n\\n  /**\\n   * @desc 엘리먼트 안의 가장 마지막 자식으로 추가한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {Element} - 추가할 Html\\n   * @return {Element} - 추가된 엘리먼트\\n   * @example -\\n   */\\n  append(el, html) {\\n    el.insertAdjacentHTML('beforeend', html);\\n\\n    return el.lastElementChild;\\n  }\\n\\n  /**\\n   * @desc 엘리먼트 앞에 추가한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {Element} - 추가할 Html\\n   * @return {Element} - 추가된 엘리먼트\\n   * @example -\\n   */\\n  before(el, html) {\\n    el.insertAdjacentHTML('beforebegin', html);\\n\\n    return el.before;\\n  }\\n\\n  /**\\n   * @desc 엘리먼트 뒤에 추가한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {Element} - 추가할 Html\\n   * @return {Element} - 추가된 엘리먼트\\n   * @example -\\n   */\\n  after(el, html) {\\n    el.insertAdjacentHTML('afterend', html);\\n\\n    return el.after;\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 삭제한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  remove(el) {\\n    if (el) {\\n      this.empty(el);\\n\\n      el.remove();\\n    }\\n  }\\n\\n  /**\\n   * @desc 엘리먼트의 자식을 모두 삭제한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @return {Element} - 변경된 엘리먼트\\n   * @example -\\n   */\\n  empty(el) {\\n    if (el) {\\n      while (el.firstChild) {\\n        if (el.firstChild.childNodes.length > 0) {\\n          this.empty(el.firstChild);\\n        }\\n\\n        el.removeChild(el.firstChild);\\n      }\\n    }\\n\\n    return el;\\n  }\\n\\n  /**\\n   * @desc 엘리먼트에 고유 식별자 아이디를 부여한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @return {Element} - 변경된 엘리먼트\\n   * @example -\\n   */\\n  uuid(el) {\\n    el.id = Jinja.global.uuid();\\n\\n    return el;\\n  }\\n\\n  /**\\n   * @desc 엘리먼트가 상위엘리먼트에서 위치하는 순번을 반환한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @return {Number} - 순번\\n   * @example -\\n   */\\n  findIndex(el, child) {\\n    let result = -1;\\n    let nodeIndex = 0;\\n    let node = el.firstElementChild;\\n\\n    if (node == child) {\\n      result = nodeIndex;\\n    } else {\\n      node = node.nextElementSibling;\\n\\n      nodeIndex++;\\n\\n      while (node) {\\n        if (node == child) {\\n          result = nodeIndex;\\n\\n          break;\\n        }\\n\\n        node = node.nextElementSibling;\\n\\n        nodeIndex++;\\n      }\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 엘리먼트의 Visible 여부를 반환한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @return {Boolean} - Visible 여부\\n   * @example -\\n   */\\n  isVisible(el) {\\n    while (el) {\\n      if (el === document) {\\n        return true;\\n      }\\n\\n      let $style = window.getComputedStyle(el, null);\\n\\n      if (!el) {\\n        return false;\\n      } else if (!$style) {\\n        return false;\\n      } else if ($style.display === 'none') {\\n        return false;\\n      } else if ($style.visibility === 'hidden') {\\n        return false;\\n      } else if (+$style.opacity === 0) {\\n        return false;\\n      } else if (\\n        ($style.display === 'block' || $style.display === 'inline-block') &&\\n        $style.height === '0px' &&\\n        $style.overflow === 'hidden'\\n      ) {\\n        return false;\\n      } else {\\n        return $style.position === 'fixed' || this.isVisible(el.parentNode);\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 엘리먼트의 목록 중에서 Visible 상태인 목록을 반환한다.\\n   * @param {Array} - 대상 엘리먼트 목록\\n   * @return {Array} - Visible 상태인 엘리먼트 목록\\n   * @example -\\n   */\\n  visibleList(elList) {\\n    return Array.prototype.slice.call(elList).filter(el => this.isVisible(el));\\n  }\\n\\n  /**\\n   * @desc 엘리먼트 자식들 중에서 지정한 조건에 맞고 Visible 상태인 목록을 반환한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {Element} - 조건 셀렉터\\n   * @return {Array} - Visible 상태인 엘리먼트 목록\\n   * @example -\\n   */\\n  visibleFilter(el, match) {\\n    let result = [];\\n\\n    el.querySelectorAll(match).forEach(el => {\\n      if (this.isVisible(el)) {\\n        result.push(el);\\n      }\\n    });\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 키보드 이동같이 객체를 이동할때 스크롤 범위를 벗어나면 자동으로 보이는 위치까지 이동시켜준다.\\n   * @param {Element} - 부모 엘리먼트\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {Number} - 여백 라인수\\n   * @return {} - \\n   * @example -\\n   */\\n  visibleScroll(parent, selectEl, offsetRows) {\\n    offsetRows = offsetRows || 3;\\n\\n    if (\\n      selectEl.offsetTop + selectEl.offsetHeight * offsetRows > parent.offsetHeight + parent.scrollTop\\n    ) {\\n      parent.scrollTop = selectEl.offsetTop + selectEl.offsetHeight * offsetRows - parent.offsetHeight;\\n    } else if (\\n      selectEl.offsetTop + selectEl.offsetHeight - selectEl.offsetHeight * offsetRows < parent.scrollTop\\n    ) {\\n      parent.scrollTop = selectEl.offsetTop + selectEl.offsetHeight - selectEl.offsetHeight * offsetRows;\\n    }\\n  }\\n\\n  /**\\n   * @desc 엘리먼트의 위치정보를 반환한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {Element} - \\n   * @param {Element} - \\n   * @return {Object} - 엘리먼트 위치정보\\n   * @example -\\n   */\\n  position(el, containment, coverEl) {\\n    if (!containment) containment = Jinja;\\n\\n    let x = el.getBoundingClientRect().x;\\n    let y = el.getBoundingClientRect().y + containment.scrollTop;\\n    let y2 = el.getBoundingClientRect().y - containment.scrollTop;\\n    let y3 =\\n      el.getBoundingClientRect().y - containment.getBoundingClientRect().y;\\n\\n    let w = window.getComputedStyle(el).width;\\n\\n    w = el.offsetWidth;\\n\\n    let h = el.offsetHeight;\\n\\n    if (coverEl) {\\n      coverEl.style.top = y + 'px';\\n      coverEl.style.left = x + 'px';\\n      coverEl.style.width = w + 'px';\\n      coverEl.style.height = h + 'px';\\n      coverEl.style.display = 'block';\\n    }\\n\\n    return {\\n      x: x,\\n      y: y,\\n      y2: y2,\\n      y3: y3,\\n      w: w,\\n      h: h,\\n      containment: containment\\n    };\\n  }\\n\\n  /**\\n   * @desc 포지션 값을 반환한다.\\n   * @param {Event} - Drop 이벤트\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {Object} - 대상 Object\\n   * @param {Number} - 기준값\\n   * @return {Object} - 포지션 정보\\n   * @example -\\n   */\\n  dropPosition(dropEvent, target, targetObject, abs) {\\n    let dropPosition = 'inner';\\n    let x = target.getBoundingClientRect().x - targetObject.getBoundingClientRect().x;\\n    let y = target.getBoundingClientRect().y - targetObject.getBoundingClientRect().y;\\n    let h = target.offsetHeight;\\n    let w = target.offsetWidth;\\n    let h2 = dropEvent.clientY - target.getBoundingClientRect().y;\\n    let w2 = dropEvent.clientX - targetObject.getBoundingClientRect().x - x;\\n    let py = h2 / h;\\n    let px = w2 / w;\\n    \\n    if (!abs) abs = 6;\\n\\n    if (h2 < abs) {\\n      dropPosition = 'top';\\n    } else if (h - h2 < abs) {\\n      dropPosition = 'bottom';\\n    } else {\\n      dropPosition = 'inner';\\n    }\\n\\n    return dropPosition;\\n  }\\n\\n  /**\\n   * @desc 이벤트의 위치정보를 반환한다.\\n   * @param {Event} - 이벤트\\n   * @return {Object} - 이벤트 위치정보\\n   * @example -\\n   */\\n  getEventPoint(event) {\\n    var point = {};\\n\\n    if (event.changedTouches) {\\n      point.x = event.changedTouches[0].clientX;\\n      point.y = event.changedTouches[0].clientY;\\n    } else if (event.targetTouches) {\\n      point.x = event.targetTouches[0].clientX;\\n      point.y = event.targetTouches[0].clientY;\\n    } else if (event.button == 0) {\\n      point.x = event.clientX;\\n      point.y = event.clientY;\\n    }\\n\\n    return point;\\n  }\\n\\n  /**\\n   * @desc Object의 jj-controller 에서 메소드와 파라미터를 추출하여 등록한다.\\n   * @param {String} - controller 목록\\n   * @param {Event} - 이벤트\\n   * @param {Object} - 대상 Object\\n   * @example -\\n   */\\n  ctrlParaApply(cmdString, event, obj) {\\n    const methodReg = new RegExp(/\\\\w+|\\\\(.+\\\\)/, 'gm');\\n    const paraReg = new RegExp(/[a-zA-Z0-9가-힣-%#.:_() ]+/, 'gm');\\n\\n    let method, paras;\\n    let methodSplit = cmdString.match(methodReg);\\n\\n    if (methodSplit) {\\n      method = methodSplit[0];\\n\\n      let para = methodSplit[1];\\n\\n      if (para) {\\n        para = para.startsWith('(') ? para.substr(1, 200) : para;\\n        para = para.endsWith(')') ? para.substr(0, para.length - 1) : para;\\n        paras = para.match(paraReg).map(p => {\\n          let ret;\\n\\n          switch (p) {\\n            case 'e':\\n              ret = event;\\n\\n              break;\\n            case 'null':\\n              ret = null;\\n\\n              break;\\n            default:\\n              ret = p;\\n          }\\n\\n          return ret;\\n        });\\n\\n        if (obj['controller']) {\\n          Reflect.apply(obj['controller'], obj, [method, paras, event]);\\n        }\\n      } else {\\n        if (obj['controller']) {\\n          Reflect.apply(obj['controller'], obj, [method, event]);\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc Object의 jj-commend 에서 메소드와 파라미터를 추출하여 등록한다.\\n   * @param {String} - commend 목록\\n   * @param {Event} - 이벤트\\n   * @param {Object} - 대상 Object\\n   * @example -\\n   */\\n  cmdParaApply(cmdString, event, obj) {\\n    const methodReg = new RegExp(/\\\\w+|\\\\(.+\\\\)/, 'gm');\\n    const paraReg = new RegExp(/[a-zA-Z0-9가-힣-%#._() ]+/, 'gm');\\n\\n    let method, paras;\\n    let methodSplit = cmdString.match(methodReg);\\n\\n    if (methodSplit) {\\n      method = methodSplit[0];\\n\\n      if (obj[method]) {\\n        let para = methodSplit[1];\\n\\n        if (para) {\\n          para = para.startsWith('(') ? para.substr(1, 200) : para;\\n          para = para.endsWith(')') ? para.substr(0, para.length - 1) : para;\\n          paras = para.match(paraReg).map(p => {\\n            let ret;\\n\\n            switch (p) {\\n              case 'e':\\n                ret = event;\\n\\n                break;\\n              case 'null':\\n                ret = null;\\n\\n                break;\\n              default:\\n                ret = p;\\n            }\\n\\n            return ret;\\n          });\\n\\n          paras.push(event);\\n\\n          Reflect.apply(obj[method], obj, paras);\\n        } else {\\n          Reflect.apply(obj[method], obj, [event]);\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 컨텍스트메뉴를 생성한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {Object} - 메뉴 정보\\n   * @example -\\n   */\\n  contextMenu(el, menus) {\\n    el.addEventListener('j-tabholder', e => {\\n      e.stopImmediatePropagation();\\n      e.stopPropagation();\\n      e.preventDefault();\\n\\n      let elem = e.target, contextTarget = '';\\n      let html = `<div class=\\\"jj-context-menu\\\" tabindex=0 ><ul class=\\\"dropdown-menu\\\" >`;\\n      let keys = Object.keys(menus), keyLength = keys.length, loopX = 0;\\n\\n      while (loopX < keyLength) {\\n        let key = keys[loopX], data = menus[key];\\n\\n        if (data.label == 'divider') {\\n          html += `<li class=\\\"divider\\\"></li>`;\\n        } else {\\n          html += `<li context-command=\\\"${data.command || key}\\\" class=\\\" ${data.class}\\\" jj-data-lan=\\\"${data.lan}\\\" jj-data-target=\\\"${data.target}\\\">`;\\n          html += `<a><i class=\\\"fa ${data.icon}\\\" aria-hidden=\\\"true\\\"></i>${data.label}</a>`;\\n          html += `</li>`;\\n        }\\n\\n        loopX++;\\n      }\\n\\n      html += `</ul></div>`;\\n\\n      if (Jinja.querySelector('.jj-context-menu')) {\\n        Jinja.querySelector('.jj-context-menu').remove();\\n      }\\n\\n      Jinja.insertAdjacentHTML('afterbegin', html);\\n\\n      let contextEl = Jinja.querySelector('.jj-context-menu');\\n\\n      contextEl.style.top = e.detail.startY + 'px';\\n      contextEl.style.left = e.detail.startX + 'px';\\n      contextEl.focus();\\n\\n      if (Jinja.offsetHeight < contextEl.offsetHeight + contextEl.offsetTop) {\\n        contextEl.style.top =\\n          Jinja.offsetHeight - contextEl.offsetHeight - 10 + 'px';\\n      }\\n\\n      if (Jinja.offsetWidth < contextEl.offsetWidth + contextEl.offsetLeft) {\\n        contextEl.style.left =\\n          Jinja.offsetWidth - contextEl.offsetWidth - 10 + 'px';\\n      }\\n\\n      el.dispatchEvent(\\n        new CustomEvent('activeContext', {\\n          detail: e,\\n        })\\n      );\\n\\n      contextEl.addEventListener('focusout', e => {\\n        window.setTimeout(() => {\\n          contextEl.remove();\\n        }, 10);\\n      });\\n\\n      contextEl.addEventListener('click', e => {\\n        let elem = e.target;\\n\\n        for (; elem && elem !== document; elem = elem.parentNode) {\\n          if (elem.matches('[context-command]')) {\\n            let contextCommand = elem.getAttribute('context-command');\\n\\n            el.dispatchEvent(\\n              new CustomEvent('clickContext', {\\n                detail: contextCommand,\\n              })\\n            );\\n\\n            break;\\n          }\\n        }\\n\\n        window.setTimeout(() => {\\n          contextEl.remove();\\n        }, 10);\\n      });\\n    });\\n  }\\n\\n  /**\\n   * @desc \\\"html에서 지정된 객체를 삭제한 후 반환한다.\\n   * 지정된 객체 : jj-include, jj-hee, [data-render], .jj-hitem\\\"\\n   * @param {} - \\n   * @return {} - \\n   * @example -\\n   */\\n  exportCleaning(html) {\\n    let exportDiv = document.createElement('div');\\n\\n    exportDiv.innerHTML = html;\\n\\n    exportDiv.querySelectorAll('jj-include').forEach(el => el.$empty());\\n    exportDiv.querySelectorAll('jj-hee').forEach(el => el.$empty());\\n    exportDiv.querySelectorAll('[data-render]').forEach(el => el.$empty());\\n    exportDiv.querySelectorAll('.jj-hitem').forEach(el => el.$empty());\\n\\n    return exportDiv.innerHTML;\\n  }\\n\\n  /**\\n   * @desc html을 압축한다.\\n   * @param {html} - 대상 html 정보\\n   * @example -\\n   */\\n  htmlCompress(html) {\\n    return html.replace(/\\\\n/g, '').replace(/\\\\s{2,}/g, ' ');\\n  }\\n\\n  /**\\n   * @desc 탭 엘리먼트에 탭을 추가한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  tabAddTab(el) {\\n    let tabEl = el.$closest('.jj-tabs');\\n\\n    if (!tabEl) {\\n      alert('작업할 탭을 찾지 못합니다.');\\n\\n      return;\\n    }\\n\\n    return JJHee.open('getText.610.uc', {\\n      position: {\\n        width: '50%',\\n      },\\n      isModal: true,\\n      isMoveable: true,\\n    }).then(result => {\\n      let menuHtml = \\n      `<li class=\\\"nav-item\\\">` +\\n      `<a data-target=\\\"${result}\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"false\\\" class=\\\"nav-link\\\">` +\\n      `<span class=\\\"d-inline-block d-sm-none\\\"><i class=\\\"fa fa-home\\\"></i></span>` +\\n      `<span class=\\\"d-none d-sm-inline-block\\\">${result}</span>` +\\n      `</a>` +\\n      `</li>`;\\n\\n      let panelHtml = \\n      `<div class=\\\"tab-pane\\\" data-target=\\\"${result}\\\">` +\\n      `<p>${result}... Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.</p>` +\\n      `</div>`;\\n\\n      Jinja.dom.append(tabEl, menuHtml);\\n      Jinja.dom.append(tabEl.nextElementSibling, panelHtml);\\n    });\\n  }\\n\\n  /**\\n   * @desc 탭 엘리먼트에 탭을 삭제한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  tabRemoveTab(el) {\\n    let tabEl = el.$closest('.jj-tabs');\\n\\n    if (!tabEl) {\\n      alert('작업할 탭을 찾지 못합니다.');\\n\\n      return;\\n    }\\n\\n    let activeEl = tabEl.querySelector('.nav-link.active');\\n\\n    if (activeEl) {\\n      Jinja.confirm\\n        .delete(`${activeEl.innerText} 탭을 삭제합니까?`)\\n        .then(chooice => {\\n          if (chooice == 'YES') {\\n            activeEl.parentElement.$remove();\\n\\n            let panel = tabEl.nextElementSibling.querySelector(\\n              '.tab-pane.active'\\n            );\\n\\n            if (panel) panel.$remove();\\n\\n            tabEl.querySelector('.nav-link').click();\\n          }\\n        });\\n    } else {\\n      alert('선택된 탭이 없어서 삭제되지 않았습니다.');\\n\\n      return;\\n    }\\n  }\\n\\n  /**\\n   * @desc 활성화된 탭에 아이콘을 표출한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  tabShowIcon(el) {\\n    let tabEl = el.$closest('.jj-tabs');\\n\\n    if (!tabEl) {\\n      alert('작업할 탭을 찾지 못합니다.');\\n\\n      return;\\n    } else {\\n      let activeIconEl = tabEl.querySelector('.nav-link.active i.fa');\\n\\n      if (activeIconEl) {\\n        activeIconEl.parentElement.classList.remove('d-sm-none');\\n        activeIconEl.parentElement.classList.add('d-none');\\n      } else {\\n        JJHee.open('getIcon.610.uc', {\\n          search: {},\\n          position: {\\n            width: '80%',\\n          },\\n          isModal: true,\\n          isMoveable: true,\\n        })\\n          .then(result => {\\n            let html = `<span class=\\\"d-inline-block d-none\\\"><i class=\\\"fa ${result.class}\\\"></i></span>`;\\n            Jinja.dom.prepend(tabEl.querySelector('.nav-link.active'), html);\\n          })\\n          .catch(ex => {});\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 활성화된 탭에 아이콘을 숨긴다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  tabHiddenIcon(el) {\\n    let tabEl = el.$closest('.jj-tabs');\\n\\n    if (!tabEl) {\\n      alert('작업할 탭을 찾지 못합니다.');\\n\\n      return;\\n    } else {\\n      let activeIconEl = tabEl.querySelector('.nav-link.active i.fa');\\n\\n      if (activeIconEl) {\\n        activeIconEl.parentElement.classList.add('d-sm-none');\\n        activeIconEl.parentElement.classList.remove('d-none');\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 테이블 행을 삽입한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  tableInsertRow(el) {\\n    let tr = el.$closest('tr');\\n    let newTr = tr.cloneNode(true);\\n\\n    tr.after(newTr);\\n  }\\n\\n  /**\\n   * @desc 테이블 행을 병합한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  tableMeargeRow(el) {\\n    let tableEl = el.$closest('table');\\n    let tr;\\n    let tdIndex = Jinja.dom.findIndex(el.parentElement, el);\\n    let colspan = parseInt(el.getAttribute('colspan')) || 1;\\n    let rowspan = parseInt(el.getAttribute('rowspan')) || 1;\\n\\n    rowspan += 1;\\n\\n    for (let r = 0; r < rowspan; r++) {\\n      if (tr) tr = tr.nextElementSibling;\\n      else tr = el.$closest('tr');\\n\\n      if (tr) {\\n        for (let c = 0; c < colspan; c++) {\\n          if (tr.children[tdIndex + c]) {\\n            tr.children[tdIndex + c].hidden = true;\\n          }\\n        }\\n      }\\n    }\\n\\n    el.hidden = false;\\n    el.setAttribute('colspan', colspan);\\n    el.setAttribute('rowspan', rowspan);\\n    el.click();\\n  }\\n\\n  /**\\n   * @desc 테이블 행을 삭제한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  tableRemoveRow(el) {\\n    let tr = el.$closest('tr');\\n    let next = tr.nextElementSibling;\\n\\n    tr.$remove();\\n\\n    if (next) {\\n      next.children[0].click();\\n    }\\n  }\\n\\n  /**\\n   * @desc 테이블 열을 삽입한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  tableInsertCol(el) {\\n    let tableEl = el.$closest('table');\\n    let tdIndex = Jinja.dom.findIndex(el.parentElement, el);\\n\\n    if (tableEl.querySelector('colgroup')) {\\n      let colEl = tableEl.querySelector('colgroup').children[tdIndex];\\n      let newCol = colEl.cloneNode(true);\\n\\n      colEl.after(newCol);\\n    }\\n\\n    tableEl.querySelectorAll('thead tr').forEach(tr => {\\n      let thEl = tr.children[tdIndex];\\n      let newTh = thEl.cloneNode(true);\\n\\n      newTh.classList.remove('selected');\\n      thEl.after(newTh);\\n    });\\n\\n    tableEl.querySelectorAll('tbody tr').forEach(tr => {\\n      let tdEl = tr.children[tdIndex];\\n      let newTd = tdEl.cloneNode(true);\\n\\n      newTd.classList.remove('selected');\\n      tdEl.after(newTd);\\n    });\\n  }\\n\\n  /**\\n   * @desc 테이블 열을 병합한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  tableMeargeCol(el) {\\n    let tableEl = el.$closest('table');\\n    let tr;\\n    let tdIndex = Jinja.dom.findIndex(el.parentElement, el);\\n    let colspan = parseInt(el.getAttribute('colspan')) || 1;\\n    let rowspan = parseInt(el.getAttribute('rowspan')) || 1;\\n\\n    colspan += 1;\\n\\n    for (let r = 0; r < rowspan; r++) {\\n      if (tr) tr = tr.nextElementSibling;\\n      else tr = el.$closest('tr');\\n\\n      if (tr) {\\n        for (let c = 0; c < colspan; c++) {\\n          if (tr.children[tdIndex + c]) {\\n            tr.children[tdIndex + c].hidden = true;\\n          }\\n        }\\n      }\\n    }\\n\\n    el.hidden = false;\\n    el.setAttribute('colspan', colspan);\\n    el.setAttribute('rowspan', rowspan);\\n    el.click();\\n  }\\n\\n  /**\\n   * @desc 테이블 열을 삭제한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  tableRemoveCol(el) {\\n    let tableEl = el.$closest('table');\\n    let tdIndex = Jinja.dom.findIndex(el.parentElement, el);\\n    let next = el.nextElementSibling;\\n\\n    if (tableEl.querySelector('colgroup')) {\\n      tableEl.querySelector('colgroup').children[tdIndex].remove();\\n    }\\n\\n    tableEl.querySelectorAll('thead tr').forEach(tr => {\\n      let thEl = tr.children[tdIndex].remove();\\n    });\\n\\n    tableEl.querySelectorAll('tbody tr').forEach(tr => {\\n      let tdEl = tr.children[tdIndex].remove();\\n    });\\n\\n    if (next) {\\n      next.click();\\n    }\\n  }\\n\\n  /**\\n   * @desc 테이블 병합을 취소한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  tableMeargeCancel(el) {\\n    let tableEl = el.$closest('table');\\n    let tr;\\n    let tdIndex = Jinja.dom.findIndex(el.parentElement, el);\\n    let colspan = parseInt(el.getAttribute('colspan')) || 1;\\n    let rowspan = parseInt(el.getAttribute('rowspan')) || 1;\\n\\n    for (let r = 0; r < rowspan; r++) {\\n      if (tr) tr = tr.nextElementSibling;\\n      else tr = el.$closest('tr');\\n\\n      if (tr) {\\n        for (let c = 0; c < colspan; c++) {\\n          if (tr.children[tdIndex + c]) {\\n            tr.children[tdIndex + c].hidden = false;\\n          }\\n        }\\n      }\\n    }\\n\\n    el.removeAttribute('colspan');\\n    el.removeAttribute('rowspan');\\n    el.click();\\n  }\\n\\n  /**\\n   * @desc 엘리먼트의 이미지를 변경한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @return {Obejct} - 이미지 정보\\n   * @example -\\n   */\\n  changeImage(el) {\\n    return JJHee.open('getImage.610.uc', {\\n      search: {},\\n      position: {\\n        width: '80%',\\n      },\\n      isModal: true,\\n      isMoveable: true,\\n    })\\n      .then(result => {\\n        if (el) {\\n          el.src = result.images[0];\\n        }\\n\\n        return result.images;\\n      })\\n      .catch(ex => console.error(ex));\\n  }\\n\\n  /**\\n   * @async\\n   * @desc 엘리먼트의 배경이미지를 변경한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  async changeBackImage(el) {\\n    let result = await JJModal602.show('ui60.dialog.getImage.uc');\\n\\n    el.style.backgroundImage = `url(${result[0]})`;\\n  }\\n\\n  /**\\n   * @desc 엘리먼트의 아이콘을 변경한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @return {Obejct} - 아이콘 정보\\n   * @example -\\n   */\\n  changeIcon(el) {\\n    JJHee.open('getIcon.610.uc', {\\n      search: {},\\n      position: {\\n        width: '80%',\\n      },\\n      isModal: true,\\n      isMoveable: true,\\n    })\\n      .then(result => {\\n        if (el) {\\n          el.classList.forEach(item => {\\n            if (item.startsWith('fa-')) {\\n              if (\\n                !['fa-1x', 'fa-2x', 'fa-3x', 'fa-4x', 'fa-5x'].includes(item)\\n              ) {\\n                el.classList.remove(item);\\n              }\\n            }\\n          });\\n\\n          el.classList.add(result.class);\\n        }\\n\\n        return result;\\n      })\\n      .catch(ex => {});\\n  }\\n\\n  /**\\n   * @desc 엘리먼트의 태그명을 변경한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @return {Element} - 변경된 엘리먼트\\n   * @example -\\n   */\\n  changeTag(el, tagName) {\\n    let newEl = document.createElement(tagName);\\n    \\n    for (let i = 0; i < el.attributes.length; i++) {\\n      newEl.setAttribute(el.attributes[i].name, el.attributes[i].value);\\n    }\\n    \\n    var children = el.childNodes;\\n    \\n    for (let i = 0; i < children.length; i++) {\\n      newEl.appendChild(children[i]);\\n    }\\n    \\n    el.before(newEl);\\n    el.remove();\\n\\n    return newEl;\\n  }\\n\\n  /**\\n   * @async\\n   * @desc 유튜브 주소를 변경한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @return {Obejct} - 유튜브 주소 정보\\n   * @example -\\n   */\\n  async changeYouTube(el) {\\n    JJHee.open('getYouTube.610.uc', {\\n      search: {},\\n      position: {\\n        width: '80%',\\n      },\\n      isModal: true,\\n      isMoveable: true,\\n    })\\n      .then(result => {\\n        if (el) {\\n          el.querySelector('iframe').src = result.url;\\n        }\\n\\n        return result;\\n      })\\n      .catch(ex => {});\\n  }\\n\\n  /**\\n   * @async\\n   * @desc 엘리먼트의 앞에 아이콘을 추가한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  async insertIcon(el) {\\n    let result = await JJModal602.show('ui60.dialog.getIcon.uc');\\n    let icon = document.createElement('i');\\n\\n    icon.classList.add('fa');\\n    icon.classList.add(result.class);\\n\\n    let selObj = el.ownerDocument.getSelection();\\n    let node = selObj.anchorNode;\\n\\n    if (node) {\\n      let bf = selObj.anchorNode.data.substr(0, selObj.anchorOffset);\\n      let ft = selObj.anchorNode.data.substr(selObj.focusOffset);\\n\\n      node.before(document.createTextNode(bf));\\n      node.before(icon);\\n      node.before(document.createTextNode(ft));\\n      node.remove();\\n    } else {\\n      el.insertBefore(icon, el.childNodes[0]);\\n    }\\n  }\\n\\n  /**\\n   * @async\\n   * @desc 엘리먼트의 앞에 텍스트를 추가한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  async insertText(el) {\\n    let selObj = el.ownerDocument.getSelection();\\n    let selText = selObj.toString();\\n    let node = selObj.anchorNode;\\n    let bf = selObj.anchorNode.data.substr(0, selObj.anchorOffset);\\n    let ft = selObj.anchorNode.data.substr(selObj.focusOffset);\\n\\n    let n = document.createElement('t');\\n    let t = document.createTextNode(selText);\\n\\n    n.appendChild(t);\\n    n.style.color = 'red';\\n\\n    if (el.isContentEditable) {\\n      node.before(document.createTextNode(bf));\\n      node.before(n);\\n      node.before(document.createTextNode(ft));\\n      node.remove();\\n    }\\n  }\\n\\n  /**\\n   * @async\\n   * @desc 엘리먼트의 앞에 앵커태그를 추가한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  async insertLink(el, fileId) {\\n    JJHee.open('getLinkPage.610.uc', {\\n      search: {\\n        fileId: fileId,\\n      },\\n      position: {\\n        width: '80%',\\n      },\\n      isModal: true,\\n      isMoveable: true,\\n    })\\n      .then(result => {\\n        let linkEl;\\n\\n        let selObj = el.ownerDocument.getSelection();\\n        let selText = selObj.toString();\\n\\n        if (el.isContentEditable && selText) {\\n          let node = selObj.anchorNode;\\n          let bf = selObj.anchorNode.data.substr(0, selObj.anchorOffset);\\n          let ft = selObj.anchorNode.data.substr(selObj.focusOffset);\\n\\n          linkEl = document.createElement('a');\\n\\n          let t = document.createTextNode(data.title);\\n\\n          linkEl.appendChild(t);\\n          linkEl.style.color = 'red';\\n\\n          if (el.isContentEditable) {\\n            node.before(document.createTextNode(bf));\\n            node.before(linkEl);\\n            node.before(document.createTextNode(ft));\\n            node.remove();\\n          }\\n        } else {\\n          linkEl = el.$closest('a');\\n\\n          if (!linkEl) {\\n            linkEl = document.createElement('a');\\n            el.after(linkEl);\\n            linkEl.appendChild(el);\\n          }\\n        }\\n\\n        linkEl.title = result.fileInfo.NAME;\\n        linkEl.href = result.value;\\n      })\\n      .catch(ex => {});\\n  }\\n\\n  /**\\n   * @desc 앵커태그의 링크 정보를 삭제한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  unLink(el) {\\n    let linkEl = el.$closest('a');\\n\\n    if (linkEl) {\\n      linkEl.removeAttribute('href');\\n      linkEl.removeAttribute('target');\\n    } else {\\n      $topMessage(\\\"링크해제를 위한 'A'테그를 찾을 수 없습니다.\\\");\\n    }\\n  }\\n\\n  /**\\n   * @async\\n   * @desc 색상 팔렛트를 설정한다.\\n   * @param {String} - 색상 팔렛트 정보\\n   * @example -\\n   */\\n  async setColorSheme(schemeLess) {\\n    schemeLess = `.jj{ \\\\n ${schemeLess} \\\\n }`;\\n\\n    let result = await Jinja.dom.less2css(schemeLess);\\n\\n    if (document.querySelector('[jj-uc-id=\\\"ui60.appColor.less\\\"] style')) {\\n      document.querySelector(\\n        '[jj-uc-id=\\\"ui60.appColor.less\\\"] style'\\n      ).innerText = result;\\n    }\\n    // 운영신규\\n    else if (document.querySelector('[jj-uc-id=\\\"ui60.color\\\"]')) {\\n      document.querySelector('[jj-uc-id=\\\"ui60.color\\\"]').innerText = result;\\n    }\\n    // 운영갱신\\n    else {\\n      let newStyle = `<style jj-uc-id=\\\"ui60.color\\\">${result}</style>`;\\n\\n      Jinja.insertAdjacentHTML('afterbegin', newStyle);\\n    }\\n\\n    // 반영된 결과를 서버에 반영한다\\n    let colorUri = workspaceMeta.WORKSPACE.colorUri || 'ui602.color.scheme.less';\\n    let colorFileInfo = await Jinja.resource.getUri(colorUri);\\n\\n    await Jinja.studioV6Api.updateFileBody(colorFileInfo.ID, schemeLess);\\n  }\\n\\n  /**\\n   * @desc 엘리먼트의 스타일을 일괄적용한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  setStyle(el, obj) {\\n    let keys = Object.keys(obj), keyLength = keys.length, loopX = 0;\\n\\n    while (loopX < keyLength) {\\n      let key = keys[loopX], data = obj[key];\\n\\n      el.style[key] = data;\\n\\n      loopX++;\\n    }\\n  }\\n\\n  /**\\n   * @desc less 데이터를 css 데이터로 반환한다.\\n   * @param {String} - Less 데이터\\n   * @return {String} - CSS 데이터\\n   * @example -\\n   */\\n  _lessRender(lessCss) {\\n    return less\\n      .render(lessCss)\\n      .then(output => {\\n        return output.css;\\n      })\\n      .catch(error => {});\\n  }\\n\\n  /**\\n   * @desc less 데이터를 css 데이터로 변환시 오류 여부를 반환한다.\\n   * @param {String} - Less 데이터\\n   * @return {String} - CSS 데이터\\n   * @example -\\n   */\\n  verifyCss(source) {\\n    return this._lessRender(source);\\n  }\\n\\n  /**\\n   * @async\\n   * @desc less 데이터를 css 데이터로 반환한다.\\n   * @param {String} - Less 데이터\\n   * @param {String} - 고유 식별자 아이디\\n   * @return {String} - CSS 데이터\\n   * @example -\\n   */\\n  async less2css(source, uuid) {\\n    let lessCss;\\n\\n    if (uuid) {\\n      lessCss = `[jj-uuid=\\\"${uuid}\\\"] {${Jinja.lessRuleset || ''}${source || ''}}`;\\n    } else {\\n      lessCss = `.jj {${source || ''}}`;\\n    }\\n\\n    if (less) {\\n      let output = await less.render(lessCss);\\n\\n      if (output) {\\n        return output.css;\\n      } else {\\n        return source;\\n      }\\n    } else {\\n      return source;\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 uuid에 해당하는 less 데이터를 css 데이터로 반환한다.\\n   * @param {String} - Less 데이터\\n   * @param {String} - 고유 식별자 아이디\\n   * @return {String} - CSS 데이터\\n   * @example -\\n   */\\n  lessUUIDcss(source, uuid) {\\n    let lessCss = `[jj-uuid=\\\"${uuid}\\\"] {${Jinja.lessRuleset || ''}${source || ''}}`;\\n\\n    return this._lessRender(lessCss);\\n  }\\n\\n  /**\\n   * @desc 지정한 fileId에 해당하는 less 데이터를 css 데이터로 반환한다.\\n   * @param {String} - Less 데이터\\n   * @param {String} - 필드 아이디\\n   * @return {String} - CSS 데이터\\n   * @example -\\n   */\\n  lessFileIdCss(source, fileId) {\\n    let lessCss = `[jj-fileid=\\\"${fileId}\\\"] {${Jinja.lessRuleset || ''}${source || ''}}`;\\n\\n    return this._lessRender(lessCss);\\n  }\\n\\n  /**\\n   * @desc .jj 클래스에 해당하는 less 데이터를 css 데이터로 반환한다.\\n   * @param {String} - Less 데이터\\n   * @return {String} - CSS 데이터\\n   * @example -\\n   */\\n  lessJJcss(source) {\\n    let lessCss = `.jj {${Jinja.lessRuleset || ''}${source || ''}}`;\\n\\n    return this._lessRender(lessCss);\\n  }\\n\\n  /**\\n   * @desc less 데이터를 css 데이터로 반환한다.\\n   * @param {String} - Less 데이터\\n   * @return {String} - CSS 데이터\\n   * @example -\\n   */\\n  lessThemeCss(source) {\\n    let lessCss = `${Jinja.lessRuleset || ''}${source || ''}`;\\n\\n    return less\\n      .render(lessCss)\\n      .then(output => {\\n        return output.css;\\n      })\\n      .catch(error => {});\\n  }\\n\\n  /**\\n   * @async\\n   * @desc less 데이터를 css 데이터로 반환한다.\\n   * @param {} - \\n   * @return {} - \\n   * @example -\\n   */\\n  async lessNoFramework(source) {\\n    return this._lessRender(source);\\n  }\\n\\n  /**\\n   * @desc 스타일 노드를 생성한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @return {String} - 스타일 정보\\n   * @example -\\n   */\\n  createStyleNode(el, css) {\\n    let style = document.createElement('style');\\n\\n    style.type = 'text/css';\\n    style.setAttribute('rel', 'stylesheet');\\n    style.appendChild(document.createTextNode(css || ''));\\n\\n    el.appendChild(style);\\n  }\\n\\n  /**\\n   * @desc 스크립트 노드를 생성한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @return {String} - 스크립트 정보\\n   * @example -\\n   */\\n  createScriptNode(el, script) {\\n    return new Promise((resolve, reject) => {\\n      let scriptNode = document.createElement('script');\\n\\n      scriptNode.appendChild(document.createTextNode(script));\\n      scriptNode.onload = () => resolve(scriptNode);\\n\\n      el.appendChild(scriptNode);\\n\\n      resolve(scriptNode);\\n    });\\n  }\\n\\n  /**\\n   * @desc page file 오픈시 초기화 작업을 실행한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {String} - 고유 식별자 아이디\\n   * @example -\\n   */\\n  pageBefore(hee, uuid) {\\n    // 테마 페이지인 경우는 JJ컨텐츠 영역에 바로 생성하기 때문에 jj-uuid가 존재하지 않을수 있음\\n    hee.form.querySelectorAll('[_pageBefore-init').forEach(el => {\\n      if (el.pageBeforeInit) el.pageBeforeInit();\\n    });\\n\\n    hee.form.querySelectorAll('[jj-id]').forEach(el => (hee[el.getAttribute('jj-id')] = el));\\n    hee.form.querySelectorAll('[id]').forEach(el => (hee[el.getAttribute('id')] = el));\\n\\n    hee.form.addEventListener('click', e => {\\n      if (this.closest(e.target, '[jj-command]')) {\\n        e.preventDefault();\\n        e.stopPropagation();\\n\\n        let target = this.closest(e.target, '[jj-command]');\\n        let cmdString = target.getAttribute('jj-command');\\n\\n        this.cmdParaApply(cmdString, e, hee);\\n      }\\n\\n      if (this.closest(e.target, '[jj-controller]')) {\\n        e.preventDefault();\\n        e.stopPropagation();\\n\\n        let target = this.closest(e.target, '[jj-controller]');\\n        let cmdString = target.getAttribute('jj-controller');\\n\\n        this.ctrlParaApply(cmdString, e, hee);\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 엘리먼트에 속성을 클래스를 추가한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {Array} - 추가 클래스 목록\\n   * @example -\\n   */\\n  classAdd(el, arr) {\\n    arr.forEach(name => el.classList.add(name));\\n  }\\n\\n  /**\\n   * @desc 엘리먼트에 속성을 클래스를 삭제한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {Array} - 삭제 클래스 목록\\n   * @example -\\n   */\\n  classRemove(el, arr) {\\n    arr.forEach(name => el.classList.remove(name));\\n  }\\n\\n  /**\\n   * @desc 엘리먼트에 속성을 클래스를 추가, 삭제한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {Array} - 삭제 클래스 목록\\n   * @param {Array} - 추가 클래스\\n   * @example -\\n   */\\n  classRemoveAdd(el, arr, addClass) {\\n    arr.forEach(name => {\\n      if (name) el.classList.remove(name);\\n    });\\n    if (addClass) el.classList.add(addClass);\\n  }\\n\\n  /**\\n   * @desc 모듈명을 반환한다.\\n   */\\n  who() {\\n    alert('JJDom');\\n  }\\n}\\n\\nJinja.addModule('dom', JJDom);\\n\\nif (!Element.prototype.$classAdd) {\\n  Element.prototype.$classAdd = function (arr) {\\n    return Jinja.dom.classAdd(this, arr);\\n  };\\n}\\n\\nif (!Element.prototype.$classRemove) {\\n  Element.prototype.$classRemove = function (arr) {\\n    return Jinja.dom.classRemove(this, arr);\\n  };\\n}\\n\\nif (!Element.prototype.$classRemoveAdd) {\\n  Element.prototype.$classRemoveAdd = function (arr, addClass) {\\n    return Jinja.dom.classRemoveAdd(this, arr, addClass);\\n  };\\n}\\n\\nif (!Element.prototype.$remove) {\\n  Element.prototype.$remove = function () {\\n    return Jinja.dom.remove(this);\\n  };\\n}\\n\\nif (!Element.prototype.$empty) {\\n  Element.prototype.$empty = function () {\\n    return Jinja.dom.empty(this);\\n  };\\n}\\n\\nif (!Element.prototype.$parentAll) {\\n  Element.prototype.$parentAll = function (selector, root) {\\n    return Jinja.dom.parents(this, root, selector);\\n  };\\n}\\n\\nif (!Element.prototype.$closest) {\\n  Element.prototype.$closest = function (matches, root) {\\n    return Jinja.dom.closest(this, matches, root);\\n  };\\n}\\n\\nif (!Element.prototype.$uuid) {\\n  Element.prototype.$uuid = function () {\\n    return Jinja.dom.uuid(this);\\n  };\\n}\\n/* ==JJRequire.640.class================ */\\n\\n/**\\n * @classdesc JJ Require 관리를 위한 클래스\\n */\\nclass JJRequire extends JJModule {\\n  /**\\n   * @desc 내부 변수를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.metadb = {\\n      libs: workspaceMeta.requireConfig || {},\\n      loadStatus: false,\\n      loadQueue: {}\\n    };\\n\\n    this._appendEl = Jinja || document.body;\\n    this._autoLoad();\\n  }\\n\\n  /**\\n   * @desc 어플리케이션 설치정보에 등록된 라이브러리를 자동으로 내려 받는다.\\n   * @example -\\n   */\\n  _autoLoad() {\\n    let keys = Object.keys(this.metadb.libs), keyLength = keys.length, loopX = 0;\\n\\n    while (loopX < keyLength) {\\n      let key = keys[loopX], data = this.metadb.libs[key];\\n\\n      if (data.status == 'loaded') {\\n        this.metadb.loadQueue[key] = {\\n          status: 'loaded',\\n          actions: []\\n        };\\n      } else if (data.status == 'auto') {\\n        this.load(key);\\n      }\\n\\n      loopX++;\\n    }\\n\\n    this.metadb.loadStatus = true;\\n  }\\n\\n  /**\\n   * @async\\n   * @desc 지정한 라이브러리를 페이지에 추가한다.\\n   * @param {String} - 대상 라이브러리명\\n   * @param {String} - 대상 라이브러리\\n   * @throw {JJBizException} - 비즈니스 예외\\n   * @return {Promiss} - 라이브러리 추가 상태\\n   * @example -\\n   */\\n  async load(name, libs) {\\n    if (!navigator.onLine) {\\n      console.error(`Require.load() \\\\n 현재 네트웤이 사용할수 없어 모듈[${name}] 을 로드 할수 없습니다.`);\\n\\n      throw `Require.load() \\\\n 현재 네트웤이 사용할수 없어 모듈[${name}] 을 로드 할수 없습니다.`;\\n    }\\n\\n    if (!this.metadb.libs[name] && !libs) {\\n      throw new JJBizException(null, name + ' require libs not found');\\n    } else if (!this.metadb.libs[name] && libs) {\\n      this.metadb.libs[name] = libs;\\n    }\\n\\n    if (this.metadb.loadQueue[name]) {\\n      return this.metadb.loadQueue[name];\\n    } else {\\n      this.metadb.loadQueue[name] = new Promise(async (resolve, reject) => {\\n        let cssFiles = this.metadb.libs[name].css;\\n\\n        if (cssFiles && cssFiles.length > 0) {\\n          for (let i = 0; i <= cssFiles.length; i++) {\\n            let cssFile = this.metadb.libs[name].css[i];\\n\\n            if (cssFile) {\\n              await this.appendChildStyle(cssFile);\\n            }\\n          }\\n        }\\n\\n        let jsFiles = this.metadb.libs[name].js;\\n\\n        if (jsFiles && jsFiles.length > 0) {\\n          for (let i = 0; i <= jsFiles.length; i++) {\\n            let jsFile = this.metadb.libs[name].js[i];\\n\\n            if (jsFile) {\\n              await this.appendChildScript(jsFile);\\n            }\\n          }\\n        }\\n\\n        let componentFiles = this.metadb.libs[name].component;\\n\\n        if (componentFiles && componentFiles.length > 0) {\\n          for (let i = 0; i <= componentFiles.length; i++) {\\n            let componentUri = this.metadb.libs[name].component[i];\\n\\n            if (componentUri) {\\n              await this.appendChildComponent(componentUri);\\n            }\\n          }\\n        }\\n\\n        resolve('OK');\\n      });\\n\\n      return this.metadb.loadQueue[name];\\n    }\\n  }\\n\\n  /**\\n   * @async\\n   * @desc 지정한 스타일 파일을 페이지에 추가한다.\\n   * @param {String} - 대상 스타일 경로\\n   * @example -\\n   */\\n  async appendChildStyle(cssPath) {\\n    return new Promise((resolve, reject) => {\\n      let arr = cssPath.split('|');\\n      let libStyle = document.createElement('link');\\n\\n      libStyle.type = 'text/css';\\n      libStyle.rel = 'stylesheet';\\n      libStyle.href = arr[0];\\n\\n      if (arr.length === 2) {\\n        libStyle.media = arr[1];\\n      }\\n\\n      libStyle.onload = () => resolve('OK');\\n      libStyle.onerror = ex => reject(ex);\\n\\n      this._appendEl.appendChild(libStyle);\\n    });\\n  }\\n\\n  /**\\n   * @async\\n   * @desc 지정한 자바스크립트 파일을 페이지에 추가한다.\\n   * @param {String} - 대상 자바스크립트 경로\\n   * @example -\\n   */\\n  async appendChildScript(jsPath) {\\n    return new Promise((resolve, reject) => {\\n      let script = document.createElement('script');\\n\\n      script.src = jsPath;\\n      script.onload = () => resolve('OK');\\n      script.onerror = ex => reject(ex);\\n\\n      this._appendEl.appendChild(script);\\n    });\\n  }\\n\\n  /**\\n   * @async\\n   * @desc 지정한 컴포넌트를 페이지에 추가한다.\\n   * @param {String} - 대상 컴포넌트 URI\\n   * @return {Promise} - 추가결과\\n   * @example -\\n   */\\n  async appendChildComponent(uri) {\\n    return new Promise((resolve, reject) => {\\n      Jinja.ajax.getResourceUri(uri)\\n        .then(result => {\\n          let component = Jinja.global.json(result.BODY);\\n\\n          if (component.css) {\\n            let oldCss = this._appendEl.querySelector(`[component=\\\"${uri}\\\"]`);\\n\\n            if (oldCss) {\\n              oldCss.remove();\\n            }\\n\\n            let style = document.createElement('style');\\n\\n            style.type = 'text/css';\\n            style.setAttribute('rel', 'stylesheet');\\n            style.setAttribute('component', uri);\\n            style.appendChild(document.createTextNode(component.css || ''));\\n\\n            this._appendEl.appendChild(style);\\n          }\\n\\n          if (component.script) {\\n            let scriptNode = document.createElement('script');\\n\\n            scriptNode.appendChild(document.createTextNode(component.script));\\n\\n            this._appendEl.appendChild(scriptNode);\\n\\n            scriptNode.remove();\\n          }\\n\\n          resolve('OK');\\n        })\\n        .catch(ex => reject(ex));\\n    });\\n  }\\n\\n  /**\\n   * @desc 모듈명을 반환한다.\\n   */\\n  who() {\\n    alert('JJRequire');\\n  }\\n}\\n\\nJinja.addModule('require', JJRequire);\\n/* ==JJException.640.class================ */\\n\\n/**\\n * @classdesc 예외처리 관리를 위한 클래스\\n */\\nclass JJException extends JJModule {\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    window.addEventListener('error', e => {\\n      this._actionDo(e.error[4] || e.error);\\n\\n      return false;\\n    });\\n\\n    window.addEventListener('unhandledrejection', e => {\\n      this._actionDo(e.reason);\\n    });\\n\\n    window.addEventListener('rejectionhandled', e => {\\n      console.error(e.error);\\n    });\\n  }\\n\\n  /**\\n   * @desc 오류객체를 식별하고 관련 후처리를 실시한다.\\n   * @param {Exception} - 오류객체\\n   * @example -\\n   */\\n  _actionDo(error) {\\n    if (error instanceof JJBizStop) {\\n      return;\\n    }\\n\\n    if (error instanceof TypeError) {\\n      console.log(error.stack.split('\\\\n').map(text => text.trim()));\\n\\n      alert(error.constructor.name + '\\\\n' + error.message);\\n    } else if (error instanceof JJAopException) {\\n      let errMap = [];\\n      let rootError = error;\\n\\n      while (rootError) {\\n        errMap.push(\\n          rootError.sourceClass.constructor.name + '.' + rootError.method\\n        );\\n\\n        if (rootError.innerEx instanceof JJAopException) {\\n          rootError = rootError.innerEx;\\n        } else {\\n          rootError = null;\\n        }\\n      }\\n\\n      alert(\\n        error.constructor.name +\\n          '\\\\n' +\\n          error.message +\\n          '\\\\n class : ' +\\n          errMap.join(' > ')\\n      );\\n\\n      if (error instanceof JJBizException) {\\n        if (Error.captureStackTrace) {}\\n      }\\n    } else if (error instanceof JJBizException) {\\n      alert(error.constructor.name + '\\\\n' + error.message);\\n    } else if (error instanceof JJAjaxException) {\\n      alert(error.constructor.name + '\\\\n' + error.options.message);\\n    } else {\\n      alert('정의되지않은 오류' + '\\\\n' + error);\\n    }\\n  }\\n  \\n  /**\\n   * @desc 모듈명을 반환한다.\\n   */\\n  who() {\\n    alert('JJException');\\n  }\\n}\\n\\nJinja.addModule('exception', JJException);\\n\\n/**\\n * @classdesc 비즈니스 정지 예외처리 관리를 위한 클래스\\n */\\nclass JJBizStop extends Error {\\n  constructor(message, ...params) {\\n    super(...params);\\n\\t\\tdebugger;\\n    if (Error.captureStackTrace) {\\n      Error.captureStackTrace(this, JJBizStop);\\n    }\\n\\t\\t\\n    this.message = message;\\n    this.date = new Date();\\n  }  \\n}\\n\\n/**\\n * @classdesc 비즈니스 로직 예외처리 관리를 위한 클래스\\n */\\nclass JJBizException extends Error {\\n  /**\\n   * @desc 생성자\\n   * @param {Number} - 에러번호\\n   * @param {...*} - 기타 파라미터\\n   */\\n  constructor(errorNumber, ...params) {\\n    super(...params);\\n\\n    if (Error.captureStackTrace) {\\n      Error.captureStackTrace(this, JJBizException);\\n    }\\n\\n    this.errorNumber = errorNumber;\\n    this.date = new Date();\\n  }\\n}\\n\\n/**\\n * @classdesc 비동기 통신 예외처리 관리를 위한 클래스\\n */\\nclass JJAjaxException extends Error {\\n  /**\\n   * @desc 생성자\\n   * @param {...*} - 기타 파라미터\\n   */\\n  constructor(...params) {\\n    super(...params);\\n\\n    if (Error.captureStackTrace) {\\n      Error.captureStackTrace(this, JJAjaxException);\\n    }\\n\\n    let defaultOption = {\\n      errorNumber: parseInt(params[0].code),\\n      message: params[0].message,\\n      sqlText: params[0].sqlText,\\n      sqlParameter: params[0].sqlParameter,\\n      venderCode: params[0].venderCode,\\n      exceptionType: params[0].exceptionType,\\n      innerEx: params[0],\\n      trace: params[0].trace,\\n      source: '',\\n      sourceLine: '',\\n      function: '',\\n      stack: [],\\n      actionCode: '',\\n      actionMessage: '',\\n      auctionUrl: '',\\n      descipt: ''\\n    };\\n\\n    this.options = Object.assign(defaultOption, params[0]);\\n  }\\n}\\n/* ==JJFinal.640.class================ */\\n\\n/**\\n * @classdesc Final 관리를 위한 클래스\\n */\\nclass JJFinal extends JJModule {\\n  /**\\n   * @desc 모듈명을 반환한다.\\n   */\\n  who() {\\n    alert('JJFinal');\\n  }\\n}\\n/* ==JJGlobal.640.class================ */\\n\\n/**\\n * @classdesc 전역 유틸리티 함수 관리를 위한 클래스\\n */\\nclass JJGlobal extends JJModule {\\n  /**\\n   * @desc 지정한 데이터를 문자열로 반환한다.\\n   * @param {*} - 대상 데이터\\n   * @return {String} - 문자열 데이터\\n   * @example -\\n   */\\n  string(val) {\\n    if (val === undefined || val === null) {\\n      return null;\\n    }\\n\\n    if (val instanceof Date) {\\n      return val.toJSON();\\n    } else if (typeof val == 'object') {\\n      if (val.tagName) {\\n        return 'object[element]:' + val.tagName + '.' + val.classList.value;\\n      } else {\\n        return JSON.stringify(val, null, 2);\\n      }\\n    } else {\\n      if (val) {\\n        return String(val);\\n      } else {\\n        return val;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터를 정수로 반환한다.\\n   * @param {*} - 대상 데이터\\n   * @return {Number} - 정수 데이터\\n   * @example -\\n   */\\n  int(val) {\\n    return parseInt(val);\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터를 실수로 반환한다.\\n   * @param {*} - 대상 데이터\\n   * @return {Number} - 실수 데이터\\n   * @example -\\n   */\\n  float(val) {\\n    return parseFloat(val);\\n  }\\n\\n  /**\\n   * @desc 지정한 문자열을 JSON 데이터로 반환한다.\\n   * @param {String} - 대상 문자열\\n   * @return {Object} - JSON 데이터\\n   * @example -\\n   */\\n  json(val) {\\n    let result = {};\\n\\n    if (val) {\\n      if ('string' == typeof val) {\\n        result = JSON.parse(val);\\n      } else {\\n        result = val;\\n      }\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 데이터 타입을 반환한다.\\n   * @param {*} - 대상 데이터\\n   * @return {String} - 데이터 타입\\n   * @example -\\n   */\\n  type(val) {\\n    return typeof val;\\n  }\\n\\n\\n\\n  /**\\n   * @desc 지정한 데이터가 정수형인지 여부를 반환한다.\\n   * @param {*} - 대상 데이터\\n   * @return {Boolean} - 정수형 여부\\n   * @example -\\n   */\\n  isInt(val) {\\n    return !isNaN(val) && Number.isInteger(parseInt(val));\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터가 날짜형인지 여부를 반환한다.\\n   * @param {*} - 대상 데이터\\n   * @return {Boolean} - 날짜형 여부\\n   * @example -\\n   */\\n  isDate(val) {\\n    let result = false;\\n\\n    if (val instanceof Date) result = true;\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 고유 식별자 아이디를 생성 반환한다.\\n   * @return {String} - 고유 식별자 아이디\\n   * @example -\\n   */\\n  uuid() {\\n    let d = new Date().getTime();\\n\\n    if (window.performance && typeof window.performance.now === 'function') {\\n      d += performance.now();\\n    }\\n\\n    let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\\n      /[xy]/g,\\n      function (c) {\\n        let r = (d + Math.random() * 16) % 16 | 0;\\n\\n        d = Math.floor(d / 16);\\n\\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\\n      }\\n    );\\n\\n    return uuid;\\n  }\\n\\n  /**\\n   * @desc JSON 데이터를 CSV 데이터로 변환하여 반환한다.\\n   * @param {Array} - 대상 JSON 데이터\\n   * @return {String} - CSV 데이터\\n   * @example -\\n   */\\n  json2csv(objArr) {\\n    let array = typeof objArr != 'object' ? JSON.parse(objArr) : objArr;\\n    let str = '';\\n    let line = '';\\n    let head = array[0];\\n\\n    for (let index in array[0]) {\\n      if (index.substring(0, 1) != '_') {\\n        line += index + ',';\\n      }\\n    }\\n\\n    line = line.slice(0, -1);\\n    str += line + '\\\\r\\\\n';\\n\\n    for (let i = 0; i < array.length; i++) {\\n      let line = '';\\n\\n      for (let index in array[i]) {\\n        if (index.substring(0, 1) != '_') {\\n          let val = array[i][index];\\n\\n          if (val == null || val == undefined) {\\n            val = '';\\n          }\\n\\n          line += val + ',';\\n        }\\n      }\\n\\n      line = line.slice(0, -1);\\n      str += line + '\\\\r\\\\n';\\n    }\\n\\n    return str;\\n  }\\n\\n  /**\\n   * @desc JSON 데이터를 HTML 문자열로 변환하여 반환한다.\\n   * @param {Array} - 대상 JSON 데이터\\n   * @return {String} - HTML 문자열\\n   * @example -\\n   */\\n  json2html(rows, cols, heads, options) {\\n    let bodyHtml = '<table>';\\n\\n    bodyHtml += '<thead><tr>';\\n\\n    let columns = cols || Object.keys(rows[0]);\\n    let headers = heads || columns;\\n    options = options || {};\\n\\n    headers.forEach(key => (bodyHtml += '<th>' + key + '</th>'));\\n\\n    bodyHtml += '</tr></thead><tbody>';\\n\\n    rows.forEach(row => {\\n      let tr = '<tr>';\\n\\n      for (let c = 0; c < columns.length; c++) {\\n        let column = columns[c];\\n        let txt = row[column];\\n        if (typeof(txt)==\\\"number\\\"){\\n          switch(options.numFormat){\\n            case \\\"INT\\\":\\n              tr += '<td class=\\\"text-right\\\">' + txt.$toIntFormat() + '</td>';\\n              break;\\n            case \\\"FLOAT\\\":\\n              tr += '<td class=\\\"text-right\\\">' + txt.$toFloatFormat() + '</td>';\\n              break;\\n            default:\\n              tr += '<td class=\\\"text-right\\\">' + txt + '</td>';\\n              break;\\n          }\\n        } else {\\n          tr += '<td>' + txt + '</td>';  \\n        }\\n\\n      }\\n\\n      tr += '</tr>';\\n      bodyHtml += tr;\\n    });\\n\\n    bodyHtml += '</tbody></table>';\\n\\n    return bodyHtml;\\n  }\\n\\n  /**\\n   * @desc JSON 데이터를 get통신하기 위해서 URL로 변환하여 반환한다.\\n   * @param {String} - URL\\n   * @return {Object} - JSON 데이터\\n   * @example -\\n   */\\n  map2getPara(url, data) {\\n    let result = url;\\n\\n    if (data) {\\n      result += '?';\\n      result += Object.keys(data)\\n        .map(k => {\\n        return (\\n          encodeURIComponent(k) +\\n          '=' +\\n          encodeURIComponent(this.string(data[k]))\\n        );\\n      })\\n        .join('&');\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터가 Null값인 경우 빈문자열을 반환한다.\\n   * @param {*} - 대상 데이터\\n   * @return {*} - 빈문자열|데이터\\n   * @example -\\n   */\\n  nullSpace(val) {\\n    if (val === null) return '';\\n    else if (val === undefined) return '';\\n    else return val;\\n  }\\n\\n  /**\\n   * @desc 지정한 JSON 데이터를 CSV 파일로 다운로드 한다.\\n   * @param {Array} - 대상 JSON 데이터\\n   * @param {String} - 파일제목\\n   * @param {Number} - 컬럼개수\\n   * @param {Number} - 헤더개수\\n   * @example -\\n   */\\n  exportCSV(JSONData, ReportTitle, cols, heads) {\\n    let arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData;\\n    let CSV = '', row = '';\\n\\n    CSV += ReportTitle + '\\\\r\\\\n\\\\n';\\n\\n    let columns = cols || Object.keys(arrData[0]);\\n    let headers = heads || columns;\\n\\n    row = '';\\n\\n    for (let index in headers[0]) {\\n      row += index + ',';\\n    }\\n\\n    CSV += row + '\\\\r\\\\n';\\n\\n    for (let i = 0; i < arrData.length; i++) {\\n      row = '';\\n\\n      for (let col in columns) {\\n        row += '\\\"' + arrData[i][col] + '\\\",';\\n      }\\n\\n      row.slice(0, row.length - 1);\\n\\n      CSV += row + '\\\\r\\\\n';\\n    }\\n\\n    if (CSV === '') {\\n      alert('Invalid data');\\n\\n      return;\\n    }\\n\\n    let fileName = 'MyReport_';\\n\\n    fileName += ReportTitle.replace(/ /g, '_');\\n\\n    let uri =\\n        'data:application/csv;charset=utf-8,%EF%BB%BF' + encodeURIComponent(CSV);\\n    let link = document.createElement('a');\\n\\n    link.href = uri;\\n    link.style = 'visibility:hidden';\\n    link.download = fileName + '.csv';\\n\\n    document.body.appendChild(link);\\n\\n    link.click();\\n\\n    document.body.removeChild(link);\\n  }\\n\\n  exportJson(JSONData, fileName) {\\n    debugger;\\n    let body = this.string(JSONData);\\t\\n    fileName = fileName||\\\"export\\\";\\n\\n    let uri = 'data:application/json;charset=utf-8,%EF%BB%BF' + encodeURIComponent(body);\\n    let link = document.createElement('a');\\n\\n    link.href = uri;\\n    link.style = 'visibility:hidden';\\n    link.download = fileName + '.jdf';\\n\\n    document.body.appendChild(link);\\n\\n    link.click();\\n\\n    document.body.removeChild(link);\\n  }\\n\\n\\n  /**\\n   * @desc 지정한 HTML Table 데이터를 엑셀 파일로 다운로드 한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {Array} - 대상 데이터\\n   * @param {String} - 제목\\n   * @param {Number} - 컬럼개수\\n   * @param {Number} - 헤더개수\\n   * @example -\\n   */\\n  exportHtmlTable(tableEl, dataset, title, cols, heads) {\\n    let exportDiv = document.createElement('div');\\n\\n    exportDiv.classList.add('hidden');\\n\\n    let caption = document.createElement('h2');\\n\\n    caption.appendChild(document.createTextNode(title || '분석'));\\n\\n    exportDiv.appendChild(caption);\\n    exportDiv.appendChild(tableEl.cloneNode(true));\\n\\n    exportDiv.querySelectorAll('thead th').forEach(el => {\\n      el.style.backgroundColor = '#e1eaf8';\\n      el.style.color = 'black';\\n    });\\n\\n    exportDiv.querySelectorAll('table').forEach(el => {\\n      el.setAttribute('border', '1');\\n    });\\n\\n    exportDiv.querySelector('tbody').innerHTML = json2excelHtml(dataset, cols);\\n\\n    let htmltable = exportDiv.innerHTML;\\n\\n    var excelFile =\\n        `<html xml:lang='en-US' xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:x='urn:schemas-microsoft-com:office:excel' xmlns='http://www.w3.org/TR/REC-html40'>` +\\n        `<head>` +\\n        `<meta http-equiv=\\\"Content-type\\\" content=\\\"text/html;charset=UTF-8\\\" />` +\\n        `<!--[if gte mso 9]>` +\\n        `<xml>` +\\n        `<x:ExcelWorkbook>` +\\n        `<x:ExcelWorksheets>` +\\n        `<x:ExcelWorksheet>` +\\n        `<x:Name>` +\\n        `{worksheet}` +\\n        `</x:Name>` +\\n        `<x:WorksheetOptions>` +\\n        `<x:DisplayGridlines/>` +\\n        `</x:WorksheetOptions>` +\\n        `</x:ExcelWorksheet>` +\\n        `</x:ExcelWorksheets>` +\\n        `</x:ExcelWorkbook>` +\\n        `</xml>` +\\n        `<![endif]-->` +\\n        `</head>` +\\n        `<body>` +\\n        htmltable.replace(/\\\"/g, \\\"'\\\") +\\n        `</body>` +\\n        `</html>`;\\n\\n    let uri = 'data:application/vnd.ms-excel;base64,';\\n    let ctx = {\\n      worksheet: '출력',\\n      table: htmltable\\n    };\\n\\n    uri = uri + base64(format(excelFile, ctx));\\n    uri = uri.replace('data:application/vnd.ms-excel;base64,', '');\\n    uri = decodeURIComponent(escape(window.atob(uri)));\\n\\n    let blob = new Blob([uri], {\\n      type: 'application/vnd.ms-excel'\\n    });\\n\\n    uri = window.URL.createObjectURL(blob);\\n\\n    let link = document.createElement('a');\\n\\n    link.href = uri;\\n    link.style = 'visibility:hidden';\\n    link.download = 'download.xls';\\n\\n    document.body.appendChild(link);\\n\\n    link.click();\\n\\n    document.body.removeChild(link);\\n\\n    exportDiv.remove();\\n\\n    function json2excelHtml(dataset, cols, heads) {\\n      let bodyHtml = ``;\\n\\n      cols = cols || Object.keys(dataset[0]); \\t\\n      dataset.forEach(row => {\\n        let tr = `<tr>`;\\n\\n        cols.forEach(col => {\\n          let txt = row[col];\\n\\n          tr += `<td>${txt}</td>`;\\n        });\\n\\n        tr += `</tr>`;\\n\\n        bodyHtml += tr;\\n      });\\n\\n      return bodyHtml;\\n    }\\n\\n    function format(s, c) {\\n      return s.replace(/{(\\\\w+)}/g, function (m, p) {\\n        return c[p];\\n      });\\n    }\\n\\n    function base64(s) {\\n      return window.btoa(unescape(encodeURIComponent(s)));\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터를 CamelCase 형대로 변환하여 반환한다.\\n   * @param {String} - 대상 문자열\\n   * @return {String} - 변경된 문자열\\n   * @example -\\n   */\\n  camelCase(val) {\\n    return val\\n      .toLowerCase()\\n      .replace(/[-_]+/g, ' ')\\n      .replace(/[^\\\\w\\\\s]/g, '')\\n      .replace(/ (.)/g, function ($1) {\\n      return $1.toUpperCase();\\n    })\\n      .replace(/ /g, '');\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터에서 \\\"_\\\"를 구분자로하여 CamelCase 형태로 변환하여 반환한다.\\n   * @param {String} - 대상 문자열\\n   * @return {String} - 변경된 문자열\\n   * @example -\\n   */\\n  columnToCamelCase(val) {\\n    if (val.indexOf('_') < 0) return val;\\n    else\\n      return val.toLowerCase().replace(/[_]([a-z])/g, function (match) {\\n        return match[1].toUpperCase();\\n      });\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터에서 CamelCase 형태를 \\\"_\\\"를 단어 구분자로 변환하여 반환한다.\\n   * @param {String} - 대상 문자열\\n   * @return {String} - 변경된 문자열\\n   * @example -\\n   */\\n  camelCaseToColumn(val) {\\n    return val.replace(/[A-Z]/g, function (match) {\\n      return '_' + match.toUpperCase();\\n    })\\n      .toUpperCase();\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터에서 \\\"-\\\" 또는 \\\"_\\\"를 구분자로하여 CamelCase 형태로 변환하여 반환한다.\\n   * @param {String} - 대상 문자열\\n   * @return {String} - 변경된 문자열\\n   * @example -\\n   */\\n  hyphenToCamelCase(val) {\\n    return val.replace(/[-_]([a-z])/g, function (match) {\\n      return match[1].toUpperCase();\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터에서 CamelCase 형태를 \\\"-\\\"를 단어 구분자로 변환하여 반환한다.\\n   * @param {String} - 대상 문자열\\n   * @param {String} - 구분자\\n   * @return {String} - 변경된 문자열\\n   * @example -\\n   */\\n  camelCaseToHyphen(val, dlm) {\\n    return val.replace(/[A-Z]/g, function (match) {\\n      return (dlm || '-') + match.toLowerCase();\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터에서 \\\"data-\\\" 다음 나오는 문자열을 \\\"-\\\" 또는 \\\"_\\\"를 구분자로하여 CamelCase 형태로 변환하여 반환한다.\\n   * @param {String} - 대상 문자열\\n   * @return {String} - 변경된 문자열\\n   * @example -\\n   */\\n  attributeToCamelCase(val) {\\n    return hyphenToCamelCase(val.replace(/^(data-)?(.*)/, '$2'));\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터에서 CamelCase 형태를 \\\"-\\\"를 단어 구분자로 변환하고 \\\"data-\\\" 문자열 뒤에 붙여 반환한다.\\n   * @param {String} - 대상 문자열\\n   * @return {String} - 변경된 문자열\\n   * @example -\\n   */\\n  camelCaseToAttribute(val) {\\n    return 'data-' + camelCaseToHyphen(val);\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터에서 url 전송시 문제가 되는 문자를 이스케이프 문자로 변환하여 반환한다.\\n   * @param {String} - 대상 문자열\\n   * @return {String} - 변경된 문자열\\n   * @example -\\n   */\\n  encodeURI(val) {\\n    return encodeURIComponent(val);\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터에서 encodeURI로 변환된 이스케이프 문자를 복원하여 반환한다.\\n   * @param {String} - 대상 문자열\\n   * @return {String} - 변경된 문자열\\n   * @example -\\n   */\\n  decodeURI(val) {\\n    return decodeURIComponent(val);\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터에서 html 출력시 문제가 되는 문자를 이스케이프 문자로 변환하여 반환한다.\\n   * @param {String} - 대상 문자열\\n   * @return {String} - 변경된 문자열\\n   * @example -\\n   */\\n  encodeHtml(val) {\\n    let htmlSpecialCharsRegEx = /[<>\\\\r\\\\n\\\"']/gm;\\n    let htmlSpecialCharsPlaceHolders = {\\n      '<': 'lt;',\\n      '>': 'gt;',\\n      '\\\\r': '#13;\\\\r',\\n      '\\\\n': '#10;',\\n      '\\\"': 'quot;',\\n      \\\"'\\\": 'apos;',\\n    };\\n\\n    return val.replace(htmlSpecialCharsRegEx, function (match) {\\n      return '&' + htmlSpecialCharsPlaceHolders[match];\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터에서 편집기 출력시 문제가 되는 문자를 이스케이프 문자로 변환하여 반환한다.\\n   * @param {String} - 대상 문자열\\n   * @return {String} - 변경된 문자열\\n   * @example -\\n   */\\n  encodeAce(val) {\\n    let htmlSpecialCharsRegEx = /[<>\\\\n\\\"']/gm;\\n    let htmlSpecialCharsPlaceHolders = {\\n      '<': '&lt;',\\n      '>': '&gt;',\\n      '\\\\n': '\\\\n',\\n      '\\\"': '&quot;',\\n      \\\"'\\\": '&apos;',\\n    };\\n\\n    return val.replace(htmlSpecialCharsRegEx, function (match) {\\n      return htmlSpecialCharsPlaceHolders[match];\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 Object 데이터를 JSON 데이터로 변환하여 반환한다.\\n   * @param {Object} - 대상 데이터\\n   * @param {Number} - JSON 데이터의 깊이(최대 3)\\n   * @return {Object} - JSON 데이터\\n   * @example -\\n   */\\n  object2Json(obj, lvl) {\\n    let ret = {};\\n\\n    lvl = lvl === undefined ? 1 : lvl + 1;\\n\\n    if (lvl > 4) return ret;\\n    if (obj.tagName) return ret;\\n\\n    let keys = Object.keys(obj).sort();\\n\\n    if (keys.length === 0) return ret;\\n\\n    keys.forEach((k, i) => {\\n      let _obj = obj[k], _ty = typeof _obj;\\n\\n      if (Array.isArray(_obj)) _ty = 'array';\\n\\n      if (_obj && _obj.constructor.name == 'MAP') return;\\n\\n      if (['_'].indexOf(k) >= 0 || _obj == null || _obj == undefined) {\\n      } else {\\n        switch (_ty) {\\n          case 'array':\\n            ret[k] = 'TypedArray';\\n\\n            break;\\n          case 'object':\\n            if (!Object.is(_obj, Jinja)) {\\n              ret[k] = this.object2Json(_obj, lvl);\\n\\n              if (!_obj.tagName) {\\n                Jinja.global.getAllMethods(_obj).forEach(\\n                  fnName =>\\n                  (ret[k][fnName] = {\\n                    '!type': 'fn()'\\n                  })\\n                );\\n              }\\n            }\\n\\n            break;\\n          case 'function':\\n            ret[k] = {\\n              '!type': 'fn()'\\n            };\\n\\n            break;\\n          default:\\n            ret[k] = _ty;\\n\\n            break;\\n        }\\n      }\\n    });\\n\\n    return ret;\\n  }\\n\\n  /**\\n   * @desc 지정한 엘리먼트 데이터를 JSON 데이터로 변환하여 반환한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @return {Array} - JSON 데이터\\n   * @example -\\n   */\\n  dom2Json(el) {\\n    let result = [];\\n\\n    for (let i = 0; i < el.children.length; i++) {\\n      let node = el.children[i];\\n\\n      if ([1, 2, 3].includes(node.nodeType)) {\\n        let newItem = {\\n          label: this.domTreeLabel(node),\\n          nodeData: node\\n        };\\n\\n        result.push(newItem);\\n\\n        if (node.matches('[data-render]')) {\\n        } else if (node.tagName == 'SVG') {\\n        } else if (node.children.length) {\\n          newItem.items = this.dom2Json(node);\\n        }\\n      }\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 지정한 Tree 엘리먼트의 노드의 라벨을 반환한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @return {String} - 노드라벨\\n   * @example -\\n   */\\n  domTreeLabel(el) {\\n    let result = ``;\\n\\n    if ([1, 2, 3].includes(el.nodeType)) {\\n      let tagName = el.tagName || `#TEXT`;\\n      let codeText = ``;\\n\\n      if (el.getAttribute('jj-id')) {\\n        codeText = `#${el.getAttribute('jj-id')}`;\\n      }\\n\\n      if (el.getAttribute('class')) {\\n        codeText = `[${el.getAttribute('class')}]`;\\n      }\\n\\n      if (el.getAttribute('data-render') && el.getAttribute('data-type')) {\\n        tagName = `${tagName}:${el.getAttribute('data-type')}`;\\n      }\\n\\n      result = `${tagName} ${codeText}`;\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 지정한 JSON 데이터를 Grid HTML로 반환한다.\\n   * @param {Array} - 대상 데이터\\n   * @param {Array} - 컬럼명 목록\\n   * @param {Array} - 헤더명 목록\\n   * @param {Object} - 옵션\\n   * @return {} - \\n   * @example -\\n   */\\n  json2Grid(rows, cols, heads, options) {\\n    options = options || {};\\n\\n    let numberFormat = options.numberFormat || '';\\n    let columns = cols || Object.keys(rows[0]);\\n    let headers = heads || columns;\\n    let sumData = {};\\n\\n    let tableHtml = `<table><colgroup>`;\\n    let headHtml = ``;\\n    let bodyHtml = ``;\\n    let footHtml = ``;\\n\\n    columns.forEach((key, index) => {\\n      let colWidth = 100;\\n\\n      if (options.colWidths) {\\n        colWidth = options.colWidths[index] || colWidth;\\n      }\\n\\n      tableHtml += `<col style=\\\"width: ${colWidth}px;\\\">`;\\n    });\\n\\n    tableHtml += `</colGroup>`;\\n\\n    headHtml += `<thead><tr>`;\\n    headers.forEach(key => (headHtml += `<th>${key}</th>`));\\n    headHtml += `</tr></thead>`;\\n\\n    bodyHtml += `<tbody>`;\\n\\n    rows.forEach(row => {\\n      let tr = `<tr>`;\\n\\n      for (let c = 0; c < columns.length; c++) {\\n        let column = columns[c];\\n        let data = row[column];\\n\\n        if (options.sumData && options.sumData.includes(column)) {\\n          sumData[column] = sumData[column] || 0;\\n          sumData[column] += data;\\n        }\\n\\n        switch (typeof data) {\\n          case 'number':\\n            switch (numberFormat) {\\n              case 'int':\\n                tr += `<td class=\\\"num\\\">${data.$toIntFormat()}</td>`;\\n\\n                break;\\n              case 'float':\\n                tr += `<td class=\\\"num\\\">${data.$toFloatFormat()}</td>`;\\n\\n                break;\\n              default:\\n                tr += `<td>${data}</td>`;\\n\\n                break;\\n            }\\n\\n            break;\\n          default:\\n            tr += `<td>${data}</td>`;\\n\\n            break;\\n        }\\n      }\\n\\n      tr += `</tr>`;\\n      bodyHtml += tr;\\n    });\\n\\n    bodyHtml += `</tbody>`;\\n\\n    if (options.isSum) {\\n      footHtml += `<thead class=\\\"sum\\\"><tr>`;\\n\\n      columns.forEach(column => {\\n        if (options.sumData && options.sumData.includes(column)) {\\n          footHtml += `<td class=\\\"num\\\">` + (sumData[column] || 0).$toFloatFormat() + `</td>`;\\n        } else {\\n          footHtml += `<td></td>`;\\n        }\\n      });\\n\\n      footHtml += `</tr></thead>`;\\n    }\\n\\n    tableHtml += headHtml;\\n    tableHtml += footHtml;\\n    tableHtml += bodyHtml;\\n    tableHtml += '</table>';\\n\\n    return tableHtml;\\n  }\\n\\n  /**\\n   * @desc 지정한 JSON 데이터를 Pivot하여 반환한다.\\n   * @param {Array} - 대상 데이터\\n   * @param {Array} - 생성할 컬럼 목록\\n   * @param {Array} - 기준항목\\n   * @param {String} - Key항목\\n   * @param {String} - Value항목\\n   * @return {} - \\n   * @example -\\n   */\\n  jsonPivot(dataset, displayColumns, pivotItems, pivotColumn, dataColumn) {\\n    let result = [];\\n\\n    dataset.forEach(row => {\\n      let index = result.findIndex((item, index) => {\\n        let equlCnt = 0;\\n\\n        displayColumns.forEach(col => {\\n          if (row[col] == item[col]) {\\n            equlCnt++;\\n          }\\n        });\\n\\n        return equlCnt == displayColumns.length;\\n      });\\n\\n      if (index >= 0) {\\n        result[index][row[pivotColumn]] += row[dataColumn];\\n      } else {\\n        let newItem = {};\\n\\n        displayColumns.forEach(col => {\\n          newItem[col] = row[col];\\n        });\\n\\n        pivotItems.forEach(pivotItem => {\\n          if (pivotItem == row[pivotColumn]) {\\n            newItem[pivotItem] = (newItem[pivotItem] || 0) + row[dataColumn];\\n          } else {\\n            newItem[pivotItem] = 0;\\n          }\\n        });\\n\\n        result.push(newItem);\\n      }\\n    });\\n\\n    return result;\\n  }\\n\\n  row2tree(dataset, rootValue, parentField, keyField, sortField, childsName) {\\n    childsName = childsName || 'subRows';\\n\\n    let tree = {};\\n\\n    if (rootValue == 'row') {\\n      rootValue = dataset[0][keyField];\\n    }\\n\\n    let selRows;\\n\\n    try {\\n      selRows = dataset.filter(function (row) {\\n        return row[parentField] === rootValue;\\n      });\\n\\n      if (sortField) {\\n        selRows = selRows.sort(function (a, b) {\\n          return (a[sortField] || '') > b[sortField || '']\\n            ? 1\\n          : (a[sortField] || '') < (b[sortField] || '')\\n            ? -1\\n          : 0;\\n        });\\n      }\\n    } catch (ex) {\\n      alert(ex.message);\\n    }\\n\\n    tree = selRows;\\n\\n    try {\\n      selRows.forEach((pR, pI) => {\\n        let _sub = this.row2tree(dataset, pR[keyField], parentField, keyField, sortField, childsName);\\n\\n        if (_sub.length > 0) {\\n          pR[childsName] = _sub;\\n        } else {\\n          pR[childsName] = [];\\n        }\\n      });\\n    } catch (ex) {\\n      alert(ex.message);\\n    }\\n\\n    return tree;\\n  }  \\n\\n  /**\\n   * @desc 지정한 데이터를 CRUD형으로 변환하여 반환한다.\\n   * @param {Array|Object} - 대상 데이터\\n   * @return {Array|Object} - 변경된 데이터\\n   * @example -\\n   */\\n  setCRUD(obj, defVal) {\\n    let _this = this;\\n\\n    if (Array.isArray(obj)) {\\n      obj.forEach(function (row, index) {\\n        _this.setCRUD(row, {\\n          _rno_: index + 1,\\n        });\\n      });\\n\\n      return obj;\\n    } else {\\n      return Object.assign(\\n        obj,\\n        {\\n          _crud_: 'R',\\n          _select_: false,\\n          _rno_: 0,\\n          _changeData_: {}\\n        },\\n        defVal\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 rows 데이터에서 변경된 row 목록을 반환한다.\\n   * @param {Array} - 대상 데이터\\n   * @return {Array} - 변경된 데이터\\n   * @example -\\n   */\\n  getChangeCRUD(rows) {\\n    return rows.filter(row => {\\n      return 'CUD'.indexOf(row['_crud_']) >= 0;\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 row 데이터에서 변경된 데이터를 key, vlaue형태로 반환한다.\\n   * @param {Object} - 대상 데이터\\n   * @return {Object} - 변경된 데이터\\n   * @example -\\n   */\\n  getChangeData(row) {\\n    let result = {};\\n\\n    if (row._crud_ == 'C') {\\n      let keys = Object.keys(row), keyLength = keys.length, loopX = 0;\\n\\n      while (loopX < keyLength) {\\n        let key = keys[loopX], data = row[key];\\n\\n        if (key.startsWith('_')) {\\n        } else {\\n          result[key] = data;\\n        }\\n\\n        loopX++;\\n      }\\n    } else {\\n      let keys = Object.keys(row['_changeData_']), keyLength = keys.length, loopX = 0;\\n\\n      while (loopX < keyLength) {\\n        let key = keys[loopX], data = row['_changeData_'][key];\\n\\n        if (data['old'] != data['val']) {\\n          result[key] = data['val'];\\n        }\\n\\n        loopX++;\\n      }\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 지정한 rows 데이터에 신규 row를 추가한다.\\n   * @param {Array} - 대상 데이터\\n   * @param {Object} - 추가할 데이터\\n   * @example -\\n   */\\n  addCRUDrow(rows, addRow) {\\n    addRow = Object.assign(addRow, {\\n      _crud_: 'C',\\n      _rno_: rows.length,\\n      _changeData_: {}\\n    });\\n\\n    rows.push(addRow);\\n  }\\n\\n  /**\\n   * @desc 지정한 rows 데이터에서 지정한 row의 변경사항을 초기화한다.\\n   * @param {Array} - 대상 데이터\\n   * @param {Object} - 삭제할 데이터\\n   * @example -\\n   */\\n  deleteCRUDrow(rows, deleteRow) {\\n    if (deleteRow._crud_ == 'C') {\\n      if (confirm('해당자료를 삭제합니까?'))\\n        rows.splice(config.data.rows.indexOf(deleteRow), 1);\\n    } else if (deleteRow._crud_ == 'D') {\\n      deleteRow._crud_ = 'R';\\n\\n      if (Object.keys(deleteRow._changeData_).length > 0) {\\n        deleteRow._crud_ = 'U';\\n      }\\n    } else {\\n      deleteRow._crud_ = 'D';\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 rows 데이터에서 지정한 순번에 해당하는 row의 변경사항을 초기화한다.\\n   * @param {Array} - 대상 데이터\\n   * @param {Number} - 데이터 순번\\n   * @example -\\n   */\\n  deleteCRUDrowID(rows, rIndex) {\\n    let deleteRow = config.data.rows[rIndex];\\n\\n    this.deleteCRUDrow(rows, deleteRow);\\n  }\\n\\n  /**\\n   * @desc 지정한 row 데이터에 지정한 항목을 추가한다.\\n   * @param {Object} - 대상 데이터\\n   * @param {String} - 추가할 항목\\n   * @param {*} - 추가할 값\\n   * @example -\\n   */\\n  addCRUDCol(row, field, value) {\\n    let old = row[field] || null;\\n\\n    row[field] = value;\\n    row['_changeData_'][field] = {\\n      old: old,\\n      val: value\\n    };\\n  }\\n\\n  /**\\n   * @desc 지정한 rows 데이터에서 선택된 row의 변경사항을 초기화한다.\\n   * @param {Array} - 대상 데이터\\n   * @example -\\n   */\\n  deleteCRUD(rows) {\\n    for (let i = rows.length - 1; i >= 0; i--) {\\n      let row = rows[i];\\n\\n      if (row._select_ === true) {\\n        if (row._crud_ == 'C') {\\n          rows.splice(i, 1);\\n        } else if (row._crud_ == 'D') {\\n          row._crud_ = 'R';\\n\\n          if (Object.keys(row._changeData_).length > 0) {\\n            row._crud_ = 'U';\\n          }\\n        } else {\\n          row._crud_ = 'D';\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 rows 컬럼을 배열로 가져온다.\\n   * @param {Array} - 대상 데이터\\n   * @example -\\n   */  \\n  tableColArray(rows, col){\\n    let result =[];\\n    rows.forEach(row=>result.push(row[col]));\\n    return result;\\n  }\\n  \\n  /**\\n   * @desc 지정한 rows 컬럼의 최대값을.\\n   * @param {Array} - 대상 데이터\\n   * @example -\\n   * https://programmingsummaries.tistory.com/108\\n   */  \\n  tableColMax(rows, col){\\n    let result = 0;\\n    rows.forEach(row=>result = Math.max(result, row[col]));\\n    return result;\\n  }  \\n\\n  /**\\n   * @desc 지정한 rows 컬럼의 최소값을 가져온다\\n   * @param {Array} - 대상 데이터\\n   * @example -\\n   */  \\n  tableColMin(rows, col){\\n    let result = 0;\\n    rows.forEach(row=>result = Math.min(result, row[col]));\\n    return result;\\n  }  \\n  \\n  /**\\n   * @desc 지정한 Object의 _crud_, _select_, _rno_, _changeData_ 항목을 삭제한다.\\n   * @param {Array|Obejct} - 대상 데이터\\n   * @return {Obejct} - 변경된 rows 데이터\\n   * @example -\\n   */\\n  clearCRUD(obj) {\\n    let _this = this;\\n\\n    if (Array.isArray(obj)) {\\n      obj.forEach(function (row, index) {\\n        f1(row);\\n      });\\n\\n      return obj;\\n    } else {\\n      return f1(obj);\\n    }\\n\\n    function f1(row) {\\n      delete row._crud_;\\n      delete row._select_;\\n      delete row._rno_;\\n      delete row._changeData_;\\n\\n      return row;\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 Object의 모든 Value 값을 삭제한다.\\n   * @param {Obejct} - 대상 데이터\\n   * @example -\\n   */\\n  clearObj(obj) {\\n    let keys = Object.keys(obj), keyLength = keys.length, loopX = 0;\\n\\n    while (loopX < keyLength) {\\n      let key = keys[loopX];\\n\\n      if (Array.isArray(obj[key])) {\\n        obj[key].splice(0, obj[key].length);\\n      } else if (typeof obj[key] == 'object') {\\n        Jinja.json.clearObj(obj[key]);\\n      } else {\\n        obj[key] = null;\\n      }\\n\\n      loopX++;\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 Object의 삭제 Object를 제외한 Object를 삭제한다.\\n   * @param {Obejct} - 대상 데이터\\n   * @example -\\n   */\\n  dataClean(obj) {\\n    let _this = this;\\n    let curKeys = [];\\n\\n    if (obj) {\\n      curKeys = Object.keys(obj).sort();\\n    }\\n\\n    let curKeyCount = curKeys.length;\\n\\n    for (let i = curKeyCount - 1; i >= 0; i--) {\\n      if (['_changeData_', '_crud_'].indexOf(curKeys[i]) >= 0) {\\n        if (obj['_crud_'] == 'D') {\\n        } else {\\n          delete obj[curKeys[i]];\\n        }\\n      } else {\\n        let curType = typeof obj[curKeys[i]];\\n\\n        if (curType === 'object' && obj[curKeys[i]] && !(curKeys[i] instanceof Date)) {\\n          if (Object.keys(obj[curKeys[i]]).length > 0) {\\n            _this.dataClean(obj[curKeys[i]], obj);\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 rows 데이터에서 삭제 row를 삭제하고 모든 row의 CRUD 항목을 초기화한다.\\n   * @param {Array} - rows 데이터\\n   * @return {Array} - 변경된 rows 데이터\\n   * @example -\\n   */\\n  dataRowsClean(rows) {\\n    for (let i = rows.length - 1; i >= 0; i--) {\\n      if (rows[i]._crud_ == 'D') {\\n        rows.splice(i, 1);\\n      }\\n    }\\n\\n    this.setCRUD(rows);\\n  }\\n\\n  /**\\n   * @desc 지정한 rows 데이터를 지정한 keys의 값을 기준으로 재정렬한다.\\n   * @param {Array} - rows 데이터\\n   * @param {Object} - keys 데이터\\n   * @return {Array} - 변경된 rows 데이터\\n   * @example -\\n   */\\n  sortRows(rows, keys) {\\n    keys = keys || {};\\n\\n    let obLen = function (obj) {\\n      let size = 0, key;\\n\\n      for (key in obj) {\\n        if (obj.hasOwnProperty(key)) size++;\\n      }\\n\\n      return size;\\n    };\\n\\n    let obIx = function (obj, ix) {\\n      let size = 0, key;\\n\\n      for (key in obj) {\\n        if (obj.hasOwnProperty(key)) {\\n          if (size == ix) return key;\\n\\n          size++;\\n        }\\n      }\\n\\n      return false;\\n    };\\n\\n    let multiSort = function (a, b, d) {\\n      d = d !== null ? d : 1;\\n\\n      if (a == b) return 0;\\n\\n      return a > b ? 1 * d : -1 * d;\\n    };\\n\\n    let KL = obLen(keys);\\n    let newarr = rows.slice(0);\\n\\n    if (!KL) {\\n      return newarr.sort(multiSort);\\n    }\\n\\n    for (let k in keys) {\\n      if (keys[k]) keys[k] = keys[k].toLowerCase();\\n\\n      keys[k] = keys[k] == 'desc' || keys[k] == -1 ? -1 : keys[k] == 'skip' || keys[k] === 0 ? 0 : 1;\\n    }\\n\\n    newarr.sort(function (a, b) {\\n      let sorted = 0, ix = 0;\\n\\n      while (sorted === 0 && ix < KL) {\\n        let k = obIx(keys, ix);\\n\\n        if (k) {\\n          let dir = keys[k];\\n\\n          sorted = multiSort(a[k], b[k], dir);\\n\\n          ix++;\\n        }\\n      }\\n\\n      return sorted;\\n    });\\n\\n    return newarr;\\n  }\\n\\n  /**\\n   * @desc 지정한 배열에서 지정한 값의 위치를 변경한다.\\n   * @param {Array} - 대상 배열\\n   * @param {Number} - 변경전 순번\\n   * @param {Number} - 변경후 순번\\n   * @return {Array} - 변경된 배열\\n   * @example -\\n   */\\n  arrMove(arr, old_index, new_index) {\\n    if (old_index < new_index) {\\n      new_index++;\\n    }\\n\\n    let so = arr[old_index];\\n\\n    arr.splice(old_index, 1);\\n    arr.splice(new_index, 0, so);\\n\\n    return arr;\\n  }\\n\\n  /**\\n   * @desc 지정한 오브젝트의 모든 메소드 목록을 반환한다.\\n   * @param {Object} - 대상 오브젝트\\n   * @return {Array} - 메소드 목록\\n   * @example -\\n   */\\n  getAllMethods(obj) {\\n    let props = [];\\n\\n    try {\\n      do {\\n        const l = Object.getOwnPropertyNames(obj)\\n        .concat(Object.getOwnPropertySymbols(obj).map(s => s.toString()))\\n        .sort()\\n        .filter(\\n          (p, i, arr) =>\\n          typeof obj[p] === 'function' &&\\n          p !== 'constructor' &&\\n          (i == 0 || p !== arr[i - 1]) &&\\n          props.indexOf(p) === -1\\n        );\\n\\n        props = props.concat(l);\\n      } while ((obj = Object.getPrototypeOf(obj)) && Object.getPrototypeOf(obj));\\n\\n      return props;\\n    } catch (ex) {\\n      return props;\\n    }\\n  }\\n\\n  mergeTableCell(table, cellIndexs){\\n\\n    let spanTr = null;\\n    let spanTd = null;\\n    let spanCount = 1;\\n    let spanText = null;\\n\\n    table.querySelectorAll(`[rowspan], [hidden]`).forEach(el=>{\\n      el.removeAttribute('rowspan');\\n      el.removeAttribute('hidden');\\n    })\\n\\n    if (typeof(cellIndexs)==\\\"number\\\"){\\n      cellIndexs = [cellIndexs];\\n    }\\n    cellIndexs.forEach(cellIndex=>{\\n      table.querySelectorAll(`tbody tr`).forEach(tr=>{\\n        if (tr.childNodes[cellIndex]){\\n          if(!spanTr ){\\n            spanTr = tr;\\n            spanTd = spanTr.childNodes[cellIndex];\\n            spanText = spanTd.innerText;\\n            spanCount = 1;\\n          }\\n          else {\\n            if(spanText == tr.childNodes[cellIndex].innerText){\\n              spanCount++;\\n              spanTd.setAttribute('rowspan', spanCount);\\n              tr.childNodes[cellIndex].hidden = true\\n            }\\n            else {\\n              spanTr = tr;\\n              spanTd = spanTr.childNodes[cellIndex];\\n              spanText = spanTd.innerText;\\n              spanCount = 1;\\n            }\\n          }\\n        }\\n      })\\n    })\\n\\n\\n  }\\n\\n  /**\\n   * @desc 지정한 두 연도 사이의 연도 목록을 반환한다.\\n   * @param {String} - 시작년 문자열\\n   * @param {String} - 종료년 문자열\\n   * @return {Array} - 년 목록\\n   * @example -\\n   */\\n  getCategoriesYear(from, to) {\\n    let result = [];\\n\\n    from = parseInt(from);\\n    to = parseInt(to);\\n\\n    for (; from <= to; from++) {\\n      result.push(from.toString());\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 지정한 두 월 사이의 월(yyyyMM) 목록을 반환한다.\\n   * @param {String} - 시작월 문자열\\n   * @param {String} - 종료월 문자열\\n   * @return {Array} - 월(yyyyMM) 목록\\n   * @example -\\n   */\\n  getCategoriesMonth(from, to) {\\n    let result = [];\\n\\n    from = new Date(from + '-01');\\n    to = new Date(to + '-01');\\n\\n    for (; from <= to; from.$addMonth(1)) {\\n      result.push(from.$toFormat('yyyyMM'));\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 지정한 두 일자 사이의 일자(yyyyMMdd) 목록을 반환한다.\\n   * @param {String} - 시작일자 문자열\\n   * @param {String} - 종료일자 문자열\\n   * @return {Array} - 일자(yyyyMMdd) 목록\\n   * @example -\\n   */\\n  getCategoriesDay(from, to) {\\n    let result = [];\\n\\n    from = new Date(from);\\n    to = new Date(to);\\n\\n    for (; from <= to; from.$addDate(1)) {\\n      result.push(from.$toFormat('yyyyMMdd'));\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 지정한 두 월 사이의 월(yyyy/MM) 목록을 반환한다.\\n   * @param {String} - 시작월 문자열\\n   * @param {String} - 종료월 문자열\\n   * @return {Array} - 월(yyyy/MM) 목록\\n   * @example -\\n   */\\n  getHeadMonth(from, to) {\\n    let result = [];\\n\\n    from = new Date(from + '-01');\\n    to = new Date(to + '-01');\\n\\n    for (; from <= to; from.$addMonth(1)) {\\n      result.push(from.$toFormat('yyyy/MM'));\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 지정한 두 일자 사이의 일자(MM/dd) 목록을 반환한다.\\n   * @param {String} - 시작일자 문자열\\n   * @param {String} - 종료일자 문자열\\n   * @return {Array} - 일자(MM/dd) 목록\\n   * @example -\\n   */\\n  getHeadDay(from, to) {\\n    let result = [];\\n\\n    from = new Date(from);\\n    to = new Date(to);\\n\\n    for (; from <= to; from.$addDate(1)) {\\n      result.push(from.$toFormat('MM/dd'));\\n    }\\n\\n    return result;\\n  }\\n\\n  getDates(from, to) {\\n    let result = [];\\n\\n    from = new Date(from);\\n    to = new Date(to);\\n\\n    for (; from <= to; from.$addDate(1)) {\\n      result.push(new Date(from));\\n    }\\n\\n    return result;\\n  }  \\n  /**\\n   * @desc 지정한 문자열 데이터를 데이트 타입으로 반환한다.\\n   * @param {String} - 문자열\\n   * @return {Date} - 데이터\\n   * @example -\\n   */\\n  string2date(dt) {\\n    let result = new Date(\\n      dt.substr(0, 4) +\\n      '-' +\\n      dt.substr(4, 2) +\\n      '-' +\\n      dt.substr(6, 2) +\\n      ' ' +\\n      dt.substr(8, 2) +\\n      ':' +\\n      dt.substr(10, 2)\\n    );\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 지정한 데이트 타입 데이터를 문자열로 반환한다.\\n   * @param {Date} - 데이터\\n   * @return {String} - 문자열\\n   * @example -\\n   */\\n  datetime2string(dt) {\\n    return dt\\n      .replaceAll('-', '')\\n      .replaceAll('T', '')\\n      .replaceAll(':', '')\\n      .substr(0, 12);\\n  }\\n\\n  /**\\n   * @desc 키보드 이벤트의 키상태를 문자열로 반환한다.\\n   * @param {Event} - 이벤트\\n   * @return {String} - 이벤트 키상태 문자열\\n   * @example -\\n   */\\n  getEventKeyMap(e) {\\n    let keyMap = [];\\n\\n    if (e.ctrlKey) {\\n      keyMap.push('Ctrl');\\n    }\\n\\n    if (e.altKey) {\\n      keyMap.push('Alt');\\n    }\\n\\n    if (e.shiftKey) {\\n      keyMap.push('Shift');\\n    }\\n\\n    switch (e.keyCode) {\\n      case 8:\\n        keyMap.push('Back');\\n\\n        break;\\n      case 9:\\n        keyMap.push('Tab');\\n\\n        break;\\n      case 13:\\n        keyMap.push('Enter');\\n\\n        break;\\n      case 27:\\n        keyMap.push('Esc');\\n\\n        break;\\n      case 32:\\n        keyMap.push('Space');\\n\\n        break;\\n      case 33:\\n        keyMap.push('PgUp');\\n\\n        break;\\n      case 34:\\n        keyMap.push('PgDn');\\n\\n        break;\\n      case 35:\\n        keyMap.push('End');\\n\\n        break;\\n      case 36:\\n        keyMap.push('Home');\\n\\n        break;\\n      case 37:\\n        keyMap.push('Left');\\n\\n        break;\\n      case 38:\\n        keyMap.push('Up');\\n\\n        break;\\n      case 39:\\n        keyMap.push('Right');\\n\\n        break;\\n      case 40:\\n        keyMap.push('Down');\\n\\n        break;\\n      case 45:\\n        keyMap.push('Insert');\\n\\n        break;\\n      case 46:\\n        keyMap.push('Delete');\\n\\n        break;\\n      default: {\\n        if (e.key) {\\n          keyMap.push(e.key.toUpperCase());\\n        }\\n\\n        break;\\n      }\\n    }\\n\\n    return keyMap.join('-');\\n  }\\n\\n  /**\\n   * @desc Shortcut Icon을 변경한다.\\n   * @param {String} - 아이콘 URL\\n   * @example -\\n   */\\n  changeShortcutIcon(iconUrl) {\\n    document.querySelector(\\\"link[rel='shortcut icon']\\\").href = iconUrl;\\n  }\\n\\n  /**\\n   * @desc 숫자를 한글문자열로 변환하기 (예: 유튜트조회수)\\n   * @param {num} - 숫자\\n   * @return {String} - 한글표현숫자\\n   * @example - convertInt2han(1234) \\n   *          - 1.234천회\\n   */\\n  convertInt2han(num) {\\n    let result;\\n\\n    if(count < 1000) {\\n      result = `${num} 회`;\\n\\n    } else if(count < 10000){\\n      result = `${num / 1000} 천회`;\\n\\n    } else {\\n      result = `${num / 10000} 만회`;\\n    }\\n\\n    return result;\\n  }\\n\\n  capture(el,bWatermark) {\\n    let txtMark  = \\\"AppSpeed.640\\\";\\n\\n    return new Promise((resolve, reject)=>{\\n      Jinja.require.load('html2canvas')\\n        .then(e =>html2canvas(el, {\\n        onrendered: function (canvas) {\\n\\n          let ctx = canvas.getContext(\\\"2d\\\");       // get 2D context of canvas\\n\\n          ctx.textBaseline = \\\"top\\\";                // start with drawing text from top\\n          ctx.font = \\\"24px sans-serif\\\";            // set a font and size\\n          ctx.textAlign = \\\"center\\\";     \\n          ctx.fillStyle = \\\"rgb(200,0,0,0.2)\\\"; \\n          if(bWatermark && Jinja.bWatermark){\\n            ctx.fillText(txtMark,canvas.width/2, canvas.height/2);              \\n          }\\n\\n        }\\n      }))\\n        .then(canvas=>{\\n        let img = canvas.toDataURL(\\\"image/png\\\");\\n        resolve(img);\\n      });\\n    });\\n  }  \\n\\n  uiCapture(el, title){\\n    return this.capture(el,true)\\n      .then(img =>JJFormModal.open(\\\"uiCapture.uc\\\", {\\n      \\\"image\\\": img,\\n      \\\"fileName\\\": title+'.png' \\n    }));\\n  }\\n\\n\\n\\n\\n  /**\\n   * @desc 모듈명을 반환한다.\\n   */\\n  who() {\\n    alert('JJGlobal');\\n  }\\n}\\n\\nJinja.addModule('global', JJGlobal);\\n\\nString.prototype.replaceAll = function (find, replace) {\\n  return this.replace(new RegExp(find, 'g'), replace);\\n};\\n\\nNumber.prototype.$between = function (from, to) {\\n  return this >= from && this <= to;\\n};\\n\\nDate.prototype.$addDate = function (num) {\\n  this.setDate(this.getDate() + num);\\n};\\n\\nDate.prototype.$addMonth = function (num) {\\n  this.setMonth(this.getMonth() + num);\\n};\\n\\nDate.prototype.$addYear = function (num) {\\n  this.setYear(this.getYear() + num);\\n};\\nDate.prototype.$dayDiff = function (date) {\\n  return (this-date) / 1000/3600/24;\\n};\\n\\n\\nfunction MD5() {    \\n  'use strict';\\n\\n  /*\\n\\t\\t* Add integers, wrapping at 2^32. This uses 16-bit operations internally\\n\\t\\t* to work around bugs in some JS interpreters.\\n\\t\\t*/\\n  function safe_add(x, y) {\\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF),\\n        msw = (x >> 16) + (y >> 16) + (lsw >> 16);\\n    return (msw << 16) | (lsw & 0xFFFF);\\n  }\\n\\n  /*\\n\\t\\t* Bitwise rotate a 32-bit number to the left.\\n\\t\\t*/\\n  function bit_rol(num, cnt) {\\n    return (num << cnt) | (num >>> (32 - cnt));\\n  }\\n\\n  /*\\n\\t\\t* These functions implement the four basic operations the algorithm uses.\\n\\t\\t*/\\n  function md5_cmn(q, a, b, x, s, t) {\\n    return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);\\n  }\\n  function md5_ff(a, b, c, d, x, s, t) {\\n    return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\\n  }\\n  function md5_gg(a, b, c, d, x, s, t) {\\n    return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\\n  }\\n  function md5_hh(a, b, c, d, x, s, t) {\\n    return md5_cmn(b ^ c ^ d, a, b, x, s, t);\\n  }\\n  function md5_ii(a, b, c, d, x, s, t) {\\n    return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\\n  }\\n\\n  /*\\n\\t\\t* Calculate the MD5 of an array of little-endian words, and a bit length.\\n\\t\\t*/\\n  function binl_md5(x, len) {\\n    /* append padding */\\n    x[len >> 5] |= 0x80 << ((len) % 32);\\n    x[(((len + 64) >>> 9) << 4) + 14] = len;\\n\\n    var i, olda, oldb, oldc, oldd,\\n        a = 1732584193,\\n        b = -271733879,\\n        c = -1732584194,\\n        d = 271733878;\\n\\n    for (i = 0; i < x.length; i += 16) {\\n      olda = a;\\n      oldb = b;\\n      oldc = c;\\n      oldd = d;\\n\\n      a = md5_ff(a, b, c, d, x[i], 7, -680876936);\\n      d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\\n      c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\\n      b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\\n      a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\\n      d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\\n      c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\\n      b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\\n      a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\\n      d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\\n      c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);\\n      b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\\n      a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\\n      d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\\n      c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\\n      b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\\n\\n      a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\\n      d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\\n      c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\\n      b = md5_gg(b, c, d, a, x[i], 20, -373897302);\\n      a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\\n      d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\\n      c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\\n      b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\\n      a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\\n      d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\\n      c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\\n      b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\\n      a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\\n      d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\\n      c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\\n      b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\\n\\n      a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);\\n      d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\\n      c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\\n      b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\\n      a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\\n      d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\\n      c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\\n      b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\\n      a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\\n      d = md5_hh(d, a, b, c, x[i], 11, -358537222);\\n      c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\\n      b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\\n      a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\\n      d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\\n      c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\\n      b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\\n\\n      a = md5_ii(a, b, c, d, x[i], 6, -198630844);\\n      d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\\n      c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\\n      b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\\n      a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\\n      d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\\n      c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\\n      b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\\n      a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\\n      d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\\n      c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\\n      b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\\n      a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\\n      d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\\n      c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\\n      b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\\n\\n      a = safe_add(a, olda);\\n      b = safe_add(b, oldb);\\n      c = safe_add(c, oldc);\\n      d = safe_add(d, oldd);\\n    }\\n    return [a, b, c, d];\\n  }\\n\\n  /*\\n\\t\\t* Convert an array of little-endian words to a string\\n\\t\\t*/\\n  function binl2rstr(input) {\\n    var i,\\n        output = '';\\n    for (i = 0; i < input.length * 32; i += 8) {\\n      output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);\\n    }\\n    return output;\\n  }\\n\\n  /*\\n\\t\\t* Convert a raw string to an array of little-endian words\\n\\t\\t* Characters >255 have their high-byte silently ignored.\\n\\t\\t*/\\n  function rstr2binl(input) {\\n    var i,\\n        output = [];\\n    output[(input.length >> 2) - 1] = undefined;\\n    for (i = 0; i < output.length; i += 1) {\\n      output[i] = 0;\\n    }\\n    for (i = 0; i < input.length * 8; i += 8) {\\n      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);\\n    }\\n    return output;\\n  }\\n\\n  /*\\n\\t\\t* Calculate the MD5 of a raw string\\n\\t\\t*/\\n  function rstr_md5(s) {\\n    return binl2rstr(binl_md5(rstr2binl(s), s.length * 8));\\n  }\\n\\n  /*\\n\\t\\t* Calculate the HMAC-MD5, of a key and some data (raw strings)\\n\\t\\t*/\\n  function rstr_hmac_md5(key, data) {\\n    var i,\\n        bkey = rstr2binl(key),\\n        ipad = [],\\n        opad = [],\\n        hash;\\n    ipad[15] = opad[15] = undefined;\\n    if (bkey.length > 16) {\\n      bkey = binl_md5(bkey, key.length * 8);\\n    }\\n    for (i = 0; i < 16; i += 1) {\\n      ipad[i] = bkey[i] ^ 0x36363636;\\n      opad[i] = bkey[i] ^ 0x5C5C5C5C;\\n    }\\n    hash = binl_md5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\\n    return binl2rstr(binl_md5(opad.concat(hash), 512 + 128));\\n  }\\n\\n  /*\\n\\t\\t* Convert a raw string to a hex string\\n\\t\\t*/\\n  function rstr2hex(input) {\\n    var hex_tab = '0123456789abcdef',\\n        output = '',\\n        x,\\n        i;\\n    for (i = 0; i < input.length; i += 1) {\\n      x = input.charCodeAt(i);\\n      output += hex_tab.charAt((x >>> 4) & 0x0F) +\\n        hex_tab.charAt(x & 0x0F);\\n    }\\n    return output;\\n  }\\n\\n  /*\\n\\t\\t* Encode a string as utf-8\\n\\t\\t*/\\n  function str2rstr_utf8(input) {\\n    return unescape(encodeURIComponent(input));\\n  }\\n\\n  /*\\n\\t\\t* Take string arguments and return either raw or hex encoded strings\\n\\t\\t*/\\n  function raw_md5(s) {\\n    return rstr_md5(str2rstr_utf8(s));\\n  }\\n  function hex_md5(s) {\\n    return rstr2hex(raw_md5(s));\\n  }\\n  function raw_hmac_md5(k, d) {\\n    return rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d));\\n  }\\n  function hex_hmac_md5(k, d) {\\n    return rstr2hex(raw_hmac_md5(k, d));\\n  }\\n\\n  this.md5 = function(string, key, raw) {\\n    if (!key) {\\n      if (!raw) {\\n        return hex_md5(string);\\n      } else {\\n        return raw_md5(string);\\n      }\\n    }\\n    if (!raw) {\\n      return hex_hmac_md5(key, string);\\n    } else {\\n      return raw_hmac_md5(key, string);\\n    }\\n  }\\n}\\n\\nJinja.global.md = new MD5();\\n/* ==JJI18n.640.class================ */\\n\\n/**\\n * @classdesc 국제화 관리를 위한 클래스\\n */\\nclass JJI18n extends JJModule {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      \\\"apiVersion\\\": workspaceMeta.options.appInfo.apiVersion||\\\"v61\\\",\\n      \\\"locale\\\": workspaceMeta.options.locale || 'ko-KR',\\n      \\\"timeZone\\\": workspaceMeta.options.timeZone || 'Asia/Seoul',\\n      \\\"currency\\\": workspaceMeta.options.currency || 'KRW',\\n      \\\"weekName\\\": ['일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일'],\\n      \\\"ampm\\\": ['오전', '오후'],\\n      \\\"timeUnit\\\": ['초', '분', '시간', '일', '개월', '년'],\\n      \\\"beforeAfter\\\": ['전', '후']\\n    };\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.numberFormat = new Intl.NumberFormat(this.options.locale, {});\\n\\n    this.currencyFormat = new Intl.NumberFormat(this.options.locale, {\\n      style: 'currency',\\n      currency: this.options.currency,\\n      minimumFractionDigits: 3,\\n      maximumFractionDigits: 3\\n    });\\n\\n    this.percentFormat = new Intl.NumberFormat(this.options.locale, {\\n      style: 'percent',\\n      minimumFractionDigits: 2,\\n      maximumFractionDigits: 2\\n    });\\n\\n    this.floatFormat = new Intl.NumberFormat(this.options.locale, {\\n      minimumFractionDigits: 2,\\n      maximumFractionDigits: 2\\n    });\\n\\n    this.intFormat = new Intl.NumberFormat(this.options.locale, {\\n      minimumFractionDigits: 0,\\n      maximumFractionDigits: 0\\n    });\\n  }\\n\\n  /**\\n   * @desc 현재 브라우저의 언어코드를 반환한다.\\n   * @return {String} - 브라우저 언어코드\\n   * @example -\\n   */\\n  getBrowseCode() {\\n    let languages =\\n        (navigator.languages && navigator.languages[0]) ||\\n        navigator.language ||\\n        navigator.userLanguage;\\n\\n    return languages.substr(0, 2);\\n  }\\n\\n  /**\\n   * @desc 데이터베이스에 입력된 지역코드정보 목록을 반환한다.\\n   * @return {Array} - 지역코드정보 목록\\n   * @example -\\n   */\\n  getLocaleCode() {\\n    let d = new Date();\\n\\n    return Jinja.ajax.getJsonFileUri('countries.json').then(data => {\\n      let arCountries = [];\\n\\n      data.forEach(item => {\\n        try {\\n          arCountries.push({\\n            name: `${item.name} [${item.nativeName}] ${item.languages[0]['iso639_1']}-${item.alpha2Code}`,\\n            language: item.languages[0]['iso639_1'],\\n            country: item.alpha2Code,\\n            locale: item.languages[0]['iso639_1'] + '-' + item.alpha2Code,\\n            format: d.toLocaleString(\\n              item.languages[0]['iso639_1'] + '-' + item.alpha2Code\\n            )\\n          });\\n        } catch (ex) {\\n          arCountries.push({\\n            name: `${item.name} [${item.nativeName}] ${item.languages[0]['iso639_1']}-${item.alpha2Code}`,\\n            language: item.languages[0]['iso639_1'],\\n            country: item.alpha2Code,\\n            locale: item.languages[0]['iso639_1'] + '-' + item.alpha2Code,\\n            format: null\\n          });\\n        }\\n      });\\n\\n      arCountries = Jinja.global.sortRows(arCountries, {\\n        name: 'asc'\\n      });\\n\\n      return arCountries;\\n    });\\n  }\\n\\n  /**\\n   * @desc 현재 브라우저의 표준시 코드를 반환한다.\\n   * @return {String} - 표준시 코드\\n   * @example -\\n   */\\n  getTimezone() {\\n    return Intl.DateTimeFormat().resolvedOptions().timeZone;\\n  }\\n\\n  /**\\n   * @desc 데이터베이스에 입력된 표준시코드정보 목록을 반환한다.\\n   * @return {Array} - 표준시코드정보 목록\\n   * @example -\\n   */\\n  getTimezoneCode() {\\n    return Jinja.ajax.getJsonFileUri('timezone.json').then(data => {\\n      let arTimeZone = [];\\n\\n      data.forEach(item => {\\n        item.utc.forEach(utc => {\\n          arTimeZone.push({\\n            name: item.text + ':' + utc,\\n            code: utc,\\n            offset: item.offset\\n          });\\n        });\\n      });\\n\\n      arTimeZone = Jinja.global.sortRows(arTimeZone, {\\n        offset: 'asc'\\n      });\\n\\n      return arTimeZone;\\n    });\\n  }\\n\\n  /**\\n   * @desc 현재 브라우저의 표준시 명칭을 반환한다.\\n   * @return {String} - 표준시 명칭\\n   * @example -\\n   */\\n  getTimezoneName() {\\n    const today = new Date();\\n    const short = today.toLocaleDateString(undefined);\\n    const full = today.toLocaleDateString(undefined, {timeZoneName: 'long'});\\n    const shortIndex = full.indexOf(short);\\n\\n    if (shortIndex >= 0) {\\n      const trimmed = full.substring(0, shortIndex) + full.substring(shortIndex + short.length);\\n\\n      return trimmed.replace(/^[\\\\s,.\\\\-:;]+|[\\\\s,.\\\\-:;]+$/g, '');\\n    } else {\\n      return full;\\n    }\\n  }\\n\\n  /**\\n   * @desc DateTime 옵션을 반환한다.\\n   * @return {Object} - DateTime 옵션\\n   * @example -\\n   */\\n  getDateTimeOptions() {\\n    return {\\n      locale: this.options.locale || this.options.locale,\\n      timeZone: this.options.timeZone || this.options.timeZone\\n    };\\n  }\\n\\n  /**\\n   * @desc DateTime 옵션을 설정한다.\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  setDateTimeOptions(options) {\\n    this.options.locale = options.locale || this.options.locale;\\n    this.options.timeZone = options.timeZone || this.options.timeZone;\\n  }\\n\\n  /**\\n   * @desc 지정한 날짜를 지정한 날짜포멧으로 반환한다.\\n   * @param {Date} - 대상 날짜\\n   * @param {String} - 날짜포멧\\n   * @return {String} - 포멧팅된 날짜 문자열\\n   * @example -\\n   */\\n  dateFormat(d, format) {\\n    if (!d.valueOf()) return '';\\n    if (!format) format = 'yyyy-MM-dd';\\n\\n    let h;\\n\\n    return format.replace(/(yyyy|yy|MM|dd|E|hh|mm|ss|ap)/gi, $1 => {\\n      switch ($1) {\\n        case 'yyyy':\\n          return d.getFullYear();\\n        case 'yy':\\n          return (d.getFullYear() % 1000).toString().padStart(2, '0');\\n        case 'MM':\\n          return (d.getMonth() + 1).toString().padStart(2, '0');\\n        case 'dd':\\n          return d.getDate().toString().padStart(2, '0');\\n        case 'E':\\n          return this.options.weekName[d.getDay()];\\n        case 'HH':\\n          return d.getHours().toString().padStart(2, '0');\\n        case 'hh':\\n          return ((h = d.getHours() % 12) ? h : 12).toString().padStart(2, '0');\\n        case 'mm':\\n          return d.getMinutes().toString().padStart(2, '0');\\n        case 'ss':\\n          return d.getSeconds().toString().padStart(2, '0');\\n        case 'ap':\\n          return d.getHours() < 12\\n            ? this.options.ampm[0]\\n          : this.options.ampm[1];\\n        default:\\n          return $1;\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 두날짜의 차이를 반환한다.\\n   * @param {Date} - 시작일자\\n   * @param {Date} - 종료일자\\n   * @return {String} - 두날짜 차이\\n   * @example -\\n   */\\n  dateDiff(d1, d2) {\\n    if (!d1.valueOf()) return '';\\n    if (!d2) d2 = new Date();\\n\\n    let before = d1 - d2 < 0 ? this.options.beforeAfter[0] : this.options.beforeAfter[1];\\n    let diff = Math.abs((d1 - d2) / 1000);\\n\\n    if (diff < 60)\\n      // 초단위변경\\n      return parseInt(diff) + '' + this.options.timeUnit[0] + before;\\n    else if (diff < 60 * 60)\\n      // 분단위변경\\n      return parseInt(diff / 60) + '' + this.options.timeUnit[1] + before;\\n    else if (diff < 60 * 60 * 24)\\n      // 시간단위변경\\n      return (\\n        parseInt(diff / (60 * 60)) + '' + this.options.timeUnit[2] + before\\n      );\\n    else if (diff < 60 * 60 * 24 * 30)\\n      // 일\\n      return (\\n        parseInt(diff / (60 * 60 * 24)) + '' + this.options.timeUnit[3] + before\\n      );\\n    else if (diff < 60 * 60 * 24 * 30 * 12)\\n      // 개월\\n      return (\\n        parseInt(diff / (60 * 60 * 24 * 30)) + '' + this.options.timeUnit[4] + before\\n      );\\n  }\\n\\n  /**\\n   * @desc 지정한 값의 날짜 여부를 반환한다.\\n   * @param {*} - 대상 날짜값\\n   * @return {Boolean} - 날짜여부\\n   * @example -\\n   */\\n  isDate(val) {\\n    let result = false;\\n\\n    if (val instanceof Date) result = true;\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 지정한 날짜를 지정한 지역, 표준시 기준으로 반환한다.\\n   * @param {Date} - 대상 날짜 데이터\\n   * @param {String} - 지역\\n   * @return {String} - 포멧팅된 날짜 문자열\\n   * @example -\\n   */\\n  timezoneFormat(d, locale, timezone) {\\n    if (!locale) locale = this.options.locale || this.options.locale;\\n    if (!timezone) timezone = this.options.timeZone || this.options.timeZone;\\n\\n    try {\\n      return d.toLocaleString(locale, {\\n        timeZone: timezone\\n      });\\n    } catch (ex) {\\n      return '';\\n    }\\n  }\\n\\n  /**\\n   * @desc 현재 시간을 지정한 표준시 기준으로 반환한다.\\n   * @param {String} - 지정 표준시\\n   * @return {Object} - 현재시간 표준시정보\\n   * @example -\\n   */\\n  timezoneClock(timezone) {\\n    let d = new Date();\\n\\n    return {\\n      hour:\\n      d.toLocaleString('default', {\\n        hour: 'numeric',\\n        hour12: false,\\n        timeZone: timezone\\n      }).replace(/[^0-9]/g, \\\"\\\") * 1,\\n      minute:\\n      d.toLocaleString('default', {\\n        minute: 'numeric',\\n        hour12: false,\\n        timeZone: timezone\\n      }).replace(/[^0-9]/g, \\\"\\\") * 1,\\n      second:\\n      d.toLocaleString('default', {\\n        second: 'numeric',\\n        hour12: false,\\n        timeZone: timezone\\n      }).replace(/[^0-9]/g, \\\"\\\") * 1,\\n    };\\n  }\\n\\n  /**\\n   * @desc 모듈명을 반환한다.\\n   */\\n  who() {\\n    alert('JJI18n');\\n  }\\n}\\n\\nJinja.addModule('i18n', JJI18n);\\n\\nif (!Date.prototype.$toFormat) {\\n  Date.prototype.$toFormat = function (format) {\\n    return Jinja.i18n.dateFormat(this, format);\\n  };\\n}\\n\\nif (!Date.prototype.$toTimezoneFormat) {\\n  Date.prototype.$toTimezoneFormat = function (locale, timezone) {\\n    return Jinja.i18n.timezoneFormat(this, locale, timezone);\\n  };\\n}\\n\\nif (!Date.prototype.$toTimezoneFormat) {\\n  Date.prototype.$toTimezoneFormat = function (locale, timezone) {\\n    return Jinja.i18n.timezoneFormat(this, locale, timezone);\\n  };\\n}\\n\\nif (!Number.prototype.$toPercentFormat) {\\n  Number.prototype.$toPercentFormat = function () {\\n    return Jinja.i18n.percentFormat.format(this);\\n  };\\n}\\n\\nif (!Number.prototype.$toCurrencyFormat) {\\n  Number.prototype.$toCurrencyFormat = function () {\\n    return Jinja.i18n.currencyFormat.format(this);\\n  };\\n}\\n\\nif (!Number.prototype.$toFloatFormat) {\\n  Number.prototype.$toFloatFormat = function () {\\n    return Jinja.i18n.floatFormat.format(this);\\n  };\\n}\\n\\nif (!Number.prototype.$toIntFormat) {\\n  Number.prototype.$toIntFormat = function () {\\n    return Jinja.i18n.intFormat.format(this);\\n  };\\n}\\n/* ==JJConfirm.640.class================ */\\n\\n/**\\n * @classdesc 대화창 관리를 위한 클래스\\n */\\nclass JJConfirm extends JJModule {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      success: 'alert-success',\\n      info: 'alert-info',\\n      warning: 'alert-warning',\\n      danger: 'alert-danger',\\n      version: '620'\\n    };\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.oldAlert = window.alert;\\n    this.oldConfirm = window.confirm;\\n    this.oldPrompt = window.prompt;\\n\\n    window.alert = this._alert.bind(this);\\n    window.confirm = this._confirm.bind(this);\\n    window.prompt = this._prompt.bind(this);\\n  }\\n\\n  /**\\n   * @desc JJConfirm alert 대화상자를 호출한다.\\n   * window alert 함수를 대체하기 위한 함수이다.\\n   * @param {...*} - 대화상자 정보\\n   * @return {Promise} - 대화상자 호출 결과\\n   * @example -\\n   */\\n  _alert(...args) {\\n    return this.info(args[0]);\\n  }\\n\\n  /**\\n   * @desc JJConfirm confirm 대화상자를 호출한다.\\n   * window confirm 함수를 대체하기 위한 함수이다.\\n   * @param {...*} - 대화상자 정보\\n   * @return {Promise} - 대화상자 호출 결과\\n   * @example -\\n   */\\n  _confirm(...args) {\\n    return new Promise((resolv, reject) => {\\n      let result = this.oldConfirm.apply(window, args);\\n\\n      resolv(result);\\n    });\\n  }\\n\\n  /**\\n   * @desc JJConfirm prompt 대화상자를 호출한다.\\n   * window prompt 함수를 대체한다.\\n   * @param {...*} - 대화상자 정보\\n   * @return {Promise} - 대화상자 호출 결과\\n   * @example -\\n   */\\n  _prompt(...args) {\\n    return new Promise((resolv, reject) => {\\n      let result = this.oldPrompt.apply(window, args);\\n\\n      resolv(result);\\n    });\\n  }\\n\\n  /**\\n   * @desc 입력 받은 html을 Modal 팝업으로 생성하고 후처리 작업을 실행한다.\\n   * @param {Element} - 팝업 Html\\n   * @return {Promise} - 팝업 호출 결과\\n   * @example -\\n   */\\n  _showMessage(msgHtml) {\\n    let modalWarp = document.createElement('div');\\n    let modal = document.createElement('div');\\n\\n    modalWarp.classList.add('modal-wrap');\\n    modal.classList.add('jj-modal');\\n    modal.classList.add('ribbon');\\n    modal.innerHTML = msgHtml;\\n\\n    modalWarp.appendChild(modal);\\n\\n    Jinja.appendChild(modalWarp);\\n\\n    modal.querySelector(`[autofocus]`).focus();\\n\\n    return new Promise((resolve, reject) => {\\n      modalWarp.addEventListener('click', e => {\\n        if (e.target.matches('.modal-wrap')) {\\n          modalWarp.remove();\\n        } else if (e.target.matches(`[data-return]`)) {\\n          resolve(e.target.getAttribute('data-return'));\\n\\n          modalWarp.remove();\\n        } else if (e.target.matches(`[data-close]`)) {\\n          reject();\\n\\n          modalWarp.remove();\\n        }\\n      });\\n\\n      modalWarp.addEventListener('keydown', e => {\\n        if (e.keyCode === 27) {\\n          reject();\\n\\n          modalWarp.remove();\\n        }\\n      });\\n    });\\n  }\\n\\n  /**\\n   * @desc Aelrt 대화상자를 호출한다.\\n   * @param {String} - 메세지 내용\\n   * @return {Promise} - 대화상자 호출 결과\\n   * @example -\\n   */\\n  info(msg) {\\n    let html =\\n      `<div class=\\\"alert alert-info text-center\\\">` +\\n      `<h4>Infomation</h4>` +\\n      `<p>${msg}</p>` +\\n      `<p class=\\\"margin-top-15\\\">` +\\n      `<button class=\\\"btn btn-link\\\" data-return=\\\"Close\\\" autofocus>Close</button>` +\\n      `</p>` +\\n      `</div>`;\\n\\n    return this._showMessage(html);\\n  }\\n\\n  /**\\n   * @desc Create 대화상자를 호출한다.\\n   * @param {String} - 메세지 내용\\n   * @return {Promise} - 대화상자 호출 결과\\n   * @example -\\n   */\\n  new(msg) {\\n    let html =\\n      `<div class=\\\"alert alert-danger text-center\\\">` +\\n      `<h4>Create</h4>` +\\n      `<p>${msg || 'Want to new date?'}</p>` +\\n      `<p class=\\\"margin-top-15\\\">` +\\n      `<button class=\\\"btn btn-primary\\\" type=\\\"button\\\" data-return=\\\"YES\\\" autofocus>Yes</button>` +\\n      `<button class=\\\"btn btn-link\\\" type=\\\"button\\\" data-close=\\\"NO\\\">No</button>` +\\n      `</p>` +\\n      `</div>`;\\n\\n    return this._showMessage(html);\\n  }\\n\\n  /**\\n   * @desc Update 대화상자를 호출한다.\\n   * @param {String} - 메세지 내용\\n   * @return {Promise} - 대화상자 호출 결과\\n   * @example -\\n   */\\n  update(msg) {\\n    let html =\\n      `<div class=\\\"alert alert-danger text-center\\\">` +\\n      `<h4>Update</h4>` +\\n      `<p>${msg || 'Want to update?'}</p>` +\\n      `<p class=\\\"margin-top-15\\\">` +\\n      `<button class=\\\"btn btn-primary\\\" type=\\\"button\\\" data-return=\\\"YES\\\" autofocus>Yes</button>` +\\n      `<button class=\\\"btn btn-link\\\" type=\\\"button\\\" data-close=\\\"NO\\\">No</button>` +\\n      `</p>` +\\n      `</div>`;\\n\\n    return this._showMessage(html);\\n  }\\n\\n  /**\\n   * @desc Delete 대화상자를 호출한다.\\n   * @param {String} - 메세지 내용\\n   * @return {Promise} - 대화상자 호출 결과\\n   * @example -\\n   */\\n  delete(msg) {\\n    let html =\\n      `<div class=\\\"alert alert-danger text-center\\\">` +\\n      `<h4>Delete</h4>` +\\n      `<p>${msg || 'Want to delete?'}</p>` +\\n      `<p class=\\\"margin-top-15\\\">` +\\n      `<button class=\\\"btn btn-primary\\\" type=\\\"button\\\" data-return=\\\"YES\\\" autofocus>Yes</button>` +\\n      `<button class=\\\"btn btn-link\\\" type=\\\"button\\\" data-close=\\\"NO\\\">No</button>` +\\n      `</p>` +\\n      `</div>`;\\n\\n    return this._showMessage(html);\\n  }\\n\\n  /**\\n   * @desc Save 대화상자를 호출한다.\\n   * @param {String} - 메세지 내용\\n   * @return {Promise} - 대화상자 호출 결과\\n   * @example -\\n   */\\n  save(msg) {\\n    let html =\\n      `<div class=\\\"alert alert-danger text-center\\\">` +\\n      `<h4>Save</h4>` +\\n      `<p>${msg || 'Want to save?'}</p>` +\\n      `<p class=\\\"margin-top-15\\\">` +\\n      `<button class=\\\"btn btn-primary\\\" type=\\\"button\\\" data-return=\\\"YES\\\" autofocus>Yes</button>` +\\n      `<button class=\\\"btn btn-link\\\" type=\\\"button\\\" data-close=\\\"NO\\\">No</button>` +\\n      `</p>` +\\n      `</div>`;\\n\\n    return this._showMessage(html);\\n  }\\n  \\n  /**\\n   * @desc Save 대화상자를 호출한다.\\n   * @param {String} - 메세지 내용\\n   * @return {Promise} - 대화상자 호출 결과\\n   * @example -\\n   */\\n  saveYesNo(msg) {\\n    let html =\\n      `<div class=\\\"alert alert-danger text-center\\\">` +\\n      `<h4>Save</h4>` +\\n      `<p>${msg || 'Want to save?'}</p>` +\\n      `<p class=\\\"margin-top-15\\\">` +\\n      `<button class=\\\"btn btn-primary\\\" type=\\\"button\\\" data-return=\\\"YES\\\" autofocus>Yes</button>` +\\n      `<button class=\\\"btn btn-link\\\" type=\\\"button\\\" data-return=\\\"NO\\\">No</button>` +\\n      `</p>` +\\n      `</div>`;\\n\\n    return this._showMessage(html);\\n  }\\n\\n  /**\\n   * @desc 화면 상단에 alert 메시지를 호출한다.\\n   * @param {String} - 메세지 내용\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  topMessage(msg, opt) {\\n    let topMessageBox;\\n\\n    msg = Jinja.global.string(msg);\\n\\n    if (!msg) return;\\n\\n    msg = msg.replaceAll('\\\\n', '<br />');\\n\\n    let msgOptions = {\\n      showTime: 2000,\\n      messageType: 'Infomation',\\n      message: '무궁화꽃이피었습니다.',\\n      class: this.options.warning,\\n      icon: 'fa-clock-o'\\n    };\\n\\n    Object.assign(msgOptions, opt);\\n\\n    if (msg) {\\n      msgOptions.message = msg;\\n    }\\n\\n    let html =\\n      `<div class=\\\"alert topMessage animated\\\" role=\\\"alert\\\">` +\\n      `<i class=\\\"fa ${msgOptions.icon}\\\"></i>` +\\n      `<strong>${msgOptions.messageType}</strong>` +\\n      `<t>${msgOptions.message}</t>` +\\n      `${msgOptions.showTime === 0 ? '<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>' : ''}` +\\n      `</div>`;\\n\\n    topMessageBox = document.body.querySelector('.topMessageBox');\\n\\n    if (!topMessageBox) {\\n      Jinja.insertAdjacentHTML('afterbegin', `<div class=\\\"topMessageBox\\\"></div>`);\\n\\n      topMessageBox = document.body.querySelector('.topMessageBox');\\n    }\\n\\n    topMessageBox.insertAdjacentHTML('afterbegin', html);\\n\\n    let newEl = topMessageBox.querySelector('.topMessage:first-child');\\n\\n    if (msgOptions.showTime) {\\n      window.setTimeout(e => {\\n        Jinja.dom.empty(newEl.remove());\\n      }, msgOptions.showTime);\\n    }\\n  }\\n\\n  /**\\n   * @desc Toast 메시지를 호출한다.\\n   * @param {String} - 메세지 내용\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  toastMessage(msg, opt) {\\n    msg = Jinja.global.string(msg);\\n\\n    if (!msg) return;\\n\\n    msg = msg.replaceAll('\\\\n', '<br />');\\n\\n    let msgOptions = {\\n      showTime: 10000,\\n      messageType: 'Infomation',\\n      message: '무궁화꽃이피었습니다.',\\n      fromUserId: '',\\n      fromUserName: '',\\n      class: this.options.warning,\\n      icon: 'fa-clock-o'\\n    };\\n    Object.assign(msgOptions, opt);\\n\\n    if (msg) {\\n      msgOptions.message = msg;\\n    }\\n\\n    let html =\\n      `<div class=\\\"toast fade show\\\" role=\\\"alert\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\" data-toggle=\\\"toast\\\">` +\\n      `<div class=\\\"toast-header\\\">` +\\n//      `<img src=\\\"/repository/users/${msgOptions.fromUserId}\\\" onerror=\\\"this.src='/repository/systemImages/team/img1-sm.jpg' alt=\\\"brand-logo\\\" height=\\\"28\\\" class=\\\"mr-1 rounded\\\">` +\\n      `<strong class=\\\"mr-auto\\\">${msgOptions.fromUserName}</strong>` +\\n      `<small>${new Date().$toFormat('HH:mm:ss')}</small>` +\\n      `<button type=\\\"button\\\" class=\\\"ml-2 mb-1 close\\\" data-dismiss=\\\"toast\\\" aria-label=\\\"Close\\\">` +\\n      `<span aria-hidden=\\\"true\\\">×</span>` +\\n      `</button>` +\\n      `</div>` +\\n      `<div class=\\\"toast-body\\\">${msgOptions.message}</div>` +\\n      `</div>`;\\n\\n    let toastMessageBox = Jinja.querySelector('.toastMessageBox');\\n\\n    if (!toastMessageBox) {\\n      toastMessageBox = Jinja.dom.append(\\n        Jinja,\\n        `<div class=\\\"toastMessageBox\\\"></div>`\\n      );\\n    }\\n\\n    let newEl = Jinja.dom.prepend(toastMessageBox, html);\\n\\n    window.setTimeout(e => {\\n      newEl.$remove();\\n    }, msgOptions.showTime);\\n  }\\n\\n  /**\\n   * @desc window alert 대화상자를 호출한다.\\n   * @param {...*} - alert 정보\\n   * @example -\\n   */\\n  alert(...args) {\\n    Jinja.confirm.oldAlert.apply(window, args);\\n  }\\n\\n  notification(msg, opt) {\\n    if(Jinja.notification){\\n    \\tJinja.notification.show(msg, opt);\\n    }\\n  }\\n  /**\\n   * @desc 모듈명을 반환한다.\\n   */\\n  who() {\\n    alert('JJConfirm');\\n  }\\n}\\n\\nJinja.addModule('confirm', JJConfirm);\\n\\nvar $topMessage = Jinja.confirm.topMessage.bind(Jinja.confirm);\\nvar $tosta = Jinja.confirm.toastMessage.bind(Jinja.confirm);\\nvar $notification = Jinja.confirm.notification.bind(Jinja.confirm);\\n/* ==JJContextmenu.640.class================ */\\n\\n/**\\n * @classdesc Cntext Menu 관리를 위한 클래스\\n */\\nclass JJContextmenu extends JJModule {\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    this.menuEl = document.createElement('div');\\n    this.menuEl.classList.add('jj-context-menu');\\n    this.menuEl.setAttribute('tabindex', '-1');\\n    this.menuEl.hidden = true;\\n\\n    Jinja.appendChild(this.menuEl);\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.menuEl.addEventListener('click', e => {\\n      if (e.target.matches('a')) {\\n        this.targetEl.dispatchEvent(\\n          new CustomEvent('jjContextMenuclick', {\\n            detail: {\\n              target: e.target,\\n              context: this.contextEvent,\\n              menu: e.target.dataset.menu\\n            },\\n            bubbles: true\\n          })\\n        );\\n\\n        this.menuEl.hidden = true;\\n      }\\n    });\\n\\n    this.menuEl.addEventListener('focusout', e => {\\n      this.menuEl.hidden = true;\\n    });\\n\\n    this.menuEl.addEventListener('keydown', e => {\\n      e.preventDefault();\\n    });\\n  }\\n\\n  /**\\n   * @desc 대상 엘리먼트를 재생성 한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {Event} - 이벤트\\n   * @param {Object} - 메뉴정보\\n   * @example -\\n   */\\n  render(el, event, menus) {\\n    this.targetEl = el;\\n    this.contextEvent = event;\\n\\n    if (menus) {\\n      let html = ``;\\n\\n      menus.forEach(data => {\\n        if (data.label == 'divider') {\\n          html += `<div class=\\\"divider\\\"></div>`;\\n        } else {\\n          html += `<a data-menu=\\\"${data.command}\\\"><i class=\\\"fa ${data.icon}\\\"></i><t>${data.label}</t></a>`;\\n        }\\n      });\\n\\n      this.menuEl.innerHTML = html;\\n    }\\n\\n    this.menuEl.hidden = false;\\n    this.menuEl.style.top = event.pageY + 'px';\\n    this.menuEl.style.left = event.pageX + 'px';\\n\\n    if (\\n      this.menuEl.offsetTop + this.menuEl.offsetHeight >\\n      document.body.offsetHeight\\n    ) {\\n      this.menuEl.style.top =\\n        document.body.offsetHeight - this.menuEl.offsetHeight - 50 + 'px';\\n    }\\n\\n    this.menuEl.focus();\\n  }\\n\\n  /**\\n   * @desc 모듈명을 반환한다.\\n   */\\n  who() {\\n    alert('JJContextmenu');\\n  }\\n}\\n\\nJinja.addModule('context', JJContextmenu);\\n/* ==JJCode.640.class================ */\\n\\n/**\\n * @classdesc 코드관리를 위한 클래스\\n */\\nclass JJCode extends JJModule {\\n\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      \\\"apiVersion\\\": workspaceMeta.options.appInfo.apiVersion||\\\"v61\\\"\\n    };\\n  }  \\n\\n  /**\\n   * @desc 코드정보를 초기화한다.\\n   * @example -\\n   */\\n  init() {\\n    this.codes = {};\\n  }\\n\\n  /**\\n   * @desc 코드그룹을 반환한다.\\n   * @param {String} - 코드그룹\\n   * @return {Array} - 코그정보 목록\\n   * @example -\\n   */\\n  getGroup(group) {\\n    return this.codes[group] || [];\\n  }\\n\\n  /**\\n   * @desc 코드그룹을 설정한다.\\n   * @param {String} - 코드그룹\\n   * @param {Array} - 코드정보 목록\\n   * @return {Array} - 코드정보 목록\\n   * @example -\\n   */\\n  setGroup(group, rows) {\\n    this.codes[group] = rows;\\n\\n    return rows;\\n  }\\n\\n  /**\\n   * @desc 코드를 추가한다.\\n   * @param {String} - 코드그룹\\n   * @param {Object} - 코드정보\\n   * @example -\\n   */\\n  addCode(group, row) {\\n    if (this.codes[group]) {\\n      this.codes[group].push(row);\\n    } else {\\n      this.codes[group] = [row];\\n    }\\n  }\\n\\n  /**\\n   * @desc 코드셋을 반환한다.\\n   * @param {String} - 코드그룹\\n   * @param {String} - 코드\\n   * @return {Object} - 코드정보\\n   * @example -\\n   */\\n  getCodeSet(group, code) {\\n    let result = '';\\n\\n    if (this.codes[group]) {\\n      result = this.codes[group].filter(item => item.CODE == code)[0];\\n    }\\n\\n    return result || {};\\n  }\\n\\n  /**\\n   * @desc 코드명을 반환한다.\\n   * @param {String} - 그룹코드\\n   * @param {String} - 코드\\n   * @return {String} - 코드명\\n   * @example -\\n   */\\n  getCodeName(group, code) {\\n    let result = '';\\n\\n    if (this.codes[group]) {\\n      let find = this.codes[group].filter(item => item.CODE == code)\\n      if(find.length > 0){\\n        result = find[0].NAME;\\n      }\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 지정한 엘리먼트에 코드그룹을 바인딩 한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {String} - 코드그룹\\n   * @param {Boolean} - 빈항목 생성여부\\n   * @example -\\n   */\\n  bindSelectEl(el, group, isSpace) {\\n    let rows = this.getGroup(group);\\n\\n    if (isSpace) {\\n      rows.splice(0, 0, {\\n        CODE: '',\\n        NAME: '-선택-'\\n      });\\n    }\\n\\n    if (el.bindCode) {\\n      el.bindCode(rows);\\n    } else {\\n      Jinja.dom.empty(el);\\n\\n      rows.forEach(row => {\\n        let option = document.createElement('option');\\n\\n        option.appendChild(document.createTextNode(row.NAME));\\n        option.value = row.CODE;\\n\\n        el.appendChild(option);\\n      });\\n    }\\n  }\\n\\n  applinkCode(appLinkCode) {\\n    return new Promise((resolve, reject) => {\\n      if(Jinja.code.codes[appLinkCode]){\\n        resolve({\\n          \\\"rows\\\": Jinja.code.codes[appLinkCode]\\n        });\\n      }     \\n      let tableSplit = appLinkCode.split(\\\".\\\");\\n      let restUrl = `/${this.options.apiVersion}/jbatis/${tableSplit[1]}/rest/${tableSplit[2]}?field=${tableSplit[3]},${tableSplit[4]}&order=${tableSplit[4]}`; \\n      Jinja.ajax.get(restUrl)\\n      \\t.then(result=>resolve(result))\\n        .catch(ex=>{ \\n        console.log(appLinkCode +\\\"코드 바인딩에 실패하였습니다\\\");\\n        reject();\\n      });\\n    })\\n  }\\n\\n  /**\\n   * App정보를 코드로 내려받아서 정리함\\n   */\\n  applinkCodeSet(appLinkCode) {\\n    return new Promise((resolve, reject) => {\\n      if(Jinja.code.codes[appLinkCode]){\\n        resolve();\\n      } \\n      else {\\n        let tableSplit = appLinkCode.split(\\\".\\\");\\n        let restUrl = `/${this.options.apiVersion}/jbatis/${tableSplit[1]}/rest/${tableSplit[2]}?field=${tableSplit[3]},${tableSplit[4]}&order=${tableSplit[4]}`; \\n        Jinja.ajax.get(restUrl).then(result=>{\\n          let codeRows =[];\\n          result.rows.forEach(row=>{\\n            codeRows.push({\\n              \\\"CODE\\\": row[tableSplit[3]], \\n              \\\"NAME\\\": row[tableSplit[4]] \\n            });\\n          });\\n          this.setGroup(appLinkCode, codeRows);\\n          resolve();\\n        })\\n          .catch(ex=>{ \\n          console.log(appLinkCode +\\\"코드 바인딩에 실패하였습니다\\\");\\n          reject();\\n        });\\n      }\\n    })\\n  }\\n\\n  applinkSelectEl(el, appLinkCode, isSpace) {\\n    //const code = \\\"APP.studio.JJ_CODE.CODE_NO.CODE_NAME\\\";\\n    Jinja.dom.empty(el);\\n    if (isSpace) {\\n      let option = document.createElement('option');\\n\\n      option.appendChild(document.createTextNode('-선택-'));\\n      option.value = \\\"\\\";\\n      el.appendChild(option);\\n\\n    }\\n    let tableSplit = appLinkCode.split(\\\".\\\");\\n    let restUrl = `/${this.options.apiVersion}/jbatis/${tableSplit[1]}/rest/${tableSplit[2]}?field=${tableSplit[3]},${tableSplit[4]}&order=${tableSplit[4]}`; \\n    return Jinja.ajax.get(restUrl).then(result => {\\n\\n      result.rows.forEach(row => {\\n        let option = document.createElement('option');\\n\\n        option.appendChild(document.createTextNode(row[tableSplit[4]]));\\n        option.value = row[tableSplit[3]];\\n        el.appendChild(option);\\n      });\\n    })\\n      .catch(ex=>{ console.log(appLinkCode +\\\"코드 바인딩에 실패하였습니다\\\")});\\n\\n  }\\n\\n\\n  /**\\n   * @desc 모듈명을 반환한다.\\n   * @example -\\n   */\\n  who() {\\n    alert('JJCode');\\n  }\\n}\\n\\nJinja.addModule('code', JJCode);\\n\\nJinja.event.add(\\\"jjAppStart\\\", \\\"code.getCodeList\\\", e=>{\\n  if(workspaceMeta.options.appInfo.codeUri){\\n    Jinja.ajax.excute(workspaceMeta.options.appInfo.codeUri)\\n      .then(result=>{\\n      result.rows.forEach(row=>{\\n        Jinja.code.addCode(row[\\\"GROUP_ID\\\"], row);\\n      })\\n    })\\n  }\\n});\\n\\n\\nJinja.code.colors = {\\n  area4: ['#bfe1ff', '#326aab', '#f4a21a', '#dddddd'],\\n  blue5: ['#bfe1ff', '#abd0eb', '#79a6ce', '#326aab', '#0f3f78'],\\n  cat5: ['#326aab', '#0f3f78', '#dd4752', '#06726c', '#c6c6c6'],\\n  green5: ['#99d3d0', '#73c6c2', '#2c9691', '#06726c', '#084a47'],\\n  green5s: ['#0f3f78', '#326aab', '#79a6ce', '#bfe1ff', '#aaaaa9'],\\n  pie5: ['#326aab', '#06726c', '#bd121e', '#b3b9be', '#F4A21A'],\\n  plan2: ['#c6c6c6', '#326aab'],\\n  red5: ['#ecb9bd', '#f59ca2', '#dd4752', '#bd121e', '#8d0000'],\\n  red5s: ['#8d0000', '#bd121e', '#dd4752', '#f59ca2', '#ecb9bd'],\\n  sky5: ['#DAE5F0', '#B5CBE1', '#90B1D2', '#6B97C3', '#467eb5'],\\n  yellow5: ['#F37711', '#F4A21A', '#F8CA56', '#FDE399', '#FDF2DF']\\n};\\n\\n/* ==JJDataType.640.class================ */\\nvar DATA_TYPE={\\n    \\\"domain\\\": [\\n      { \\\"CODE\\\": \\\"VARCHAR\\\",  \\\"NAME\\\": \\\"문자\\\", \\\"DBTYPE\\\": \\\"NVARCHAR\\\", \\\"LENGTH\\\": 200  ,\\\"ELEMENT\\\": \\\"jj-item-text\\\"},\\n      { \\\"CODE\\\": \\\"INT\\\",      \\\"NAME\\\": \\\"정수\\\", \\\"DBTYPE\\\": \\\"INT\\\",      \\\"LENGTH\\\": 4    ,\\\"ELEMENT\\\": \\\"jj-item-text\\\"},\\n      { \\\"CODE\\\": \\\"FLOAT\\\",    \\\"NAME\\\": \\\"실수\\\", \\\"DBTYPE\\\": \\\"FLOAT\\\",    \\\"LENGTH\\\": 8    ,\\\"ELEMENT\\\": \\\"jj-item-text\\\"},\\n      { \\\"CODE\\\": \\\"DATE\\\",     \\\"NAME\\\": \\\"날짜\\\", \\\"DBTYPE\\\": \\\"DATE\\\",     \\\"LENGTH\\\": 4    ,\\\"ELEMENT\\\": \\\"jj-item-text\\\"},\\n      { \\\"CODE\\\": \\\"DATETIME\\\", \\\"NAME\\\": \\\"일시\\\", \\\"DBTYPE\\\": \\\"DATETIME\\\", \\\"LENGTH\\\": 8    ,\\\"ELEMENT\\\": \\\"jj-item-text\\\"},\\n      { \\\"CODE\\\": \\\"TIME\\\",     \\\"NAME\\\": \\\"시간\\\", \\\"DBTYPE\\\": \\\"NVARCHAR\\\", \\\"LENGTH\\\": 20   ,\\\"ELEMENT\\\": \\\"jj-item-text\\\"},\\n      { \\\"CODE\\\": \\\"BIT\\\",      \\\"NAME\\\": \\\"체크\\\", \\\"DBTYPE\\\": \\\"BIT\\\",      \\\"LENGTH\\\": 1    ,\\\"ELEMENT\\\": \\\"jj-item-check\\\"},\\n      { \\\"CODE\\\": \\\"MEMO\\\",     \\\"NAME\\\": \\\"메모\\\", \\\"DBTYPE\\\": \\\"NVARCHAR\\\", \\\"LENGTH\\\": 2000 ,\\\"ELEMENT\\\": \\\"jj-item-textarea\\\"},\\n      { \\\"CODE\\\": \\\"CLOB\\\",     \\\"NAME\\\": \\\"본문\\\", \\\"DBTYPE\\\": \\\"CLOB\\\",     \\\"LENGTH\\\": 20000,\\\"ELEMENT\\\": \\\"jj-item-textarea\\\"}\\n    ],\\n    \\\"SystemColumnKey\\\":[\\n      \\\"REG_DATE\\\",\\n      \\\"REG_DATETIME\\\",\\n      \\\"REG_USER\\\",\\n      \\\"REG_USER_ID\\\",\\n      \\\"REG_USER_NAME\\\",\\n      \\\"EDT_DATE\\\",\\n      \\\"EDT_DATETIME\\\",\\n      \\\"EDT_USER\\\",\\n      \\\"EDT_USER_ID\\\",\\n      \\\"EDT_USER_NAME\\\",\\n      \\\"COM_CD\\\",\\n      \\\"CELL_INDEX\\\",\\n      \\\"REG_DTTM\\\",\\n      \\\"REG_USER_ID\\\",\\n      \\\"REG_IP\\\",\\n      \\\"PROC_DTTM\\\",\\n      \\\"PROC_USER_ID\\\",\\n      \\\"PROC_IP\\\",\\n      \\\"KEY_ID\\\",\\n      \\\"UUID\\\"\\n    ],\\n  \\t\\\"SystemLink\\\":{\\n      \\\"help\\\": \\\"https://www.appspeed.net:8893/apps/help\\\",\\n      \\\"issue\\\": \\\"https://gitlab.fems.cf/fems-studio/femsjsdoc/-/issues\\\" \\n    }\\n}/* ==JJTest.640.class================ */\\n\\n/**\\n * @classdesc JJ 테스트 관리를 위한 클래스\\n */\\nclass JJTest extends JJModule {\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    window.addEventListener('message', e => {\\n      let method = e.data.method;\\n      let sender = e.data.sender;\\n\\n      if (sender == window.location.origin) return;\\n\\n      // 외부에서 FrameView에서 실행할때 호출됨\\n      switch(method){\\n        case \\\"excuteLoad\\\":\\n          const formClass = `jj-form-excute`;\\n\\n          let body = Jinja.global.json(e.data.fileBody);\\n\\n          if (Jinja.querySelector(formClass)) {\\n            Jinja.querySelector(formClass).remove();\\n          }\\n\\n          let formEl = document.createElement(formClass);\\n\\n          Jinja.appendChild(formEl);\\n\\n          formEl.addEventListener(\\\"formError\\\", e2=>{\\n            e.source.postMessage({\\n              \\\"method\\\": \\\"formError\\\",\\n              \\\"sender\\\": e.data.sender,\\n              \\\"viewId\\\": e.data.viewId,\\n              \\\"data\\\": e2.detail\\n            }, e.origin);            \\n          });\\n          formEl.excuteLoad(body, e.data.isTheme, e.data.viewId);\\n          break;\\n          \\n        case \\\"formError\\\":\\n          Jinja.event.dispatch(\\\"Framwview.formError\\\",\\\"studioV6Api.createFile\\\", {\\n            \\\"detail\\\": {\\n              \\\"viewId\\\": e.data.viewId,\\n              \\\"data\\\": e.data.data\\n            }\\n          });\\t      \\n          break;\\n          \\n        default:\\n          break;\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 컨텐츠를 jj-form-excute 엘리먼트에 출력한다.\\n   * @param {String} - 컨텐츠 문자열\\n   * @example -\\n   */\\n  doForm(content) {\\n    const formClass = `jj-form-excute`;\\n\\n    let body = Jinja.global.json(content);\\n\\n    if (Jinja.querySelector(formClass)) {\\n      Jinja.querySelector(formClass).remove();\\n    }\\n\\n    let formEl = document.createElement(formClass);\\n\\n    Jinja.appendChild(formEl);\\n\\n    formEl.excuteLoad(body);\\n  }\\n\\n  /**\\n   * @desc 지정한 컨텐츠를 jj-form 엘리먼트에 출력한다.\\n   * @param {String} - 컨텐츠 문자열\\n   * @example -\\n   */\\n  doHtml(content) {\\n    let body = Jinja.global.json(content);\\n\\n    Jinja.querySelector('jj-form').bodyLoad(body);\\n  }\\n\\n  /**\\n   * @desc 모듈명을 반환한다.\\n   */\\n  who() {\\n    alert('JJTest');\\n  }\\n}\\n\\nJinja.addModule('test', JJTest);\\n/* ==SDK.710.pkg.deploy================ */\\n/* ==JJBuilder.640.class================ */\\n\\n/**\\n * @classdesc 어플리케이션 빌드 관리를 위한 클래스\\n */\\nclass JJBuilder extends JJModule {\\n\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      \\\"apiVersion\\\": workspaceMeta.options.appInfo.apiVersion||\\\"v61\\\",\\n      \\\"workspaceUri\\\": \\\"\\\",\\n      \\\"appPackageUri\\\": \\\"\\\",\\n      \\\"extPackageUri\\\": \\\"\\\",\\n      \\\"compressDeploy\\\": false,\\n      \\\"version\\\": \\\"640\\\"\\n    };\\n  }\\n\\n  /**\\n   * @desc 워크스페이스 정보를 설정한다.\\n   * @example -\\n   */\\n  setWorkspace(workspaceUri) {\\n    this.options.workspaceUri = workspaceUri || location.href.split('/apps/')[1].split('/')[0];\\n\\n    Jinja.driverApi.getUri(this.options.workspaceUri).then(fileInfo => {\\n      if (fileInfo.BODY.appInfo) {\\n        this.options.appPackageUri = fileInfo.BODY.appInfo.appPackageUri;\\n        this.options.extPackageUri = fileInfo.BODY.appInfo.extPackageUri;\\n        this.options.compressDeploy = fileInfo.BODY.appInfo.compressDeploy;\\n      } else {\\n        this.options.appPackageUri = fileInfo.BODY.appPackageUri;\\n        this.options.extPackageUri = fileInfo.BODY.extPackageUri;\\n        this.options.compressDeploy = fileInfo.BODY.compressDeploy;\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 워크스페이스를 시작한다.\\n   * @return {Promise} - 워크스페이스 시작 Promise\\n   * @example -\\n   */\\n  start() {\\n    return Jinja.ajax.patch(`/${this.options.apiVersion}/workspace/${this.options.workspaceUri}/start`);\\n  }\\n\\n  /**\\n   * @desc 워크스페이스를 정지한다.\\n   * @param {} - \\n   * @return {Promise} - 워크스페이스 정지 Promise\\n   * @example -\\n   */\\n  stop(msg) {\\n    msg = Jinja.global.string(msg);\\n    return Jinja.ajax.patch(`/${this.options.apiVersion}/workspace/${this.options.workspaceUri}/stop`,{COMING_SOON: msg});\\n  }\\n\\n  /**\\n   * @desc 워크스페이스를 재시작한다.\\n   * @return {Promise} - 워크스페이스 재시작 Promise\\n   * @example -\\n   */\\n  reset() {\\n    return Jinja.ajax.patch(`/${this.options.apiVersion}/workspace/${this.options.workspaceUri}/reset`);\\n  }\\n\\n  /**\\n   * @desc 어플리케이션 패키지를 생성한다.\\n   * @return {Promise} - 어플리케이션 패키지 생성 Promise\\n   * @example -\\n   */\\n  appBuilder() {\\n    return Jinja.ajax.post(`/${this.options.apiVersion}/package/apppkg/${this.options.appPackageUri}`, {\\n        compress: this.options.compressDeploy\\n      })\\n      .then(result => Jinja.ajax.patch(`/${this.options.apiVersion}/workspace/${this.options.workspaceUri}/reset`));\\n  }\\n\\n  /**\\n   * @desc 외부 라이브러리 패키지를 생성한다.\\n   * @return {Promise} - 외부 라이브러리 패키지 생성 Promise\\n   * @example -\\n   */\\n  extBuilder() {\\n    return Jinja.ajax\\n      .post(`/${this.options.apiVersion}/package/extpkg/${this.options.extPackageUri}`)\\n      .then(result => Jinja.ajax.patch(`/${this.options.apiVersion}/workspace/${this.options.workspaceUri}/reset`));\\n  }\\n\\n  /**\\n   * @desc 새로운 브라우저 창으로 사이트 연다.\\n   * @example -\\n   */\\n  openSite() {\\n    let newWindow = window.open('about:blank');\\n    let hrefArr = location.href.split(\\\"/\\\");\\n\\n    newWindow.location.href = `${hrefArr[0]}//${hrefArr[2]}/apps/${this.options.workspaceUri}`;\\n  }\\n}\\n/* ==JJDriverApi.640.class================ */\\n\\n/**\\n * @classdesc 리소스파일 관리를 위한 클래스\\n */\\nclass JJDriverApi extends JJModule {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      \\\"apiVersion\\\": workspaceMeta.options.appInfo.apiVersion||\\\"v61\\\",\\n      \\\"accountSite\\\": 'https://accounts.appspeed.net',\\n      \\\"routeType\\\": 'pjax' // mix, hash, pjax\\n    };\\n  }\\n\\n    /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {}\\n\\n  /**\\n   * @desc 지정한 row 데이터에 TYPE_ICON 데이터를 추가하여 반환한다.\\n   * @param {Object} - 대상 데이터\\n   * @return {Object} - 변경된 데이터\\n   * @example -\\n   */\\n  _typeIcon(row) {\\n    switch (row.TYPE) {\\n      case 'folder':\\n        row.SORT_NAME = 'A' + row.NAME;\\n        row.TYPE_ICON = row.ICON || Jinja.launcher.getLauncherIcon(row.TYPE) || 'fa-folder';\\n\\n        break;\\n      default:\\n        row.SORT_NAME = 'F' + row.NAME;\\n        row.TYPE_ICON = row.ICON || Jinja.launcher.getLauncherIcon(row.TYPE) || 'fa-book';\\n\\n        break;\\n    }\\n\\n    return row;\\n  }\\n\\n  /**\\n   * @desc 지정한 rows 데이터를 트리 데이터로 변환하여 반환한다.\\n   * @param {Array} - 대상 데이터\\n   * @param {String} - 재귀호출 상위기준값\\n   * @param {String} - 키필드명\\n   * @param {String} - 상위키필드명\\n   * @param {String} - 정렬키\\n   * @param {String} - 하위노드집합명\\n   * @return {Obejct} - 트리 오브젝트\\n   * @example -\\n   */\\n  _row2tree(rows, pv, pPN, pFN, pSo, pSubName) {\\n    pSubName = pSubName || 'subRows';\\n\\n    let tree = {};\\n\\n    if (pv === undefined) pv = null;\\n    if (pPN === undefined) pPN = '_ID';\\n    if (pFN === undefined) pFN = '_PID';\\n    if (pSo === undefined) pSo = 'SortNo';\\n    if (pv == 'row') pv = rows[0][pFN];\\n\\n    let selRows;\\n\\n    try {\\n      selRows = rows.filter(function (row) {\\n        return row[pFN] === pv;\\n      });\\n\\n      if (pSo) {\\n        selRows = selRows.sort(function (a, b) {\\n          return (a[pSo] || '') > b[pSo || ''] ? 1 : (a[pSo] || '') < (b[pSo] || '') ? -1 : 0;\\n        });\\n      }\\n    } catch (e) {\\n      alert(e.message);\\n    }\\n\\n    tree = selRows;\\n\\n    try {\\n      selRows.forEach((pR, pI) => {\\n        let _sub = this._row2tree(rows, pR[pPN], pPN, pFN, pSo, pSubName);\\n\\n        if (_sub.length > 0) {\\n          pR[pSubName] = _sub;\\n        } else {\\n          pR[pSubName] = [];\\n        }\\n      });\\n    } catch (e) {\\n      alert(e.message);\\n    }\\n\\n    return tree;\\n  }\\n\\n  /**\\n   * @desc 사용자가 접근 가능한 모든 파일목록을 조회하여 트리 데이터 형태로 반환한다.\\n   * @return {Object} - 파일목록 트리\\n   * @example -\\n   */\\n  getMyResource() {\\n    return Jinja.ajax.get(`/${this.options.apiVersion}/driver/file/myfiles`).then(data => {\\n      data.rows.map(row => this._typeIcon(row));\\n\\n      return this._row2tree(\\n        data.rows,\\n        '0',\\n        'ID',\\n        'PARENT_ID',\\n        'SORT_NAME',\\n        'items'\\n      );\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 폴더의 하위 데이터를 트리 데이터 형태로 반환한다.\\n   * @param {String} - 폴더 아이디\\n   * @param {Object} - 옵션\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  getTreeByFolderId(folderId, option) {\\n    return Jinja.ajax\\n      .post(`/${this.options.apiVersion}/driver/file/${folderId}/all`, option || {})\\n      .then(data => {\\n        data.rows.map(row => this._typeIcon(row));\\n\\n        return this._row2tree(\\n          data.rows,\\n          folderId,\\n          'ID',\\n          'PARENT_ID',\\n          'SORT_NAME',\\n          'items'\\n        );\\n      });\\n  }\\n\\n  /**\\n   * @desc 지정한 파일URI에 해당하는 파일정보를 반환한다.\\n   * @param {String} - 파일URI\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  getUri(uri) {\\n    return Jinja.ajax.get(`/${this.options.apiVersion}/site/resource/${uri}`).then(data => {\\n      data.BODY = Jinja.global.json(data.BODY);\\n\\n      return data;\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 파일경로에 해당하는 파일정보를 반환한다.\\n   * @param {String} - 파일경로\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  getFilePath(filePath) {\\n    let url = `/${this.options.apiVersion}/site/resource/path`;\\n\\n    if (filePath.startsWith('/apps/')) {\\n      let bb = filePath.split('/');\\n      let prePath = bb.splice(0, 3);\\n\\n      filePath = '/' + bb.join('/');\\n      url = prePath.join('/') + url;\\n    }\\n\\n    return Jinja.ajax.get(url, { q: filePath });\\n  }\\n\\n  /**\\n   * @desc 나의 워크스페이스 목록을 반환한다.\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  myWorkspaces() {\\n    return Jinja.ajax.get(`/${this.options.apiVersion}/driver/share/myworkspace`);\\n  }\\n\\n  /**\\n   * @desc 나의 공유 폴더 목록을 반환한다.\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  myShareFolder() {\\n    return Jinja.ajax.get(`/${this.options.apiVersion}/driver/share/my`);\\n  }\\n\\n  roleWorkspaceUser(){\\n    return Jinja.ajax.post(`/${this.options.apiVersion}/jbatis/studio/excute/get/roleWorkspaceUser.sql`,{\\n      \\\"APP_URI\\\": workspaceMeta.options.appInfo.workspaceUri,\\n      \\\"ROLE_USER_ID\\\": Jinja.uo.USER_ID\\n    })\\n      .then(result=>{\\n        if(!result.rows[0] || !result.rows[0].ROLE_USER_NAME){\\n\\t\\t      throw result;\\n          //alert(\\\"해당워크스페이스의 권한이 없습니다\\\");\\n          //form.destroy();\\n        } else {\\n          return result.rows;\\n        }\\n    })\\n    .catch(ex=>{\\n      //alert(\\\"해당워크스페이스의 권한이 없습니다\\\");\\n      //form.destroy();\\n      throw \\\"destroy\\\";\\n    })  \\n    \\n  }\\n  \\n  \\n  /**\\n   * @desc 나의 공유폴더정보를 수정한다.\\n   * @param {Object} - 공유폴더정보\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  myShareUpdate(shareInfo) {\\n    return Jinja.ajax.patch(\\n      `/${this.options.apiVersion}/driver/share/${shareInfo.ID}/user/${Jinja.uo.USER_ID}`,\\n      shareInfo\\n    );\\n  }\\n\\n  /**\\n   * @desc 특정파일을 기준으로 최상위 폴더 파일 아이디를 반환한다.\\n   * @param {String} - 기준 파일아이디\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  selectResourcePathInfo(fileId) {\\n    return Jinja.ajax.get(`/${this.options.apiVersion}/driver/file/${fileId}/rootinfo`);\\n  }\\n\\n  /**\\n   * @desc 지정한 폴더아이디를 기준으로 폴더 정보를 조회한다.\\n   * @param {String} - 폴더아이디\\n   * @param {String} - 파일유형\\n   * @param {String} - 조회조건\\n   * @param {String} - 필드아이디\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  selectFolderSearch(folderId, type, find, field) {\\n    let url = `/${this.options.apiVersion}/driver/file/search`;\\n    let option = {};\\n\\n    if (find) option['q'] = find;\\n    if (field) option['field'] = field;\\n    if (type) option['type'] = type;\\n\\n    return Jinja.ajax.get(url, option);\\n  }\\n\\n  /**\\n   * @desc 지정한 파일아이디에 대한 변경이력을 반환한다.\\n   * @param {String} - 파일아이디\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  getFileBackupHistory(fileId) {\\n    return Jinja.ajax.get(`/${this.options.apiVersion}/driver/backup/file/${fileId}`);\\n  }\\n\\n  /**\\n   * @desc 지정한 백업아이디에 대한 백업정보를 반환한다.\\n   * @param {String} - 백업아이디\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  getFileBackupBody(backupId) {\\n    return Jinja.ajax.get(`/${this.options.apiVersion}/driver/backup/${backupId}`);\\n  }\\n\\n  /**\\n   * @desc 지정한 파일정보를 백업한다.\\n   * @param {Object} - 파일정보\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  setFileBackup(fileInfo) {\\n    let sendData = {\\n      BACKUP_ID: Jinja.global.uuid(),\\n      RESOURCE_ID: fileInfo.ID,\\n      TYPE: fileInfo.TYPE,\\n      BODY: fileInfo.BODY,\\n      ICON: fileInfo.ICON,\\n      VERSION: fileInfo.VERSION,\\n      NAME: fileInfo.NAME,\\n      URI: fileInfo.URI,\\n      DESCRIPTION: Date().toLocaleString() + ' user backup'\\n    };\\n\\n    return Jinja.ajax.post(`/backup/v6/resource`, sendData);\\n  }\\n\\n  /**\\n   * @desc 지정한 파일정보를 백업한다. 저장시 파일잠금으로 저장을 못할 경우 실행한다.\\n   * @param {Object} - 파일정보\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  backupFile(fileInfo) {\\n    let sendData = {\\n      BACKUP_ID: Jinja.global.uuid(),\\n      RESOURCE_ID: fileInfo.ID,\\n      TYPE: fileInfo.TYPE,\\n      BODY: fileInfo.BODY,\\n      ICON: fileInfo.ICON,\\n      VERSION: fileInfo.VERSION,\\n      NAME: fileInfo.NAME + ' : ' + Jinja.uo.USER_NAME + ' 저장 중 잠김상태로 작업파일 보관백업',\\n      URI: fileInfo.URI,\\n      DESCRIPTION: Jinja.uo.USER_NAME + ' 저장 중 잠김상태로 작업파일 보관백업'\\n    };\\n\\n    return Jinja.ajax.post(`/backup/v6/resource`, sendData).then(data => {\\n      $topMessage('백업되었습니다');\\n    });\\n  }\\n\\n  /**\\n   * @desc 내가 잠근 자원목록을 반환한다.\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  locksResource() {\\n    return Jinja.ajax.get(`/${this.options.apiVersion}/driver/lock/myfiles`);\\n  }\\n\\n  /**\\n   * @desc 지정한 파일아이디를 잠금 처리한다.\\n   * @param {String} - 파일아이디\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  lockResource(fileId) {\\n    return Jinja.ajax.patch(`/${this.options.apiVersion}/driver/lock/${fileId}`);\\n  }\\n\\n  /**\\n   * @desc 지정한 파일아이디를 잠금 해제 처리한다.\\n   * @param {String} - 파일아이디\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  unlockResource(fileId) {\\n    return Jinja.ajax.patch(`/${this.options.apiVersion}/driver/lock/${fileId}/unlock`);\\n  }\\n\\n  /**\\n   * @desc 지정한 파일아이디의 잠금 해제 요청을 발생한다.(PUSH)\\n   * @param {String} - 파일아이디\\n   * @param {String} - 잠금한 사용자아이디\\n   * @param {String} - 파일명\\n   * @example -\\n   */\\n  unlockReqResource(fileId, toLocker, fileName) {\\n    if (workspaceMeta.WORKSPACE.usePush) {\\n      Jinja.push\\n        .topicPost('studio602-unlockReq', fileId, {\\n          reqId: Jinja.uo.USER_ID,\\n          reqName: Jinja.uo.USER_NAME,\\n          toLocker: toLocker,\\n          fileName: fileName\\n        })\\n        .then(result => $topMessage('해제 요청을 발생했습니다.'));\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 파일 아이디의 잠금 해제 요청을 발생한다.(SSE)\\n   * @param {String} - 파일아이디\\n   * @param {String} - 잠금한 사용자아이디\\n   * @param {String} - 파일명\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  unlockReqPeer(fileId, toLocker, fileName) {\\n    return Jinja.ajax\\n      .post(`/${this.options.apiVersion}/notification/sse/peer`, {\\n        message: {\\n          NOTI_CODE: '203',\\n          TITLE: '잠김해제요청드립니다.',\\n          BODY: {\\n            from: Jinja.uo.USER_NAME,\\n            file: fileName\\n          },\\n          PARENT_TYPE: 'STUDIO',\\n          PARENT_ID: fileId,\\n          USER_ID: toLocker\\n        },\\n      })\\n      .then(result => $topMessage('해제 요청을 발생했습니다.'));\\n  }\\n\\n  /**\\n   * @desc 지정한 파일 아이디에 대한 정보를 반환한다.\\n   * @param {String} - 파일아이디\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  readFile(fileId) {\\n    return Jinja.ajax.get(`/${this.options.apiVersion}/driver/file/${fileId}`);\\n  }\\n\\n  /**\\n   * @desc 지정한 파일정보를 생성한다.\\n   * @param {Object} - 파일정보\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  createFile(fileInfo) {\\n    return Jinja.ajax.post(`/${this.options.apiVersion}/driver/file`, fileInfo).then(data => {\\n      if (data && fileInfo.TYPE != 'file') {\\n        Jinja.event.dispatch('studio.newFile', 'studioV6Api.createFile', {\\n          detail: fileInfo\\n        });\\n      }\\n\\n      return fileInfo;\\n    });\\n  }\\n\\n\\n  /**\\n   * @desc 지정한 파일의 BODY 정보를 수정한다.\\n   * @param {Object} - 파일정보\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  updateFile(fileInfo) {\\n    let fileId = fileInfo.ID;\\n    let body = fileInfo.BODY;\\n    let version = fileInfo.VERSION;\\n\\n    return this.updateFileBody(fileInfo.ID, fileInfo.BODY, fileInfo.VERSION)\\n      .then(data => {\\n        fileInfo.VERSION = parseInt(fileInfo.VERSION) + 1;\\n        fileInfo.LOCKER_ID = Jinja.uo.USER_ID;\\n        fileInfo.LOCKER_NAME = Jinja.uo.USER_NAME;\\n\\n        Jinja.store.localStorageClear('EditCache:' + fileInfo.ID);\\n        Jinja.event.dispatch('studio.unChangeFile', 'StudioV6Api.updateFile', {detail: fileInfo});\\n        Jinja.event.dispatch('studio.updateFileBody', 'StudioV6Api.updateFile', { detail: fileInfo });\\n\\n        $topMessage('저장되었습니다');\\n      })\\n      .catch(ex => {\\n        Jinja.confirm\\n          .save(\\n            `잠김이나 버전문제로 저장이 불가능합니다.\\\\n작업파일을 백업하시겠습니까?`\\n          )\\n          .then(() => this.backupFile(fileInfo))\\n          .catch(() =>{});\\n      });\\n  }\\n\\n  /**\\n   * @desc 지정한 파일을 닫기 위한 작업을 실행한다.\\n   * @param {Object} - 파일정보\\n   * @example -\\n   */\\n  closeFile(fileInfo) {\\n    let fileId = fileInfo.ID;\\n    let localStorageId = 'EditCache:' + fileId;\\n    let cacheBody = Jinja.store.localStorage(localStorageId);\\n\\n    if (cacheBody) {\\n      Jinja.confirm.save('변경된 자료가 있습니다. 저장하시겠습니까?').then(() => this.updateFile(fileInfo));\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 파일의 변경 처리를 실행한다.\\n   * @param {Object} - 파일정보\\n   * @example -\\n   */\\n  changeFile(fileInfo) {\\n    Jinja.store.localStorage('EditCache:' + fileInfo.ID, Jinja.global.string(fileInfo));\\n    Jinja.event.dispatch('studio.changeFile', 'StudioV6Api.changeFile', {detail: fileInfo});\\n  }\\n\\n  /**\\n   * @desc 지정한 파일의 기본정보를 수정한다.\\n   * @param {String} - 파일아이디\\n   * @param {Object} - 파일정보\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  updateFileInfo(fileId, fileInfo) {\\n    return Jinja.ajax\\n      .patch(`/${this.options.apiVersion}/driver/file/${fileId}`, fileInfo)\\n      .then(result => {\\n        fileInfo.ID = fileId;\\n\\n        Jinja.event.dispatch(\\n          'studio.updateFileInfo',\\n          'studioV6Api.updateFileInfo',\\n          { detail: fileInfo }\\n        );\\n\\n        return fileInfo;\\n      });\\n  }\\n\\n  /**\\n   * @desc 지정한 파일의 BODY 정보를 수정한다.\\n   * @param {String} - 파일아이디\\n   * @param {Object} - 파일본문\\n   * @param {Number} - 버전\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  updateFileBody(fileId, fileBody, version) {\\n    return Jinja.ajax.patch(`/${this.options.apiVersion}/driver/file/${fileId}/body`, {\\n      VERSION: version,\\n      BODY: fileBody\\n    });\\n  }\\n\\n  importFileBody(fileId, fileBody, version) {\\n    return Jinja.ajax.patch(`/${this.options.apiVersion}/driver/file/${fileId}/import`, {\\n      VERSION: version,\\n      BODY: fileBody\\n    });\\n  }\\n  \\n  /**\\n   * @desc 지정한 파일 아이디의 파일정보를 지정한 폴더하위에 생성한다.\\n   * @param {String} - 파일아이디\\n   * @param {String} - 폴더아이디\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  copyFile(fileId, copyFolder) {\\n    return Jinja.ajax.patch(`/${this.options.apiVersion}/driver/file/${fileId}/copy`, {\\n      COPY_FOLDER: copyFolder\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 파일아이디의 파일정보의 상위폴더를 지정한 폴더로 변경한다.\\n   * @param {String} - 파일아이디\\n   * @param {String} - 폴더아이디\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  moveFile(fileId, moveFolder) {\\n    return Jinja.ajax.patch(`/${this.options.apiVersion}/driver/file/${fileId}/move`, {\\n      MOVE_FOLDER: moveFolder\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 파일아이디에 대한 파일정보를 삭제한다.\\n   * @param {String} - 파일아이디\\n   * @param {Boolean} - 삭제 대화상자 표출여부\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  trashFile(fileId, noConfirm) {\\n    let result;\\n\\n    if (noConfirm) {\\n      return Jinja.ajax\\n        .delete(`/${this.options.apiVersion}/driver/file/${fileId}`)\\n        .then(data => {\\n          Jinja.event.dispatch('studio.trashFile', 'studioV6Api.trashFile', {\\n            detail: { ileId: fileId }\\n          });\\n\\n          return true;\\n        })\\n        .catch(() =>\\n          Jinja.confirm.info(`삭제가 실패하였습니다.\\\\n${result.error.message}`)\\n        );\\n    } else {\\n      return Jinja.confirm\\n        .delete(`Delete OK?`)\\n        .then(() => Jinja.ajax.delete(`/${this.options.apiVersion}/driver/file/${fileId}`))\\n        .then(() =>\\n          Jinja.event.dispatch('studio.trashFile', 'studioV6Api.trashFile', {\\n            detail: { fileId: fileId }\\n          })\\n        )\\n        .catch(result =>\\n          Jinja.confirm.info(`삭제가 실패하였습니다.\\\\n${result.error.message}`)\\n        );\\n    }\\n  }\\n\\n  /**\\n   * @desc 워크스페이스 설정화면을 호출하고 결과를 파일로 생성한다.\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  formNewWorkspace() {\\n    let sendData;\\n\\n    return JJFormModal.open('newWorkspace.app.640.uc')\\n      .then(result => {\\n        sendData = {\\n          \\\"WORKSPACE_ID\\\": Jinja.global.uuid(),\\n          \\\"URI\\\": result.uri,\\n          \\\"NAME\\\": result.name,\\n          \\\"DESCRIPTION\\\": result.description\\n        };\\n\\n        return Jinja.ajax.post(`/${this.options.apiVersion}/workspace`, sendData);\\n      })\\n      .then(result => sendData);\\n  }\\n\\n  /**\\n   * @desc 스토어 설정화면을 호출하고 결과를 지정한 폴더하위의 파일로 생성한다.\\n   * @param {String} - 폴더아이디\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  storeNewFile(folderId) {\\n    return JJFormModal.open('getStore.640.uc').then(result =>\\n      this.createFile({\\n        PARENT_ID: folderId,\\n        ID: Jinja.global.uuid(),\\n        TYPE: result['TYPE'],\\n        NAME: result['NAME'],\\n        URI: Jinja.global.uuid(),\\n        ICON: result['ICON'],\\n        BODY: result['BODY'],\\n        DESCRIPTION: result['DESCRIPTION'],\\n        TEMPLITE: result['TYPEPAGE'],\\n        LOCKER: Jinja.uo.USER_ID,\\n        VERSION: 1\\n      })\\n    );\\n  }\\n\\n  /**\\n   * @desc 폴더 설정화면을 호출하고 결과를 지정한 폴더하위의 파일로 생성한다.\\n   * @param {String} - 폴더아이디\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  formNewFolder(folderId) {\\n    return JJFormModal.open('infoFile.app.640.uc', {\\n      name: '',\\n      uri: Jinja.global.uuid(),\\n      id: Jinja.global.uuid(),\\n      type: 'folder'\\n    }).then(result =>\\n      this.createFile({\\n        PARENT_ID: folderId,\\n        ID: result.id,\\n        TYPE: 'folder',\\n        NAME: result.name,\\n        URI: result.uri\\n      })\\n    );\\n  }\\n\\n  /**\\n   * @desc 페이지 설정화면을 호출하고 결과를 지정한 폴더하위의 파일로 생성한다.\\n   * @param {String} - 폴더아이디\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  formNewFile(folderId) {\\n    return JJFormModal.open(\\\"newFile.app.640.uc\\\")\\n      .then(result=>{\\n      let fileInfo= {\\n        \\\"PARENT_ID\\\": folderId,\\n        \\\"ID\\\": result[\\\"ID\\\"],\\n        \\\"TYPE\\\":result[\\\"TYPE\\\"],\\n        \\\"NAME\\\":result[\\\"NAME\\\"],\\n        \\\"URI\\\":result[\\\"URI\\\"],\\n        \\\"ICON\\\":result[\\\"ICON\\\"],\\n        \\\"DESCRIPTION\\\":result[\\\"DESCRIPTION\\\"],\\n        \\\"TEMPLITE\\\":\\\"\\\",\\n        \\\"LOCKER\\\": Jinja.uo.USER_ID,\\n        \\\"VERSION\\\":1\\n      };\\n      \\n\\t\\t\\treturn new Promise((resolv, reject)=>{\\n        if(result[\\\"TYPEPAGE\\\"]){\\n\\t\\t\\t\\t\\tJinja.ajax.get(`/${this.options.apiVersion}/site/resource/${result[\\\"TYPEPAGE\\\"]}`)\\n          \\t.then(data =>{\\n          \\t\\tfileInfo.BODY = data.BODY;\\n          \\t\\tresolv(fileInfo);\\n        \\t\\t})\\n          \\t.catch(data =>resolv(fileInfo));\\n        } else {\\n          return resolv(fileInfo);\\n        }\\n      });\\n    })\\n    .then(fileInfo=>this.createFile(fileInfo));\\n  }\\n\\n  /**\\n   * @desc 지정한 파일의 파일정보를 수정한다.\\n   * @param {String} - 폴더아이디\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  formInfoFile(fileInfo) {\\n    let sendData;\\n\\n    return JJFormModal.open('infomation.app.640.uc', {\\n      fileInfo: fileInfo\\n    }).then(fileInfoUpdate => this.updateFileInfo(fileInfo.ID, fileInfoUpdate));\\n  }\\n\\n  /**\\n   * @desc 지정한 파일의 이름을 수정한다.\\n   * @param {String} - 폴더아이디\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  formRenameFile(fileInfo) {\\n    let sendData;\\n\\n    return JJFormModal.open('infoFile.app.640.uc', {\\n      name: fileInfo.NAME,\\n      uri: fileInfo.URI,\\n      id: fileInfo.ID,\\n      type: fileInfo.TYPE\\n    }).then(result =>\\n      this.updateFileInfo(fileInfo.ID, {\\n        NAME: result['name'],\\n        URI: result['uri']\\n      })\\n    );\\n  }\\n\\n  /**\\n   * @desc 백업 화면을 호출한다.\\n   * @param {String} - 폴더아이디\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  formBackupInfo(fileInfo) {\\n    return JJFormModal.open('backup.app.640.uc', {\\n      fileInfo: fileInfo\\n    });\\n  }\\n\\n  /**\\n   * @desc 폴더 공유 설정화면을 호출한다.\\n   * @param {String} - 폴더아이디\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  folderShare(fileInfo) {\\n    return JJFormModal.open('member.app.640.uc', {\\n      fileInfo: fileInfo\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 파일아이디의 이력화면을 호출한다.\\n   * @param {String} - 파일아이디\\n   * @example -\\n   */\\n  myHistory(fileId) {\\n    JJModal602.show('app602.history.uc');\\n  }\\n\\n  /**\\n   * @async\\n   * @desc 파일 조회화면을 호출한다.\\n   * @example -\\n   */\\n  async findFile() {\\n    JJModal602.show('app602.findFile.uc');\\n  }\\n\\n  /**\\n   * @desc 지정한 사용자에게 메시지를 발송한다.(SSE)\\n   * @param {String} - 대상 사용자아이디\\n   * @param {String} - 메세지 제목\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  sendMessageSsePeer(toUserId, Message) {\\n    return Jinja.ajax\\n      .post(`/${this.options.apiVersion}/notification/sse/peer`, {\\n        message: {\\n          NOTI_CODE: '301',\\n          TITLE: Message,\\n          BODY: {\\n            fromUserId: Jinja.uo.USER_ID,\\n            fromUserName: Jinja.uo.USER_NAME\\n          },\\n          USER_ID: toUserId\\n        },\\n      })\\n      .then(result => $topMessage('메시지를 발송했습니다.'));\\n  }\\n  \\n  /**\\n   * @desc 모듈명을 반환한다.\\n   */\\n  who() {\\n    alert('JJDriverApi');\\n  }\\n}\\n\\nJinja.addModule('driverApi', JJDriverApi);\\n/* ==JJGlobalEvent.640.class================ */\\n\\n/**\\n * @global\\n * @event click:jj-active\\n * @desc globalEvent.jj-active 클릭 이벤트\\n */\\nJinja.event.add('click', 'globalEvent.jj-active', e => {\\n  if (e.target.matches('.jj-active[j-for] *')) {\\n    return;\\n  }\\n\\n  if (e.target.matches('.jj-active *')) {\\n    let ul = Jinja.dom.closest(e.target, '.jj-active');\\n\\n    ul.querySelectorAll('.jj-active > .active').forEach(el =>\\n      el.classList.remove('active')\\n    );\\n\\n    Jinja.dom.closest(e.target, '.jj-active > *').classList.add('active');\\n  }\\n});\\n\\n/**\\n * @global\\n * @event click:jj-command\\n * @desc [jj-command] 클릭 이벤트\\n */\\nJinja.event.add('click', '[jj-command]', e => {\\n  let form, cmdEl;\\n  if (\\n    e.target.matches('xjj-studio-form [jj-command], xjj-studio-form [jj-command] *')\\n  ) {\\n    form = e.target.closest('jj-studio-form');\\n    cmdEl = e.target.closest('[jj-command]');\\n  } else if (\\n    e.target.matches('.jj-form [jj-command], .jj-form [jj-command] *')\\n  ) {\\n    form = e.target.closest('.jj-form');\\n    cmdEl = e.target.closest('[jj-command]');\\n  } else if (\\n    e.target.matches('jj-theme [jj-command], jj-theme [jj-command] *')\\n  ) {\\n    form = e.target.closest('jj-theme');\\n    cmdEl = e.target.closest('[jj-command]');\\n  }\\n\\n  if (form && cmdEl) {\\n    e.stopImmediatePropagation();\\n    e.stopPropagation();\\n\\n    let cmdString = cmdEl.getAttribute('jj-command');\\n\\n    if (cmdString) {\\n      form._cmdParaApply(cmdString, e);\\n    }\\n  }\\n});\\n\\n/**\\n * @global\\n * @event click:jj-toggle\\n * @desc JJToggle.constructor 클릭 이벤트\\n */\\nJinja.event.add('click', 'JJToggle.constructor', e => {\\n  if (e.target.matches('.jj-toggle, .jj-toggle *')) {\\n    let targetQuery = e.target.closest('.jj-toggle').dataset.target;\\n    let targetEl;\\n\\n    if (targetQuery === 'self') {\\n      targetEl = e.target;\\n    } else if (targetQuery) {\\n      let page = e.target.closest('[jj-uuid]');\\n\\n      if (page) {\\n        targetEl = page.querySelector(targetQuery);\\n      }\\n    } else {\\n      targetEl = e.target.nextElementSibling;\\n    }\\n\\n    if (targetEl) {\\n      targetEl.classList.toggle('show');\\n\\n      if (!Object.is(targetEl, e.target)) {\\n        e.target.classList.toggle('show');\\n      }\\n    } else {\\n      alert('토글대상을 찾을수 없습니다');\\n    }\\n  }\\n});\\n\\n/**\\n * @global\\n * @event click:jj-logout\\n * @desc JJLogout.constructor 클릭 이벤트\\n */\\nJinja.event.add('click', 'JJLogout.constructor', e => {\\n  if (e.target.matches('.jj-logout')) {\\n    Jinja.event.dispatch('JJLogout', 'studio.theme', { detail: Jinja.uo });\\n  }\\n});\\n\\n\\n/**\\n * @global\\n * @event click:jj-dropdown\\n * @desc globalEvent.jj-dropdown 클릭 이벤트\\n */\\nJinja.event.add('click', 'globalEvent.jj-dropdown', e => {\\n  let dropEl = e.target.parentElement;\\n  let dropMenu = e.target.nextElementSibling;\\n\\n  if (e.target.matches('.dropdown-toggle')) {\\n    let dropEl = e.target.parentElement;\\n    let dropMenu = e.target.nextElementSibling;\\n\\n    dropEl.setAttribute('tabindex', -1);\\n    dropEl.classList.add('show');\\n    dropMenu.classList.add('show');\\n    dropMenu.focus();\\n\\n    dropEl.addEventListener('focusout', onfocusout);\\n\\n    if (dropEl.querySelector('.dropdown-menu')) {\\n      dropEl.querySelector('.dropdown-menu').addEventListener('click', onClick);\\n    }\\n  }\\n\\n  function onfocusout(e) {\\n    if (!dropEl.contains(e.relatedTarget)) {\\n      dropEl.classList.remove('show');\\n      dropMenu.classList.remove('show');\\n      dropEl.removeEventListener('focusout', onfocusout);\\n\\n      if (dropEl.querySelector('.dropdown-menu')) {\\n        dropEl.querySelector('.dropdown-menu').removeEventListener('click', onClick);\\n      }\\n    }\\n  }\\n\\n  function onClick(e) {\\n    if (\\n      e.target.matches(\\n        '.dropdown-item:not(.dropdown-toggle), .dropdown-item:not(.dropdown-toggle) *'\\n      )\\n    ) {\\n      dropEl.classList.remove('show');\\n      dropMenu.classList.remove('show');\\n      dropEl.removeEventListener('focusout', onfocusout);\\n\\n      if (dropEl.querySelector('.dropdown-menu')) {\\n        dropEl.querySelector('.dropdown-menu').removeEventListener('click', onClick);\\n      }\\n    }\\n  }\\n});\\n\\n/**\\n * @global\\n * @event click:close\\n * @desc globalEvent.close 클릭 이벤트\\n */\\nJinja.event.add('click', 'globalEvent.close', e => {\\n  if (e.target.matches('.close[data-dismiss]')) {\\n    let closeTarget = Jinja.dom.closest(e.target, '.' + e.target.dataset.dismiss);\\n\\n    if (closeTarget) closeTarget.$remove();\\n  }\\n});\\n/* ==w3c.color.640.class================ */\\n/* w3color.js ver.1.18 by w3schools.com (Do not remove this line)*/\\n(function () {\\nfunction w3color(color, elmnt) {\\n  if (!(this instanceof w3color)) { return new w3color(color, elmnt); }\\n  if (typeof color == \\\"object\\\") {return color; }\\n  this.attachValues(toColorObject(color));\\n  if (elmnt) {elmnt.style.backgroundColor = this.toRgbString();}\\n}\\nw3color.prototype = {\\n  toRgbString : function () {\\n    return \\\"rgb(\\\" + this.red + \\\", \\\" + this.green + \\\", \\\" + this.blue + \\\")\\\";\\n  },\\n  toRgbaString : function () {\\n    return \\\"rgba(\\\" + this.red + \\\", \\\" + this.green + \\\", \\\" + this.blue + \\\", \\\" + this.opacity + \\\")\\\";\\n  },\\n  toHwbString : function () {\\n    return \\\"hwb(\\\" + this.hue + \\\", \\\" + Math.round(this.whiteness * 100) + \\\"%, \\\" + Math.round(this.blackness * 100) + \\\"%)\\\";\\n  },\\n  toHwbStringDecimal : function () {\\n    return \\\"hwb(\\\" + this.hue + \\\", \\\" + this.whiteness + \\\", \\\" + this.blackness + \\\")\\\";\\n  },\\n  toHwbaString : function () {\\n    return \\\"hwba(\\\" + this.hue + \\\", \\\" + Math.round(this.whiteness * 100) + \\\"%, \\\" + Math.round(this.blackness * 100) + \\\"%, \\\" + this.opacity + \\\")\\\";\\n  },\\n  toHslString : function () {\\n    return \\\"hsl(\\\" + this.hue + \\\", \\\" + Math.round(this.sat * 100) + \\\"%, \\\" + Math.round(this.lightness * 100) + \\\"%)\\\";\\n  },\\n  toHslStringDecimal : function () {\\n    return \\\"hsl(\\\" + this.hue + \\\", \\\" + this.sat + \\\", \\\" + this.lightness + \\\")\\\";\\n  },\\n  toHslaString : function () {\\n    return \\\"hsla(\\\" + this.hue + \\\", \\\" + Math.round(this.sat * 100) + \\\"%, \\\" + Math.round(this.lightness * 100) + \\\"%, \\\" + this.opacity + \\\")\\\";\\n  },\\n  toCmykString : function () {\\n    return \\\"cmyk(\\\" + Math.round(this.cyan * 100) + \\\"%, \\\" + Math.round(this.magenta * 100) + \\\"%, \\\" + Math.round(this.yellow * 100) + \\\"%, \\\" + Math.round(this.black * 100) + \\\"%)\\\";\\n  },\\n  toCmykStringDecimal : function () {\\n    return \\\"cmyk(\\\" + this.cyan + \\\", \\\" + this.magenta + \\\", \\\" + this.yellow + \\\", \\\" + this.black + \\\")\\\";\\n  },\\n  toNcolString : function () {\\n    return this.ncol + \\\", \\\" + Math.round(this.whiteness * 100) + \\\"%, \\\" + Math.round(this.blackness * 100) + \\\"%\\\";\\n  },\\n  toNcolStringDecimal : function () {\\n    return this.ncol + \\\", \\\" + this.whiteness + \\\", \\\" + this.blackness;\\n  },\\n  toNcolaString : function () {\\n    return this.ncol + \\\", \\\" + Math.round(this.whiteness * 100) + \\\"%, \\\" + Math.round(this.blackness * 100) + \\\"%, \\\" + this.opacity;\\n  },\\n  toName : function () {\\n    var r, g, b, colorhexs = getColorArr('hexs');\\n    for (i = 0; i < colorhexs.length; i++) {\\n      r = parseInt(colorhexs[i].substr(0,2), 16);\\n      g = parseInt(colorhexs[i].substr(2,2), 16);\\n      b = parseInt(colorhexs[i].substr(4,2), 16);\\n      if (this.red == r && this.green == g && this.blue == b) {\\n        return getColorArr('names')[i];\\n      }\\n    }\\n    return \\\"\\\";\\n  },\\n  toHexString : function () {\\n    var r = toHex(this.red);\\n    var g = toHex(this.green);\\n    var b = toHex(this.blue);\\n    return \\\"#\\\" +  r + g + b;\\n  },\\n  toRgb : function () {\\n    return {r : this.red, g : this.green, b : this.blue, a : this.opacity};\\n  },\\n  toHsl : function () {\\n    return {h : this.hue, s : this.sat, l : this.lightness, a : this.opacity};\\n  },\\n  toHwb : function () {\\n    return {h : this.hue, w : this.whiteness, b : this.blackness, a : this.opacity};\\n  },\\n  toCmyk : function () {\\n    return {c : this.cyan, m : this.magenta, y : this.yellow, k : this.black, a : this.opacity};\\n  },\\n  toNcol : function () {\\n    return {ncol : this.ncol, w : this.whiteness, b : this.blackness, a : this.opacity};\\n  },\\n  isDark : function (n) {\\n    var m = (n || 128);\\n    return (((this.red * 299 + this.green * 587 + this.blue * 114) / 1000) < m);\\n  },\\n  saturate : function (n) {\\n    var x, rgb, color;\\n    x = (n / 100 || 0.1);\\n    this.sat += x;\\n    if (this.sat > 1) {this.sat = 1;}\\n    rgb = hslToRgb(this.hue, this.sat, this.lightness);\\n    color = colorObject(rgb, this.opacity, this.hue, this.sat);\\n    this.attachValues(color);\\n  },\\n  desaturate : function (n) {\\n    var x, rgb, color;\\n    x = (n / 100 || 0.1);\\n    this.sat -= x;\\n    if (this.sat < 0) {this.sat = 0;}\\n    rgb = hslToRgb(this.hue, this.sat, this.lightness);\\n    color = colorObject(rgb, this.opacity, this.hue, this.sat);\\n    this.attachValues(color);\\n  },\\n  lighter : function (n) {\\n    var x, rgb, color;\\n    x = (n / 100 || 0.1);\\n    this.lightness += x;\\n    if (this.lightness > 1) {this.lightness = 1;}\\n    rgb = hslToRgb(this.hue, this.sat, this.lightness);\\n    color = colorObject(rgb, this.opacity, this.hue, this.sat);\\n    this.attachValues(color);\\n  },\\n  darker : function (n) {\\n    var x, rgb, color;\\n    x = (n / 100 || 0.1);\\n    this.lightness -= x;\\n    if (this.lightness < 0) {this.lightness = 0;}\\n    rgb = hslToRgb(this.hue, this.sat, this.lightness);\\n    color = colorObject(rgb, this.opacity, this.hue, this.sat);\\n    this.attachValues(color);\\n  },\\n  attachValues : function(color) {\\n    this.red = color.red;\\n    this.green = color.green;\\n    this.blue = color.blue;\\n    this.hue = color.hue;\\n    this.sat = color.sat;\\n    this.lightness = color.lightness;\\n    this.whiteness = color.whiteness;\\n    this.blackness = color.blackness;\\n    this.cyan = color.cyan;\\n    this.magenta = color.magenta;\\n    this.yellow = color.yellow;\\n    this.black = color.black;\\n    this.ncol = color.ncol;\\n    this.opacity = color.opacity;\\n    this.valid = color.valid;\\n  }\\n};\\nfunction toColorObject(c) {\\n  var x, y, typ, arr = [], arrlength, i, opacity, match, a, hue, sat, rgb, colornames = [], colorhexs = [];\\n  c = w3trim(c.toLowerCase());\\n  x = c.substr(0,1).toUpperCase();\\n  y = c.substr(1);\\n  a = 1;\\n  if ((x == \\\"R\\\" || x == \\\"Y\\\" || x == \\\"G\\\" || x == \\\"C\\\" || x == \\\"B\\\" || x == \\\"M\\\" || x == \\\"W\\\") && !isNaN(y)) {\\n    if (c.length == 6 && c.indexOf(\\\",\\\") == -1) {\\n    } else {\\n      c = \\\"ncol(\\\" + c + \\\")\\\";\\n    }\\n  }\\n  if (c.length != 3 && c.length != 6 && !isNaN(c)) {c = \\\"ncol(\\\" + c + \\\")\\\";}\\n  if (c.indexOf(\\\",\\\") > 0 && c.indexOf(\\\"(\\\") == -1) {c = \\\"ncol(\\\" + c + \\\")\\\";}  \\n  if (c.substr(0, 3) == \\\"rgb\\\" || c.substr(0, 3) == \\\"hsl\\\" || c.substr(0, 3) == \\\"hwb\\\" || c.substr(0, 4) == \\\"ncol\\\" || c.substr(0, 4) == \\\"cmyk\\\") {\\n    if (c.substr(0, 4) == \\\"ncol\\\") {\\n      if (c.split(\\\",\\\").length == 4 && c.indexOf(\\\"ncola\\\") == -1) {\\n        c = c.replace(\\\"ncol\\\", \\\"ncola\\\");\\n      }\\n      typ = \\\"ncol\\\";\\n      c = c.substr(4);\\n    } else if (c.substr(0, 4) == \\\"cmyk\\\") {\\n      typ = \\\"cmyk\\\";\\n      c = c.substr(4);\\n    } else {\\n      typ = c.substr(0, 3);\\n      c = c.substr(3);\\n    }\\n    arrlength = 3;\\n    opacity = false;\\n    if (c.substr(0, 1).toLowerCase() == \\\"a\\\") {\\n      arrlength = 4;\\n      opacity = true;\\n      c = c.substr(1);\\n    } else if (typ == \\\"cmyk\\\") {\\n      arrlength = 4;\\n      if (c.split(\\\",\\\").length == 5) {\\n        arrlength = 5;\\n        opacity = true;\\n      }\\n    }\\n    c = c.replace(\\\"(\\\", \\\"\\\");\\n    c = c.replace(\\\")\\\", \\\"\\\");\\n    arr = c.split(\\\",\\\");\\n    if (typ == \\\"rgb\\\") {\\n      if (arr.length != arrlength) {\\n        return emptyObject();\\n      }\\n      for (i = 0; i < arrlength; i++) {\\n        if (arr[i] == \\\"\\\" || arr[i] == \\\" \\\") {arr[i] = \\\"0\\\"; }\\n        if (arr[i].indexOf(\\\"%\\\") > -1) {\\n          arr[i] = arr[i].replace(\\\"%\\\", \\\"\\\");\\n          arr[i] = Number(arr[i] / 100);\\n          if (i < 3 ) {arr[i] = Math.round(arr[i] * 255);}\\n        }\\n        if (isNaN(arr[i])) {return emptyObject(); }\\n        if (parseInt(arr[i]) > 255) {arr[i] = 255; }\\n        if (i < 3) {arr[i] = parseInt(arr[i]);}\\n        if (i == 3 && Number(arr[i]) > 1) {arr[i] = 1;}\\n      }\\n      rgb = {r : arr[0], g : arr[1], b : arr[2]};\\n      if (opacity == true) {a = Number(arr[3]);}\\n    }\\n    if (typ == \\\"hsl\\\" || typ == \\\"hwb\\\" || typ == \\\"ncol\\\") {\\n      while (arr.length < arrlength) {arr.push(\\\"0\\\"); }\\n      if (typ == \\\"hsl\\\" || typ == \\\"hwb\\\") {\\n        if (parseInt(arr[0]) >= 360) {arr[0] = 0; }\\n      }\\n      for (i = 1; i < arrlength; i++) {\\n        if (arr[i].indexOf(\\\"%\\\") > -1) {\\n          arr[i] = arr[i].replace(\\\"%\\\", \\\"\\\");\\n          arr[i] = Number(arr[i]);\\n          if (isNaN(arr[i])) {return emptyObject(); }\\n          arr[i] = arr[i] / 100;\\n        } else {\\n          arr[i] = Number(arr[i]);\\n        }\\n        if (Number(arr[i]) > 1) {arr[i] = 1;}\\n        if (Number(arr[i]) < 0) {arr[i] = 0;}\\n      }\\n      if (typ == \\\"hsl\\\") {rgb = hslToRgb(arr[0], arr[1], arr[2]); hue = Number(arr[0]); sat = Number(arr[1]);}\\n      if (typ == \\\"hwb\\\") {rgb = hwbToRgb(arr[0], arr[1], arr[2]);}\\n      if (typ == \\\"ncol\\\") {rgb = ncolToRgb(arr[0], arr[1], arr[2]);}\\n      if (opacity == true) {a = Number(arr[3]);}\\n    }\\n    if (typ == \\\"cmyk\\\") {\\n      while (arr.length < arrlength) {arr.push(\\\"0\\\"); }\\n      for (i = 0; i < arrlength; i++) {\\n        if (arr[i].indexOf(\\\"%\\\") > -1) {\\n          arr[i] = arr[i].replace(\\\"%\\\", \\\"\\\");\\n          arr[i] = Number(arr[i]);\\n          if (isNaN(arr[i])) {return emptyObject(); }\\n          arr[i] = arr[i] / 100;\\n        } else {\\n          arr[i] = Number(arr[i]);\\n        }\\n        if (Number(arr[i]) > 1) {arr[i] = 1;}\\n        if (Number(arr[i]) < 0) {arr[i] = 0;}\\n      }\\n      rgb = cmykToRgb(arr[0], arr[1], arr[2], arr[3]);\\n      if (opacity == true) {a = Number(arr[4]);}\\n    }\\n  } else if (c.substr(0, 3) == \\\"ncs\\\") {\\n    rgb = ncsToRgb(c);\\n  } else {\\n    match = false;\\n    colornames = getColorArr('names');\\n    for (i = 0; i < colornames.length; i++) {\\n      if (c.toLowerCase() == colornames[i].toLowerCase()) {\\n        colorhexs = getColorArr('hexs');\\n        match = true;\\n        rgb = {\\n          r : parseInt(colorhexs[i].substr(0,2), 16),\\n          g : parseInt(colorhexs[i].substr(2,2), 16),\\n          b : parseInt(colorhexs[i].substr(4,2), 16)\\n        };\\n        break;\\n      }\\n    }\\n    if (match == false) {\\n      c = c.replace(\\\"#\\\", \\\"\\\");\\n      if (c.length == 3) {c = c.substr(0,1) + c.substr(0,1) + c.substr(1,1) + c.substr(1,1) + c.substr(2,1) + c.substr(2,1);}\\n      for (i = 0; i < c.length; i++) {\\n        if (!isHex(c.substr(i, 1))) {return emptyObject(); }\\n      }\\n      arr[0] = parseInt(c.substr(0,2), 16);\\n      arr[1] = parseInt(c.substr(2,2), 16);\\n      arr[2] = parseInt(c.substr(4,2), 16);\\n      for (i = 0; i < 3; i++) {\\n        if (isNaN(arr[i])) {return emptyObject(); }\\n      }\\n      rgb = {\\n        r : arr[0],\\n        g : arr[1],\\n        b : arr[2]\\n      };\\n    }\\n  }\\n  return colorObject(rgb, a, hue, sat);\\n}\\nfunction colorObject(rgb, a, h, s) {\\n  var hsl, hwb, cmyk, ncol, color, hue, sat;\\n  if (!rgb) {return emptyObject();}\\n  if (!a) {a = 1;}\\n  hsl = rgbToHsl(rgb.r, rgb.g, rgb.b);\\n  hwb = rgbToHwb(rgb.r, rgb.g, rgb.b);\\n  cmyk = rgbToCmyk(rgb.r, rgb.g, rgb.b);\\n  hue = (h || hsl.h);\\n  sat = (s || hsl.s);   \\n  ncol = hueToNcol(hue);\\n  color = {\\n    red : rgb.r,\\n    green : rgb.g,\\n    blue : rgb.b,\\n    hue : hue,\\n    sat : sat,\\n    lightness : hsl.l,\\n    whiteness : hwb.w,\\n    blackness : hwb.b,\\n    cyan : cmyk.c,\\n    magenta : cmyk.m,\\n    yellow : cmyk.y,\\n    black : cmyk.k,\\n    ncol : ncol,\\n    opacity : a,\\n    valid : true\\n  };\\n  color = roundDecimals(color);\\n  return color;\\n}\\nfunction emptyObject() {\\n  return {\\n    red : 0,\\n    green : 0,\\n    blue : 0,\\n    hue : 0,\\n    sat : 0,\\n    lightness : 0,\\n    whiteness : 0,\\n    blackness : 0,\\n    cyan : 0,\\n    magenta : 0,\\n    yellow : 0,\\n    black : 0,\\n    ncol : \\\"R\\\",\\n    opacity : 1,\\n    valid : false\\n  };\\n}\\nfunction getColorArr(x) {\\n  if (x == \\\"names\\\") {return ['AliceBlue','AntiqueWhite','Aqua','Aquamarine','Azure','Beige','Bisque','Black','BlanchedAlmond','Blue','BlueViolet','Brown','BurlyWood','CadetBlue','Chartreuse','Chocolate','Coral','CornflowerBlue','Cornsilk','Crimson','Cyan','DarkBlue','DarkCyan','DarkGoldenRod','DarkGray','DarkGrey','DarkGreen','DarkKhaki','DarkMagenta','DarkOliveGreen','DarkOrange','DarkOrchid','DarkRed','DarkSalmon','DarkSeaGreen','DarkSlateBlue','DarkSlateGray','DarkSlateGrey','DarkTurquoise','DarkViolet','DeepPink','DeepSkyBlue','DimGray','DimGrey','DodgerBlue','FireBrick','FloralWhite','ForestGreen','Fuchsia','Gainsboro','GhostWhite','Gold','GoldenRod','Gray','Grey','Green','GreenYellow','HoneyDew','HotPink','IndianRed','Indigo','Ivory','Khaki','Lavender','LavenderBlush','LawnGreen','LemonChiffon','LightBlue','LightCoral','LightCyan','LightGoldenRodYellow','LightGray','LightGrey','LightGreen','LightPink','LightSalmon','LightSeaGreen','LightSkyBlue','LightSlateGray','LightSlateGrey','LightSteelBlue','LightYellow','Lime','LimeGreen','Linen','Magenta','Maroon','MediumAquaMarine','MediumBlue','MediumOrchid','MediumPurple','MediumSeaGreen','MediumSlateBlue','MediumSpringGreen','MediumTurquoise','MediumVioletRed','MidnightBlue','MintCream','MistyRose','Moccasin','NavajoWhite','Navy','OldLace','Olive','OliveDrab','Orange','OrangeRed','Orchid','PaleGoldenRod','PaleGreen','PaleTurquoise','PaleVioletRed','PapayaWhip','PeachPuff','Peru','Pink','Plum','PowderBlue','Purple','RebeccaPurple','Red','RosyBrown','RoyalBlue','SaddleBrown','Salmon','SandyBrown','SeaGreen','SeaShell','Sienna','Silver','SkyBlue','SlateBlue','SlateGray','SlateGrey','Snow','SpringGreen','SteelBlue','Tan','Teal','Thistle','Tomato','Turquoise','Violet','Wheat','White','WhiteSmoke','Yellow','YellowGreen']; }\\n  if (x == \\\"hexs\\\") {return ['f0f8ff','faebd7','00ffff','7fffd4','f0ffff','f5f5dc','ffe4c4','000000','ffebcd','0000ff','8a2be2','a52a2a','deb887','5f9ea0','7fff00','d2691e','ff7f50','6495ed','fff8dc','dc143c','00ffff','00008b','008b8b','b8860b','a9a9a9','a9a9a9','006400','bdb76b','8b008b','556b2f','ff8c00','9932cc','8b0000','e9967a','8fbc8f','483d8b','2f4f4f','2f4f4f','00ced1','9400d3','ff1493','00bfff','696969','696969','1e90ff','b22222','fffaf0','228b22','ff00ff','dcdcdc','f8f8ff','ffd700','daa520','808080','808080','008000','adff2f','f0fff0','ff69b4','cd5c5c','4b0082','fffff0','f0e68c','e6e6fa','fff0f5','7cfc00','fffacd','add8e6','f08080','e0ffff','fafad2','d3d3d3','d3d3d3','90ee90','ffb6c1','ffa07a','20b2aa','87cefa','778899','778899','b0c4de','ffffe0','00ff00','32cd32','faf0e6','ff00ff','800000','66cdaa','0000cd','ba55d3','9370db','3cb371','7b68ee','00fa9a','48d1cc','c71585','191970','f5fffa','ffe4e1','ffe4b5','ffdead','000080','fdf5e6','808000','6b8e23','ffa500','ff4500','da70d6','eee8aa','98fb98','afeeee','db7093','ffefd5','ffdab9','cd853f','ffc0cb','dda0dd','b0e0e6','800080','663399','ff0000','bc8f8f','4169e1','8b4513','fa8072','f4a460','2e8b57','fff5ee','a0522d','c0c0c0','87ceeb','6a5acd','708090','708090','fffafa','00ff7f','4682b4','d2b48c','008080','d8bfd8','ff6347','40e0d0','ee82ee','f5deb3','ffffff','f5f5f5','ffff00','9acd32']; }\\n}\\nfunction roundDecimals(c) {\\n  c.red = Number(c.red.toFixed(0));\\n  c.green = Number(c.green.toFixed(0));\\n  c.blue = Number(c.blue.toFixed(0));\\n  c.hue = Number(c.hue.toFixed(0));\\n  c.sat = Number(c.sat.toFixed(2));\\n  c.lightness = Number(c.lightness.toFixed(2));\\n  c.whiteness = Number(c.whiteness.toFixed(2));\\n  c.blackness = Number(c.blackness.toFixed(2));\\n  c.cyan = Number(c.cyan.toFixed(2));  \\n  c.magenta = Number(c.magenta.toFixed(2));\\n  c.yellow = Number(c.yellow.toFixed(2));\\n  c.black = Number(c.black.toFixed(2));\\n  c.ncol = c.ncol.substr(0, 1) + Math.round(Number(c.ncol.substr(1)));\\n  c.opacity = Number(c.opacity.toFixed(2));\\n  return c;\\n}\\nfunction hslToRgb(hue, sat, light) {\\n  var t1, t2, r, g, b;\\n  hue = hue / 60;\\n  if ( light <= 0.5 ) {\\n    t2 = light * (sat + 1);\\n  } else {\\n    t2 = light + sat - (light * sat);\\n  }\\n  t1 = light * 2 - t2;\\n  r = hueToRgb(t1, t2, hue + 2) * 255;\\n  g = hueToRgb(t1, t2, hue) * 255;\\n  b = hueToRgb(t1, t2, hue - 2) * 255;\\n  return {r : r, g : g, b : b};\\n}\\nfunction hueToRgb(t1, t2, hue) {\\n  if (hue < 0) hue += 6;\\n  if (hue >= 6) hue -= 6;\\n  if (hue < 1) return (t2 - t1) * hue + t1;\\n  else if(hue < 3) return t2;\\n  else if(hue < 4) return (t2 - t1) * (4 - hue) + t1;\\n  else return t1;\\n}\\nfunction hwbToRgb(hue, white, black) {\\n  var i, rgb, rgbArr = [], tot;\\n  rgb = hslToRgb(hue, 1, 0.50);\\n  rgbArr[0] = rgb.r / 255;\\n  rgbArr[1] = rgb.g / 255;\\n  rgbArr[2] = rgb.b / 255;\\n  tot = white + black;\\n  if (tot > 1) {\\n    white = Number((white / tot).toFixed(2));\\n    black = Number((black / tot).toFixed(2));\\n  }\\n  for (i = 0; i < 3; i++) {\\n    rgbArr[i] *= (1 - (white) - (black));\\n    rgbArr[i] += (white);\\n    rgbArr[i] = Number(rgbArr[i] * 255);\\n  }\\n  return {r : rgbArr[0], g : rgbArr[1], b : rgbArr[2] };\\n}\\nfunction cmykToRgb(c, m, y, k) {\\n  var r, g, b;\\n  r = 255 - ((Math.min(1, c * (1 - k) + k)) * 255);\\n  g = 255 - ((Math.min(1, m * (1 - k) + k)) * 255);\\n  b = 255 - ((Math.min(1, y * (1 - k) + k)) * 255);\\n  return {r : r, g : g, b : b};\\n}\\nfunction ncolToRgb(ncol, white, black) {\\n  var letter, percent, h, w, b;\\n  h = ncol;\\n  if (isNaN(ncol.substr(0,1))) {\\n    letter = ncol.substr(0,1).toUpperCase();\\n    percent = ncol.substr(1);\\n    if (percent == \\\"\\\") {percent = 0;}\\n    percent = Number(percent);\\n    if (isNaN(percent)) {return false;}\\n    if (letter == \\\"R\\\") {h = 0 + (percent * 0.6);}\\n    if (letter == \\\"Y\\\") {h = 60 + (percent * 0.6);}\\n    if (letter == \\\"G\\\") {h = 120 + (percent * 0.6);}\\n    if (letter == \\\"C\\\") {h = 180 + (percent * 0.6);}\\n    if (letter == \\\"B\\\") {h = 240 + (percent * 0.6);}\\n    if (letter == \\\"M\\\") {h = 300 + (percent * 0.6);}\\n    if (letter == \\\"W\\\") {\\n      h = 0;\\n      white = 1 - (percent / 100);\\n      black = (percent / 100);\\n    }\\n  }\\n  return hwbToRgb(h, white, black);\\n}\\nfunction hueToNcol(hue) {\\n  while (hue >= 360) {\\n    hue = hue - 360;\\n  }\\n  if (hue < 60) {return \\\"R\\\" + (hue / 0.6); }\\n  if (hue < 120) {return \\\"Y\\\" + ((hue - 60) / 0.6); }\\n  if (hue < 180) {return \\\"G\\\" + ((hue - 120) / 0.6); }\\n  if (hue < 240) {return \\\"C\\\" + ((hue - 180) / 0.6); }\\n  if (hue < 300) {return \\\"B\\\" + ((hue - 240) / 0.6); }\\n  if (hue < 360) {return \\\"M\\\" + ((hue - 300) / 0.6); }\\n}\\nfunction ncsToRgb(ncs){\\n  var black, chroma, bc, percent, black1, chroma1, red1, factor1, blue1, red1, red2, green2, blue2, max, factor2, grey, r, g, b; \\n  ncs = w3trim(ncs).toUpperCase();\\n  ncs = ncs.replace(\\\"(\\\", \\\"\\\");\\n  ncs = ncs.replace(\\\")\\\", \\\"\\\");\\n  ncs = ncs.replace(\\\"NCS\\\", \\\"NCS \\\");\\n  ncs = ncs.replace(/  /g, \\\" \\\");  \\n  if (ncs.indexOf(\\\"NCS\\\") == -1) {ncs = \\\"NCS \\\" + ncs;}\\n  ncs = ncs.match(/^(?:NCS|NCS\\\\sS)\\\\s(\\\\d{2})(\\\\d{2})-(N|[A-Z])(\\\\d{2})?([A-Z])?$/);\\n  if (ncs === null) return false;\\n  black = parseInt(ncs[1], 10);\\n  chroma = parseInt(ncs[2], 10);\\n  bc = ncs[3];\\n  if (bc != \\\"N\\\" && bc != \\\"Y\\\" && bc != \\\"R\\\" && bc != \\\"B\\\" && bc != \\\"G\\\") {return false;}\\n  percent = parseInt(ncs[4], 10) || 0;\\n  if (bc !== 'N') {\\n    black1 = (1.05 * black - 5.25);\\n    chroma1 = chroma;\\n    if (bc === 'Y' && percent <= 60) {\\n      red1 = 1;\\n    } else if (( bc === 'Y' && percent > 60) || ( bc === 'R' && percent <= 80)) {\\n      if (bc === 'Y') {\\n        factor1 = percent - 60;\\n      } else {\\n        factor1 = percent + 40;\\n      }\\n      red1 = ((Math.sqrt(14884 - Math.pow(factor1, 2))) - 22) / 100;\\n    } else if ((bc === 'R' && percent > 80) || (bc === 'B')) {\\n      red1 = 0;\\n    } else if (bc === 'G') {\\n      factor1 = (percent - 170);\\n      red1 = ((Math.sqrt(33800 - Math.pow(factor1, 2))) - 70) / 100;\\n    }\\n    if (bc === 'Y' && percent <= 80) {\\n      blue1 = 0;\\n    } else if (( bc === 'Y' && percent > 80) || ( bc === 'R' && percent <= 60)) {\\n      if (bc ==='Y') {\\n        factor1 = (percent - 80) + 20.5;\\n      } else {\\n        factor1 = (percent + 20) + 20.5;\\n      }\\n      blue1 = (104 - (Math.sqrt(11236 - Math.pow(factor1, 2)))) / 100;\\n    } else if ((bc === 'R' && percent > 60) || ( bc === 'B' && percent <= 80)) {\\n      if (bc ==='R') {\\n        factor1 = (percent - 60) - 60;\\n      } else {\\n        factor1 = (percent + 40) - 60;\\n      }\\n      blue1 = ((Math.sqrt(10000 - Math.pow(factor1, 2))) - 10) / 100;\\n    } else if (( bc === 'B' && percent > 80) || ( bc === 'G' && percent <= 40)) {\\n      if (bc === 'B') {\\n        factor1 = (percent - 80) - 131;\\n      } else {\\n        factor1 = (percent + 20) - 131;\\n      }\\n      blue1 = (122 - (Math.sqrt(19881 - Math.pow(factor1, 2)))) / 100;\\n    } else if (bc === 'G' && percent > 40) {\\n      blue1 = 0;\\n    }\\n    if (bc === 'Y') {\\n      green1 = (85 - 17/20 * percent) / 100;\\n    } else if (bc === 'R' && percent <= 60) {\\n      green1 = 0;\\n    } else if (bc === 'R' && percent > 60) {\\n      factor1 = (percent - 60) + 35;\\n      green1 = (67.5 - (Math.sqrt(5776 - Math.pow(factor1, 2)))) / 100;\\n    } else if (bc === 'B' && percent <= 60) {\\n      factor1 = (1*percent - 68.5);\\n      green1 = (6.5 + (Math.sqrt(7044.5 - Math.pow(factor1, 2)))) / 100;\\n    } else if ((bc === 'B' && percent > 60) || ( bc === 'G' && percent <= 60)) {\\n      green1 = 0.9;\\n    } else if (bc === 'G' && percent > 60) {\\n      factor1 = (percent - 60);\\n      green1 = (90 - (1/8 * factor1)) / 100;\\n    }\\n    factor1 = (red1 + green1 + blue1)/3;\\n    red2 = ((factor1 - red1) * (100 - chroma1) / 100) + red1;\\n    green2 = ((factor1 - green1) * (100 - chroma1) / 100) + green1;\\n    blue2 = ((factor1 - blue1) * (100 - chroma1) / 100) + blue1;\\n    if (red2 > green2 && red2 > blue2) {\\n      max = red2;\\n    } else if (green2 > red2 && green2 > blue2) {\\n      max = green2;\\n    } else if (blue2 > red2 && blue2 > green2) {\\n      max = blue2;\\n    } else {\\n      max = (red2 + green2 + blue2) / 3;\\n    }\\n    factor2 = 1 / max;\\n    r = parseInt((red2 * factor2 * (100 - black1) / 100) * 255, 10);\\n    g = parseInt((green2 * factor2 * (100 - black1) / 100) * 255, 10);\\n    b = parseInt((blue2 * factor2 * (100 - black1) / 100) * 255, 10);\\n    if (r > 255) {r = 255;}\\n    if (g > 255) {g = 255;}\\n    if (b > 255) {b = 255;}\\n    if (r < 0) {r = 0;}\\n    if (g < 0) {g = 0;}\\n    if (b < 0) {b = 0;}\\n  } else {\\n    grey = parseInt((1 - black / 100) * 255, 10);\\n    if (grey > 255) {grey = 255;}\\n    if (grey < 0) {grey = 0;}\\n    r = grey;\\n    g = grey;\\n    b = grey;\\n  }\\n  return {\\n    r : r,\\n    g : g,\\n    b : b\\n  };\\n}\\nfunction rgbToHsl(r, g, b) {\\n  var min, max, i, l, s, maxcolor, h, rgb = [];\\n  rgb[0] = r / 255;\\n  rgb[1] = g / 255;\\n  rgb[2] = b / 255;\\n  min = rgb[0];\\n  max = rgb[0];\\n  maxcolor = 0;\\n  for (i = 0; i < rgb.length - 1; i++) {\\n    if (rgb[i + 1] <= min) {min = rgb[i + 1];}\\n    if (rgb[i + 1] >= max) {max = rgb[i + 1];maxcolor = i + 1;}\\n  }\\n  if (maxcolor == 0) {\\n    h = (rgb[1] - rgb[2]) / (max - min);\\n  }\\n  if (maxcolor == 1) {\\n    h = 2 + (rgb[2] - rgb[0]) / (max - min);\\n  }\\n  if (maxcolor == 2) {\\n    h = 4 + (rgb[0] - rgb[1]) / (max - min);\\n  }\\n  if (isNaN(h)) {h = 0;}\\n  h = h * 60;\\n  if (h < 0) {h = h + 360; }\\n  l = (min + max) / 2;\\n  if (min == max) {\\n    s = 0;\\n  } else {\\n    if (l < 0.5) {\\n      s = (max - min) / (max + min);\\n    } else {\\n      s = (max - min) / (2 - max - min);\\n    }\\n  }\\n  s = s;\\n  return {h : h, s : s, l : l};\\n}\\nfunction rgbToHwb(r, g, b) {\\n  var h, w, bl;\\n  r = r / 255;\\n  g = g / 255;\\n  b = b / 255;\\n  max = Math.max(r, g, b);\\n  min = Math.min(r, g, b);\\n  chroma = max - min;\\n  if (chroma == 0) {\\n    h = 0;\\n  } else if (r == max) {\\n    h = (((g - b) / chroma) % 6) * 360;\\n  } else if (g == max) {\\n    h = ((((b - r) / chroma) + 2) % 6) * 360;\\n  } else {\\n    h = ((((r - g) / chroma) + 4) % 6) * 360;\\n  }\\n  w = min;\\n  bl = 1 - max;\\n  return {h : h, w : w, b : bl};\\n}\\nfunction rgbToCmyk(r, g, b) {\\n  var c, m, y, k;\\n  r = r / 255;\\n  g = g / 255;\\n  b = b / 255;\\n  max = Math.max(r, g, b);\\n  k = 1 - max;\\n  if (k == 1) {\\n    c = 0;\\n    m = 0;\\n    y = 0;\\n  } else {\\n    c = (1 - r - k) / (1 - k);\\n    m = (1 - g - k) / (1 - k);\\n    y = (1 - b - k) / (1 - k);\\n  }\\n  return {c : c, m : m, y : y, k : k};\\n}\\nfunction toHex(n) {\\n  var hex = n.toString(16);\\n  while (hex.length < 2) {hex = \\\"0\\\" + hex; }\\n  return hex;\\n}\\nfunction cl(x) {\\n  console.log(x);\\n}\\nfunction w3trim(x) {\\n  return x.replace(/^\\\\s+|\\\\s+$/g, '');\\n}\\nfunction isHex(x) {\\n  return ('0123456789ABCDEFabcdef'.indexOf(x) > -1);\\n}\\nwindow.w3color = w3color;\\n\\n})();\\n\\nfunction w3SetColorsByAttribute() {\\n  var z, i, att;\\n  z = document.getElementsByTagName(\\\"*\\\");\\n  for (i = 0; i < z.length; i++) {\\n    att = z[i].getAttribute(\\\"data-w3-color\\\");\\n    if (att) {\\n      z[i].style.backgroundColor = w3color(att).toRgbString();      \\n    }\\n  }\\n}/* ==SPA.710.pkg.deploy================ */\\n/* ==JJRoute.640.class================ */\\n\\n/**\\n * @classdesc Route 모듈관리를 위한 클래스<br><br>\\n * 앱에서 페이지간 이동방법은 [a] 테그를 클릭, 히스토리, 백버튼 프로그램이 있다.<br><br>\\n * 이 이동상황을 감지하고 원래의 동작을 정지시킨 후 변경된 이동상황을 \\n * 검사하여 원하는 ajax로 구현할 수 있다.<br>\\n * Route모듈은 변경에 대한 상황을 감지하고 ajax로 이동해야할 URI를 구하고\\n * URI로 이동할수 있는 jjRouteDoUri, jjRouteDoHome 이벤트를 발생시킨다.\\n */\\nclass JJRoute extends JJModule {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 옵션\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      routeType: 'pjax' // mix, hash, pjax\\n    };\\n  }\\n\\n  /**\\n   * @desc 파일경로를 ajax용 파일URI로 변환하여 반환한다.\\n   * @param {String} - 파일경로\\n   * @param {String} - 제목\\n   * @return {Promiss} - 변환결과\\n   * @example -\\n   */\\n  _filePath2URI(path, title) {\\n\\n    if(!path) return;\\n    path = decodeURIComponent(path);\\n    let filePath = path.replace(location.origin,\\\"\\\");    \\n    return new Promise((resolv, reject)=>{\\n      if([\\\"/\\\",\\\"\\\"].includes(filePath)){\\n        resolv(\\\"home\\\");\\n        Jinja.theme.openHome();  \\n      } else {\\n        let cachFile = Jinja.ajax.pathCache[filePath];\\n        if(cachFile){\\n          Jinja.theme.openFileInfo(cachFile,title);  \\n          resolv(cachFile)\\n        }\\n        else {\\n\\n          Jinja.driverApi.getFilePath(filePath).then(fileInfo=>{\\n            /**\\n          * 파일을 실행하는 모듈\\n          */\\n            title = title || fileInfo[\\\"NAME\\\"];\\n            Jinja.theme.openFileInfo(fileInfo,title);  \\n\\n            resolv(fileInfo)\\n          })\\n            .catch(result=>{\\n            alert(`_filePath 2 URI\\\\n ${path}의 파일이 없습니다.`);\\n            console.log(result);\\n            //reject(result)\\n          });\\n        }\\n      }\\n    });\\n\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    if (['mix', 'hash'].includes(this.options.routeType)) {\\n      Jinja.event.add('hashchange', 'hashchange.route.setEvent', e => {\\n        console.log('hashchange');\\n\\n        e.preventDefault();\\n      });\\n    }\\n\\n    if (['mix', 'pjax'].includes(this.options.routeType)) {\\n      Jinja.event.add('popstate', 'popstate.route.setEvent', e => {\\n        let path = location.origin;\\n\\n        if (e.state) {\\n          path = e.state.path || e.state.filePath;\\n        }\\n\\n        if (path) {\\n          e.preventDefault();\\n\\n          console.log(`popstate : ${path}`);\\n\\n          this._filePath2URI(path).then(fileInfo => {});\\n        }\\n      });\\n    }\\n\\n    Jinja.event.add('click', 'route.setEvent', e => {\\n      let el = e.target.closest('a');\\n      if (!el) return;\\n      let elHref = el.getAttribute(\\\"href\\\");      \\n\\n      if (elHref && elHref.startsWith(\\\"http\\\")) return;\\n      if (el.matches('[download],[target=\\\"_blank\\\"]')) return;\\n\\n\\n      if (e.target.matches('.fa-remove') || \\n          elHref == \\\"#\\\" || \\n          e.target.matches('jj-vhtml-editor *')) {\\n        e.preventDefault();\\n\\n        return;\\n      }\\n\\n\\n\\n\\n      if(elHref && elHref != '#' && elHref.startsWith('#')) {\\n        let form = el.closest('jj-form');\\n\\n        if(form) {\\n          let target = form.querySelector(elHref);\\n\\n          if(target) {\\n            target.scrollIntoView();\\n\\n            e.preventDefault();\\n\\n            return;\\n          }\\n        }\\n      }\\n\\n      let path = el.href;\\n      let title = el.title;\\n\\n      if (\\n        path.endsWith('#') ||\\n        path.endsWith('void(0)') ||\\n        path.includes('javascript') ||\\n        e.target.matches(`[data-toggle], [data-toggle] *`)\\n      ) {\\n        e.preventDefault();\\n\\n        return;\\n      }\\n\\n      if (path === location.href) {\\n        e.preventDefault();\\n\\n        return;\\n      }\\n\\n      if (path && path.startsWith(location.origin)) {\\n        e.preventDefault();\\n\\n        let form = e.target.closest('jj-form');\\n        let jid = path.split('#')[1];\\n\\n        if (form && jid && ['mix', 'pjax'].includes(this.options.routeType)) {\\n          let node = form.querySelector(\\\"[jj-id='\\\" + jid + \\\"']\\\");\\n\\n          node.scrollIntoView({\\n            behavior: 'smooth',\\n            block: 'nearest',\\n            inline: 'start'\\n          });\\n        } else {\\n          this._filePath2URI(path, title).then(fileInfo => {\\n            history.pushState({path}, null, path);\\n          });\\n        }\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 파일경로로 URL을 변경한다.\\n   * @param {String} - 파일경로\\n   * @example -\\n   */\\n  href(path) {\\n    this._filePath2URI(path).then(fileInfo => {\\n      history.pushState({path}, null, path);\\n    });\\n  }\\n\\n  /**\\n   * @desc 모듈명을 반환한다.\\n   * @example -\\n   */\\n  who() {\\n    alert('JJRoute');\\n  }\\n}\\n\\nJinja.addModule('route', JJRoute);\\n/* ==JJLauncher.640.class================ */\\n\\n/**\\n * @classdesc Launcher용 폼객체관리를 위한 클래스\\n */\\nclass JJLauncher extends JJModule {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 옵션\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 런쳐의 값을 초기화한다.\\n   * @example -\\n   */\\n  _render() {\\n    this.launchers = {};\\n  }\\n\\n  /**\\n   * @desc 런쳐를 초기화한다.\\n   * @example -\\n   */\\n  init() {\\n    if (workspaceMeta.options.launchers) {\\n      workspaceMeta.cacheResources.forEach(item => {\\n        if (workspaceMeta.options.launchers.includes(item.URI)) {\\n          let body = JSON.parse(item.BODY);\\n\\n          this.launchers[body.name] = body;\\n        }\\n      });\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 런처의 스튜디오명을 반환한다.\\n   * @param {String} - 런처명\\n   * @return {String} - 스튜디오명\\n   * @example -\\n   */\\n  getStudioUri(launcherName) {\\n    return this.launchers[launcherName] ? this.launchers[launcherName].studio : '';\\n  }\\n\\n  /**\\n   * @desc 지정한 런처의 런타임명을 반환한다.\\n   * @param {String} - 런처명\\n   * @return {String} - 런타임명\\n   * @example -\\n   */\\n  getRuntimeUri(launcherName) {\\n    return this.launchers[launcherName] ? this.launchers[launcherName].runtime : '';\\n  }\\n\\n  /**\\n   * @desc 지정한 런처의 아이콘명을 반환한다.\\n   * @param {String} - 런처명\\n   * @return {String} - 아이콘명\\n   * @example -\\n   */\\n  getLauncherIcon(launcherName) {\\n    return this.launchers[launcherName] ? this.launchers[launcherName].icon : '';\\n  }\\n  \\n  /**\\n   * @desc 모듈명을 반환한다.\\n   * @example -\\n   */\\n  who() {\\n    alert('JJLauncher');\\n  }\\n}\\n\\nJinja.addModule('launcher', JJLauncher);\\n/* ==JJForm.640.class================ */\\n\\n/**\\n * @classdesc 폼관리를 위한 클래스\\n */\\nclass JJForm extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 옵션\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      uri: '',\\n      formClass: '',\\n      useResizeObserver: true,\\n      resizeIntervalDuration: 100,\\n      animation: '',\\n      isEnterClose: false,\\n      isCloseDestroy: false,\\n      position: {},\\n      showFoot: true,\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    this.classList.add('jj-form');\\n    this.setAttribute('tabindex', -1);\\n    this.focus();\\n\\n    this.innerHTML =`\\n<header class=\\\"header\\\">\\n<h4 class=\\\"form-title\\\">&nbsp</h4>\\n<button jj-command=\\\"remove\\\" type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">×</button>\\n</header>\\n<article class=\\\"\\\"></article>\\n<footer class=\\\"\\\">\\n<label class=\\\"footer-title\\\"></label>\\n</footer>\\n`;\\n\\n\\n    //     this.innerHTML =\\n    //       `<header class=\\\"header\\\">` +\\n    //       `<div class=\\\"page-title-right\\\">` +\\n    //       `<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" jj-command=\\\"destroy\\\">X</button>` +\\n    //       `</div>` +\\n    //       `<h4 class=\\\"page-title\\\">&nbsp</h4>` +\\n    //       `</header>` +\\n    //       `<article></article>` +\\n    //       `<footer></footer>`;\\n\\n    this.formTitleEl = this.querySelector('.form-title');\\n    this.formBodyEl = this.querySelector('article');\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this._oResizeObserver = new ResizeObserver(entries => {\\n      if (this._resizeTimeout) {\\n        clearTimeout(this._resizeTimeout);\\n\\n        this._resizeTimeout = null;\\n      }\\n\\n      this._resizeTimeout = setTimeout(e => {\\n        this.doResize();\\n\\n        clearTimeout(this._resizeTimeout);\\n\\n        this._resizeTimeout = null;\\n      }, this.options.resizeIntervalDuration);\\n    });\\n\\n    this._oResizeObserver.observe(this);\\n  }\\n\\n  /**\\n   * @desc 폼을 삭제한다.\\n   * @example -\\n   */\\n  _destroy() {\\n    super._destroy();\\n\\n    if (this._oResizeObserver) this._oResizeObserver.disconnect();\\n    if (this._oMover) this._oMover.destroy();\\n    if (this._oResizer) this._oResizer.destroy();\\n    if (this._resizeTimeout) clearTimeout(this._resizeTimeout);\\n\\n    this._resizeTimeout = null;\\n    this._oResizeObserver = null;\\n    this.formClose();\\n  }\\n\\n  /**\\n   * @static\\n   * @memberof JJForm\\n   * @method get observedAttributes\\n   * @desc 모니터링 할 속성 목록을 반환한다.\\n   * @return {Array} - 모니터링 할 속성 목록\\n   * @example -\\n   */\\n  static get observedAttributes() {\\n    return ['jj-uri', 'moveable', 'resizable'];\\n  }\\n\\n  /**\\n   * @desc 옵션을 설정한다.\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  setOptions(options) {\\n    Object.assign(this.options, options);\\n\\n    if (this.options.formClass) this.classList.add(this.options.formClass);\\n  }\\n\\n  /**\\n   * @desc 제목을 설정한다.\\n   * @param {String} - 제목\\n   * @example -\\n   */\\n  setTitle(title) {\\n    this.formTitleEl.innerText = title;\\n  }\\n\\n  /**\\n   * @desc 모달에서 사용할 바닥글을 넣는다\\n   * @param {String} - 제목\\n   * @example -\\n   */\\n  setFootHtml(html) {\\n    let el = this.querySelector(`footer .footer-title`);\\n    if (el) el.innerHTML = html;\\n  }\\n\\n  /**\\n   * @desc 폼을 삭제한다.\\n   * @example -\\n   */\\n  destroy() {\\n    this.dispatchEvent(\\n      new CustomEvent('formDestroy', {\\n        detail: {\\n          form: this\\n        },\\n        bubbles: true\\n      })\\n    );\\n\\n    this.$empty();\\n    this.remove();\\n  }\\n\\n  /**\\n   * @desc 폼시작시 실행한다.\\n   * @param {Object} - 파라미터\\n   * @example -\\n   */\\n  formLoad(params) {}\\n\\n  /**\\n   * @desc 폼종료시 실행한다.\\n   * @example -\\n   */\\n  formClose() {}\\n\\n  /**\\n   * @desc 폼 크기 변경시 실행한다.\\n   * @example -\\n   */\\n  doResize() {}\\n\\n  /**\\n   * @desc 지정한 파일정보에 대한 폼을 생성한다.\\n   * @param {Object} - 파일정보\\n   * @param {Object} - 파라미터\\n   * @param {String} - 제목\\n   * @return {Promiss} - 생성결과\\n   * @example -\\n   */\\n  openFileInfo(fileInfo, params, title) {\\n    this.fileInfo = fileInfo;\\n    this.options.uri = fileInfo.URI;\\n    this.setTitle(title || fileInfo.NAME);\\n\\n    const launcherUri = Jinja.launcher.getRuntimeUri(fileInfo.TYPE);\\n\\n    return (\\n      Jinja.driverApi\\n      .getUri(launcherUri)\\n      .then(launcherInfo => {\\n        if (\\n          launcherInfo.BODY.less &&\\n          !Jinja.querySelector(`style[launcher=\\\"${launcherUri}\\\"]`)\\n        ) {\\n          let styleEl = document.createElement('style');\\n          styleEl.type = 'text/css';\\n          styleEl.setAttribute('rel', 'stylesheet');\\n          styleEl.setAttribute('launcher', launcherUri);\\n          Jinja.appendChild(styleEl);\\n\\n          let lessCss = `[launcher=\\\"${launcherUri}\\\"]{ ${Jinja.lessRuleset || ''} ${launcherInfo.BODY.less || ''} }`;\\n\\n          less\\n            .render(lessCss)\\n            .then(output =>\\n                  styleEl.appendChild(document.createTextNode(output.css))\\n                 )\\n            .catch(error => console.error(error));\\n        }\\n\\n        this.setAttribute('launcher', launcherUri);\\n        this.formBodyEl.innerHTML = launcherInfo.BODY.html;\\n        this._setElementId();\\n\\n        if (launcherInfo.BODY.script) {\\n          try {\\n            new Function('form', launcherInfo.BODY.script)(this);\\n          } catch (ex) {\\n            console.error(ex);\\n            switch(ex.name){\\n              case \\\"TypeError\\\":\\n              case \\\"ReferenceError\\\":\\n                let regex = new RegExp(/<anonymous>:(\\\\d+):(\\\\d+)/);\\n                let match = ex.stack.match(regex);\\n\\n                let result ={\\n                  \\\"message\\\": ex.message,\\n                  \\\"line\\\": parseInt(match[1])-2,\\n                  \\\"col\\\": parseInt(match[2]),\\n                  \\\"inner\\\": ex,\\n                  \\\"fileInfo\\\":fileInfo\\n                };\\n\\n                this.dispatchEvent(new CustomEvent(\\\"formError\\\", {\\n                  \\\"detail\\\":result,\\n                  \\\"bubbles\\\": true\\n                }));\\n\\n                let sourceLine = fileInfo.script.split('\\\\n')[result.line-1];\\n                if (sourceLine){\\n                  sourceLine = sourceLine.trim();\\n                  alert(`\\n                    <h4>Source: ${sourceLine}</h4>\\n                    <p>\\n                    <strong>Message: ${result.message}</strong><br>\\n                    ErrorType: ${ex.name}<br>\\n                    Source Line: ${result.line}<br>\\n                    <b>Stack</b>:<br>\\n                      ${ex.stack.split('\\\\n').join('<br>')}\\n                    </p>\\n                  `);\\n                } else {\\n                  alert(`\\n                    <h4>Source: ${sourceLine}</h4>\\n                    <p>\\n                    <strong>Message: ${result.message}</strong><br>\\n                    ErrorType: ${ex.name}<br>\\n                    Source Line: ${result.line}<br>\\n                    <b>Stack</b>:<br>\\n                      ${ex.stack.split('\\\\n').join('<br>')}\\n                    </p>\\n                  `);\\n                }\\n                break;\\n\\n              case \\\"SyntaxError\\\":\\n                  alert(`\\n                    <h4>스크립트 문장 오류</h4>\\n                    <p>\\n                    <strong>Message: ${ex.message}</strong><br>\\n                    ErrorType: ${ex.name}<br>\\n                    </p>\\n                  `);\\n                break;\\n\\n              default:\\n                  alert(`\\n                    <h4>정의되지않은 오류</h4>\\n                    <p>\\n                    <strong>Message: ${ex.message}</strong><br>\\n                    ErrorType: ${ex.name}<br>\\n                    </p>\\n                  `);\\n                break;\\n            }\\n          }\\n        }\\n      })\\n      .then(() => this.setSource(fileInfo.BODY))\\n      .then(()=>{\\n        this.formLoad(params);\\n        this.dispatchEvent(new CustomEvent(\\\"formLoad\\\", {\\n          \\\"detail\\\":{\\n            \\\"form\\\": this\\n          },\\n          \\\"bubbles\\\": true\\n        }));\\n\\n      })  \\n    );\\n  }\\n\\n  /**\\n   * @desc 지정한 파일URI에 대한 폼을 생성한다.\\n   * @param {String} - 파일URI\\n   * @param {Object} - 파라미터\\n   * @param {String} - 제목\\n   * @throw {JJBizException} - 파일정보 조회 오류\\n   * @example -\\n   */\\n  openUri(uri, params, title) {\\n    Jinja.driverApi\\n      .getUri(uri)\\n      .then(fileInfo => this.openFileInfo(fileInfo, params, title))\\n      .catch(ex => {\\n      throw new JJBizException(null, `${uri} 실행오류\\\\n${ex}`);\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 파일URI 폼의 존재여부를 반환한다.\\n   * @param {String} - 파일URI\\n   * @return {Boolean} - 존재여부\\n   * @example -\\n   */\\n  isUri(uri) {\\n    if (this.fileInfo.URI === uri) {\\n      this.focus();\\n\\n      return true;\\n    } else {\\n      return false;\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 파일 body정보의 엘리먼트를 폼에 바인딩한다.\\n   * @param {Object} - 파일 body정보\\n   * @example -\\n   */\\n  bindHtml(body) {\\n    this.formBodyEl.innerHTML = body.html;\\n    this._setElementId();\\n  }\\n\\n  /**\\n   * @desc 지정한 파일 body정보의 자바스크립트를 폼에 바인딩한다.\\n   * @param {Object} - 파일 body정보\\n   * @example -\\n   */\\n  bindScript(body) {\\n    try {\\n      let doScript = body.script;\\n\\n      if (workspaceMeta.options.appInfo.formDebuggerEmpty) {\\n        doScript = doScript.replaceAll('debug' + 'ger;', '  ');\\n      }\\n\\n      new Function('form', doScript)(this);\\n    } catch (ex) {\\n        \\n        let result ={\\n          \\\"message\\\": ex.message,\\n          \\\"inner\\\": ex\\n        };\\n        \\n        switch(ex.name){\\n          case \\\"TypeError\\\":\\n          case \\\"ReferenceError\\\":\\n            let regex = new RegExp(/<anonymous>:(\\\\d+):(\\\\d+)/);\\n            let match = ex.stack.match(regex);\\n            \\n          \\tresult.line= parseInt(match[1])-2;\\n          \\tresult.col= parseInt(match[2]);\\n\\n            let sourceLine = body.script.split('\\\\n')[result.line-1];\\n            if (sourceLine){\\n              sourceLine = sourceLine.trim();\\n              alert(`\\n                <h4>Source: ${sourceLine}</h4>\\n                <p>\\n                <strong>Message: ${result.message}</strong><br>\\n                ErrorType: ${ex.name}<br>\\n                Source Line: ${result.line}<br>\\n                </p>`);\\n            } else {\\n              alert(`\\n                <h4>Source: ${sourceLine}</h4>\\n                <p>\\n                <strong>Message: ${result.message}</strong><br>\\n                ErrorType: ${ex.name}<br>\\n                Source Line: ${result.line}<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t<b>Stack</b>:<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t${ex.stack.split('\\\\n').join('<br>')}\\n                </p>`);\\n            }\\n            break;\\n            \\n          case \\\"SyntaxError\\\":\\n              alert(`\\n\\t\\t\\t\\t\\t\\t\\t\\t<h4>스크립트 문장 오류</h4>\\n                <p>\\n                <strong>Message: ${ex.message}</strong><br>\\n                ErrorType: ${ex.name}<br>\\n                </p>`);\\n            break;\\n\\n          default:\\n              alert(`\\n\\t\\t\\t\\t\\t\\t\\t\\t<h4>정의되지않은 오류</h4>\\n                <p>\\n                <strong>Message: ${ex.message}</strong><br>\\n                ErrorType: ${ex.name}<br>\\n                </p>`);\\n            break;\\n        }\\n\\n        this.dispatchEvent(new CustomEvent(\\\"formError\\\", {\\n          \\\"detail\\\":result,\\n          \\\"bubbles\\\": true\\n        }));\\n    \\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 파일 body정보의 스타일를 폼에 바인딩한다.\\n   * @param {Object} - 파일 body정보\\n   * @example -\\n   */\\n  bindCss(body) {\\n    this.setAttribute('fileid', this.fileInfo.ID);\\n\\n    let styleEl = document.createElement('style');\\n\\n    styleEl.type = 'text/css';\\n    styleEl.setAttribute('rel', 'stylesheet');\\n\\n    this.appendChild(styleEl);\\n\\n    let lessCss = `[fileid=\\\"${this.fileInfo.ID}\\\"]{ ${Jinja.lessRuleset || ''} ${body.less || ''} }`;\\n\\n    less\\n      .render(lessCss)\\n      .then(output => styleEl.appendChild(document.createTextNode(output.css)))\\n      .catch(error => console.error(error));\\n  }\\n}\\n\\ncustomElements.define('jj-form', JJForm);\\n/* ==JJFormFull.640.class================ */\\n\\n/**\\n * @classdesc Full사이즈용 폼객체관리를 위한 클래스\\n */\\nclass JJFormFull extends JJForm {\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {}\\n\\n  /**\\n   * @static\\n   * @desc 지정한 파일URI 정보를 전체화면 폼으로 생성한다.\\n   * @param {String} - 파일URI\\n   * @param {Object} - 파라미터\\n   * @return {Element} - 폼 엘리먼트\\n   * @example -\\n   */\\n  static open(uri, params) {\\n    let formEl = document.createElement('jj-form-full');\\n\\n    formEl.classList.add('full');\\n\\n    Jinja.appendChild(formEl);\\n\\n    formEl.openUri(uri, params);\\n\\n    return formEl;\\n  }\\n\\n  /**\\n   * @static\\n   * @desc 지정한 파일URI 정보를 전체화면 폼으로 생성한다.\\n   * @param {String} - 파일URI\\n   * @param {Object} - 파라미터\\n   * @example -\\n   */\\n  static openAuth(uri, params) {\\n    if (Jinja.uo.USER_ID == 'GUEST') {\\n      JJFormModal.open(\\n        'auth.640.login.uc',\\n        {},\\n        {\\n          formClass: 'hidden-footer'\\n        }\\n      );\\n\\n      Jinja.event.add('jjAppStart', 'formfull.openAuth', e => {\\n        this.open(uri, params);\\n      });\\n    } else {\\n      this.open(uri, params);\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터를 반환하고 폼을 삭제한다.\\n   * @param {Object} - 데이터\\n   * @example -\\n   */\\n  modalClose(data) {\\n    this.dispatchEvent(\\n      new CustomEvent('formReturn', {\\n        detail: data\\n      })\\n    );\\n\\n    this.remove();\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터를 반환하고 모달창을 닫는다.\\n   * @param {Object} - 데이터\\n   * @return {Object} - 데이터\\n   * @example -\\n   */\\n  return(data) {\\n    return this.modalClose(data);\\n  }\\n}\\n\\ncustomElements.define('jj-form-full', JJFormFull);\\n/* ==JJFormInclude.640.class================ */\\n\\n/**\\n * @classdesc Include용 폼객체관리를 위한 클래스\\n */\\nclass JJFormInclude extends JJForm {\\n  \\n  init() {\\n    super.init();\\n    let uri = this.getAttribute(\\\"uri\\\");\\n    if(uri){\\n    \\tthis.openUri(uri);\\n    }\\n  }\\n\\n  /**\\n   * @desc 폼으로 삭제한다.\\n   * @example -\\n   */\\n  destroy() {\\n    super.destroy();\\n    this.$empty();\\n    this.remove();\\n  }\\n\\n  /**\\n   * @static\\n   * @desc 지정한 파일URI 정보를 Include 폼으로 생성한다.\\n   * @param {String} - 파일URI\\n   * @param {Object} - 파라미터\\n   * @return {Element} - 폼 엘리먼트\\n   * @example -\\n   */\\n  static open(uri, params) {\\n    let formEl = document.createElement('jj-form-include');\\n\\n    Jinja.appendChild(formEl);\\n\\n    formEl.openUri(uri, params);\\n\\n    return formEl;\\n  }\\n}\\n\\ncustomElements.define('jj-form-include', JJFormInclude);\\n/* ==JJFormLayer.640.class================ */\\n\\n/**\\n * @global\\n * @member {let} - 최종 레이어폼 순번\\n */\\nlet __lastLayerFormIndex__ = 101;\\n\\n/**\\n * @classdesc Layer용 폼객체관리를 위한 클래스\\n */\\nclass JJFormLayer extends JJForm {\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.addEventListener('focusin', e => {\\n      if (parseInt(this.style.zIndex || 1) < __lastLayerFormIndex__) {\\n        __lastLayerFormIndex__++;\\n\\n        this.style.zIndex = __lastLayerFormIndex__;\\n      }\\n    },\\n    {\\n      capture: true\\n    });\\n\\n    this._oResizer = new JJRresizable(this, {\\n      handles: 'n,e,s,w,ne,se,sw,nw'\\n    });\\n\\n    this._oMover = new JJMoveable(this, {\\n      handles: ['e', 'n', 's'],\\n      handleEl: '.header, .header *',\\n      cancelEl: '.left *, .right *, .jj-modal-ok, .jj-modal-cancel '\\n    });\\n\\n    this._oResizeObserver = new ResizeObserver(entries => {\\n      if (this._resizeTimeout) {\\n        clearTimeout(this._resizeTimeout);\\n\\n        this._resizeTimeout = null;\\n      }\\n\\n      this._resizeTimeout = setTimeout(e => {\\n        this.doResize();\\n\\n        clearTimeout(this._resizeTimeout);\\n\\n        this._resizeTimeout = null;\\n      }, this.options.resizeIntervalDuration);\\n    });\\n\\n    this._oResizeObserver.observe(this);\\n  }\\n\\n  /**\\n   * @static\\n   * @desc 지정한 파일URI 정보를 Include 폼으로 생성한다.\\n   * @param {String} - 파일URI\\n   * @param {Object} - 파라미터\\n   * @return {Element} - 폼 엘리먼트\\n   * @example -\\n   */\\n  static open(uri, params) {\\n    let formEl = document.createElement('jj-form-layer');\\n\\n    Jinja.appendChild(formEl);\\n\\n    formEl.openUri(uri, params);\\n\\n    return formEl;\\n  }\\n}\\n\\ncustomElements.define('jj-form-layer', JJFormLayer);\\n/* ==JJFormModal.640.class================ */\\n\\n/**\\n * @classdesc Modal용 폼객체관리를 위한 클래스\\n */\\nclass JJFormModal extends JJForm {\\n  /**\\n   * @desc 모달 폼을 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    this.classList.add('jj-form');\\n    this.classList.add('modal-content');\\n\\t\\t\\n    this.innerHTML =`\\n<header class=\\\"header modal-header\\\">\\n<h4 class=\\\"modal-title\\\">&nbsp</h4>\\n<button jj-command=\\\"remove\\\" type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">×</button>\\n</header>\\n<article class=\\\"modal-body\\\"></article>\\n<footer class=\\\"modal-footer\\\">\\n<label class=\\\"footer-title\\\"></label>\\n<div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"footer button\\\">\\n<button type=\\\"button\\\" class=\\\"btn btn-light waves-effect\\\" jj-command=\\\"remove\\\">Close</button>\\n<button type=\\\"button\\\" class=\\\"btn btn-primary waves-effect\\\" jj-command=\\\"modalOk\\\">OK</button>\\n</div>\\n</footer>\\n`;\\n\\n    this.formTitleEl = this.querySelector('.modal-title');\\n    this.formBodyEl = this.querySelector('article');\\n    this.formFootEl = this.querySelector('footer');\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.addEventListener('keydown', e => {\\n      let keyMap = Jinja.global.getEventKeyMap(e);\\n\\n      switch (keyMap) {\\n        case 'Enter':\\n          this.modalOk(e);\\n\\n          break;\\n        case 'Esc':\\n          this.remove();\\n\\n          break;\\n      }\\n    });\\n\\n    this._oResizer = new JJRresizable(this, {\\n      handles: 'n,e,s,w,ne,se,sw,nw'\\n    });\\n\\n    this._oMover = new JJMoveable(this, {\\n      handles: ['e', 'n', 's'],\\n      handleEl: '.header, .header *',\\n      cancelEl: '.left *, .right *, .jj-modal-ok, .jj-modal-cancel '\\n    });\\n\\n    this._oResizeObserver = new ResizeObserver(entries => {\\n      if (this._resizeTimeout) {\\n        clearTimeout(this._resizeTimeout);\\n\\n        this._resizeTimeout = null;\\n      }\\n\\n      this._resizeTimeout = setTimeout(e => {\\n        this.doResize();\\n\\n        clearTimeout(this._resizeTimeout);\\n\\n        this._resizeTimeout = null;\\n      }, this.options.resizeIntervalDuration);\\n    });\\n\\n    this._oResizeObserver.observe(this);\\n  }\\n\\n  /**\\n   * @desc 폼을 삭제한다.\\n   * @example -\\n   */\\n  _destroy() {\\n    super._destroy();\\n\\n    this.wrapEl.remove();\\n  }\\n\\n  /**\\n   * @desc 옵션을 설정한다.\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  setOptions(options) {\\n    super.setOptions(options);\\n  }\\n\\n  /**\\n   * @desc 지정한 파일정보에 대한 모달 폼을 생성한다.\\n   * @param {Object} - 파일정보\\n   * @param {Ojbect} - 파라미터\\n   * @param {String} - 제목\\n   * @return {Promise} - 생성결과\\n   * @example -\\n   */\\n  openFileInfo(fileInfo, params, title) {\\n    return super.openFileInfo(fileInfo, params, title).then(result => {\\n      const compStyle = window.getComputedStyle(this);\\n\\n      if (compStyle.width) {\\n        this.style.width = this.offsetWidth;\\n      } else {\\n        this.style.width = this.parentElement.offsetWidth * 0.8 + 'px';\\n      }\\n\\n      this.style.left = (this.parentElement.offsetWidth - this.offsetWidth) / 2 + 'px';\\n\\n      if (compStyle.height) {\\n        this.style.height = this.offsetHeight;\\n      } else {\\n        this.style.height = this.parentElement.offsetHeight * 0.6 + 'px';\\n      }\\n\\n      this.style.top = this.parentElement.offsetHeight * 0.1 + 'px';\\n      this.style.visibility = 'visible';\\n\\n      return result;\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 파일URI 정보를 모달 폼으로 생성한다.\\n   * @param {String} - 파일URI\\n   * @param {Object} - 파라미터\\n   * @param {Obejct} - 옵션\\n   * @return {Promise} - 생성결과\\n   * @example -\\n   */\\n  static open(uri, params, options) {\\n    return new Promise((resolve, reject) => {\\n      Jinja.driverApi.getUri(uri).then(fileInfo => {\\n        let modalWrapEl = document.createElement('div');\\n\\n        modalWrapEl.classList.add('modal-wrap');\\n\\n        Jinja.appendChild(modalWrapEl);\\n\\n        let formEl = document.createElement('jj-form-modal');\\n\\n        formEl.wrapEl = modalWrapEl;\\n\\n        modalWrapEl.appendChild(formEl);\\n\\n        if (options) {\\n          formEl.setOptions(options);\\n          formEl.openFileInfo(fileInfo, params, options.title);\\n        } else {\\n          formEl.openFileInfo(fileInfo, params);\\n        }\\n\\n        formEl.addEventListener('formReturn', e => {\\n          resolve(e.detail);\\n\\n          formEl.remove();\\n        });\\n        \\n      })\\n        .catch(ex => {\\n\\t        throw new JJBizException(null, `${uri}: 파일정보가 없습니다\\\\n${ex}`);\\n      \\t});\\n    });\\n  }\\n\\n  static openInfo(uri, params, options) {\\n    options = options || {};\\n    options.formClass = \\\"modal-info\\\";\\n    return JJFormModal.open(uri, params, options);\\n  }\\n  \\n  /**\\n   * @desc 지정한 데이터를 반환하는 이벤트를 생성한다.\\n   * @param {Object} - 데이터\\n   * @example -\\n   */\\n  return(data) {\\n    this.dispatchEvent(\\n      new CustomEvent('formReturn', {\\n        detail: data\\n      })\\n    );\\n  }\\n\\n  /**\\n   * @desc true 반환하는 이벤트를 생성한다.\\n   * @example -\\n   */\\n  modalOk() {\\n    this.return(true);\\n  }\\n}\\n\\ncustomElements.define('jj-form-modal', JJFormModal);\\n/* ==JJTheme.640.class================ */\\n\\n/**\\n * @classdesc 테마관리를 위한 클래스\\n */\\nclass JJTheme extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 옵션\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      themeMdiUri:\\n        workspaceMeta.options.themeMdiUri ||\\n        (workspaceMeta.options.appInfo ? workspaceMeta.options.appInfo.themeMdiUri : null),\\n      startUri:\\n        workspaceMeta.options.startUri ||\\n        (workspaceMeta.options.appInfo ? workspaceMeta.options.appInfo.startUri : null),\\n      homeIsEmpty: false,\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    return Jinja.driverApi\\n      .getUri(this.options.themeMdiUri)\\n      .then(fileInfo => {\\n        let body = fileInfo.BODY;\\n\\n        this.setAttribute('tabindex', -1);\\n        this.setAttribute('jj-uuid', body.uuid);\\n\\n        this.innerHTML = body.html;\\n\\n        this._setElementId();\\n\\n        let styleEl = document.createElement('style');\\n\\n        styleEl.type = 'text/css';\\n        styleEl.setAttribute('rel', 'stylesheet');\\n\\n        this.appendChild(styleEl);\\n\\n        less\\n          .render(` ${Jinja.lessRuleset || ''} ${body.less || ''} `)\\n          .then(output =>\\n            styleEl.appendChild(document.createTextNode(output.css))\\n          )\\n          .catch(error => console.error(error));\\n\\n        new Function('form', body.script)(this);\\n\\n        this.mdiContainer = this.querySelector('.mdi-container') || this.mdiContainer;\\n        this.mdiTabs = this.querySelector('.mdi-tabs ul') || this.mdiTabs;\\n\\n        if (this.mdiTabs) this.mdiTabs.$empty();\\n\\n        this.formLoad();\\n\\n        if (this.options.startUri) {\\n          this.openUri(this.options.startUri);\\n        }\\n\\n        return fileInfo;\\n      })\\n      .catch(ex => {\\n        throw new JJBizException(null, `${this.options.themeMdiUri} 테마폼 실행오류\\\\n${ex}`);\\n      });\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.addEventListener('click', e => {\\n      if (this.mdiTabs && e.target.matches('.mdi-tabs .nav-link .fa-remove')) {\\n        e.preventDefault();\\n        e.stopPropagation();\\n\\n        this._removeUriForm(e.target.parentElement.dataset.uri);\\n\\n        e.target.parentElement.parentElement.remove();\\n\\n        let fistTab = this.mdiTabs.querySelector('.nav-link');\\n\\n        if (fistTab) {\\n          fistTab.click();\\n        } \\n        else {\\n          let path;\\n          let appsPath = document.location.pathname.split('/');\\n          if (appsPath[1] == 'apps') {\\n            path = document.location.origin + '/apps/' + document.location.pathname.split('/')[2];\\n          } else {\\n            path = document.location.origin\\n          }\\n          history.pushState({ path }, null, path);\\n        }\\n      }\\n\\n      if (this.mdiTabs && e.target.matches('.mdi-tabs .close-all-tab')){\\n        e.preventDefault();  \\n        e.stopPropagation();\\n        this._removeAllForm();\\n      }      \\n    \\n    });\\n  }\\n\\n  /**\\n   * @desc 전체탭을 닫습니다\\n   * @example -\\n   */\\n  _removeAllForm(){\\n    Jinja.confirm.info(\\\"전체 탭을 닫으시겠습니까?\\\")\\n      .then(e=>{\\n      if(this.mdiTabs) this.mdiTabs.$empty();\\n      this.mdiContainer.querySelectorAll(`jj-form`).forEach(form=>{\\n        form.destroy();\\n      })\\n      let path;\\n      let appsPath = document.location.pathname.split('/');\\n      if (appsPath[1] == 'apps') {\\n        path = document.location.origin + '/apps/' + document.location.pathname.split('/')[2];\\n      } else {\\n        path = document.location.origin\\n      }\\n      history.pushState({ path }, null, path);        \\n    })\\n    .catch(e=>{})\\n  }\\n  \\n  /**\\n   * @desc 지정한 파일URI 폼을 삭제한다.\\n   * @param {String} - 파일URI\\n   * @example -\\n   */\\n  _removeUriForm(uri) {\\n    if (!uri) return;\\n\\n    this.mdiContainer.querySelectorAll(`jj-form`).forEach(form => {\\n      if (form.isUri(uri)) {\\n        form.destroy();\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @static\\n   * @memberof JJForm\\n   * @method get observedAttributes\\n   * @desc 모니터링 할 속성 목록을 반환한다.\\n   * @return {Array} - 모니터링 할 속성 목록\\n   * @example -\\n   */\\n  static get observedAttributes() {\\n    return [];\\n  }\\n\\n  /**\\n   * @desc 폼시작시 실행한다.\\n   * @param {Object} - 파라미터\\n   * @example -\\n   */\\n  formLoad(params) {}\\n\\n  /**\\n   * @desc 현재 테마의 홈상태로 변경한다.\\n   * @example -\\n   */\\n  openHome() {\\n    this.isOpenHome = true;\\n\\n    if (this.options.homeIsEmpty) {\\n      this.mdiContainer.querySelectorAll(`jj-form`).forEach(form => form.remove());\\n    } else {\\n     // location.href = '/';\\n    }\\n\\n    this.isOpenHome = false;\\n  }\\n\\n  /**\\n   * @desc 지정한 파일정보에 대한 폼을 생성한다.\\n   * @param {Object} - 파일정보\\n   * @param {String} - 제목\\n   * @return {Element} - 폼 엘리먼트\\n   * @example -\\n   */\\n  openFileInfo(fileInfo, title) {\\n    let formEl;\\n\\n    this.mdiContainer.querySelectorAll(`jj-form`).forEach(form => {\\n      if (form.isUri(fileInfo.URI)) {\\n        form.style.visibility = 'visible';\\n\\n        formEl = form;\\n\\n        return;\\n      } else {\\n        form.style.visibility = 'hidden';\\n      }\\n    });\\n\\n    if (formEl) {\\n      if (this.mdiTabs) {\\n        this.mdiTabs.querySelectorAll('.nav-link.active').forEach(link => link.classList.remove('active'));\\n\\n        let tab = this.mdiTabs.querySelector(`.nav-link[data-uri=\\\"${fileInfo.URI}\\\"]`);\\n\\n        if (tab) {\\n          tab.classList.add('active');\\n\\n          if (tab.parentElement.offsetLeft > this.mdiTabs.offsetLeft + this.mdiTabs.offsetWidth) {\\n            this.mdiTabs.prepend(tab.parentElement);\\n          }\\n        }\\n      }\\n    } else {\\n      formEl = document.createElement('jj-form');\\n\\n      this.mdiContainer.appendChild(formEl);\\n\\n      formEl.openFileInfo(fileInfo, null, title);\\n\\n      if (this.mdiTabs && title) {\\n        let tabLi = document.createElement('li');\\n        let liA = document.createElement('a');\\n\\n        liA.setAttribute('class', 'nav-link');\\n        liA.setAttribute('aria-expanded', 'true');\\n\\n        let span = document.createElement('span');\\n\\n        span.appendChild(document.createTextNode(title));\\n\\n        let icon = document.createElement('i');\\n\\n        icon.setAttribute('class', 'fa fa-remove');\\n\\n        tabLi.appendChild(liA);\\n\\n        liA.appendChild(span);\\n        liA.appendChild(icon);\\n\\n        let appsPath = document.location.pathname.split('/');\\n        let path ;\\n        if (appsPath[1] == 'apps') {\\n          path = '/apps/' + appsPath[2] + fileInfo.DEPTH_NAME;\\n\\n          liA.setAttribute('href', path);\\n          liA.setAttribute('data-uri', fileInfo.URI);\\n          liA.setAttribute('data-file-id', fileInfo.ID);\\n        } \\n        else {\\n          path = fileInfo.DEPTH_NAME;\\n\\n          liA.setAttribute('href', path);\\n          liA.setAttribute('data-uri', fileInfo.URI);\\n          liA.setAttribute('data-file-id', fileInfo.ID);\\n          \\n        }\\n\\n        this.mdiTabs.prepend(tabLi);\\n\\n        liA.click();\\n      }\\n\\n      return formEl;\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 파일URI 정보에 대한 폼을 생성한다.\\n   * @param {String} - 파일URI\\n   * @example -\\n   */\\n  openUri(uri) {\\n    Jinja.driverApi.getUri(uri).then(fileInfo => this.openFileInfo(fileInfo));\\n  }\\n  \\n  getActiveTab(){\\n    let result ={};\\n    let tabEl = Jinja.theme.mdiTabs.querySelector(`.nav-link.active`);\\n    if(tabEl){\\n      result.data = tabEl.dataset;\\n      result.el = tabEl;\\n      result.uri = tabEl.dataset.uri;\\n      result.fileId = tabEl.dataset.fileId;\\n      result.path = tabEl.getAttribute('href');\\n    } else {\\n      result = null;\\n    }\\n    return result;\\n  }\\n  static doTheme(uri, path) {\\n    // 테마시작 위치를 경로줄에 표시함\\n    if(path)\\thistory.pushState({path}, null, path);\\n    \\n    if(Jinja.querySelector('jj-theme')){\\n      Jinja.querySelector('jj-theme').remove();\\n    }\\n    workspaceMeta.options.appInfo.themeMdiUri = uri;\\n    Jinja.theme = document.createElement('jj-theme');\\n    Jinja.appendChild(Jinja.theme);\\n\\n  }\\n  \\n}\\n\\ncustomElements.define('jj-theme', JJTheme);\\n\\n/**\\n * 테마를 실행하는 영역\\n * 시험환경에서는 실행되지 않음\\n */\\nif (!Jinja.hasAttribute('testable')) {\\n  Jinja.event.add('jjAppStart', 'theme.start', e => {\\n    \\n    // myapp 서비스 만들때\\n    // Guest로그인에서 테마가 생성되고\\n    // 사용자가 로그인하면 테마가 다시 실행되어\\n    // 이중으로 화면에 남는 문제가 있어서\\n    // 기존의 테마화면을 지우고 새로 생성하게함\\n    \\n    if(Jinja.querySelector('jj-theme')){\\n      Jinja.querySelector('jj-theme').remove();\\n    }\\n    \\n    Jinja.theme = document.createElement('jj-theme');\\n    Jinja.appendChild(Jinja.theme);\\n  });\\n\\n \\n  Jinja.event.add('jjUserStart', 'theme.start', e => {\\n\\t\\t// 사용자가 시작할때 사용자의 권한을 기반으로 테마의 역할설정함\\n\\t\\t// 역할종류 : READER, WRITER, DEVELOPER\\t\\t    \\n\\t\\tif(Jinja.uo.USER_ID != \\\"GUEST\\\") {\\n      Jinja.ajax.excute(`getWorkspaceOwnerRole.sql`)\\n      .then(result=>{\\n        if(result.rows[0]){\\n          workspaceMeta.role = result.rows[0];\\n          Jinja.setAttribute(\\\"user-role\\\", workspaceMeta.role.ROLE);  \\n        } \\n        else {\\n          Jinja.ajax.excute(`getWorkspaceUserRole.sql`)\\n          .then(result=>{\\n            if(result.rows[0]){\\n              workspaceMeta.role = result.rows[0];\\n              Jinja.setAttribute(\\\"user-role\\\", workspaceMeta.role.ROLE);  \\n            } else {\\n              // 사용자의 역할정보를 찾을수 없을때 이벤트를 발생한다.\\n              Jinja.event.dispatch(\\\"jjUserWorkspaceRoleExist\\\", \\\"theme.start\\\");\\n            }\\n          })\\n        }\\n      })\\n      \\n    }   \\n  });\\n  \\n}\\n\\n\\n/* ==JJStudioForm.640.class================ */\\n\\n/**\\n * @classdesc 런처의 studio타입 폼객체관리를 위한 클래스\\n */\\nclass JJStudioForm extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 옵션\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      useResizeObserver: true,\\n      resizeIntervalDuration: 100,\\n      animation: '',\\n      isEnterClose: false,\\n      isCloseDestroy: false,\\n      position: {},\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 스튜디오폼을 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    this.classList.add('jj-form');\\n    this.innerHTML =\\n      `<header class=\\\"header\\\">` +\\n      `<h4 class=\\\"page-title\\\">&nbsp</h4>` +\\n      `</header>` +\\n      `<article></article>` +\\n      `<footer></footer>`;\\n\\n    this.formTitleEl = this.querySelector('.page-title');\\n    this.formBodyEl = this.querySelector('article');\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n//    codeeditor의 검색에서 적용됨으로 이를 막음    \\n//     this.addEventListener('input', e => {\\n//       this.dispatchEvent(\\n//         new CustomEvent('changeedit', {\\n//           detail: {\\n//             mode: \\\"input\\\",\\n//             el: e.target\\n//           },\\n//           bubbles: true\\n//         })\\n//       );\\n//     });\\n    \\n    this.addEventListener('changeedit', e => {\\n      this.classList.add('edited');\\n      this.fileInfo.BODY = this.getSource();\\n\\n      // 이미지 폴더는 Body가 없음\\n      if(!this.fileInfo.BODY) return;\\n\\n      if (typeof this.fileInfo.BODY == 'string') {\\n        this.dispatchEvent(\\n          new CustomEvent('fileChanged', {\\n            detail: {\\n              fileInfo: this.fileInfo,\\n              form: this\\n            },\\n            bubbles: true\\n          })\\n        );\\n      } else {\\n        return this.fileInfo.BODY.then(body =>{\\n          this.fileInfo.BODY = body;\\n          this.dispatchEvent(\\n            new CustomEvent('fileChanged', {\\n              detail: {\\n                fileInfo: this.fileInfo,\\n                form: this\\n              },\\n              bubbles: true\\n            })\\n          );\\n\\n        });\\n      }\\n    });\\n\\n    this.addEventListener('keydown', e => {\\n      let keyMap = Jinja.global.getEventKeyMap(e);\\n\\n      switch (keyMap) {\\n        case 'Ctrl-S':\\n          e.preventDefault();\\n          e.stopPropagation();\\n\\n          this.save();\\n\\n          break;\\n        case 'Ctrl-Enter':\\n          this.excute();\\n\\n          break;\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 스튜디오폼을 삭제한다.\\n   * @example -\\n   */\\n  _destroy() {\\n    super._destroy();\\n\\n    if (this._oResizeObserver) this._oResizeObserver.disconnect();\\n    if (this._oMover) this._oMover.destroy();\\n    if (this._oResizer) this._oResizer.destroy();\\n    if (this._resizeTimeout) clearTimeout(this._resizeTimeout);\\n\\n    this._resizeTimeout = null;\\n    this._oResizeObserver = null;\\n\\n    if (this.wrapEl) {\\n      this.wrapEl.remove();\\n    }\\n  }\\n\\n  /**\\n   * @desc 파일 body정보를 수정한다.\\n   * @param {Object} - 파일 body정보\\n   * @return {Promiss} - 수정결과\\n   * @example -\\n   */\\n  _updateFile(body) {\\n    this.fileInfo.BODY = body;\\n\\n    return Jinja.driverApi.updateFileBody(this.fileInfo.ID, this.fileInfo.BODY, this.fileInfo.VERSION) \\n      .then(data => {\\n        this.fileInfo.VERSION = parseInt(this.fileInfo.VERSION) + 1;\\n        this.classList.remove('edited');\\n\\n        this.dispatchEvent(\\n          new CustomEvent('fileUpdated', {\\n            detail: {\\n              fileInfo: this.fileInfo,\\n              form: this\\n            },\\n            bubbles: true\\n          })\\n        );\\n\\n        $topMessage('저장되었습니다.');\\n\\n        return this.fileInfo;\\n      })\\n        .catch(ex => {\\n        alert(`잠김이나 버전문제로 저장이 불가능합니다.\\\\n${ex}`);\\n      });\\n    }\\n\\n    /**\\n   * @desc 파일 body정보를 새이름으로 저장한다.\\n   * @param {Object} - 파일 body정보\\n   * @return {Promiss} - 수정결과\\n   * @example -\\n   */\\n    _saveAsFile(body) {\\n      let newId = Jinja.global.uuid();\\n      let newfileInfo = {\\n        \\\"PARENT_ID\\\": this.fileInfo[\\\"PARENT_ID\\\"],\\n        \\\"ID\\\": newId,\\n        \\\"TYPE\\\": this.fileInfo[\\\"TYPE\\\"],\\n        \\\"NAME\\\": this.fileInfo[\\\"NAME\\\"] +'_New',\\n        \\\"URI\\\": newId,\\n        \\\"BODY\\\": body,\\n        \\\"ICON\\\":\\\"\\\",\\n        \\\"DESCRIPTION\\\":\\\"\\\",\\n        \\\"TEMPLITE\\\":\\\"\\\",\\n        \\\"LOCKER\\\": Jinja.uo.USER_ID,\\n        \\\"VERSION\\\":1\\n      };\\n\\n      return Jinja.driverApi.createFile(newfileInfo).then(data => {\\n        this.classList.remove('edited');\\n        this.fileInfo = newfileInfo;\\n\\n        $topMessage('다른이름으로 저장되었습니다.');\\n        new CustomEvent('fileUpdated', {\\n          detail: {\\n            fileInfo: this.fileInfo,\\n            form: this\\n          },\\n          bubbles: true\\n        })\\n\\n\\n        //       if (data && newfileInfo.TYPE != 'file') {\\n        //         Jinja.event.dispatch('studio.newFile', 'studioV6Api.createFile', {\\n        //           detail: newfileInfo\\n        //         });\\n        //       }\\n\\n        return this.fileInfo;\\n      });\\n    }\\n    /**\\n   * @desc 모니터링 할 속성 목록을 반환한다.\\n   * @return {Object} - 모니터링 할 속성 목록\\n   * @example -\\n   */\\n    static get observedAttributes() {\\n      return ['moveable', 'resizable'];\\n    }\\n\\n    /**\\n   * @desc 폼을 로드한다.\\n   * @param {Object} - 파라미터\\n   * @example -\\n   */\\n    formLoad(params) {}\\n\\n    /**\\n   * @desc 지정한 파일 body정보를 소스에 반영한다.\\n   * @param {Object} - 파일 body정보\\n   * @example -\\n   */\\n    setSource(body) {}\\n\\n    /**\\n   * @desc 스튜디오를 실행한다.\\n   * @example -\\n   */\\n    excute() {}\\n\\n    /**\\n   * @desc 스튜디오를 변경사항을 반영한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n    change(event) {}\\n\\n    /**\\n   * @desc 지정한 파일아이디로 파일정보에 대한 폼을 생성한다.\\n   * @param {String} - 파일아이디\\n   * @param {String} - 제목\\n   * @example -\\n   */\\n    openId(fileId, title) {\\n      Jinja.driverApi.readFile(fileId).then(fileInfo => this.openFileInfo(fileInfo));\\n    }\\n\\n    /**\\n   * @desc 지정한 파일정보에 대한 폼을 생성한다.\\n   * @param {Object} - 파일정보\\n   * @param {String} - 제목\\n   * @return {Promiss} - 생성결과\\n   * @example -\\n   */\\n    openFileInfo(fileInfo, title) {\\n      this.fileInfo = fileInfo;\\n      this.formTitleEl.innerText = title || fileInfo.NAME;\\n\\n      const launcherUri = Jinja.launcher.getStudioUri(fileInfo.TYPE);\\n\\n      return Jinja.driverApi\\n        .getUri(launcherUri)\\n        .then(launcherInfo => {\\n        if (launcherInfo.BODY.less && !Jinja.querySelector(`style[launcher=\\\"${launcherUri}\\\"]`)) {\\n          let styleEl = document.createElement('style');\\n\\n          styleEl.type = 'text/css';\\n          styleEl.setAttribute('rel', 'stylesheet');\\n          styleEl.setAttribute('launcher', launcherUri);\\n\\n          Jinja.appendChild(styleEl);\\n\\n          let lessCss = `[launcher=\\\"${launcherUri}\\\"]{ ${Jinja.lessRuleset || ''} ${launcherInfo.BODY.less || ''} }`;\\n\\n          less\\n            .render(lessCss)\\n            .then(output =>\\n                  styleEl.appendChild(document.createTextNode(output.css))\\n                 )\\n            .catch(error => console.error(error));\\n        }\\n\\n        this.setAttribute('launcher', launcherUri);\\n        this.formBodyEl.innerHTML = launcherInfo.BODY.html;\\n        this._setElementId();\\n\\n        if (launcherInfo.BODY.script) {\\n          try {\\n            new Function('form', launcherInfo.BODY.script)(this);\\n          } catch (ex) {\\n            console.error(ex);\\n          }\\n        }\\n      })\\n        .then(() => this.setSource(this.fileInfo.BODY));\\n    }\\n\\n    /**\\n   * @desc 폼에서 소스를 추출하여 파일 컨텐츠를 수정한다.\\n   * @return {Promiss} - 수정결과\\n   * @example -\\n   */\\n    save(saveType) {\\n      let body = this.getSource();\\n\\n      switch(saveType){\\n        case \\\"saveAs\\\": \\n          if (typeof body == 'string') {\\n            return this._saveAsFile(body);\\n          } else {\\n            return body.then(body => this._saveAsFile(body)).catch(ex => console.error(ex));\\n          }\\n          break\\n\\n\\n        default:\\n          if (typeof body == 'string') {\\n            return this._updateFile(body);\\n          } else {\\n            return body.then(body => this._updateFile(body)).catch(ex => console.error(ex));\\n          }\\n\\n      }\\n\\n    }\\n\\n    /**\\n   * @desc 지정한 파일URI 폼의 존재여부를 반환한다.\\n   * @param {String} - 파일URI\\n   * @return {Boolean} - 존재여부\\n   * @example -\\n   */\\n    isUri(uri) {\\n      if (this.options.uri === uri) {\\n        this.focus();\\n\\n        return true;\\n      } else {\\n        return false;\\n      }\\n    }\\n\\n    /**\\n   * @desc 해당폼의 로컬스토리지에 저장된 데이터를 삭제한다.\\n   * @example -\\n   */\\n    cachClear() {\\n      Jinja.store.localStorageClear('Studio.Cache.' + this.fileInfo.ID);\\n    }\\n  }\\n\\n  customElements.define('jj-studio-form', JJStudioForm);\\n/* ==JJStudioMDI.640.class================ */\\n\\n/**\\n * @classdesc 스튜디오의 MDI 탭관리를 위한 클래스\\n */\\nclass JJStudioMdiTab extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 옵션\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    this.innerHTML =\\n      `<div class='jj-inline'>` +\\n      `<div class=\\\"formtab\\\"></div>` +\\n      `</div>` +\\n      `<div class=\\\"formset\\\">` +\\n      `</div>`;\\n\\n    this.formtab = this.querySelector('.formtab');\\n    this.formset = this.querySelector('.formset');\\n\\n    this.addLocalFile();\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.addEventListener('click', e => {\\n      let tab;\\n\\n      if (e.target.matches('.tab-item >t ')) {\\n        tab = e.target.parentElement;\\n\\n        this._unActive();\\n        this._activeTab(tab);\\n      } else if (e.target.matches('.tab-item >i')) {\\n        this._closeTab(e.target.parentElement);\\n      }\\n    });\\n\\n    this.addEventListener('contextmenu', e => {\\n      if (e.target.matches(`.tab-item t`)) {\\n        e.preventDefault();\\n\\n        Jinja.context.render(this, e, [\\n          { command: 'close', label: '닫기', icon: 'fa-copy' },\\n          { command: 'closeAll', label: '전부닫기' },\\n          { label: 'divider' },\\n          { command: 'save', label: '저장', icon: 'fa-paste' },\\n          { command: 'saveAll', label: '전부저장', icon: 'fa-paste' },\\n          { label: 'divider' },\\n          { command: 'infoFile', label: '파일정보', icon: 'fa-address-card' },\\n          { command: 'activeTree', label: '폴더이동', icon: 'fa-motorcycle' }\\n        ]);\\n      }\\n    });\\n\\n    this.addEventListener('jjContextMenuclick', e => {\\n      e.preventDefault();\\n\\n      let contextMenu = e.detail.menu;\\n      let tab = e.detail.context.target.parentElement;\\n\\n      switch (contextMenu) {\\n        case 'close':\\n          this._closeTab(tab);\\n\\n          break;\\n        case 'closeAll':\\n          this._closeAll();\\n\\n          break;\\n        case 'save':\\n          tab.linkForm.save();\\n\\n          break;\\n\\n        case 'infoFile':\\n          this._infoFile(tab);\\n\\n          break;\\n\\n        case 'activeTree':\\n          this._activeTree(tab);\\n\\n          break;\\n        default:\\n          alert(contextMenu + '가 선택되었습니다.');\\n\\n          break;\\n      }\\n    });\\n\\n    this.addEventListener('fileChanged', e => {\\n      let form = e.detail.form;\\n      let fileInfo = e.detail.fileInfo;\\n\\n      form.linkTab.classList.add('edited');\\n\\n      Jinja.store.localStorage(\\n        'Studio.Cache.' + fileInfo.ID,\\n        Jinja.global.string(fileInfo)\\n      );\\n\\n      this.dispatchEvent(\\n        new CustomEvent('activedTab', {\\n          detail: {\\n            tab: form.linkTab,\\n            form: form\\n          },\\n          bubbles: true\\n        })\\n      );\\n    });\\n\\n    this.addEventListener('fileUpdated', e => {\\n      let form = e.detail.form;\\n      let fileInfo = e.detail.fileInfo;\\n\\n      form.linkTab.classList.remove('edited');\\n\\n      Jinja.store.localStorageClear('Studio.Cache.' + fileInfo.ID);\\n\\n      this.dispatchEvent(\\n        new CustomEvent('activedTab', {\\n          detail: {\\n            tab: form.linkTab,\\n            form: form\\n          },\\n          bubbles: true\\n        })\\n      );\\n    });\\n\\n    Jinja.event.add(\\n      'studio.updateFileInfo',\\n      'JJMdiTab._setEvent.updateFileInfo',\\n      e => {\\n        let tab = this.findTab(e.detail.ID);\\n\\n        if (tab) {\\n          tab.querySelector('t').innerText = e.detail.NAME;\\n        }\\n      }\\n    );\\n\\n    this.oSort = new JJSortable(this.formtab, {\\n      handle: 'i.movebar',\\n      cancel: 'i.fa-remove'\\n    });\\n  }\\n\\n  /**\\n   * @desc 파일정보를 표시한다.\\n   * @param {Element} - 탭 엘리먼트\\n   * @example -\\n   */\\n  _infoFile(tab) {\\n    let fileId = tab.getAttribute('key');\\n\\n    Jinja.driverApi.readFile(fileId)\\n      .then(fileInfo => Jinja.driverApi.formInfoFile(fileInfo))\\n      .then(fileInfo => {\\n\\n      Jinja.event.dispatch(\\n        'studio.updateFileInfo',\\n        'studioV6Api.updateFileInfo',\\n        {\\n          detail: fileInfo\\n        }\\n      );\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 트리를 활성화 한다.\\n   * @param {Element} - 탭 엘리먼트\\n   * @example -\\n   */\\n  _activeTree(tab) {\\n    Jinja.event.dispatch('studio.activeTree', 'JJstudioMDI.setEvent', {\\n      detail: {\\n        fileId: tab.getAttribute('key'),\\n        tab: tab,\\n        form: tab.linkForm\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 탭을 활성화 한다.\\n   * @param {Element} - 탭 엘리먼트\\n   * @example -\\n   */\\n  _activeTab(tab) {\\n    if (tab && !tab.matches('.active')) {\\n      this._unActive();\\n\\n      tab.classList.add('active');\\n      tab.linkForm.classList.add('active');\\n\\n      this.dispatchEvent(\\n        new CustomEvent('activedTab', {\\n          detail: {\\n            tab: tab,\\n            form: tab.linkForm\\n          },\\n          bubbles: true\\n        })\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 탭을 비활성화 한다.\\n   * @example -\\n   */\\n  _unActive() {\\n    let activeTab = this.formtab.querySelector('.tab-item.active');\\n\\n    if (activeTab) {\\n      activeTab.classList.remove('active');\\n      activeTab.linkForm.classList.remove('active');\\n    }\\n  }\\n\\n  /**\\n   * @desc 수정되지 않은 탭을 일괄로 닫는다.\\n   * @param {Element} - 탭 엘리먼트\\n   * @example -\\n   */\\n  _closeAll(tab) {\\n    this.formtab.querySelectorAll('.tab-item').forEach(tab => {\\n      if (!tab.matches('.edited')) {\\n        this._closeTab(tab);\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 탭을 닫는다.\\n   * @param {Element} - 탭 엘리먼트\\n   * @param {Boolean} - 승인여부\\n   * @example -\\n   */\\n  _closeTab(tab, confirm) {\\n    let nextTab;\\n\\n    if (tab.matches('.active')) {\\n      nextTab = tab.nextElementSibling || tab.previousElementSibling;\\n    }\\n\\n    if (confirm || !tab.matches('.edited')) {\\n      tab.linkForm.remove();\\n      tab.remove();\\n\\n      if (nextTab) {\\n        this._activeTab(nextTab);\\n      }\\n\\n      return;\\n    }\\n\\n    if (tab.matches('.edited')) {\\n      Jinja.confirm\\n        .saveYesNo('변경된 내용을 저장하시겠습니까?')\\n        .then(chooice =>\\n              chooice == 'YES' ? tab.linkForm.save() : tab.linkForm.cachClear()\\n             )\\n        .then(() => this._closeTab(tab, true));\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 파일정보로 새로운 탭을 생성한다.\\n   * @param {Object} - 파일정보\\n   * @param {String} - 제목\\n   * @param {Boolean} - 로컬여부\\n   * @example -\\n   */\\n  _addFile(fileInfo, title, local) {\\n    let typeIcon = Jinja.launcher.getLauncherIcon(fileInfo.TYPE);\\n\\n    this._unActive();\\n\\n    let newform = document.createElement('jj-studio-form');\\n\\n    newform.setAttribute('class', 'active');\\n\\n    this.formset.appendChild(newform);\\n\\n    newform.openFileInfo(fileInfo, title);\\n\\n    let newtab = document.createElement('div');\\n\\n    newtab.innerHTML = `<i class=\\\"movebar fa ${typeIcon}\\\"></i><t>${title}</t> <i class=\\\"fa fa-remove\\\"></i>`;\\n\\n    newtab.setAttribute('class', 'tab-item active');\\n    newtab.setAttribute('key', fileInfo.ID);\\n\\n    if (local) newtab.classList.add('edited');\\n\\n    this.formtab.prepend(newtab);\\n\\n    newtab.linkForm = newform;\\n    newform.linkTab = newtab;\\n  }\\n\\n  /**\\n   * @static\\n   * @memberof JJForm\\n   * @method get observedAttributes\\n   * @desc 모니터링 할 속성 목록을 반환한다.\\n   * @return {Array} - 모니터링 할 속성 목록\\n   * @example -\\n   */\\n  static get observedAttributes() {\\n    return [];\\n  }\\n\\n  /**\\n   * @desc 지정한 파일 아이디에 대한 탭을 생성하거나 활성화 한다.\\n   * @param {String} - 파일아이디\\n   * @param {String} - 제목\\n   * @example -\\n   */\\n  addFile(fileId, title) {\\n    let activeTab = this.findTab(fileId);\\n\\n    if (activeTab) {\\n      this._activeTab(activeTab);\\n\\n      return;\\n    } else {\\n      let fileInfo = Jinja.store.localStorage('Studio.Cache.' + fileId);\\n\\n      if (fileInfo) {\\n        Jinja.confirm\\n          .update('작업중인 파일을 계속사용합니까?')\\n          .then(() => this._addFile(Jinja.global.json(fileInfo), title, true))\\n          .catch(() => {\\n          Jinja.store.localStorageClear('Studio.Cache.' + fileInfo.ID);\\n          Jinja.driverApi\\n            .readFile(fileId)\\n            .then(fileInfo => this._addFile(fileInfo, title));\\n        });\\n      } else {\\n        Jinja.driverApi\\n          .readFile(fileId)\\n          .then(fileInfo => this._addFile(fileInfo, title));\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 로컬스토리지에 저장된 파일정보로 새로운 탭을 생성한다.\\n   * @example -\\n   */\\n  addLocalFile() {\\n    let delayTime = 0;\\n\\n    Object.keys(localStorage).forEach(key => {\\n      if (key.startsWith('Studio.Cache.')) {\\n        let fileInfo = Jinja.store.localStorage(key);\\n\\n        if (fileInfo) {\\n          fileInfo = Jinja.global.json(fileInfo);\\n\\n          window.setTimeout(() => {\\n            this._addFile(fileInfo, fileInfo.NAME, true);\\n          }, delayTime);\\n\\n          delayTime += 500;\\n        }\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 현재 활성화된 탭을 반환한다.\\n   * @return {Element} - 폼 엘리먼트\\n   * @example -\\n   */\\n  activeForm() {\\n    let activeTab = this.formtab.querySelector('.tab-item.active');\\n\\n    if (activeTab) {\\n      return activeTab.linkForm;\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 파일 아이디에 대한 탭을 반환한다.\\n   * @param {String} - 파일아이디\\n   * @param {Element} - 탭 엘리먼트\\n   * @example -\\n   */\\n  findTab(fileId) {\\n    return this.formtab.querySelector(`[key=\\\"${fileId}\\\"]`);\\n  }\\n\\n  /**\\n   * @desc 지정한 파일아이디에 대한 탭을 삭제한다.\\n   * @param {String} - 파일아이디\\n   * @param {Boolean} - 승인여부\\n   * @example -\\n   */\\n  removeTab(fileId, confirm) {\\n    let tab = this.findTab(fileId);\\n\\n    if (tab) {\\n      this._closeTab(tab, confirm);\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-studio-mdi', JJStudioMdiTab);\\n/* ==JJFormExcute.640.class================ */\\n\\n/**\\n * @classdesc 개발시험용 전용 폼객체관리를 위한 클래스\\n */\\nclass JJFormExcute extends JJForm {\\n  /**\\n   * @desc 개발테스트용 폼을 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    this.innerHTML =\\n      `<header class=\\\"header\\\"></header>` +\\n      `<article></article>` +\\n      `<footer></footer>`;\\n\\n    this.article = this.querySelector('article');\\n    this.classList.add('jj-form');\\n    this.classList.add('is-excute');\\n    this.setAttribute('tabindex', -1);\\n  }\\n\\n  /**\\n   * @desc 개발테스트용 폼을 초기화한다.\\n   * @example -\\n   */\\n  _init() {\\n    this._render();\\n    this._setFromEvent();\\n  }\\n\\n  /**\\n   * @desc 폼을 초기화 한다.\\n   * @example -\\n   */\\n  init() {}\\n\\n  /**\\n   * @desc 제목을 설정한다.\\n   * @param {String} - 제목\\n   * @example -\\n   */\\n  setTitle(title) {}\\n\\n  /**\\n   * @desc 지정한 파일정보를 개발테스트 전용 폼에 바인딩한다.\\n   * @param {Object} - 파일정보\\n   * @param {Boolean} - 테마여부\\n   * @example -\\n   */\\n  excuteLoad(fileInfo, isTheme, viewId) {\\n    this.setAttribute('jj-uuid', fileInfo.uuid);\\n    this.article.innerHTML = fileInfo.html;\\n\\n    if (fileInfo.less && !Jinja.querySelector(`style[jj-uuid=\\\"${fileInfo.uuid}\\\"]`)) {\\n      let styleEl = document.createElement('style');\\n\\n      styleEl.type = 'text/css';\\n      styleEl.setAttribute('rel', 'stylesheet');\\n      styleEl.setAttribute('jj-uuid', fileInfo.uuid);\\n\\n      this.appendChild(styleEl);\\n\\n      let lessCss = ``;\\n\\n      if (isTheme) {\\n        lessCss = ` ${Jinja.lessRuleset || ''} ${fileInfo.less || ''} `;\\n      } else {\\n        lessCss = `[jj-uuid=\\\"${fileInfo.uuid}\\\"]{ ${Jinja.lessRuleset || ''} ${fileInfo.less || ''} }`;\\n      }\\n\\n      less\\n        .render(lessCss)\\n        .then(output =>\\n              styleEl.appendChild(document.createTextNode(output.css))\\n             )\\n        .catch(error => console.error(error));\\n    }\\n\\n    this._setElementId();\\n\\n    if (fileInfo.script) {\\n      try {\\n        new Function('form', fileInfo.script)(this);\\n      } catch (ex) {\\n        // viewId가 없으면 싱크동작으로 간주하고 \\n        // 오류처리 동작을 실해하지 않는다\\n        if (!viewId) {\\n          return;\\n        }\\n        let showExcuteMsg, result ={\\n          \\\"message\\\": ex.message,\\n          \\\"inner\\\": ex,\\n          \\\"fileInfo\\\":fileInfo\\n        };\\n        \\n        switch(ex.name){\\n          case \\\"TypeError\\\":\\n          case \\\"ReferenceError\\\":\\n            let regex = new RegExp(/<anonymous>:(\\\\d+):(\\\\d+)/);\\n            let match = ex.stack.match(regex);\\n            \\n          \\tresult.line= parseInt(match[1])-2;\\n          \\tresult.col= parseInt(match[2]);\\n\\n            let sourceLine = fileInfo.script.split('\\\\n')[result.line-1];\\n            if (sourceLine){\\n              sourceLine = sourceLine.trim();\\n              showExcuteMsg = `\\n                <h4>Source: ${sourceLine}</h4>\\n                <p>\\n                <strong>Message: ${result.message}</strong><br>\\n                ErrorType: ${ex.name}<br>\\n                Source Line: ${result.line}<br>\\n                </p>`;\\n            } else {\\n              showExcuteMsg = `\\n                <h4>Source: ${sourceLine}</h4>\\n                <p>\\n                <strong>Message: ${result.message}</strong><br>\\n                ErrorType: ${ex.name}<br>\\n                Source Line: ${result.line}<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t<b>Stack</b>:<br>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t${ex.stack.split('\\\\n').join('<br>')}\\n                </p>`;\\n            }\\n            break;\\n            \\n          case \\\"SyntaxError\\\":\\n              showExcuteMsg = `\\n\\t\\t\\t\\t\\t\\t\\t\\t<h4>스크립트 문장 오류</h4>\\n                <p>\\n                <strong>Message: ${ex.message}</strong><br>\\n                ErrorType: ${ex.name}<br>\\n                </p>`;\\n            break;\\n\\n          default:\\n              showExcuteMsg = `\\n\\t\\t\\t\\t\\t\\t\\t\\t<h4>정의되지않은 오류</h4>\\n                <p>\\n                <strong>Message: ${ex.message}</strong><br>\\n                ErrorType: ${ex.name}<br>\\n                </p>`;\\n            break;\\n        }\\n\\n        console.error(ex);\\n        alert(showExcuteMsg);\\n        this.dispatchEvent(new CustomEvent(\\\"formError\\\", {\\n          \\\"detail\\\":result,\\n          \\\"bubbles\\\": true\\n        }));\\n\\n      }\\n    }\\n\\n    this.formLoad();\\n    this.dispatchEvent(new CustomEvent(\\\"formLoad\\\", {\\n      \\\"detail\\\":{\\n        \\\"form\\\": this\\n      },\\n      \\\"bubbles\\\": true\\n    }));\\n\\n  }\\n}\\n\\ncustomElements.define('jj-form-excute', JJFormExcute);\\n/* ==PWA.710.pkg.deploy================ */\\n/* ==Auth.640.class================ */\\n\\n/**\\n * @classdesc 권한관리를 위한 클래스<br><br>\\n * ※ 인증처리철차<br>\\n *  \\\\- core에서 appLoad 이벤트가 발생한다.<br>\\n *  \\\\- Auth에서 init()를 실행한다.<br>\\n *  \\\\- 쿠키가 있으면 쿠키검사를 통해서 인증을 확인한다.<br>\\n *  \\\\- 쿠키가 없으면 doIframLogin 인증을 호출한다.<br>\\n *  \\\\- 아이프레임에서 window.message를 보낸다.<br>\\n *  \\\\- addEventListener('message' 에서 넘어온 쿠키를 재 확인한다.<br>\\n *  \\\\- 인증이 맞으면 JJLogin을 이벤트를 호출한다.<br>\\n *  \\\\- new CustomEvent('appStart')를 발생시킨다.<br>\\n *  \\\\- launcher에서 해당이벤트를 받아서 theme페이지를 호출한다.<br>\\n */\\nclass JJAuth  extends JJModule {\\n  \\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 옵션\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this.VERSION = '640';\\n    this.auth20Provider = {};\\n    return {\\n      \\\"apiVersion\\\": workspaceMeta.options.appInfo.apiVersion||\\\"v61\\\",\\n      accountSite:\\n      workspaceMeta.options.loginWorkspaceUrl ||\\n      (workspaceMeta.options.login ? workspaceMeta.options.login.loginWorkspaceUrl : null),\\n      loginUri:\\n      workspaceMeta.options.loginUri ||\\n      (workspaceMeta.options.login ? workspaceMeta.options.login.loginUri : null),\\n      useGuest:\\n      workspaceMeta.options.useGuest ||\\n      (workspaceMeta.options.login ? workspaceMeta.options.login.useGuest : null),\\n      usePWA:\\n      workspaceMeta.options.usePWA ||\\n      (workspaceMeta.options.pwa ? workspaceMeta.options.pwa.usePWA : null)\\n    };\\n\\n  }\\n  \\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    if (navigator.onLine) {\\n      if (this.options.usePWA) {\\n        Jinja.event.add('JJPWAUpgrade', 'Auth.constructor', e => {\\n          this.init();\\n        });\\n      }\\n    } \\n    else {\\n      this._offLineLogin();\\n\\n      window.addEventListener('online', e => {\\n        this.init();\\n      });\\n    }\\n    \\n    Jinja.event.add('JJLogout', 'Auth.setEvent', e => this._logOut());\\n\\n    Jinja.event.add('JJLogin', 'Auth.setEvent', e => {\\n      let loginUri = `/${this.options.apiVersion}/account/studio/login`;\\n\\n      if (e.detail.comCd) {\\n        loginUri = `/${this.options.apiVersion}/account/${e.detail.comCd}/login`;\\n      }\\n\\n      Jinja.ajax.post(loginUri, {\\n        LOGIN_ID: e.detail.id,\\n        PASSWORD: Jinja.global.md.md5(e.detail.pass).toUpperCase()\\n      }).then(data => {\\n        if(data){\\n          Jinja.uo = data;\\n          Jinja.event.dispatch(\\\"jjAppStart\\\", \\\"Auth._setEvent\\\");\\n          Jinja.event.dispatch(\\\"jjUserStart\\\", \\\"Auth._setEvent\\\");\\n        } else {\\n          alert(\\\"계정과 암호를 확인해주세요.\\\");\\n        }\\n      }).catch(error =>{\\n        alert(\\\"계정과 암호를 확인해주세요.\\\");\\n        console.log('Request failed', error)\\n      });\\n    });\\n\\n    Jinja.event.add('JJLockLogin', 'Auth.setEvent', e => {\\n        Jinja.ajax.post(`/${this.options.apiVersion}/account/login`, {\\n        LOGIN_ID: e.detail.id,\\n        PASSWORD: Jinja.global.md.md5(e.detail.pass).toUpperCase()\\n      }).then(data => {\\n        Jinja.uo = data;\\n\\n        Jinja.event.dispatch('JJUnlock', 'Auth._setEvent');\\n      })\\n        .catch(error => console.log('Request failed', error));\\n    });\\n\\n    window.addEventListener('message', e => {\\n      let method = e.data.method;\\n      let sender = e.data.sender;\\n\\n      if (sender == window.location.origin) return;\\n\\n      if (method == 'auth') {\\n        let cookie = e.data.body.cookie;\\n\\n        if (cookie) {\\n          this.frame.remove();\\n          this.frame = null;\\n          this._cookieLogin(cookie);\\n        } else {\\n          location.href = this.options.accountSite + '?backurl=' + location.href + '?req=q';\\n        }\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 쿠키 로그인을 한다.\\n   * @param {String} - 쿠키값\\n   * @example -\\n   */\\n  _cookieLogin(cookie) {\\n    Jinja.ajax\\n      .post(`/${this.options.apiVersion}/account/login/cookie`)\\n      .then(data => {\\n      Jinja.uo = data;\\n\\n      Jinja.event.dispatch('jjAppStart', 'Auth.controller.cookieLogin');\\n      Jinja.event.dispatch(\\\"jjUserStart\\\", \\\"Auth._setEvent\\\");\\n      \\n    })\\n      .catch(error => console.log('Request failed', error));\\n  }\\n\\n  /**\\n   * @desc 오프라인 로그인을 한다.\\n   * @example -\\n   */\\n  _offLineLogin() {\\n    Jinja.uo = {\\n      USER_ID: 'OFF-LINE',\\n      USER_NAME: 'OFF-LINE',\\n      IMAGE: '/repository/systemImages/etc/user.jpg'\\n    };\\n\\n    Jinja.event.dispatch('jjAppStart', 'Auth.controller.guestLogin');\\n  }\\n\\n  /**\\n   * @desc 로그아웃을 한다.\\n   * @example -\\n   */\\n  _logOut() {\\n    Jinja.ajax.get(`/${this.options.apiVersion}/account/logout`).then(() => {\\n      Jinja.destroy();\\n\\n      if (this.options.accountSite) {\\n        location.href = this.options.accountSite+`?callback=${location.href}`;\\n      } else {\\n        location.reload();\\n      }\\n    });\\n  }\\n\\n  \\n\\n  /**\\n   * @desc 인증모듈을 초기화한다.\\n   * @example -\\n   */\\n  init() {\\n    let req = new URL(document.location).searchParams.get('req');\\n\\n    if (req) {\\n      this.options.useGuest = false;\\n    }\\n\\n    let curCookie = Jinja.store.getAuthCookie();\\n\\n    if (curCookie) {\\n      this._cookieLogin(curCookie);\\n    } else if (this.options.useGuest) {\\n      Jinja.uo = {\\n        LOGIN_ID: 'GUEST',\\n        USER_ID: 'GUEST',\\n        USER_NAME: 'GUEST'\\n      };\\n\\n      Jinja.event.dispatch('jjAppStart', 'Auth.controller.guestLogin');\\n    } else if (this.options.loginUri) {\\n      //JJFormFull.open(this.options.loginUri, {});\\n      this.login();\\n    } else if (this.options.accountSite) {\\n      location.href = this.options.accountSite+`?callback=${location.href}`;\\n\\n//       if (this.options.accountSite && location.port != '443') {\\n//         this.options.accountSite += ':' + location.port;\\n//       }\\n\\n//       this.frame = document.createElement('iframe');\\n//       this.frame.style.display = 'none';\\n//       this.frame.src = this.options.accountSite + '?m=auth';\\n//       this.frame.addEventListener('load', e => {});\\n//       this.options.app.el.appendChild(this.frame);\\n    }\\n\\n    console.debug('Jinja.auth.640 모듈이 로드되었습니다.');\\n  }\\n  \\n  login(uri){\\n    uri = uri||this.options.loginUri;\\n    JJFormFull.open(uri, {});\\n  }\\n  \\n  logout(themeUri, path){\\n    if (path)\\thistory.pushState({path}, null, path);\\n    \\n    if(themeUri){\\n    \\tworkspaceMeta.options.appInfo.themeMdiUri =themeUri;\\n    }\\n    return this._logOut();\\n  }\\n\\n  /**\\n   * @desc 인증모듈을 삭제한다.\\n   * @example -\\n   */\\n  destroy() {}\\n\\n  /**\\n   * @desc 모듈명을 반환한다.\\n   * @example -\\n   */\\n  who() {\\n    alert('JJAuth');\\n  }\\n}\\n\\nJinja.addModule('auth', JJAuth);\\n/* ==JJServiceWorker.640.class================ */\\n\\n/**\\n * @classdesc 서비스워크 관리를 위한 클래스\\n */\\nclass JJServiceWorker extends JJModule {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 옵션\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      \\\"apiVersion\\\": workspaceMeta.options.appInfo.apiVersion||\\\"v61\\\",\\n      \\\"useSW\\\": workspaceMeta.options.pwa.useSW\\n    };\\n  }\\n  \\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render() {}\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    if (['edit', 'open'].includes(APP_MODE)) {\\n      return false;\\n    }\\n\\n    if (navigator.serviceWorker && this.options.useSW) {\\n      this.swInit();\\n    } else {\\n      Jinja.event.dispatch('JJPWAUpgrade', 'Auth.constructor');\\n    }\\n  }\\n\\n  /**\\n   * @desc 서비스워크를 초기화한다.\\n   * @example -\\n   */\\n  swInit() {\\n    console.todo(\\n      '배포시 워크스페이스가 캐싱해제되어 개발모드로 갈 필요가 없도록 조치'\\n    );\\n    let serviceWorkerUrl = `/sw`;\\n    if(workspaceMeta.options.appInfo.apps){\\n      serviceWorkerUrl = `/apps/${workspaceMeta.options.appInfo.apps}/sw`;\\n    }\\n    navigator.serviceWorker.register(serviceWorkerUrl, {\\n    });\\n\\n    navigator.serviceWorker.ready\\n      .then(registration => {\\n        this.registration = registration;\\n\\n        return true;\\n      })\\n      .then(checkRlt => {\\n        if (checkRlt) {\\n          Jinja.event.dispatch('JJPWAUpgrade', 'JJServiceWorker.swInit');\\n        } else {\\n          this.reset();\\n        }\\n      });\\n  }\\n\\n  /**\\n   * @desc 최신버전 여부를 반환한다.\\n   * @return {Promiss} - 최신버전 여부\\n   * @example -\\n   */\\n  versionCheck() {\\n    if (navigator.onLine) {\\n      return Jinja.ajax.get(`/version`).then(data => {\\n        if (workspaceMeta.options.version == data.result) {\\n          return true;\\n        } else {\\n          return false;\\n        }\\n      });\\n    } else {\\n      return new Promise.reject();\\n    }\\n  }\\n\\n  /**\\n   * @desc 오프라인에 설정된 자료를 전부 지우고 새로고침한다.\\n   * @example -\\n   */\\n  reset() {\\n    if (this.registration) {\\n      this.registration.unregister().then(rlt => {\\n        console.todo(\\n          '배포시 워크스페이스가 캐싱해제되어 개발모드로 갈 필요가 없도록 조치'\\n        );\\n\\n        location.reload(true);\\n      });\\n    } else {\\n      console.error('등록된 서비스정보를 파악할수 없어서 재 시작을 못했습니다.');\\n    }\\n  }\\n  \\n  /**\\n   * @desc 모듈명을 반환한다.\\n   * @example -\\n   */\\n  who() {\\n    alert('JJServiceWorker');\\n  }\\n}\\n\\n/**\\n * 어플리케이션 메니페스트 등록 \\n */\\nif(workspaceMeta.options.pwa.manifest){\\n  let manifest =Jinja.global.string(workspaceMeta.options.pwa.manifest);\\n\\n  const blob = new Blob([manifest], {type: 'application/javascript'});\\n\\n  const manifestURL = URL.createObjectURL(blob);\\n\\n  var headID = document.getElementsByTagName('head')[0];\\n  var link = document.createElement('link');\\n  link.rel = 'manifest';\\n  headID.appendChild(link);\\n  link.setAttribute('href', manifestURL);\\n}\\n\\n\\n\\nJinja.addModule('sw', JJServiceWorker);\\n/* ==Notification.640.class================ */\\n\\n/**\\n * @classdesc 알림 관리를 위한 클래스<br><br>\\n * 모바일 구글은 설치가 되어야 Notification을 받을 수 있다.\\n * 모바일은 serviceWork가 되어야 Notification을 받을 수 있다.\\n */\\nclass JJNotification {\\n  /**\\n   * @desc 생성자\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  constructor(options) {\\n    this.VERSION = '640';\\n    this.options = {};\\n\\n    if (['edit', 'open'].includes(APP_MODE)) {\\n      return false;\\n    }\\n\\n    Object.assign(this.options, options);\\n\\n    if ('Notification' in window && workspaceMeta.options.pwa.useNoti) {\\n      this.init();\\n    }\\n  }\\n\\n  _intro(){\\n    this.show('AppSpeed 시작합니다', {body: workspaceMeta.options.seo.ogDescription || '제품설명'});\\n  }\\n  \\n  /**\\n   * @desc 알림모듈을 초기화한다\\n   * @example -\\n   */\\n  init() {\\n    if (Notification.permission === 'granted') {\\n      this._intro();\\n    } else if (Notification.permission !== 'denied') {\\n      Notification.requestPermission().then(permission => {\\n        if (permission === 'granted') {\\n          this._intro();\\n        }\\n      });\\n    }\\n  }\\n\\n  /**\\n   * @desc 서비스워크용 알림을 처리한다.\\n   * @param {String} - 제목\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  show(title, options) {\\n    console.todo(\\n      '서비스워크 동작상태에 따른 자동분기 처리로 메시지를 보낼수 있도록 개선필요함'\\n    );\\n\\n    if (!workspaceMeta.options.useSW) {\\n      this.desktopShow(title, options);\\n\\n      return;\\n    }\\n\\n    let badge = '/repository/studio602/20191121/2da89eb8-29ca-4011-a80c-7d5557964076.png';\\n    let icon = '/repository/studio602/20191112/616bf0d5-96a6-47db-8e0d-4c9a1a170357.png';\\n\\n    if (options.userId) {\\n      icon = '/repository/users/' + options.userId;\\n    }\\n\\n    const defaultOption = {\\n      body: '',\\n      //badge: badge,\\n      //icon: icon,\\n      //image: workspaceMeta.options.ogImage,\\n      //sound: 'https://www.w3schools.com/html/horse.mp3',\\n      vibrate: 0,\\n      //silent: true,\\n      noscreen: false\\n    };\\n\\n    if (typeof options == 'string') {\\n      options = {\\n        body: options\\n      };\\n    }\\n\\n    Object.assign(defaultOption, options);\\n\\n    if ('Notification' in window) {\\n      if (Notification.permission === 'granted') {\\n        this.serviceWorkNotification(title, defaultOption);\\n      } else if (Notification.permission == 'denied') {\\n        this.topMessageNotification(title, defaultOption);\\n      } else {\\n        Notification.requestPermission().then(permission => {\\n          if (permission === 'granted') {\\n            this.serviceWorkNotification(title, defaultOption);\\n          } else {\\n            this.topMessageNotification(title, defaultOption);\\n          }\\n        });\\n      }\\n    } else {\\n      this.topMessageNotification(title, defaultOption);\\n    }\\n  }\\n\\n  /**\\n   * @desc PC용 알림을 처리한다.\\n   * @param {String} - 제목\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  desktopShow(title, options) {\\n    let badge = '/repository/studio602/20191121/2da89eb8-29ca-4011-a80c-7d5557964076.png';\\n    let icon = '/repository/studio602/20191112/616bf0d5-96a6-47db-8e0d-4c9a1a170357.png';\\n\\n    if (options.userId) {\\n      icon = '/repository/users/' + options.userId;\\n    }\\n\\n    const defaultOption = {\\n      body: '',\\n      //badge: badge,\\n      //icon: icon,\\n      //sound: 'https://www.w3schools.com/html/horse.mp3',\\n      vibrate: 0,\\n      noscreen: false\\n    };\\n\\t\\t// silent 소음진동 제거\\n\\t\\t// silent: true, \\n\\t\\t// \\n    if (typeof options == 'string') {\\n      options = {\\n        body: options\\n      };\\n    }\\n\\n    Object.assign(defaultOption, options);\\n\\t\\t\\n    \\n    if (!('Notification' in window)) {\\n      alert('This browser does not support system notifications');\\n    } else if (Notification.permission === 'granted') {\\n      let notification = new Notification(title, defaultOption);\\n    } else if (Notification.permission !== 'denied') {\\n      Notification.requestPermission(function (permission) {\\n        if (permission === 'granted') {\\n          let notification = new Notification(title, defaultOption);\\n        }\\n      });\\n    }\\n  }\\n\\n  /**\\n   * @desc 서비스 워크 설정을 통한 알림을 처리한다.\\n   * @param {String} - 제목\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  serviceWorkNotification(title, options) {\\n    alert(title);\\n//     navigator.serviceWorker.ready.then(registration =>\\n//      // registration.showNotification(title, options)\\n//     );\\n  }\\n\\n  /**\\n   * @desc 일반 알림을 처리한다.\\n   * @param {String} - 제목\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  topMessageNotification(title, options) {\\n    console.log('sse Message consol log... : ' + title);\\n  }\\n  \\n  setNotiBox(el){\\n    this.notiBox = el;\\n  }\\n  addNotiBox(pHtml){\\n//     if(this.notiBox){\\n//       let html = `\\n//             <a href=\\\"javascript:void(0);\\\" class=\\\"dropdown-item notify-item\\\">\\n//               <div class=\\\"notify-icon\\\">\\n//                 <i class=\\\"fa fa-user-circle\\\" aria-hidden=\\\"true\\\"></i>\\n// \\t\\t\\t\\t\\t\\t\\t</div>\\n//               <p class=\\\"notify-details\\\">Mario Drummond</p>\\n//               <p class=\\\"text-muted mb-0 user-msg\\\">\\n//                 ${pHtml}\\n//               </p>\\n//             </a>\\n// `;\\n//     \\tJinja.dom.prepend(this.notiBox, html);\\n//     }\\n  }\\n  \\n  /**\\n   * @desc 모듈명을 반환한다.\\n   * @example -\\n   */\\n  who() {\\n    alert('JJNotification');\\n  }\\n}\\n\\nJinja.addModule('notification', JJNotification);\\n/* ==ServerSentEvents.640.class================ */\\n\\n/**\\n * @classdesc SSE 관리를 위한 클래스\\n */\\nclass JJServerSentEvents extends JJModule{\\n//   /**\\n//    * @desc 생성자\\n//    * @param {Object} - 옵션\\n//    * @example -\\n//    */\\n//   constructor(options) {\\n\\n//     Object.assign(this.options, options);\\n\\n//     if (['edit', 'open'].includes(APP_MODE)) {\\n//       return false;\\n//     }\\n\\n//   }\\n\\n  _defaultOption() {\\n    this.VERSION = '640';\\n    this.options = {};\\n    this.messageRoute = {};\\n    return {\\n      \\\"apiVersion\\\": workspaceMeta.options.appInfo.apiVersion||\\\"v61\\\"\\n    };\\n  }\\n  \\n  _setEvent() {\\n    Jinja.event.add('jjAppStart', 'sse.setInit', this.appStart.bind(this));\\n    Jinja.event.add('JJLogout', 'sse.setInit', this.destroy.bind(this));\\n  }\\n  /**\\n   * @desc SSE모듈을 초기화한다.\\n   * @example -\\n   */\\n  init() {}\\n  /**\\n   * @desc jjAppStart 초기화한다.\\n   * @example -\\n   */\\n  appStart() {\\n    if (navigator.onLine && workspaceMeta.options.pwa.useSSE) {\\n\\n      //https://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string\\n      let response =`\\nvar sse;\\ntry{\\nsse = new EventSource('https://www.appspeed.net:8893/${this.options.apiVersion}/notification/sse/connection');\\n} catch(e){\\nconsole.log(e);\\n};\\n\\nsse.addEventListener(\\\"open\\\", e => {\\nconsole.info(\\\"/${this.options.apiVersion}/notification/sse/connection\\\");\\n});\\n\\nsse.addEventListener(\\\"message\\\", e=>{\\nself.postMessage({\\n\\\"method\\\": \\\"SSE\\\",\\n\\\"body\\\":  e.data\\n});\\n})\\n\\nself.onmessage = function (msg) {\\nswitch (msg.data.method) {\\ncase 'close':\\nsse.close();  \\n\\nconsole.log(\\\"SSE연결을 종료했습니다.\\\");\\n\\nbreak;\\n}\\n}\\n`;\\n\\n      var blob;\\n      try {\\n        blob = new Blob([response], {type: 'application/javascript'});\\n      } catch (e) { // Backwards-compatibility\\n        window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder;\\n        blob = new BlobBuilder();\\n        blob.append(response);\\n        blob = blob.getBlob();\\n      }\\n      // Jinja.sseWellComm = new Worker(URL.createObjectURL(blob));\\n\\n\\n      Jinja.sseWellComm = new Worker('/sseworker');\\n\\n      Jinja.sseWellComm.addEventListener('message', e => {\\n        if (e.data.method === 'SSE') {\\n          let msg;\\n\\n          try {\\n            msg = Jinja.global.json(e.data.body);\\n          } catch (ex) {\\n\\n          }\\n          switch (msg.NOTI_CODE) {\\n            case '100': {\\n//               Jinja.notification.show('APPSPEED602 SSE', {\\n//                 body: msg.MESSAGE\\n//               });\\n\\n              break;\\n            }\\n            default: {\\n              break;\\n            }\\n          }\\n\\n          if (this.messageRoute[msg.NOTI_CODE]) {\\n            this.messageRoute[msg.NOTI_CODE].forEach(item => {\\n              console.log('SSE messageRoute', msg.NOTI_CODE, msg, item);\\n\\n              item.handler(msg);\\n            });\\n          }\\n\\n          //           Jinja.notification.addNotiBox(`<h5>SSE</h5>\\n          // <pre>${Jinja.global.string(msg)}</pre>\\n          // `);\\n        }\\n      });\\n\\n      Jinja.ajax.post(`/${this.options.apiVersion}/notification/topic/studio/user/${Jinja.uo.USER_ID}`);\\n    }\\n  }\\n\\n  /**\\n   * @desc SSE모듈을 삭제한다.\\n   * @example -\\n   */\\n  destroy() {\\n    if (Jinja.sseWellComm) {\\n      Jinja.sseWellComm.postMessage({\\n        method: 'close'\\n      });\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 메시지 정보를 메시지 라우터에 추가한다.\\n   * @example -\\n   */\\n  addMessageRoute(messageCode, handleName, handler) {\\n    if (this.messageRoute[messageCode]) {\\n      this.messageRoute[messageCode].push({\\n        handleName: handleName,\\n        handler: handler\\n      });\\n    } else {\\n      this.messageRoute[messageCode] = [\\n        {\\n          handleName: handleName,\\n          handler: handler\\n        }\\n      ];\\n    }\\n  }\\n}\\n\\nJinja.addModule('sse', JJServerSentEvents);\\n/* ==ReactComp.710.pkg.deploy================ */\\n/* ==JJPagination.640.class================ */\\n/*jshint sub:true*/ \\n\\nclass JJPagination extends HTMLElement {\\n\\n  constructor(opt) {\\n    super();\\n    this.VERSION = \\\"610\\\";\\n    this.options = {\\n      \\\"dataObj\\\": null,\\n      \\\"arrayLoop\\\": null,\\n      \\\"pageLength\\\": 20,\\n      \\\"pageBtnCount\\\": 5,\\n      \\\"pageSizes\\\": [5,10,15,20,30,50,100]\\n    };\\n\\n    Object.assign(this.options, this.dataset, opt);\\t\\t\\n\\n  }\\t\\t\\n\\n  setEvent(){\\n    this.clickHandler = this._onClick.bind(this);\\n    this.changeHandler = this._onChange.bind(this);\\n    this.addEventListener(\\\"click\\\", this.clickHandler, false);\\t\\t\\n    this.addEventListener(\\\"change\\\", this.changeHandler, false)\\n  }\\n\\n  _onClick(e){\\n    if(!this.options.dataObj) return;\\n    let rowLength = this.options.dataObj.length;\\n    let totalPage = parseInt((rowLength+this.options.pageLength-1)/this.options.pageLength);\\n\\n    if (e.target.dataset.pageNum){\\n      this.pagination.querySelectorAll(\\\"li.active\\\").forEach(el=> el.classList.remove(\\\"active\\\"));\\n      e.target.parentElement.classList.add(\\\"active\\\");\\n      this.options.arrayLoop.gotoPage(e.target.dataset.pageNum);\\t\\n\\n      this.spanRownum.innerHTML = `Showing <t class=\\\"t1\\\">${e.target.dataset.pageNum}</t> to <t class=\\\"t1\\\">${totalPage}</t> of <t class=\\\"t3\\\">${rowLength}</t> entries`;\\n\\n    } \\n    else if(e.target.matches(\\\".page-next:not(.disabled) *\\\")){\\n      let movePage = this.pagination.querySelector(\\\"li:nth-last-child(3) a[data-page-num]\\\").dataset.pageNum;\\n      this.refresh(parseInt(movePage)+1);\\n      this.pagination.querySelector(\\\"li.page a\\\").click();\\n    }\\n    else if(e.target.matches(\\\".page-prev:not(.disabled) *\\\")){\\n      let movePage = this.pagination.querySelector(\\\"li.page a[data-page-num]\\\").dataset.pageNum;\\n      movePage = Math.max(1, movePage - this.options.pageBtnCount);\\n      this.refresh(parseInt(movePage));\\n      this.pagination.querySelector(\\\"li:nth-last-child(3) a\\\").click();\\n    }\\n    else if(e.target.matches(\\\".page-home:not(.disabled) *\\\")){\\n      this.refresh(1);\\n      this.pagination.querySelector(\\\"li.page a\\\").click();\\n    }\\n    else if(e.target.matches(\\\".page-last:not(.disabled), .page-last:not(.disabled) *\\\")){\\n\\n      this.refresh(totalPage-this.options.pageBtnCount+1);\\n      this.pagination.querySelector(\\\"li:nth-last-child(3) a\\\").click();\\n    }\\n    else if(e.target.matches(\\\".page-prev-sm\\\")){\\n      let gotoPage = this.startPage>1 ? this.startPage-1 : 1;\\n      this.refresh(gotoPage);\\n      this.options.arrayLoop.gotoPage(gotoPage);\\t\\n\\n    }\\n    else if(e.target.matches(\\\".page-next-sm\\\")){\\n      let gotoPage = this.startPage < this.options.pageLength ? this.startPage+1 : this.options.pageLength;\\n      this.refresh(gotoPage);\\n      this.options.arrayLoop.gotoPage(gotoPage);\\t\\n    }\\n\\n  }\\n  _onChange(e){\\n    if(e.target.matches(`select`)){\\n      this.pagination.querySelectorAll(\\\"li.active\\\")\\n        .forEach(el=> el.classList.remove(\\\"active\\\"));\\n      let length = parseInt(e.target.value);\\n      this.options.pageLength = length;\\n      this.options.arrayLoop.changePagesize(length);\\t\\n    }\\n  }\\n\\n  // 신규레코드 추가시 마지막 페이지를 보여주도록 한다.\\n  gotoEnd(){\\n    let rowLength = this.options.dataObj.length;\\n    let totalPage = parseInt((rowLength+this.options.pageLength-1)/this.options.pageLength);\\n    this.refresh(Math.max(1,totalPage-this.options.pageBtnCount+1));\\n    this.pagination.querySelectorAll(\\\"li.active\\\").forEach(el=> el.classList.remove(\\\"active\\\"));\\n    this.pagination.querySelector('[data-page-num=\\\"'+totalPage+'\\\"]').parentElement.classList.add(\\\"active\\\");\\n    this.spanRownum.innerHTML = `Showing <t class=\\\"t1\\\">${totalPage}</t> to <t class=\\\"t1\\\">${totalPage}</t> of <t class=\\\"t3\\\">${rowLength}</t> entries`;\\n  }\\n  // 레코드 삭제시 처리\\n  splice(removeIndex, length){\\n\\t\\t\\n    let rowLength = this.options.dataObj.length;\\n    let totalPage = parseInt((rowLength+this.options.pageLength-1)/this.options.pageLength);\\n    if (this.pagination.querySelector(\\\"li.active a\\\")){\\n      let curPage = parseInt(this.pagination.querySelector(\\\"li.active a\\\").dataset.pageNum);  \\n      this.refresh(Math.max(1,totalPage-this.options.pageBtnCount+1));\\n      this.pagination.querySelectorAll(\\\"li.active\\\").forEach(el=> el.classList.remove(\\\"active\\\"));\\n      if (length == 1){\\n        if (this.pagination.querySelector('[data-page-num=\\\"'+curPage+'\\\"]')) {\\n          this.pagination.querySelector('[data-page-num=\\\"'+curPage+'\\\"]').parentElement.classList.add(\\\"active\\\");\\n        } \\n        else {\\n          curPage--;\\n          if(this.pagination.querySelector('[data-page-num=\\\"'+curPage+'\\\"]')){\\n            this.pagination.querySelector('[data-page-num=\\\"'+curPage+'\\\"]').click();\\n          }\\n        }\\t\\t\\t\\n        this.spanRownum.innerHTML = `Showing <t class=\\\"t1\\\">${curPage}</t> to <t class=\\\"t1\\\">${totalPage}</t> of <t class=\\\"t3\\\">${rowLength}</t> entries`;\\n      }\\n    }\\n  }\\n\\n  renderHtml(){\\n      \\n    this.setAttribute(\\\"data-render\\\", \\\"JJPagination\\\");\\n    this.$empty();\\n\\n    let _selectOptionHtml = ``;\\n    this.options.pageSizes.forEach(num=>{\\n      _selectOptionHtml += `<option value=\\\"${num}\\\">${num}</option>\\\\n`;\\n    });\\n    //_selectOptionHtml = ``;\\n    var html = `\\n<select class=\\\"form-control\\\">${_selectOptionHtml}</select>\\n<span class=\\\"rownum\\\">Showing 0 to 0 of 0 entries</span>\\n<nav aria-label=\\\"...\\\"> \\n<ul class=\\\"pagination justify-content-center\\\">\\n<li class=\\\"page-item page-home\\\"><a class=\\\"page-link\\\" aria-label=\\\"Previous\\\"><span aria-hidden=\\\"true\\\">|≪</span></a></li>\\n<li class=\\\"page-item page-prev\\\"><a class=\\\"page-link\\\" aria-label=\\\"Previous\\\"><span aria-hidden=\\\"true\\\">≪</span></a></li>\\n<li class=\\\"page-item page-next\\\" ><a class=\\\"page-link\\\" aria-label=\\\"Next\\\"><span aria-hidden=\\\"true\\\">≫</span></a></li>\\n<li class=\\\"page-item page-last\\\" ><a class=\\\"page-link\\\" aria-label=\\\"Next\\\"><span aria-hidden=\\\"true\\\">≫|</span></a></li>\\n</ul> \\n</nav>\\n<nav aria-label=\\\"...\\\">\\n<ul class=\\\"pager\\\">\\n<li><a class=\\\"page-prev-sm\\\" href=\\\"#\\\"><i class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></i></a></li>\\n<li><a class=\\\"page-next-sm\\\" href=\\\"#\\\"><i class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></i></a></li>\\n</ul>\\n</nav> \\n`;\\n\\n    Jinja.dom.append(this, html);\\t\\t\\n    \\n    this.pagination = this.querySelector('ul.pagination');\\n    this.pageHome = this.querySelector('ul.pagination .page-home');\\n    this.pagePrev = this.querySelector('ul.pagination .page-prev');\\n    this.pageNext = this.querySelector('ul.pagination .page-next');\\n    this.pageLast = this.querySelector('ul.pagination .page-last');\\n    this.pagePrevSm = this.querySelector('ul.pagination .page-prev-sm');\\n    this.pageNextSm = this.querySelector('ul.pagination .page-next-sm');\\n    this.selPageSize = this.querySelector('select');\\n    this.spanRownum = this.querySelector('.rownum');\\n\\n    \\n    // page버턴 구성하기\\n    for (let i=1; i <= this.options.pageBtnCount; i++) {\\n      let li = document.createElement(\\\"li\\\");\\n      li.classList.add(\\\"page-item\\\");\\n      li.classList.add(\\\"page\\\");\\n      \\n      let a = document.createElement(\\\"a\\\");\\n      a.classList.add(\\\"page-link\\\");\\n      a.appendChild(document.createTextNode(i));\\n      a.dataset.pageNum = i;\\n      //a.href = \\\"#\\\";\\n      li.appendChild(a);\\n      this.pageNext.before(li);\\n    }\\n\\n\\n\\n    return html;\\n  }\\n\\n  bindData(rows, arrayLoop){\\n    \\n    this.options.dataObj = rows;\\n    this.options.arrayLoop = arrayLoop;\\n    this.options.pageLength = arrayLoop.options.pageLength;\\n    this.selPageSize.value = this.options.pageLength;\\n    this.refresh();\\n\\n  }\\n\\n  refresh(startPage){\\n    \\n    this.pagination.querySelectorAll(\\\"li.active\\\").forEach(el=> el.classList.remove(\\\"active\\\"));\\n    this.startPage = parseInt(startPage) || 1;\\n    let rowLength = this.options.dataObj.length;\\n    let totalPage = parseInt((rowLength+this.options.pageLength-1)/this.options.pageLength);\\n    this.pagination.querySelectorAll(\\\"[data-page-num]\\\").forEach((el,index) =>{\\n      let pageNum = this.startPage+index;\\n      if (index==0){\\n        el.parentElement.classList.add(\\\"active\\\");\\t\\n        this.spanRownum.innerHTML = `Showing <t class=\\\"t1\\\">${pageNum}</t> to <t class=\\\"t1\\\">${totalPage}</t> of <t class=\\\"t3\\\">${rowLength}</t> entries`;\\n      }\\n      el.textContent = pageNum;\\n      el.dataset.pageNum = pageNum;\\n      el.style.display = 'block';\\n      if(pageNum > totalPage){\\n        el.style.display = 'none';\\n        el.dataset.pageNum = 0;\\n        el.textContent = \\\"\\\";\\n      }\\n    });\\n\\n    if (this.pagination.querySelector('[data-page-num=\\\"1\\\"]')){\\n      this.pageHome.classList.add('disabled');\\n      this.pagePrev.classList.add('disabled');\\n    } else {\\n      this.pageHome.classList.remove('disabled');\\n      this.pagePrev.classList.remove('disabled');\\n    }\\n\\n    if (this.pagination.querySelector('[data-page-num=\\\"'+totalPage+'\\\"]')){\\n      this.pageNext.classList.add('disabled');\\n      this.pageLast.classList.add('disabled');\\n    } else {\\n      this.pageNext.classList.remove('disabled');\\n      this.pageLast.classList.remove('disabled');\\n    }\\n\\n  }\\t\\n\\n\\n  connectedCallback() {\\n    // DOM에 추가되었다. 렌더링 등의 처리를 하자.\\n    this.renderHtml();\\n    this.setEvent();\\n  }\\n  disconnectedCallback() {\\n    this.pagination = null;\\n    this.pageHome = null;\\n    this.pagePrev = null;\\n    this.pageNext = null;\\n    this.pageLast = null;\\n    this.pagePrevSm = null;\\n    this.pageNextSm = null;\\n    this.selPageSize = null;\\n    this.spanRownum = null;\\n    this.options = null;\\n    this.removeEventListener(\\\"click\\\", this.clickHandler, false);\\t\\t\\n    this.removeEventListener(\\\"change\\\", this.changeHandler, false)\\n\\n    //this.$empty();\\n    // DOM에서 제거되었다. 엘리먼트를 정리하는 일을 하자.\\n  }\\n  attributeChangedCallback(attrName, oldVal, newVal) {\\n    // 속성이 추가/제거/변경되었다.\\n    //this[attrName] = newVal;\\n  }\\n  adoptedCallback(oldDoc, newDoc) {\\n    // 다른 Document에서 옮겨져 왔음\\n  }\\n\\n}\\n\\ncustomElements.define('jj-pagination', JJPagination);\\t/* ==JJReact.640.class================ */\\n\\n/**\\n * @classdesc JJReact 관리를 위한 클래스<br><br>\\n * 데이타셑은 옵저버로 생성하여 get/set을 오버라이딩 시킨다.<br>\\n * 데이터 옵저버를 통해서 변화를 감지하게 된다.<br>\\n * 새로운 데이타가 추가되면 타임옵져버는 이를 감지하여 get/set을 시킨다.<br><br>\\n *\\n * UI옵저버는 가상돔을 생성하여 관리한다.<br>\\n * 내용이추가되면 가상돔을 통해서 이를 생성한다.<br><br>\\n *\\n * 템플릿 리터럴은 연산을 통하게 되며 관련된 데이타옵저버에 등록한다.<br>\\n * 데이터 업저버는 등록된 템프릿리터럴을 인지하고 이를 업데이트한다.<br>\\n *\\n * 데이터 업저는 참조링크를 내장하고 리터럴 연산을 통해서 옵저버 문장을 만든다.<br>\\n *\\n * 리터럴 옵저버는 여러문장으로 구성된 내용을 구성된다.<br>\\n * 리터럴노드 : {<br><br>\\n * \\n *    리터럴문자열,<br>\\n * \\t\\t[관련데이터셑]<br>\\n * \\t\\t--------------<br><br>\\n *\\n *    파서()<br>\\n *  }<br><br>\\n *\\n * 리터럴 속성:{<br>\\n * <br>\\n * }\\n */\\nclass JJReact {\\n  /**\\n   * @static\\n   * @desc 지정한 노드의 textContent에 지정한 값을 입력한다.<br>\\n   * 이미지 노드일 경우 src에 입력한다.\\n   * @param {Element} - 대상 노드\\n   * @param {*} - 값\\n   * @example -\\n   */\\n  static nodeText(node, val) {\\n    if (Jinja.global.isDate(val)) {\\n      val = Jinja.i18n.timezoneFormat(val);\\n    }\\n    if (node.tagName === 'IMG') {\\n      node.src = val;\\n    } else {\\n      \\n      if(node.parentElement && node.parentElement.$closest('jj-item-label')){\\n        node.parentElement.$closest('jj-item-label').dataBindSet(node, val);\\n      } else {\\n      \\tnode.textContent = val;  \\n      }\\n    }\\n  }\\n\\n  /**\\n   * @static\\n   * @desc 지정한 노드의 속성에 지정한 값을 입력한다.<br>\\n   * @param {Element} - 대상 노드\\n   * @param {String} - 속성명\\n   * @param {*} - 값\\n   * @example -\\n   */\\n  static attrBind(node, attrName, val) {\\n    if (Jinja.global.isDate(val)) {\\n      val = Jinja.i18n.timezoneFormat(val);\\n    }\\n\\n    if (node.tagName === 'IMG' && attrName === 'img-src') {\\n      node.setAttribute('src', val);\\n    } else {\\n      node.setAttribute(attrName, val);\\n    }\\n  }\\n\\n  /**\\n   * @static\\n   * @desc 지정한 노드의 value에 지정한 값을 입력한다.<br>\\n   * 노드의 유형에 따라 값을 변환하여 입력한다.\\n   * @param {Element} - 대상 노드\\n   * @param {*} - 값\\n   * @example -\\n   * JJReact.nodeBind(node, val);\\n   */\\n  static nodeBind(node, val) {\\n    if(node.parentElement && node.parentElement.$closest('[data-bind-group]')){\\n      node.parentElement.$closest('[data-bind-group]').dataBind(node, val);\\n    } \\n    else {\\n\\n      if(Array.isArray(val)){\\n        node.value = val;\\n      } \\n      else {\\n\\n        if (node.dataset.type == 'date') {\\n          node.value = new Date(val).$toFormat('yyyy-MM-dd');\\n        } else if (node.dataset.type == 'datetime-local') {\\n          node.value = new Date(val).$toFormat('yyyy-MM-ddTHH:mm:ss');\\n          //  } else if (node.dataset.type == 'time') {\\n          //    node.value = new Date(val).$toFormat('HH:mm');\\n        } else if (Jinja.i18n.isDate(val)) {\\n          node.value = val.$toFormat('yyyy-MM-dd');\\n        } else {\\n          if (node.dataset.type == 'checkbox') {\\n            node.checked = val == 'true' || val === true ? true : false;\\n          } else {\\n            node.value = val;\\n          }\\n        }\\n\\n        JJReact.onValidate(node);\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @static\\n   * @async\\n   * @desc 지정한 노드의 유효성 여부를 반환한다.\\n   * @param {Element} - 대상 노드\\n   * @return {Boolean} - 유효성 여부\\n   * @example -\\n   */\\n  static async onValidate(el) {\\n    let validResult = true;\\n//     if (Jinja.validate) {\\n//       return await Jinja.validate.checkValidity(el);\\n//     }\\n\\n//     let pattern, formGroup, helpBlock;\\n\\n//     pattern = el.getAttribute('pattern');\\n//     formGroup = el.$closest('.form-group');\\n\\n//     if (formGroup) helpBlock = formGroup.querySelector('.help-block');\\n//     if (!el.setCustomValidity) return;\\n\\n//     el.setCustomValidity(``);\\n\\n//     validResult = el.checkValidity();\\n\\n//     if (validResult) {\\n//       if (formGroup) {\\n//         formGroup.classList.remove('has-error');\\n\\n//         if (helpBlock) helpBlock.innerText = '';\\n//       } else {\\n//         el.classList.remove('has-error');\\n//         el.dataset.validationTitle = '';\\n//         el.title = '';\\n//       }\\n//     }\\n\\n//     if (validResult && el.value && formGroup) {\\n//       formGroup.classList.add('has-success');\\n//     }\\n\\n//     if (!validResult) {\\n//       if (formGroup) {\\n//         formGroup.classList.add('has-error');\\n//         formGroup.classList.remove('has-success');\\n//       } else {\\n//         el.classList.add('has-error');\\n//         el.classList.remove('has-success');\\n//       }\\n//     }\\n\\n//     if (helpBlock) {\\n//       helpBlock.innerText = el.validationMessage;\\n//     } else {\\n//       el.dataset.validationTitle = el.validationMessage;\\n//       el.title = '';\\n//     }\\n\\n    return validResult;\\n  }\\n\\n  /**\\n   * @static\\n   * @desc 지정한 노드의 유효성 확인 안내메세지 설정한다.\\n   * @param {Element} - 대상 노드\\n   * @param {String} - 안내메세지\\n   * @return {Boolean} - 유효성 여부\\n   * @example -\\n   */\\n  static setCustomValidity(el, msg) {\\n    let pattern, formGroup, helpBlock;\\n    let validResult = true;\\n\\n//     formGroup = el.$closest('.form-group');\\n\\n//     if (formGroup) helpBlock = formGroup.querySelector('.help-block');\\n\\n//     el.setCustomValidity(msg);\\n\\n//     if (msg) validResult = false;\\n//     else validResult = el.checkValidity();\\n\\n//     if (validResult) {\\n//       if (formGroup) {\\n//         formGroup.classList.remove('has-error');\\n\\n//         if (helpBlock) helpBlock.innerText = '';\\n//       } else {\\n//         el.classList.remove('has-error');\\n//         el.dataset.validationTitle = '';\\n//         el.title = '';\\n//       }\\n//     }\\n\\n//     if (validResult && el.value && formGroup) {\\n//       formGroup.classList.add('has-success');\\n//     }\\n\\n//     if (!validResult) {\\n//       if (formGroup) {\\n//         formGroup.classList.add('has-error');\\n//         formGroup.classList.remove('has-success');\\n//       } else {\\n//         el.classList.add('has-error');\\n//         el.classList.remove('has-success');\\n//       }\\n//     }\\n\\n//     if (helpBlock) {\\n//       helpBlock.innerText = el.validationMessage;\\n//     } else {\\n//       el.dataset.validationTitle = el.validationMessage;\\n//       el.title = '';\\n//     }\\n\\n    return validResult;\\n  }\\n\\n  /**\\n   * @desc 생성자\\n   * @param {Element} - 대상 노드\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  constructor(el, options) {\\n    this.VERSION = '640';\\n    this.element = el;\\n    this.options = {\\n      data: {},\\n      methods: {},\\n      watchs: {},\\n      onLoad: function () {}\\n    };\\n    this.nodes = {};\\n    this.element.classList.add('JJReact');\\n    this.sysKeyword = [\\n      '$dataWatch',\\n      '$revoke',\\n      '$parent',\\n      '_index',\\n      '_crud_',\\n      '_changeData_',\\n      'isProxy'\\n    ];\\n\\n    if (options === undefined || options.data === undefined) {\\n      throw new Jinja.exception.jjException('error.3311', '옵션값이 부족함');\\n    }\\n\\n    this.init(options);\\n\\n    this.element.addEventListener('click', e => {\\n      if (!Object.is(Jinja.dom.closest(e.target, '.JJReact'), this.element))\\n        return;\\n\\n      if (Jinja.dom.closest(e.target, '[j-method]')) {\\n        let target = Jinja.dom.closest(e.target, '[j-method]');\\n        let method = target.getAttribute('j-method');\\n\\n        if (!target.parentElement.classList.contains('jj-active')) {\\n          e.stopPropagation();\\n        }\\n\\n        const paten = '\\\\\\\\w+|\\\\\\\\(.+\\\\\\\\)';\\n        const expReg = new RegExp(paten, 'gm');\\n\\n        let metsPara = method.match(expReg);\\n\\n        if (metsPara) {\\n          try {\\n            let pMethod = metsPara[0];\\n\\n            if (!this.options.methods[pMethod]) return;\\n\\n            let pPara = metsPara[1];\\n\\n            if (pPara) {\\n              pPara = pPara.startsWith('(') ? pPara.substr(1, 200) : pPara;\\n              pPara = pPara.endsWith(')')\\n                ? pPara.substr(0, pPara.length - 1)\\n              : pPara;\\n            }\\n\\n            const paraSpExp = new RegExp(/[a-zA-Z0-9가-힣-%#. :_()]+/, 'gm');\\n\\n            if (pPara && pPara.match(paraSpExp)) {\\n              let paras = pPara.match(paraSpExp).map(p => {\\n                let ret;\\n\\n                switch (p) {\\n                  case 'e':\\n                    ret = e;\\n\\n                    break;\\n                  case 'null':\\n                    ret = null;\\n\\n                    break;\\n                  default:\\n                    ret = p;\\n                }\\n\\n                return ret;\\n              });\\n\\n              if (paras.length) {\\n                paras.push(e);\\n              } else {\\n                paras.push(undefined);\\n                paras.push(e);\\n              }\\n\\n              Reflect.apply(this.options.methods[pMethod], this.options, paras);\\n            } else {\\n              let paras = [];\\n\\n              paras.push(undefined);\\n              paras.push(e);\\n\\n              Reflect.apply(this.options.methods[pMethod], this.options, paras);\\n            }\\n          } catch (ex) {\\n            alert(ex);\\n          }\\n        } else {\\n          Reflect.apply(this.options.methods[method], this.options, [e]);\\n        }\\n      }\\n    });\\n\\n    let methodKeys;\\n\\n    methodKeys = Object.keys(this.options.methods);\\n\\n    for (let i = 0; i < methodKeys.length; i++) {\\n      let bindMethod = this.options.methods[methodKeys[i]];\\n\\n      this.options.methods[methodKeys[i]] = bindMethod.bind(this.options);\\n    }\\n\\n    methodKeys = Object.keys(this.options.watchs);\\n\\n    for (let i = 0; i < methodKeys.length; i++) {\\n      let bindMethod = this.options.watchs[methodKeys[i]];\\n\\n      this.options.watchs[methodKeys[i]] = bindMethod.bind(this.options);\\n    }\\n\\n    if (this.options.onLoad) {\\n      this.options.onLoad = this.options.onLoad.bind(this.options);\\n      this.options.onLoad();\\n    }\\n  }\\n\\n  /**\\n   * @desc 클래스를 초기화 한다.\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  init(options) {\\n    Object.assign(this.options, options);\\n\\n    this.options.data = options.data = new Proxy(this.options.data, {\\n      get: (target, key) => Reflect.apply(this.proxyGet, this, [target, key]),\\n      set: (target, key, val) =>\\n      Reflect.apply(this.proxySet, this, [target, key, val]),\\n      deleteProperty: (target, key) =>\\n      Reflect.apply(this.proxyDel, this, [target, key])\\n    });\\n\\n    this.defineUI(this.element);\\n  }\\n\\n  /**\\n   * @desc 클래스를 삭제한다.\\n   * @example -\\n   */\\n  destroy() {\\n    this.options = null;\\n    this.nodes = null;\\n  }\\n\\n  /**\\n   * @desc 지정한 객체에 와쳐기능을 추가한다.\\n   * @param {Object} - 대삭 객체\\n   * @example -\\n   */\\n  makeDataWatch(obj) {\\n    if (typeof obj == 'object') {\\n      obj.$dataWatch = new JJDataWatch(obj, this);\\n\\n      Object.defineProperty(obj, '$dataWatch', {\\n        enumerable: false,\\n        configurable: false\\n      });\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 대상의 키에 해당하는 watchDetect를 설정한다.\\n   * @param {*} - 대상\\n   * @param {String} - 키\\n   * @param {*} - 이전값\\n   * @param {*} - 현재값\\n   * @example -\\n   */\\n  watchDetect(target, key, old, val) {\\n    if (this.options.watchs[key]) {\\n      Reflect.apply(this.options.watchs[key], this.options, [\\n        target,\\n        key,\\n        old,\\n        val\\n      ]);\\n    }\\n\\n    if (this.options.watchs['_data_']) {\\n      Reflect.apply(this.options.watchs['_data_'], this.options, [\\n        target,\\n        key,\\n        old,\\n        val\\n      ]);\\n    }\\n\\n    let nodes = this.nodes[key];\\n\\n    if (nodes) {\\n      nodes.forEach(item => {\\n        let content = this.getLiteralValue(item.literal);\\n        //if (item.node.value === undefined) {\\n        if (item.node.nodeType == 3) {\\n          if (item.node.textContent != content) {\\n            JJReact.nodeText(item.node, content);\\n          }\\n        } else {\\n          if (item.node.value != content) {\\n            JJReact.nodeBind(item.node, content, target, key);\\n          }\\n        }\\n      });\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 문자열을 리터럴정보로 변환하여 반환한다.\\n   * @param {String} - 문자열\\n   * @return {Object} - 리터럴정보\\n   * @example -\\n   */\\n  getLiteralMap(textContent) {\\n    textContent = textContent.trim();\\n\\n    let result = {\\n      literal: textContent,\\n      isDataBind: false,\\n      dataMap: []\\n    };\\n\\n    let firstPath = '';\\n\\n    if (!textContent.trim()) return result;\\n    if (!textContent.includes('${')) return result;\\n\\n    const expReg = new RegExp(/\\\\${.*?}/, 'gm');\\n\\n    let markExtract = textContent.match(expReg);\\n\\n    if (markExtract) {\\n      markExtract.forEach(markExp => {\\n        let dataExp = markExp.replace(\\n          new RegExp(/[.]\\\\w+\\\\(|\\\\w+\\\\(|[.][\\\\$]\\\\w+\\\\(/, 'gm'),\\n          ' ('\\n        );\\n\\n        const dataReg = new RegExp(\\n          /[a-zA-Z가-힣_'\\\"][a-zA-Z0-9가-힣-_\\\\[\\\\]]*[a-zA-Z0-9가-힣-_.'\\\"\\\\[\\\\]]+/,\\n          'gm'\\n        );\\n\\n        dataExp.match(dataReg).forEach((path, index) => {\\n          if (index === 0) firstPath = path;\\n\\n          let objMatechs = path.match(\\n            new RegExp(\\n              /.+(?=\\\\.[a-zA-Z0-9가-힣_]+$|\\\\[\\\\d+\\\\]$|\\\\[\\\\'\\\\+\\\\'\\\\]$|\\\\[\\\\\\\"\\\\\\\\.[a-zA-Z0-9가-힣_]\\\\\\\"\\\\]$)|\\\\.[a-zA-Z0-9가-힣_]+$|\\\\[\\\\d+\\\\]$|\\\\[\\\\'\\\\\\\\.[a-zA-Z0-9가-힣_]\\\\'\\\\]$|\\\\[\\\\\\\"\\\\w+\\\\\\\"\\\\]$/,\\n              'gm'\\n            )\\n          );\\n\\n          if (objMatechs) {\\n            let objPath = objMatechs[0];\\n            let keyReg = new RegExp(\\n              /[a-zA-Z0-9가-힣_]+|\\\\.~\\\\[a-zA-Z0-9가-힣_]+|[a-zA-Z0-9가-힣_]+\\\\[\\\\d+\\\\]|[a-zA-Z0-9가-힣_]+\\\\[\\\\'[a-zA-Z0-9가-힣_]+\\\\'\\\\]|[a-zA-Z0-9가-힣_]+\\\\[\\\\\\\"[a-zA-Z0-9가-힣_]+\\\\\\\"\\\\]/,\\n              'gm'\\n            );\\n            let keyName = objMatechs[1].match(keyReg)[0];\\n\\n            if (objPath != 'Jinja') {\\n              result.dataMap.push({\\n                objPath: objPath,\\n                key: keyName\\n              });\\n            }\\n          } else {\\n            result.dataMap.push({\\n              objPath: path\\n            });\\n          }\\n        });\\n      });\\n    }\\n\\n    if (result.dataMap.length === 1) {\\n      result.isDataBind = result.literal == '${' + firstPath + '}';\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 지정한 문자열을 리터럴바인드정보로 변환하여 반환한다.\\n   * @param {String} - 문자열\\n   * @return {Object} - 리터럴정보\\n   * @example -\\n   */\\n  getLiteralBindMap(textContent) {\\n    let result;\\n    let objReg = new RegExp(\\n      /.+(?=\\\\.[a-zA-Z0-9가-힣_]+$|\\\\[\\\\d+\\\\]$|\\\\[\\\\'\\\\+\\\\'\\\\]$|\\\\[\\\\\\\"\\\\\\\\.[a-zA-Z0-9가-힣_]\\\\\\\"\\\\]$)|\\\\.[a-zA-Z0-9가-힣_]+$|\\\\[\\\\d+\\\\]$|\\\\[\\\\'\\\\\\\\.[a-zA-Z0-9가-힣_]\\\\'\\\\]$|\\\\[\\\\\\\"\\\\w+\\\\\\\"\\\\]$/,\\n      'gm'\\n    );\\n    let objMatechs = textContent.match(objReg);\\n\\n    if (objMatechs) {\\n      let objPath = objMatechs[0];\\n      let keyReg = new RegExp(\\n        /[a-zA-Z0-9가-힣_]+|\\\\.~\\\\[a-zA-Z0-9가-힣_]+|[a-zA-Z0-9가-힣_]+\\\\[\\\\d+\\\\]|[a-zA-Z0-9가-힣_]+\\\\[\\\\'[a-zA-Z0-9가-힣_]+\\\\'\\\\]|[a-zA-Z0-9가-힣_]+\\\\[\\\\\\\"[a-zA-Z0-9가-힣_]+\\\\\\\"\\\\]/,\\n        'gm'\\n      );\\n      let keyName = objMatechs[1].match(keyReg)[0];\\n\\n      result = {\\n        literal: '${' + textContent + '}',\\n        isDataBind: true,\\n        dataMap: [{ objPath: objPath, key: keyName }]\\n      };\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 지정한 리터럴정보에서 리터럴값을 추출하여 반환한다.\\n   * @param {Object} - 리터럴정보\\n   * @return {String} - 리터럴값\\n   * @example -\\n   */\\n  getLiteralValue(data) {\\n    let result = '';\\n\\n    if(data.bindArray && data.bindArray.length > 1){\\n      result = [];\\n      data.bindArray.forEach(arrData =>{\\n        result.push(new Function('data', 'return ' + '`' + arrData.literal + '`')(\\n          this.options.data\\n        ));\\n\\n      })\\n\\n    } else {\\n      try {\\n        result = new Function('data', 'return ' + '`' + data.literal + '`')(\\n          this.options.data\\n        );\\n      } catch (ex) {}\\n      if (result == 'undefined') {\\n        result = '';\\n      }\\n\\n    }\\n\\n\\n\\n\\n    return Jinja.global.nullSpace(result);\\n  }\\n\\n  /**\\n   * @desc 지정한 객체에 원본 객체의 데이터를 복사한다.\\n   * @param {Object} - 대상 객체\\n   * @param {Object} - 원본 객체\\n   * @example -\\n   */\\n  objectAssign(to, from) {\\n    if (to === null || to === undefined) return;\\n    if (!to.$dataWatch) this.makeDataWatch(to);\\n    if (Array.isArray(to) && Array.isArray(from)) {\\n      to.$dataWatch.dataObj.reset(from);\\n\\n      return;\\n    }\\n    if (!from.$dataWatch) this.makeDataWatch(from);\\n\\n    let oldData = {};\\n\\n    for (let key in to) {\\n      oldData[key] = to[key];\\n    }\\n\\n    this.objectClean(to);\\n\\n    let fData;\\n\\n    for (let key in from) {\\n      fData = from[key];\\n\\n      if (this.sysKeyword.includes(key)) {\\n        to[key] = fData;\\n      } else if (fData && typeof fData == 'object') {\\n        if (!to.hasOwnProperty(key)) {\\n          if (Array.isArray(fData)) to[key] = [];\\n          else to[key] = {};\\n        }\\n\\n        this.objectAssign(to[key], fData);\\n      } else {\\n        to[key] = from[key];\\n      }\\n    }\\n\\n    for (let key in from) {\\n      if (!this.sysKeyword.includes(key)) {\\n        to.$dataWatch.nodeChange(key, oldData[key], from[key], true);\\n      }\\n    }\\n\\n    if (from.$dataWatch) {\\n      from.$dataWatch.addChildDataWatch(to.$dataWatch);\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 객체의 데이터를 삭제한다.\\n   * @param {Object} - 대상 객체\\n   * @example -\\n   */\\n  objectClean(obj) {\\n    if (!obj) return;\\n    if (!obj.$dataWatch) this.makeDataWatch(obj);\\n    if (obj.$dataWatch.parentDataWatch) {\\n      obj.$dataWatch.parentDataWatch.removeChildDataWatch(obj.$dataWatch);\\n    }\\n\\n    if (Array.isArray(obj)) {\\n      obj.splice(0, obj.length);\\n    } else {\\n      for (let i in obj) {\\n        if (this.sysKeyword.includes(i)) {\\n          obj[i] = '_changeData_' == i ? {} : null;\\n        } else {\\n          let data = obj[i];\\n\\n          if (typeof data == 'object') {\\n            this.objectClean(data);\\n          } else {\\n            let old = obj[i];\\n\\n            obj[i] = null;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 키의 노드정보를 설정한다.\\n   * @param {String} - 키\\n   * @param {Object} - 노드정보\\n   * @param {*} - 리터럴값\\n   * @example -\\n   */\\n  setNode(key, node, literal) {\\n    let item = { node: node, literal: literal };\\n    let items = this.nodes[key];\\n\\n    if (items && items.length) {\\n      if (items.some(item => item.node == node)) {\\n      } else {\\n        items.push(item);\\n      }\\n    } else {\\n      this.nodes[key] = [item];\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 키에 해당하는 노드 데이터를 삭제한다.\\n   * @param {String} - 키\\n   * @example -\\n   */\\n  clearNode(key) {\\n    let items = this.nodes[key];\\n\\n    if (items && items.length) {\\n      this.nodes[key] = [];\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 노드를 바인딩 처리한다.\\n   * @param {Element} - 대상 노드\\n   * @example -\\n   */\\n  defineUI(el) {\\n    let loopEl = el.querySelector('[j-for]');\\n\\n    while (loopEl) {\\n      new JJArrayLoop({\\n        el: loopEl,\\n        react: this\\n      });\\n\\n      loopEl = el.querySelector('[j-for]');\\n    }\\n\\n    this.defineUIForm(el);\\n  }\\n\\n  /**\\n   * @desc 지정한 노드에서 바인딩할 내용을 추출하여 바인딩한다.\\n   * @param {Element} - 대상 노드\\n   * @example -\\n   */\\n  defineUIForm(node) {\\n    if (['STYLE', 'SCRIPT'].includes(node.tagName)) return;\\n\\n    if (node.nodeType == 3 && node.textContent.trim()) {\\n      let d = this.getLiteralMap(node.textContent.trim());\\n\\n      if (d.dataMap.length) {\\n        d.dataMap.forEach(pathInfo => {\\n          let dataObj, objPath = pathInfo.objPath, key = pathInfo.key;\\n\\n          this.setNode(key, node, d);\\n\\n          try {\\n            dataObj = new Function('data', 'return ' + objPath)(\\n              this.options.data\\n            );\\n\\n            if (dataObj.$dataWatch) {\\n              dataObj.$dataWatch.setNodeText(key, node, d);\\n            }\\n          } catch (ex) {\\n            console.info(\\n              `객체가 생성되지 않은 ${node.textContent} 참조입니다.`\\n            );\\n          }\\n        });\\n\\n        let content = this.getLiteralValue(d);\\n\\n        JJReact.nodeText(node, content || node.textContent);\\n      }\\n    } else if (node.nodeType == 1) {\\n      if (node.hasAttributes()) {\\n        let attrs = node.attributes;\\n\\n        for (let i = attrs.length - 1; i >= 0; i--) {\\n          let attrName = attrs[i].name;\\n          let attrValue = attrs[i].value;\\n\\n          if (attrName == 'data-bind' && attrValue) {\\n            //             let d = this.getLiteralBindMap(attrValue);\\n            //             if(attrValue.split(\\\",\\\").length > 1){\\n            //               d = attrValue.split(\\\",\\\").map(attrVal=>this.getLiteralBindMap(attrVal))\\n            //             }\\n\\n            let  dArr = attrValue.split(\\\",\\\").map(attrVal=>this.getLiteralBindMap(attrVal));\\n\\n            dArr.forEach(d=>{\\n              d.bindArray = dArr;\\n              if (d.dataMap.length) {\\n\\n                //if (node.value === undefined) {\\n                if (node.nodeType == 3) {\\n\\n                  d.dataMap.forEach(pathInfo => {\\n                    let dataObj, objPath = pathInfo.objPath, key = pathInfo.key;\\n\\n                    dataObj = new Function('data', 'return ' + objPath)(\\n                      this.options.data\\n                    );\\n\\n                    try {\\n                      dataObj.$dataWatch.setNodeText(key, node, d);\\n                    } catch (ex) {\\n                      console.info(\\n                        `객체가 생성되지 않은 ${attrValue} 참조입니다.`\\n                      );\\n                    }\\n                  });\\n\\n                  //let content = this.getLiteralValue(d);\\n\\n                  //JJReact.nodeText(node, content);\\n                } \\n                else {\\n                  d.dataMap.forEach(pathInfo => {\\n                    let dataObj, objPath = pathInfo.objPath, key = pathInfo.key;\\n\\n                    dataObj = new Function('data', 'return ' + objPath)(\\n                      this.options.data\\n                    );\\n\\n                    try {\\n                      dataObj.$dataWatch.setNodeBind(key, node, d);\\n                    } catch (ex) {\\n                      console.info(\\n                        `객체가 생성되지 않은 ${attrValue} 참조입니다.`\\n                      );\\n                    }\\n                  });\\n\\n                  //let content = this.getLiteralValue(d);\\n\\n                  //JJReact.nodeBind(node, content);\\n                  //JJReact.nodeBind(item.node, content, target, key);\\n                }\\n              }\\n\\n              node.removeAttribute('data-bind');              \\n            })\\n\\n          } \\n          else if (attrValue) {\\n            let d = this.getLiteralMap(attrValue);\\n\\n            if (d.dataMap.length) {\\n              d.dataMap.forEach(pathInfo => {\\n                let dataObj, objPath = pathInfo.objPath, key = pathInfo.key;\\n\\n                dataObj = new Function('data', 'return ' + objPath)(\\n                  this.options.data\\n                );\\n\\n                try {\\n                  dataObj.$dataWatch.setNodeAttr(key, node, attrName, d);\\n                } catch (ex) {\\n                  console.info(`객체가 생성되지 않은 ${attrValue} 참조입니다.`);\\n                }\\n              });\\n\\n              let content = this.getLiteralValue(d);\\n\\n              JJReact.attrBind(node, attrName, content);\\n            }\\n          }\\n        }\\n      }\\n\\n      if (node.hasChildNodes()) {\\n        let children = node.childNodes;\\n\\n        for (let i = 0; i < children.length; i++) {\\n          this.defineUIForm(children[i]);\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 노드의 키에 해당하는 노드의 문자열정보를 바인딩한다.(수작업용)\\n   * @param {Element} - 대상 노드\\n   * @param {String} - 키\\n   * @param {Object} - 노드\\n   * @param {Object} - 문자열 정보\\n   * @example -\\n   */\\n  setNodeText(target, key, node, literalMap) {\\n    if (target) {\\n      if (!target.$dataWatch) {\\n        this.makeDataWatch(target);\\n      }\\n\\n      target.$dataWatch.setNodeText(key, node, literalMap);\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 노드의 키에 해당하는 노드의 속성정보를 바인딩한다.(수작업용)\\n   * @param {Elelment} - 대상 노드\\n   * @param {String} - 키\\n   * @param {Object} - 노드\\n   * @param {String} - 속성명\\n   * @param {Object} - 속성값 정보\\n   * @example -\\n   */\\n  setNodeAttr(target, key, node, attrName, literalMap) {\\n    if (target) {\\n      if (!target.$dataWatch) {\\n        this.makeDataWatch(target);\\n      }\\n\\n      target.$dataWatch.setNodeAttr(key, node, literalMap);\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 노드의 키에 해당하는 노드의 바인드정보를 바인딩한다.(수작업용)\\n   * @param {Elelment} - 대상 노드\\n   * @param {String} - 키\\n   * @param {Object} - 노드\\n   * @param {Object} - 속성값 정보\\n   * @example -\\n   */\\n  setNodeBind(target, key, node, literalMap) {\\n    if (target) {\\n      if (!target.$dataWatch) {\\n        this.makeDataWatch(target);\\n      }\\n\\n      target.$dataWatch.setNodeBind(key, node, literalMap);\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 노드의 키에 해당하는 노드 데이터를 삭제한다.\\n   * @param {Element} - 대상 노드\\n   * @param {String} - 키\\n   * @example -\\n   */\\n  XXclearNode(target, key) {\\n    if (!target.$dataWatch) {\\n      this.makeDataWatch(target);\\n    } else {\\n      target.$dataWatch.clearNode(key);\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 대상의 키에 해당하는 프록시 값을 반환한다.\\n   * @param {*} - 대상\\n   * @param {String} - 키\\n   * @return {*} - 프록시 값\\n   * @example -\\n   */\\n  proxyGet(target, key) {\\n    if (this.sysKeyword.includes(key)) {\\n      if (key == '$dataWatch' && !target.$dataWatch) {\\n        this.makeDataWatch(\\n          new Proxy(target, {\\n            get: (target, key) =>\\n            Reflect.apply(this.proxyGet, this, [target, key]),\\n            set: (target, key, val) =>\\n            Reflect.apply(this.proxySet, this, [target, key, val]),\\n            deleteProperty: (target, key) =>\\n            Reflect.apply(this.proxyDel, this, [target, key])\\n          })\\n        );\\n      }\\n\\n      switch (key) {\\n        case '_changeData_':\\n        case '_crud_':\\n        case '$dataWatch':\\n        case '$parent':\\n          return target[key];\\n        case '$revoke':\\n          return target;\\n        case '$value':\\n          return target;\\n        case '$index':\\n          return target.$parent.indexOf(target);\\n        case '_index':\\n          return target.$parent.indexOf(target);\\n        case 'isProxy':\\n          return true;\\n      }\\n    }\\n\\n    if (target[key] instanceof Date) return target[key];\\n\\n    if (typeof target[key] === 'object' && target[key] !== null) {\\n      return new Proxy(target[key], {\\n        get: (target, key) => Reflect.apply(this.proxyGet, this, [target, key]),\\n        set: (target, key, val) =>\\n        Reflect.apply(this.proxySet, this, [target, key, val]),\\n        deleteProperty: (target, key) =>\\n        Reflect.apply(this.proxyDel, this, [target, key])\\n      });\\n    } else {\\n      return target[key];\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 대상의 키에 해당하는 프록시 값을 설정한다.\\n   * @param {*} - 대상\\n   * @param {String} - 키\\n   * @param {*} - 값\\n   * @return {Boolean} - 성공여부\\n   * @example -\\n   */\\n  proxySet(target, key, val) {\\n    let isNewKey = !target.hasOwnProperty(key);\\n\\n    if (this.sysKeyword.includes(key)) {\\n      if (key == '_crud_' && val == 'R' && target.$dataWatch) {\\n        target.$dataWatch.clearCRUD();\\n      } else {\\n        target[key] = val;\\n      }\\n      return true;\\n    }\\n\\n    target = target.$revoke || target;\\n\\n    if (val) val = val.$revoke || val;\\n    if (Array.isArray(target)) key = parseInt(key);\\n\\n    let old = target[key];\\n\\n    if (typeof old == 'object') {\\n      if (old && !old.$dataWatch) {\\n        let porxyed = Reflect.apply(this.proxyGet, this, [target, key]);\\n\\n        old.$dataWatch = new JJDataWatch(porxyed, this);\\n\\n        Object.defineProperty(old, '$dataWatch', {\\n          enumerable: false,\\n          configurable: false\\n        });\\n      }\\n\\n      if (!val) {\\n        if (Array.isArray(old)) val = [];\\n        else val = {};\\n      }\\n    }\\n\\n    if (!target.$dataWatch) {\\n      this.makeDataWatch(target);\\n    }\\n\\n    if (\\n      !Jinja.global.isDate(val) &&\\n      val &&\\n      typeof old == 'object' &&\\n      typeof val == 'object'\\n    ) {\\n      this.objectAssign(old, val);\\n    } else {\\n      target[key] = val;\\n\\n      if (isNewKey && target.$dataWatch && typeof val == 'object') {\\n        target.$dataWatch.newKey(key);\\n      }\\n\\n      target.$dataWatch.change(key, old, val);\\n    }\\n\\n    this.watchDetect(target, key, old, val);\\n\\n    return true;\\n  }\\n\\n  /**\\n   * @desc 지정한 대상의 키에 해당하는 프록시 값을 삭제한다.\\n   * @param {*} - 대상\\n   * @param {String} - 키\\n   * @return {Boolean} - 성공여부\\n   * @example -\\n   */\\n  proxyDel(target, key) {\\n    if (target.$dataWatch) {\\n      target.$dataWatch.removeKey(key);\\n    }\\n\\n    return true;\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터 객체의 이전 데이터로 이동한다.\\n   * @param {Object} - 대상 데이터 객체\\n   * @example -\\n   */\\n  prev(dataObj) {\\n    dataObj.$dataWatch.arrayLoops.forEach(loop => {\\n      loop.prev();\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터 객체의 다음 데이터로 이동한다.\\n   * @param {Object} - 대상 데이터 객체\\n   * @example -\\n   */\\n  next(dataObj) {\\n    dataObj.$dataWatch.arrayLoops.forEach(loop => {\\n      loop.next();\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터 객체의 이전 페이지로 이동한다.\\n   * @param {Object} - 대상 데이터 객체\\n   * @example -\\n   */\\n  prevPage(dataObj) {\\n    dataObj.$dataWatch.arrayLoops.forEach(loop => {\\n      loop.prevPage();\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터 객체의 다음 페이지로 이동한다.\\n   * @param {Object} - 대상 데이터 객체\\n   * @example -\\n   */\\n  nextPage(dataObj) {\\n    dataObj.$dataWatch.arrayLoops.forEach(loop => {\\n      loop.nextPage();\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터 객체의 지정한 페이지로 이동한다.\\n   * @param {Object} - 대상 데이터 객체\\n   * @param {Number} - 페이지번호\\n   * @example -\\n   */\\n  gotoPage(dataObj, pageNum) {\\n    dataObj.$dataWatch.arrayLoops.forEach(loop => {\\n      loop.gotoPage(pageNum);\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터 객체의 마지막 페이지로 이동한다.\\n   * @param {Object} - 대상 데이터 객체\\n   * @example -\\n   */\\n  gotoEnd(dataObj) {\\n    dataObj.$dataWatch.arrayLoops.forEach(loop => {\\n      loop.gotoEnd();\\n    });\\n  }\\n}\\n\\n/**\\n * @classdesc JJDataWatch 관리를 위한 클래스\\n */\\nclass JJDataWatch {\\n  /**\\n   * @desc 생성자\\n   * @param {Object} - 데이터 객체\\n   * @param {Class} - React 클래스\\n   * @example -\\n   */\\n  constructor(dataObject, react) {\\n    this.VERSION = '640';\\n    this.guid = Jinja.global.uuid();\\n    this.react = react;\\n    this.reactData = react.options.data;\\n    this.dataObj = dataObject;\\n    this.nodes = {};\\n    this.parentDataWatch = null;\\n    this.childDataWatchs = [];\\n    this.arrayLoops = [];\\n\\n    this.init();\\n  }\\n\\n  /**\\n   * @desc 클래스를 초기화 한다.\\n   * @example -\\n   */\\n  init() {\\n    if (Array.isArray(this.dataObj)) {\\n      let objArray = this.dataObj.$revoke || this.dataObj;\\n\\n      objArray.push = (addData, callWatch) => {\\n        if (typeof addData == 'object') addData = Object.assign({}, addData);\\n\\n        let arrLength = Array.prototype.constructor.prototype.push.call(\\n          objArray,\\n          addData\\n        );\\n\\n        this.arrayLoops.forEach(loop => {\\n          loop.push(arrLength - 1);\\n        });\\n\\n        if (this.parentDataWatch) {\\n          if (callWatch != this.parentDataWatch) {\\n            this.parentDataWatch.dataObj.push(addData, this);\\n          }\\n        }\\n\\n        if (this.childDataWatchs.length)\\n          this.childDataWatchs.forEach($dataWatch => {\\n            if ($dataWatch != callWatch) {\\n              $dataWatch.dataObj.push(addData, this);\\n            }\\n          });\\n\\n        this.react.watchDetect(\\n          this.dataObj,\\n          'length',\\n          null,\\n          this.dataObj.length\\n        );\\n\\n        return arrLength || jarray.length - 1;\\n      };\\n\\n      Object.defineProperty(objArray, 'push', {\\n        enumerable: false,\\n        configurable: false\\n      });\\n\\n      objArray.removeIndex = index => {\\n        return objArray.splice(index, length || 1);\\n      };\\n\\n      Object.defineProperty(objArray, 'removeIndex', {\\n        enumerable: false,\\n        configurable: false\\n      });\\n\\n      objArray.splice = (start, length, addData, callWatch) => {\\n        if (typeof start == 'string') start = parseInt(start);\\n        if (typeof length == 'string') length = parseInt(length);\\n\\n        let deleteItem;\\n\\n        if (length === undefined) length = 1;\\n\\n        if (addData) {\\n          if (length === 1) {\\n            objArray.$dataWatch.dataObj[start] = addData;\\n          } else {\\n            let lastRow = Object.assign({}, objArray[objArray.length - 1]);\\n\\n            deleteItem = Array.prototype.constructor.prototype.splice.call(\\n              objArray,\\n              start,\\n              length,\\n              addData\\n            );\\n\\n            this.arrayLoops.forEach(loop => {\\n              loop.domBuild(0);\\n            });\\n\\n            const rowsLength = this.dataObj.length;\\n\\n            for (let i = start; i < rowsLength; i++) {\\n              if (this.dataObj[i].$dataWatch) {\\n                this.dataObj[i].$dataWatch.reIndex(i);\\n              }\\n            }\\n          }\\n        } else {\\n          deleteItem = Array.prototype.constructor.prototype.splice.call(\\n            objArray,\\n            start,\\n            length\\n          );\\n\\n          if (deleteItem.length) {\\n            this.arrayLoops.forEach(loop => {\\n              loop.splice(start, length);\\n            });\\n\\n            const rowsLength = this.dataObj.length;\\n\\n            for (let i = start; i < rowsLength; i++) {\\n              if (this.dataObj[i].$dataWatch) {\\n                this.dataObj[i].$dataWatch.reIndex(i);\\n              }\\n            }\\n          }\\n        }\\n\\n        if (this.parentDataWatch) {\\n          if (callWatch != this.parentDataWatch) {\\n            this.parentDataWatch.dataObj.splice(start, length, addData, this);\\n          }\\n        }\\n\\n        if (this.childDataWatchs.length)\\n          this.childDataWatchs.forEach($dataWatch => {\\n            if ($dataWatch != callWatch) {\\n              $dataWatch.dataObj.splice(start, length, addData, this);\\n            }\\n          });\\n\\n        this.react.watchDetect(\\n          this.dataObj,\\n          'length',\\n          null,\\n          this.dataObj.length\\n        );\\n\\n        return deleteItem;\\n      };\\n\\n      Object.defineProperty(objArray, 'splice', {\\n        enumerable: false,\\n        configurable: false\\n      });\\n\\n      objArray.reset = addData => {\\n        if (!Array.isArray(addData)) {\\n          alert('ARRAY타입에 잘못된 타입이 할당되었습니다.');\\n\\n          return;\\n        } else {\\n          objArray.splice(0, objArray.length);\\n\\n          addData.forEach((row, index, array) => {\\n            Array.prototype.constructor.prototype.push.call(objArray, row);\\n          });\\n\\n          this.arrayLoops.forEach(loop => {\\n            loop.reset(0);\\n          });\\n        }\\n\\n        this.react.watchDetect(\\n          this.dataObj,\\n          'length',\\n          null,\\n          this.dataObj.length\\n        );\\n      };\\n\\n      Object.defineProperty(objArray, 'reset', {\\n        enumerable: false,\\n        configurable: false\\n      });\\n\\n      objArray.move = (from, to) => {\\n        let so = Object.assign({}, objArray[from]);\\n\\n        objArray.splice(from, 1);\\n        objArray.splice(to, 0, so);\\n      };\\n\\n      Object.defineProperty(objArray, 'move', {\\n        enumerable: false,\\n        configurable: false\\n      });\\n\\n      objArray.multiSort = keys => {\\n        let rows = Jinja.global.json(Jinja.global.string(objArray));\\n\\n        rows = Jinja.json.sortRows(rows, keys);\\n\\n        objArray.reset(rows);\\n      };\\n\\n      Object.defineProperty(objArray, 'multiSort', {\\n        enumerable: false,\\n        configurable: false\\n      });\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 키에 해당하는 노드의 문자열정보를 바인딩한다.\\n   * @param {String} - 키\\n   * @param {Object} - 노드\\n   * @param {Object} - 문자열 정보\\n   * @example -\\n   */\\n  setNodeText(key, node, literalMap) {\\n    let item = { node: node, nodeType: 1 };\\n\\n    if (literalMap) item.literalMap = Object.assign({}, literalMap);\\n\\n    let items = this.nodes[key];\\n\\n    if (items && items.length) {\\n      if (items.some(item => item.node == node)) {\\n      } else {\\n        items.push(item);\\n      }\\n    } else {\\n      this.nodes[key] = [item];\\n    }\\n\\n    if (item.literalMap) {\\n      if (key == '_index') {\\n        JJReact.nodeText(\\n          item.node,\\n          this.getLiteralValue(item.literalMap, item.literalMap.index)\\n        );\\n      } else {\\n        JJReact.nodeText(\\n          item.node,\\n          this.getLiteralValue(item.literalMap, this.dataObj[key])\\n        );\\n      }\\n    } else {\\n      JJReact.nodeText(item.node, this.dataObj[key]);\\n    }\\n\\n    if (this.react && key != '_index') {\\n      this.react.watchDetect(this.dataObj, key, '', this.dataObj[key]);\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 키에 해당하는 노드 속성값을 바인딩한다.\\n   * @param {String} - 키\\n   * @param {Object} - 노드\\n   * @param {String} - 속성명\\n   * @param {Object} - 속성값 정보\\n   * @example -\\n   */\\n  setNodeAttr(key, node, attrName, literalMap) {\\n    let item = { node: node, nodeType: 2, attrName: attrName };\\n\\n    if (literalMap) item.literalMap = Object.assign({}, literalMap);\\n\\n    let items = this.nodes[key];\\n\\n    if (items && items.length) {\\n      if (items.some(item => item.node == node && item.attrName == attrName)) {\\n      } else {\\n        items.push(item);\\n      }\\n    } else {\\n      this.nodes[key] = [item];\\n    }\\n\\n    if (item.literalMap) {\\n      if (key == '_index') {\\n        JJReact.attrBind(\\n          item.node,\\n          item.attrName,\\n          this.getLiteralValue(item.literalMap, item.literalMap.index)\\n        );\\n      } else {\\n        JJReact.attrBind(\\n          item.node,\\n          item.attrName,\\n          this.getLiteralValue(item.literalMap, this.dataObj[key])\\n        );\\n      }\\n    } else {\\n      JJReact.attrBind(item.node, item.attrName, this.dataObj[key]);\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 키에 해당하는 노드의 바인드정보를 바인딩한다.\\n   * @param {Elelment} - 대상 노드\\n   * @param {String} - 키\\n   * @param {Object} - 노드\\n   * @param {Object} - 속성값 정보\\n   * @example -\\n   */\\n  setNodeBind(key, node, literalMap) {\\n    let item = { node: node, nodeType: 3, literalMap: literalMap };\\n    let items = this.nodes[key];\\n\\n    if (items && items.length) {\\n      if (items.some(item => item.node == node)) {\\n      }\\n      else {\\n        items.push(item);\\n\\n        node.addEventListener('input', e => {\\n          \\n          if (!JJReact.onValidate(e.target)) return;\\n          let old = this.dataObj[key];\\n          e.target._changeEl = true;\\n\\n          let inputValue;\\n          if(node.parentElement && node.parentElement.$closest('[data-bind-group]')){\\n            inputValue = node.parentElement.$closest('[data-bind-group]').dataBindGet(node);\\n            this.dataObj[key] = inputValue;\\n            e.target._changeEl = false;\\n          } \\n          else {\\n            inputValue = e.target.value;\\n            if(inputValue instanceof Promise){\\n              inputValue.then(value=>{\\n                this.dataObj[key] = value;\\n                e.target._changeEl = false;\\n              })\\n            } \\n            else {\\n\\n              if (typeof this.dataObj[key] == 'number') {\\n                if (inputValue === '') {\\n                  this.dataObj[key] = null;\\n                } else if (Number.isInteger(item.node.value||inputValue)) {\\n                  this.dataObj[key] = parseInt(item.node.value||inputValue);\\n                } else {\\n                  this.dataObj[key] = parseFloat(item.node.value||inputValue);\\n                }\\n              } else if (item.node.dataset.type == 'checkbox') {\\n                this.dataObj[key] = item.node.value||e.target.checked;\\n              } else if (item.node.dataset.type == 'date') {\\n                this.dataObj[key] = item.node.value||new Date(inputValue);\\n              } else if (item.node.dataset.type == 'datetime-local') {\\n                this.dataObj[key] = item.node.value||new Date(inputValue);\\n              } else if (['number', 'range'].includes(item.node.dataset.type)) {\\n                if (inputValue === '') {\\n                  this.dataObj[key] = null;\\n                } else if (Number.isInteger(item.node.value||inputValue)) {\\n                  this.dataObj[key] = parseInt(item.node.value||inputValue);\\n                } else {\\n                  this.dataObj[key] = parseFloat(item.node.value||inputValue);\\n                }\\n              } else {\\n                this.dataObj[key] = item.node.value||inputValue;\\n              }\\n\\n              e.target._changeEl = false;\\n            }\\n          }\\n        }); /* input end */\\n\\n      }\\n    } \\n    else {\\n      this.nodes[key] = [item];\\n\\n      node.addEventListener('input', e => {\\n        if (!JJReact.onValidate(e.target)) return;\\n        let old = this.dataObj[key];\\n        e.target._changeEl = true;\\n\\n        let inputValue;\\n        if(node.parentElement && node.parentElement.$closest('[data-bind-group]')){\\n          inputValue = node.parentElement.$closest('[data-bind-group]').dataBindGet(node);\\n          this.dataObj[key] = inputValue;\\n          e.target._changeEl = false;\\n        } \\n        else {\\n          inputValue = e.target.value;\\n          if(inputValue instanceof Promise){\\n            inputValue.then(value=>{\\n              this.dataObj[key] = value;\\n              e.target._changeEl = false;\\n            })\\n          } \\n          else {\\n\\n            if (typeof this.dataObj[key] == 'number') {\\n              if (inputValue === '') {\\n                this.dataObj[key] = null;\\n              } else if (Number.isInteger(item.node.value||inputValue)) {\\n                this.dataObj[key] = parseInt(item.node.value||inputValue);\\n              } else {\\n                this.dataObj[key] = parseFloat(item.node.value||inputValue);\\n              }\\n            } else if (item.node.dataset.type == 'checkbox') {\\n              this.dataObj[key] = item.node.value||e.target.checked;\\n            } else if (item.node.dataset.type == 'date') {\\n              this.dataObj[key] = item.node.value||new Date(inputValue);\\n            } else if (item.node.dataset.type == 'datetime-local') {\\n              this.dataObj[key] = item.node.value||new Date(inputValue);\\n            } else if (['number', 'range'].includes(item.node.dataset.type)) {\\n              if (inputValue === '') {\\n                this.dataObj[key] = null;\\n              } else if (Number.isInteger(item.node.value||inputValue)) {\\n                this.dataObj[key] = parseInt(item.node.value||inputValue);\\n              } else {\\n                this.dataObj[key] = parseFloat(item.node.value||inputValue);\\n              }\\n            } else {\\n              this.dataObj[key] = item.node.value||inputValue;\\n            }\\n\\n            e.target._changeEl = false;\\n          }\\n        }\\n      }); /* input end */\\n\\n      //         \\n      //         if (!JJReact.onValidate(e.target)) return;\\n\\n      //         let value;\\n      //         if(node.parentElement && node.parentElement.$closest('[data-bind-group]')){\\n      //           value = node.parentElement.$closest('[data-bind-group]').dataBindGet(node);\\n      //         } \\n\\n\\n      //         let old = this.dataObj[key];\\n\\n      //         e.target._changeEl = true;\\n\\n      //         if(e.target.value instanceof Promise){\\n      //           e.target.value.then(value=>{\\n      //             this.dataObj[key] = value;\\n      //             e.target._changeEl = false;\\n      //           })\\n      //         } \\n      //         else {?\\n\\n      //           if (typeof this.dataObj[key] == 'number') {\\n      //             if (e.target.value === '') {\\n      //               this.dataObj[key] = null;\\n      //             } else if (Number.isInteger(e.target.value)) {\\n      //               this.dataObj[key] = parseInt(e.target.value);\\n      //             } else {\\n      //               this.dataObj[key] = parseFloat(e.target.value);\\n      //             }\\n      //           } else if (item.node.dataset.type == 'checkbox') {\\n      //             this.dataObj[key] = item.node.value|| e.target.checked;\\n      //           } else if (item.node.dataset.type == 'date') {\\n      //             this.dataObj[key] = item.node.value|| new Date(e.target.value);\\n      //           } else if (item.node.dataset.type == 'datetime-local') {\\n      //             this.dataObj[key] = item.node.value|| new Date(e.target.value);\\n      //           } else if (['number', 'range'].includes(item.node.dataset.type)) {\\n      //             if (e.target.value === '') {\\n      //               this.dataObj[key] = null;\\n      //             } else if (Number.isInteger(item.node.value|| e.target.value)) {\\n      //               this.dataObj[key] = parseInt(item.node.value|| e.target.value);\\n      //             } else {\\n      //               this.dataObj[key] = parseFloat(item.node.value||e.target.value);\\n      //             }\\n      //           } else {\\n      //             let value = item.node.value||e.target.value;\\n\\n      //             this.dataObj[key] = value;\\n      //           }\\n\\n      //           e.target._changeEl = false;\\n      //         }\\n\\n      //         e.target._changeEl = false;\\n      //       });\\n    }\\n\\n    let value;\\n\\n    if (item.literalMap) {\\n      if (key == '_index') {\\n        value = this.getLiteralValue(item.literalMap, item.literalMap.index);\\n      } else {\\n        value = this.getLiteralValue(item.literalMap, this.dataObj[key]);\\n      }\\n    } else {\\n      value = this.dataObj[key];\\n    }\\n\\n    if (item.node.type == 'checkbox') {\\n      node.checked = value;\\n    } else {\\n      JJReact.nodeBind(node, value);\\n    }\\n\\n    if (this.react && key != '_index') {\\n      this.react.watchDetect(this.dataObj, key, '', this.dataObj[key]);\\n    }\\n  }\\n\\n\\n\\n  setNodeBind2(key, node, literalMap) {\\n    let item = { node: node, nodeType: 3, literalMap: literalMap };\\n    let items = this.nodes[key];\\n\\n    if (items && items.length) {\\n      if (items.some(item => item.node == node)) {\\n      }\\n      else {\\n        items.push(item);\\n\\n        node.addEventListener('input', e => {\\n          if (!JJReact.onValidate(e.target)) return;\\n\\n          let old = this.dataObj[key];\\n\\n          e.target._changeEl = true;\\n\\n          if (typeof this.dataObj[key] == 'number') {\\n            if (e.target.value === '') {\\n              this.dataObj[key] = null;\\n            } else if (Number.isInteger(e.target.value)) {\\n              this.dataObj[key] = parseInt(e.target.value);\\n            } else {\\n              this.dataObj[key] = parseFloat(e.target.value);\\n            }\\n          } else if (item.node.type == 'checkbox') {\\n            this.dataObj[key] = e.target.checked;\\n          } else if (item.node.type == 'date') {\\n            this.dataObj[key] = new Date(e.target.value);\\n          } else if (item.node.type == 'datetime-local') {\\n            this.dataObj[key] = new Date(e.target.value);\\n          } else if (['number', 'range'].includes(item.node.type)) {\\n            if (e.target.value === '') {\\n              this.dataObj[key] = null;\\n            } else if (Number.isInteger(e.target.value)) {\\n              this.dataObj[key] = parseInt(e.target.value);\\n            } else {\\n              this.dataObj[key] = parseFloat(e.target.value);\\n            }\\n          } else {\\n            let value = e.target.value;\\n\\n            this.dataObj[key] = value;\\n          }\\n\\n          e.target._changeEl = false;\\n\\n\\n\\n\\n        });\\n      }\\n    } \\n    else {\\n      this.nodes[key] = [item];\\n\\n      node.addEventListener('input', e => {\\n        if (!JJReact.onValidate(e.target)) return;\\n\\n        let old = this.dataObj[key];\\n\\n        e.target._changeEl = true;\\n\\n        if (typeof this.dataObj[key] == 'number') {\\n          if (e.target.value === '') {\\n            this.dataObj[key] = null;\\n          } else if (Number.isInteger(e.target.value)) {\\n            this.dataObj[key] = parseInt(e.target.value);\\n          } else {\\n            this.dataObj[key] = parseFloat(e.target.value);\\n          }\\n        } else if (item.node.type == 'checkbox') {\\n          this.dataObj[key] = e.target.checked;\\n        } else if (item.node.type == 'date') {\\n          this.dataObj[key] = new Date(e.target.value);\\n        } else if (item.node.type == 'datetime-local') {\\n          this.dataObj[key] = new Date(e.target.value);\\n        } else if (['number', 'range'].includes(item.node.type)) {\\n          if (e.target.value === '') {\\n            this.dataObj[key] = null;\\n          } else if (Number.isInteger(e.target.value)) {\\n            this.dataObj[key] = parseInt(e.target.value);\\n          } else {\\n            this.dataObj[key] = parseFloat(e.target.value);\\n          }\\n        } else {\\n          let value = e.target.value;\\n\\n          this.dataObj[key] = value;\\n        }\\n\\n        e.target._changeEl = false;\\n      });\\n    }\\n\\n    let value;\\n\\n    if (item.literalMap) {\\n      if (key == '_index') {\\n        value = this.getLiteralValue(item.literalMap, item.literalMap.index);\\n      } else {\\n        value = this.getLiteralValue(item.literalMap, this.dataObj[key]);\\n      }\\n    } else {\\n      value = this.dataObj[key];\\n    }\\n\\n    if (item.node.type == 'checkbox') {\\n      node.checked = value;\\n    } else {\\n      JJReact.nodeBind(node, value);\\n    }\\n\\n    if (this.react && key != '_index') {\\n      this.react.watchDetect(this.dataObj, key, '', this.dataObj[key]);\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 키에 해당하는 노드의 값을 변경한다.\\n   * @param {String} - 키\\n   * @param {*} - 이전값\\n   * @param {*} - 이후값\\n   * @example -\\n   */\\n  change(key, old, val) {\\n    if (old === val) return;\\n\\n    this.nodeChange(key, old, val);\\n\\n    if (this.parentDataWatch)\\n      this.parentDataWatch.parentChange(key, old, val, this);\\n\\n    if (this.childDataWatchs.length)\\n      this.childDataWatchs.forEach($dataWatch => {\\n        if ($dataWatch != this) {\\n          $dataWatch.childsChange(key, old, val);\\n        }\\n      });\\n  }\\n\\n  /**\\n   * @desc 지정한 키에 해당하는 노드의 값을 변경한다.\\n   * @param {String} - 키\\n   * @param {*} - 이전값\\n   * @param {*} - 이후값\\n   * @param {Boolean} - 데이터 입력 여부\\n   * @example -\\n   */\\n  nodeChange(key, old, val, isSetData) {\\n    if (old === val) return;\\n\\n    let target = this.dataObj.$revoke || this.dataObj;\\n\\n    target[key] = val;\\n\\n    if (\\n      target.hasOwnProperty('_crud_') &&\\n      ['R', 'U'].includes(target['_crud_']) &&\\n      key.substr(0, 1) != '_'\\n    ) {\\n      if (isSetData) {\\n      } else {\\n        if (target['_changeData_'][key])\\n          target['_changeData_'][key]['val'] = val;\\n        else {\\n          target['_changeData_'][key] = {\\n            old: old,\\n            val: val\\n          };\\n        }\\n\\n        if (\\n          target['_changeData_'][key].old == target['_changeData_'][key].val\\n        ) {\\n          delete target['_changeData_'][key];\\n        }\\n\\n        target['_crud_'] = Object.keys(target['_changeData_']).length\\n          ? 'U'\\n        : 'R';\\n      }\\n\\n      this.nodeChange('_crud_', null, target['_crud_']);\\n    }\\n\\n    let items = this.nodes[key];\\n\\n    if (items && items.length) {\\n      items.forEach(item => {\\n        if (item.literalMap && key == '_index') {\\n          item.literalMap.index = val;\\n        }\\n\\n        switch (item.nodeType) {\\n          case 1: {\\n            if (item.literalMap) {\\n              JJReact.nodeText(\\n                item.node,\\n                this.getLiteralValue(item.literalMap, val)\\n              );\\n            } else {\\n              JJReact.nodeText(item.node, val);\\n            }\\n\\n            break;\\n          }\\n          case 2: {\\n            if (item.literalMap) {\\n              let litval = this.getLiteralValue(item.literalMap, val);\\n\\n              JJReact.attrBind(item.node, item.attrName, litval);\\n            } else {\\n              JJReact.attrBind(item.node, item.attrName, this.dataObj[key]);\\n            }\\n\\n            break;\\n          }\\n          case 3: {\\n            if (target['_changeData_']) {\\n              item.node.setAttribute(\\n                'crud',\\n                target['_changeData_'][key] ? target['_crud_'] : ''\\n              );\\n            }\\n\\n            if (item.node._changeEl) {\\n            } else {\\n              if (item.node.type == 'checkbox') {\\n                item.node.checked = val;\\n              } else {\\n                JJReact.nodeBind(item.node, val);\\n              }\\n            }\\n\\n            break;\\n          }\\n        }\\n      });\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 키에 해당하는 노드와 부모노드의 값을 변경한다.\\n   * @param {String} - 키\\n   * @param {*} - 이전값\\n   * @param {*} - 이후값\\n   * @param {Object} - 호출한 자식노드\\n   * @example -\\n   */\\n  parentChange(key, old, val, callChild) {\\n    this.nodeChange(key, old, val);\\n\\n    if (this.parentDataWatch) this.parentDataWatch.parentChange(key, old, val);\\n\\n    if (this.childDataWatchs.length)\\n      this.childDataWatchs.forEach($dataWatch => {\\n        if ($dataWatch != callChild) {\\n          $dataWatch.childsChange(key, old, val);\\n        }\\n      });\\n  }\\n\\n  /**\\n   * @desc 지정한 키에 해당하는 노드와 자식노드의 값을 변경한다.\\n   * @param {String} - 키\\n   * @param {*} - 이전값\\n   * @param {*} - 이후값\\n   * @example -\\n   */\\n  childsChange(key, old, val) {\\n    this.nodeChange(key, old, val);\\n\\n    if (this.childDataWatchs.length)\\n      this.childDataWatchs.forEach($dataWatch => {\\n        if ($dataWatch != this) {\\n          $dataWatch.childsChange(key, old, val);\\n        }\\n      });\\n  }\\n\\n  /**\\n   * @desc 클래스를 재생성한다.\\n   * @example -\\n   */\\n  refresh() {\\n    for (let key in this.nodes) {\\n      let val = this.dataObj[key];\\n      let items = this.nodes[key];\\n\\n      if (items && items.length) {\\n        items.forEach(item => {\\n          if (item.literalMap && key == '_index') {\\n            item.literalMap.index = val;\\n          }\\n\\n          item.literalMap.aliasData = this.dataObj;\\n\\n          switch (item.nodeType) {\\n            case 1: {\\n              if (item.literalMap && item.literalMap.isDataBind) {\\n                JJReact.nodeText(item.node, val);\\n              } else if (item.literalMap && !item.literalMap.isDataBind) {\\n                JJReact.nodeText(\\n                  item.node,\\n                  this.getLiteralValue(item.literalMap, val)\\n                );\\n              } else {\\n                JJReact.nodeText(item.node, val);\\n              }\\n\\n              break;\\n            }\\n            case 2: {\\n              if (item.literalMap && item.literalMap.isDataBind) {\\n                JJReact.attrBind(item.node, item.attrName, val);\\n              } else if (item.literalMap && !item.literalMap.isDataBind) {\\n                let litval = this.getLiteralValue(item.literalMap, val);\\n\\n                JJReact.attrBind(item.node, item.attrName, litval);\\n              } else {\\n                JJReact.attrBind(item.node, item.attrName, val);\\n              }\\n\\n              break;\\n            }\\n            case 3: {\\n              if (item.node._changeEl) {\\n              } else {\\n                JJReact.nodeBind(item.node, val);\\n              }\\n\\n              break;\\n            }\\n          }\\n        });\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 순번으로 노드 순번을 재설정한다.\\n   * @param {Number} - 순번\\n   * @example -\\n   */\\n  reIndex(index) {\\n    let items = this.nodes['_index'];\\n\\n    if (items && items.length) {\\n      items.forEach(item => {\\n        item.literalMap.index = index;\\n\\n        switch (item.nodeType) {\\n          case 1: {\\n            if (item.literalMap) {\\n              JJReact.nodeText(\\n                item.node,\\n                this.getLiteralValue(item.literalMap, index)\\n              );\\n            } else {\\n              JJReact.nodeText(item.node, index);\\n            }\\n\\n            break;\\n          }\\n          case 2: {\\n            if (item.literalMap) {\\n              let litval = this.getLiteralValue(item.literalMap, index);\\n\\n              JJReact.attrBind(item.node, item.attrName, litval);\\n            } else {\\n              JJReact.attrBind(item.node, item.attrName, index);\\n            }\\n\\n            break;\\n          }\\n          case 3: {\\n            JJReact.nodeBind(item.node, index);\\n\\n            break;\\n          }\\n        }\\n      });\\n    }\\n  }\\n\\n  /**\\n   * @desc CRUD 정보를 삭제한다.\\n   * @example -\\n   */\\n  clearCRUD() {\\n    this.dataObj.$revoke._crud_ = 'R';\\n    this.dataObj.$revoke._changeData_ = {};\\n\\n    Object.keys(this.nodes).forEach(key => {\\n      let items = this.nodes[key];\\n\\n      if (items && items.length) {\\n        items.forEach(item => {\\n          if (item.literalMap && key == '_index') {}\\n\\n          switch (item.nodeType) {\\n            case 1: {\\n              break;\\n            }\\n            case 2: {\\n              break;\\n            }\\n            case 3: {\\n              item.node.setAttribute('crud', '');\\n\\n              break;\\n            }\\n          }\\n        });\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 키를 루프목록에 추가한다.\\n   * @param {String} - 키\\n   * @example -\\n   */\\n  newKey(key) {\\n    this.arrayLoops.forEach(loop => loop.push(key));\\n  }\\n\\n  /**\\n   * @desc 지정한 키를 루프목록에서 삭제한다.\\n   * @param {String} - 키\\n   * @example -\\n   */\\n  removeKey(key) {\\n    this.arrayLoops.forEach(loop => loop.remove(key));\\n  }\\n\\n  /**\\n   * @desc 지정한 루프를 루프목록에 추가한다.\\n   * @param {Object} - 루프\\n   * @example -\\n   */\\n  setArrayLoop(arrayLoop) {\\n    if (!this.arrayLoops.includes(arrayLoop)) {\\n      this.arrayLoops.push(arrayLoop);\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터와치 정보를 자식데이터와치로 추가한다.\\n   * @param {Object} - 데이터와치\\n   * @example -\\n   */\\n  addChildDataWatch(dataWatch) {\\n    if (!this.childDataWatchs.includes(dataWatch)) {\\n      this.childDataWatchs.push(dataWatch);\\n\\n      dataWatch.parentDataWatch = this;\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터와치 정보를 자식데이터와치에서 삭제한다.\\n   * @param {Object} - 데이터와치\\n   * @example -\\n   */\\n  removeChildDataWatch(dataWatch) {\\n    let findIndex = this.childDataWatchs.indexOf(dataWatch);\\n\\n    if (findIndex >= 0) {\\n      this.childDataWatchs.splice(findIndex, 1);\\n\\n      dataWatch.parentDataWatch = null;\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 리터럴정보에서 리터럴값을 추출하여 반환한다.\\n   * @param {Object} - 리터럴정보\\n   * @return {String} - 리터럴값\\n   * @example -\\n   */\\n  getLiteralValue(literalMap, val, bindArray) {\\n    let result;\\n    let aliasData = literalMap.aliasData || this.dataObj;\\n\\n    if(bindArray && bindArray.length >1){\\n      \\n    }\\n\\n    try {\\n      if (literalMap.isDataBind) {\\n        result = val;\\n\\n        if (result === undefined) {\\n          result = null;\\n//           if (Array.isArray(aliasData.$parent)) {\\n//             if (literalMap.dataMap[0].key == '_index') {\\n//               result = this.dataObj.$parent.indexof(this.dataObj);\\n//             } else if (literalMap.dataMap[0].key == 'value') {\\n//               result = val;\\n//             } else if (literalMap.dataMap[0].key === undefined) {\\n//               result = aliasData;\\n//             }\\n//           } else {\\n//             if (literalMap.dataMap[0].key == '_index') {\\n//               result = literalMap.index;\\n//             } else if (literalMap.dataMap[0].key == 'value') {\\n//               result = val;\\n//             } else if (literalMap.dataMap[0].key === undefined) {\\n//               result = aliasData;\\n//             }\\n//           }\\n        }\\n      } else {\\n        let aliasDataValue = Object.assign({}, aliasData, {\\n          value: val,\\n          _index: literalMap.index\\n        });\\n\\n        result = new Function(\\n          'data, ' + literalMap.alias,\\n          ' return ' + '`' + literalMap.literal + '`;'\\n        )(this.reactData, aliasDataValue);\\n      }\\n    } catch (ex) {\\n      result = ex;\\n    }\\n\\n    if (result == 'undefined') {\\n      result = '';\\n    }\\n\\n    return Jinja.global.nullSpace(result);\\n  }\\n\\n  /**\\n   * @desc 지정한 객체에 원본 객체의 데이터를 복사한다.\\n   * @param {Object} - 대상 객체\\n   * @param {Object} - 원본 객체\\n   * @example -\\n   */\\n  objectAssign(to, from) {\\n    this.objectClean(to);\\n\\n    if (Array.isArray(to) && Array.isArray(from)) {\\n      to.reset(from);\\n    } else {\\n      for (let i in from) {\\n        let fData = from[i];\\n\\n        if (fData && typeof fData == 'object') {\\n          if (!to.hasOwnProperty(i)) {\\n            if (Array.isArray(fData)) to[i] = [];\\n            else to[i] = {};\\n          }\\n\\n          this.objectAssign(to[i], fData);\\n        } else {\\n          let old = to[i];\\n\\n          to[i] = fData;\\n          to.$dataWatch.nodeChange(i, old, fData);\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 객체의 데이터를 삭제한다.\\n   * @param {Object} - 대상 객체\\n   * @example -\\n   */\\n  objectClean(obj) {\\n    if (!obj.$dataWatch) this.makeDataWatch(obj);\\n    if (obj.$dataWatch.parentDataWatch) {\\n      obj.$dataWatch.parentDataWatch.removeChildDataWatch(obj.$dataWatch);\\n    }\\n\\n    if (Array.isArray(obj)) {\\n      obj.splice(0, obj.length);\\n    } else {\\n      for (let i in obj) {\\n        let data = obj[i];\\n\\n        if (typeof data == 'object') {\\n          this.objectClean(data);\\n        } else {\\n          let old = obj[i];\\n\\n          obj[i] = null;\\n          obj.$dataWatch.nodeChange(i, old, null);\\n        }\\n      }\\n    }\\n  }\\n}\\n\\n/**\\n * @classdesc JJArrayLoop 관리를 위한 클래스\\n */\\nclass JJArrayLoop {\\n  /**\\n   * @desc 지정한 노드 정보를 데이터로 변환하여 반환한다.\\n   * @param {Element} - 대상 노드\\n   * @return {Object} - 노드 데이터\\n   * @example -\\n   */\\n  _domArray(node) {\\n    let result = {\\n      \\\"t\\\": \\\"\\\"\\n    };\\n\\n    if (node.nodeType == 3 && node.textContent.trim()) {\\n      result.t = \\\"#TEXT\\\";\\n      result.v = node.textContent;\\n\\n      let d = this.getLiteralMap(node.textContent);\\n\\n      if (d.dataMap.length)\\tresult.d = d;\\n    } \\n    else if (node.nodeType == 1) {\\n      result.t = node.tagName;\\n\\n      if(node.hasAttributes()){\\n        let attrs = node.attributes;\\n\\n        result.a = {};\\n\\n        for(let i=attrs.length-1; i>=0; i--) {\\n          let attrName = attrs[i].name;\\n          let attrValue = attrs[i].value;\\n\\n          if (attrName==\\\"data-bind\\\") {\\n            result.a[attrName] = { \\\"v\\\": attrValue};\\n\\n            if (attrValue){\\n              let d = this.getLiteralBindMap(attrValue);\\n\\n              if (d.dataMap.length)\\tresult.a[attrName].d = d;\\n            }\\n          } else {\\n            result.a[attrName] = { \\\"v\\\": attrValue};\\n\\n            if (attrValue){\\n              let d = this.getLiteralMap(attrValue);\\n\\n              if (d.dataMap.length)\\tresult.a[attrName].d = d;\\n            }\\n          }\\n        }\\n      }\\n\\n      if (!node.getAttribute(\\\"data-render\\\") && node.hasChildNodes()) {\\n        result.c = [];\\n        let children = node.childNodes;\\n\\n        for (let i = 0; i < children.length; i++) {\\n          let cnode = this._domArray(children[i]);\\n\\n          if (cnode){\\n            result.c.push(cnode);\\n          }\\n        }\\n      }\\n    }\\n\\n    if(result.t) {\\n      return result;\\n    } else {\\n      return null;\\n    }\\n  }\\n\\n  /**\\n   * @desc 노드 데이터를 노드로 변환하여 반환한다.\\n   * @param {Number} - 데이터 순번\\n   * @param {Object} - 노드 데이터\\n   * @return {Element} - 노드\\n   * @example -\\n   */\\n  _domParse(loopIndex, domData) {\\n    let node;\\n    let loopData = this.options.dataObj[loopIndex];\\n\\n    if (['svg', 'circle', 'path', 'text'].includes(domData.t)) {\\n      node = document.createElementNS('http://www.w3.org/2000/svg', domData.t);\\n    } else {\\n      node = document.createElement(domData.t);\\n    }\\n\\n    if (domData.a) {\\n      this.domParseAttr(node, domData.a, loopIndex, loopData);\\n    }\\n\\n    if (node.getAttribute('j-for')) {\\n      let dataObj;\\n      let loopfor = node.getAttribute('j-for').split('in')[1].trim();\\n\\n      if (loopfor == this.options.alias + '.value') {\\n        dataObj = loopData;\\n      } else {\\n        dataObj = new Function(\\n          'data, ' + this.options.alias,\\n          'return ' + loopfor\\n        )(this.options.react.options.data, loopData);\\n      }\\n\\n      if (dataObj) {\\n        new JJArrayLoop({\\n          el: node,\\n          react: this.options.react,\\n          orgDataObj: dataObj,\\n          vdom: domData.c[0]\\n        });\\n      }\\n\\n      node.removeAttribute('j-for');\\n    } else {\\n      if (domData.c) {\\n        domData.c.forEach(childDomData => {\\n          switch (childDomData.t) {\\n            case '#TEXT': {\\n              let content, childNode;\\n\\n              if (childDomData.d) {\\n                content = this.getLiteralValue(childDomData.d, loopIndex);\\n                childNode = document.createTextNode(content);\\n\\n                childDomData.d.dataMap.forEach(pathInfo => {\\n                  let dataObj, objPath = pathInfo.objPath, key = pathInfo.key;\\n\\n                  if (objPath == this.options.alias) {\\n                    if (typeof this.options.dataObj[loopIndex] == 'object') {\\n                      dataObj = this.options.dataObj[loopIndex];\\n                    } else {\\n                      dataObj = this.options.dataObj;\\n                      key = loopIndex;\\n                    }\\n                  } else {\\n                    dataObj = new Function(\\n                      'data,' + this.options.alias,\\n                      'return ' + objPath\\n                    )(\\n                      this.options.react.options.data,\\n                      this.options.dataObj[loopIndex]\\n                    );\\n                  }\\n\\n                  if (dataObj) {\\n                    childDomData.d.aliasData = loopData;\\n                    dataObj.$dataWatch.setNodeText(\\n                      key,\\n                      childNode,\\n                      childDomData.d\\n                    );\\n                  }\\n                });\\n              } else {\\n                content = childDomData.v;\\n                childNode = document.createTextNode(content);\\n              }\\n\\n              node.appendChild(childNode);\\n\\n              break;\\n            }\\n            case 'INPUT': {\\n              let childNode = document.createElement(childDomData.t);\\n\\n              this.domParseAttr(childNode, childDomData.a, loopIndex);\\n\\n              node.appendChild(childNode);\\n\\n              break;\\n            }\\n            case 'SELECT': {\\n              let childNode = document.createElement(childDomData.t);\\n\\n              childDomData.c.forEach(optionDomData => {\\n                let option = this._domParse(loopIndex, optionDomData);\\n\\n                childNode.appendChild(option);\\n              });\\n\\n              this.domParseAttr(childNode, childDomData.a, loopIndex);\\n\\n              node.appendChild(childNode);\\n\\n              break;\\n            }\\n\\n            default:\\n              let childNode = this._domParse(loopIndex, childDomData);\\n\\n              if (childNode) node.appendChild(childNode);\\n\\n              break;\\n          }\\n        });\\n      }\\n    }\\n\\n    return node;\\n  }\\n\\n  /**\\n   * @desc 생성자\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  constructor(options) {\\n    this.VERSION = '640';\\n    this.options = {\\n      el: null,\\n      pager: null,\\n      react: null,\\n      dataPath: null,\\n      alias: null,\\n      startIndex: 0,\\n      pageLength: 10,\\n      activeMove: false,\\n      vdom: null\\n    };\\n\\n    this.keyDom = {};\\n    this.init(options);\\n  }\\n\\n  /**\\n   * @desc 클래스를 초기화 한다.\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  init(options) {\\n    Object.assign(this.options, options);\\n\\n    let pager = this.options.el.getAttribute('pager');\\n\\n    this.options.activeMove =\\n      this.options.el.getAttribute('data-active-move') == 'true';\\n\\n    if (\\n      pager &&\\n      this.options.react.element.querySelector('[jj-id=\\\"' + pager + '\\\"]')\\n    ) {\\n      this.options.pager = this.options.react.element.querySelector(\\n        '[jj-id=\\\"' + pager + '\\\"]'\\n      );\\n    }\\n\\n    let loopfor = this.options.el.getAttribute('j-for');\\n\\n    this.options.dataPath = loopfor.split(' in ')[1].trim();\\n    this.options.alias = loopfor.split('in')[0].trim();\\n    this.options.jif = this.options.el.getAttribute('j-if');\\n\\n    this.options.pageLength =\\n      parseInt(this.options.el.getAttribute('j-page')) ||\\n      this.options.pageLength;\\n\\n    try {\\n      if (!this.options.orgDataObj) {\\n        this.options.orgDataObj = new Function(\\n          'data',\\n          'return ' + this.options.dataPath\\n        )(this.options.react.options.data);\\n      }\\n\\n      if (!this.options.orgDataObj.$dataWatch) {\\n        this.options.react.makeDataWatch(this.options.orgDataObj);\\n      }\\n\\n      this.options.orgDataObj.$dataWatch.setArrayLoop(this);\\n    } catch (e) {\\n      let errMsg = `JJReact ArrayLoop.init: ${this.options.dataPath}: 데이터를 찾을수 없습니다.\\\\n ${e}`;\\n\\n      alert(errMsg);\\n\\n      console.error(errMsg);\\n    }\\n\\n    if (this.options.jif) {\\n      this.options.dataObj = this.options.orgDataObj.filter((row, index) => {\\n        let rlt = new Function(\\n          'data,' + this.options.alias,\\n          'return `' + this.options.jif + '`'\\n        )(this.options.react.options.data, row);\\n\\n        if (rlt) {\\n          this.options.react.makeDataWatch(row);\\n        }\\n\\n        return rlt;\\n      });\\n\\n      if (!this.options.dataObj.$dataWatch) {\\n        this.options.react.makeDataWatch(this.options.dataObj);\\n      }\\n\\n      this.options.dataObj.$dataWatch.setArrayLoop(this);\\n    } else {\\n      this.options.dataObj = this.options.orgDataObj;\\n    }\\n\\n    if (this.options.pager)\\n      this.options.pager.bindData(this.options.dataObj, this);\\n\\n    if (!this.options.vdom) {\\n      if (this.options.el.querySelector('template')) {\\n        let htmlBox = document.createElement('div');\\n\\n        htmlBox.innerHTML = this.options.el.querySelector('template').innerHTML;\\n\\n        this.options.vdom = this.domArray(htmlBox);\\n      } else {\\n        this.options.vdom = this.domArray(this.options.el);\\n      }\\n    }\\n\\n    this.options.el.removeAttribute('j-for');\\n    this.options.el.removeAttribute('j-page');\\n    this.options.el.removeAttribute('j-if');\\n\\n    Jinja.dom.empty(this.options.el);\\n\\n    if (Array.isArray(this.options.dataObj)) {\\n      this.domBuild(0);\\n    } else {\\n      for (let index in this.options.dataObj) {\\n        let newNodes = this.domParse(index);\\n\\n        newNodes.forEach(newNode => this.options.el.appendChild(newNode));\\n\\n        this.keyDom[index] = newNodes;\\n      }\\n    }\\n\\n    if (\\n      !this.options.pager &&\\n      Array.isArray(this.options.dataObj) &&\\n      this.options.activeMove\\n    ) {\\n      this.options.el.addEventListener('keydown', e => {\\n        if (e.target.matches('input, textarea, select')) {\\n          return;\\n        }\\n\\n        if (e.keyCode == 38) {\\n          e.stopPropagation();\\n          e.preventDefault();\\n\\n          this.prev();\\n        }\\n\\n        if (e.keyCode == 40) {\\n          e.stopPropagation();\\n          e.preventDefault();\\n\\n          this.next();\\n        }\\n\\n        if (e.keyCode == 33) {\\n          e.stopPropagation();\\n          e.preventDefault();\\n\\n          this.prevPage();\\n        }\\n\\n        if (e.keyCode == 34) {\\n          e.stopPropagation();\\n          e.preventDefault();\\n\\n          this.nextPage();\\n        }\\n      });\\n\\n      this.options.el.addEventListener('wheel', e => {\\n        if (e.target.matches('input, textarea, select')) {\\n          return;\\n        }\\n\\n        e.stopPropagation();\\n        e.preventDefault();\\n\\n        if (e.deltaY < 0 && e.ctrlKey) {\\n          this.prevPage();\\n        } else if (e.deltaY < 0) {\\n          this.prev();\\n        } else if (e.deltaY > 0 && e.ctrlKey) {\\n          this.nextPage();\\n        } else if (e.deltaY > 0) {\\n          this.next();\\n        }\\n      });\\n    }\\n  }\\n\\n  /**\\n   * @desc 클래스를 재설정 한다.\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  reset() {\\n    if (this.options.jif) {\\n      this.options.dataObj = this.options.orgDataObj.filter(row => {\\n        let rlt = new Function(\\n          'data,' + this.options.alias,\\n          'return `' + this.options.jif + '`'\\n        )(this.options.react.options.data, row);\\n\\n        if (rlt) {\\n          this.options.react.makeDataWatch(row);\\n        }\\n\\n        return rlt;\\n      });\\n\\n      if (!this.options.dataObj.$dataWatch) {\\n        this.options.react.makeDataWatch(this.options.dataObj);\\n      }\\n\\n      this.options.dataObj.$dataWatch.setArrayLoop(this);\\n    } else {\\n      this.options.dataObj = this.options.orgDataObj;\\n    }\\n\\n    this.domBuild(0);\\n\\n    if (this.options.pager)\\n      this.options.pager.bindData(this.options.dataObj, this);\\n  }\\n\\n  /**\\n   * @desc 지정한 노드 정보를 데이터로 변환하여 반환한다.\\n   * @param {Element} - 대상 노드\\n   * @return {Array} - 노드 데이터 목록\\n   * @example -\\n   */\\n  domArray(node) {\\n    let result = [];\\n    let children = node.childNodes;\\n\\n    for (let i = 0; i < children.length; i++) {\\n      let cnode = this._domArray(children[i]);\\n\\n      if (cnode) {\\n        result.push(cnode);\\n      }\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 지정한 루프순번에 해당하는 노드를 추가한다.\\n   * @param {Number} - 순번\\n   * @example -\\n   */\\n  push(loopIndex) {\\n    let curLength = this.options.el.childElementCount;\\n\\n    if (curLength < this.options.pageLength) {\\n      let newNodes = this.domParse(loopIndex);\\n\\n      newNodes.forEach(newNode => this.options.el.appendChild(newNode));\\n\\n      if (Array.isArray(this.options.dataObj)) {\\n      } else {\\n        this.keyDom[loopIndex] = newNodes;\\n      }\\n\\n      if (this.options.pager) this.options.pager.gotoEnd();\\n    } else {\\n      this.gotoEnd();\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 루프순번에 해당하는 노드를 삭제한다.\\n   * @param {Number} - 순번\\n   * @example -\\n   */\\n  remove(loopIndex) {\\n    this.keyDom[loopIndex].forEach(node => node.remove());\\n  }\\n\\n  /**\\n   * @desc 지정한 사이즈로 페이지 사이즈를 변경한다.\\n   * @param {Number} - 페이지 사이즈\\n   * @example -\\n   */\\n  changePagesize(size) {\\n    this.options.pageLength = size;\\n    this.domBuild(0);\\n  }\\n\\n  /**\\n   * @desc 이전 데이터로 이동한다.\\n   * @example -\\n   */\\n  prev() {\\n    let d0 = 0, d1 = 0, dp0, dp1, dp2;\\n\\n    if (this.options.startIndex == 0) return;\\n\\n    for (let i = 0; i < this.options.pageLength; i++) {\\n      dp0 = performance.now();\\n\\n      let toIndex = this.options.startIndex + i - 1;\\n      let fromIndex = toIndex + 1;\\n\\n      this.options.dataObj[toIndex].$dataWatch = this.options.dataObj[\\n        fromIndex\\n      ].$dataWatch;\\n\\n      Object.defineProperty(this.options.dataObj[toIndex], '$dataWatch', {\\n        enumerable: false,\\n        configurable: false\\n      });\\n\\n      if (this.options.dataObj[toIndex]) {\\n        this.options.dataObj[toIndex].$parent = this.options.dataObj.$revoke;\\n\\n        Object.defineProperty(this.options.dataObj[toIndex], '$parent', {\\n          enumerable: false,\\n          configurable: false\\n        });\\n      }\\n\\n      this.options.dataObj[toIndex].$dataWatch.dataObj = this.options.dataObj[\\n        toIndex\\n      ];\\n      this.options.dataObj[fromIndex].$dataWatch = null;\\n\\n      dp1 = performance.now();\\n\\n      this.options.dataObj[toIndex].$dataWatch.refresh();\\n\\n      dp2 = performance.now();\\n\\n      d0 += dp1 - dp0;\\n      d1 += dp2 - dp1;\\n    }\\n\\n    console.log(`prev : 소요시간 ${d0} ms /  refresh ${d1} ms `);\\n\\n    this.options.startIndex--;\\n  }\\n\\n  /**\\n   * @desc 다음 데이터로 이동한다.\\n   * @example -\\n   */\\n  next() {\\n    let d0 = 0, d1 = 0, dp0, dp1, dp2;\\n\\n    if (\\n      this.options.startIndex + this.options.pageLength >=\\n      this.options.dataObj.length\\n    )\\n      return;\\n\\n    for (let i = this.options.pageLength - 1; i >= 0; i--) {\\n      dp0 = performance.now();\\n\\n      let fromIndex = this.options.startIndex + i;\\n      let toIndex = fromIndex + 1;\\n\\n      this.options.dataObj[toIndex].$dataWatch = this.options.dataObj[\\n        fromIndex\\n      ].$dataWatch;\\n\\n      Object.defineProperty(this.options.dataObj[toIndex], '$dataWatch', {\\n        enumerable: false,\\n        configurable: false\\n      });\\n\\n      if (this.options.dataObj[toIndex]) {\\n        this.options.dataObj[toIndex].$parent = this.options.dataObj.$revoke;\\n\\n        Object.defineProperty(this.options.dataObj[toIndex], '$parent', {\\n          enumerable: false,\\n          configurable: false\\n        });\\n      }\\n\\n      this.options.dataObj[toIndex].$dataWatch.dataObj = this.options.dataObj[\\n        toIndex\\n      ];\\n      this.options.dataObj[fromIndex].$dataWatch = null;\\n\\n      dp1 = performance.now();\\n\\n      if (this.options.dataObj[toIndex].$dataWatch)\\n        this.options.dataObj[toIndex].$dataWatch.refresh();\\n\\n      dp2 = performance.now();\\n\\n      d0 += dp1 - dp0;\\n      d1 += dp2 - dp1;\\n    }\\n\\n    console.log(`next : 소요시간 ${d0} ms /  refresh ${d1} ms `);\\n\\n    this.options.startIndex++;\\n  }\\n\\n  /**\\n   * @desc 이전 페이지로 이동한다.\\n   * @example -\\n   */\\n  prevPage() {\\n    if (this.options.startIndex == 0) return;\\n    if (this.options.startIndex - this.options.pageLength < 0) {\\n      this.domBuild(0);\\n\\n      return;\\n    }\\n\\n    for (let i = 0; i < this.options.pageLength; i++) {\\n      let toIndex = this.options.startIndex + i - this.options.pageLength;\\n      let fromIndex = toIndex + this.options.pageLength;\\n\\n      if (!this.options.dataObj[toIndex]) return;\\n\\n      this.options.dataObj[toIndex].$dataWatch = this.options.dataObj[\\n        fromIndex\\n      ].$dataWatch;\\n\\n      Object.defineProperty(this.options.dataObj[toIndex], '$dataWatch', {\\n        enumerable: false,\\n        configurable: false\\n      });\\n\\n      if (this.options.dataObj[toIndex]) {\\n        this.options.dataObj[toIndex].$parent = this.options.dataObj.$revoke;\\n\\n        Object.defineProperty(this.options.dataObj[toIndex], '$parent', {\\n          enumerable: false,\\n          configurable: false\\n        });\\n      }\\n\\n      this.options.dataObj[toIndex].$dataWatch.dataObj = this.options.dataObj[\\n        toIndex\\n      ];\\n      this.options.dataObj[fromIndex].$dataWatch = null;\\n      this.options.dataObj[toIndex].$dataWatch.refresh();\\n    }\\n\\n    this.options.startIndex -= this.options.pageLength;\\n  }\\n\\n  /**\\n   * @desc 다음 페이지로 이동한다.\\n   * @example -\\n   */\\n  nextPage() {\\n    let d0 = 0, d1 = 0, dp0, dp1, dp2;\\n\\n    if (\\n      this.options.startIndex + this.options.pageLength >=\\n      this.options.dataObj.length\\n    ) {\\n      return;\\n    }\\n\\n    if (\\n      this.options.startIndex + this.options.pageLength * 2 >=\\n      this.options.dataObj.length\\n    ) {\\n      this.options.startIndex =\\n        this.options.dataObj.length - this.options.pageLength;\\n      this.domBuild(this.options.startIndex);\\n\\n      return;\\n    }\\n\\n    for (let i = 0; i < this.options.pageLength; i++) {\\n      dp0 = performance.now();\\n\\n      let fromIndex = this.options.startIndex + i;\\n      let toIndex = fromIndex + this.options.pageLength;\\n\\n      requestAnimationFrame(() => {\\n        this.options.dataObj[toIndex].$dataWatch = this.options.dataObj[\\n          fromIndex\\n        ].$dataWatch;\\n\\n        Object.defineProperty(this.options.dataObj[toIndex], '$dataWatch', {\\n          enumerable: false,\\n          configurable: false\\n        });\\n\\n        if (this.options.dataObj[toIndex]) {\\n          this.options.dataObj[toIndex].$parent = this.options.dataObj.$revoke;\\n\\n          Object.defineProperty(this.options.dataObj[toIndex], '$parent', {\\n            enumerable: false,\\n            configurable: false\\n          });\\n        }\\n\\n        this.options.dataObj[toIndex].$dataWatch.dataObj = this.options.dataObj[\\n          toIndex\\n        ];\\n        this.options.dataObj[fromIndex].$dataWatch = null;\\n\\n        dp1 = performance.now();\\n\\n        this.options.dataObj[toIndex].$dataWatch.refresh();\\n\\n        dp2 = performance.now();\\n\\n        d0 += dp1 - dp0;\\n        d1 += dp2 - dp1;\\n      });\\n    }\\n\\n    console.log(`nextPage 소요시간 ${d0} ms /  refresh ${d1} ms `);\\n\\n    this.options.startIndex += this.options.pageLength;\\n  }\\n\\n  /**\\n   * @desc 지정한 페이지로 이동한다.\\n   * @param {Number} - 페이지번호\\n   * @example -\\n   */\\n  gotoPage(pageNum) {\\n    let loopIndex = (parseInt(pageNum) - 1) * this.options.pageLength;\\n\\n    if (loopIndex >= this.options.dataObj.length) {\\n      alert('이동할 페이지가 없습니다.');\\n\\n      return;\\n    } else {\\n      this.domBuild(loopIndex);\\n    }\\n  }\\n\\n  /**\\n   * @desc 마지막 페이지로 이동한다.\\n   * @param {Object} - 대상 데이터 객체\\n   * @example -\\n   */\\n  gotoEnd() {\\n    if (this.options.dataObj.length) {\\n      let loopIndex = Math.max(\\n        0,\\n        this.options.dataObj.length - this.options.pageLength\\n      );\\n\\n      this.domBuild(loopIndex);\\n\\n      if (this.options.pager) this.options.pager.gotoEnd();\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 순번부터 지정한 길이만큼 배열을 잘라낸다.\\n   * @param {Number} - 삭제 시작순번\\n   * @param {Number} - 삭제 갯수\\n   * @example -\\n   */\\n  splice(removeIndex, length) {\\n    let curLength = this.options.el.childElementCount;\\n    let startIndex = this.options.startIndex;\\n    let pageLength = this.options.pageLength;\\n\\n    if (removeIndex >= startIndex + pageLength) return;\\n    if (removeIndex + length < startIndex - 1) return;\\n\\n    let removeEls = [];\\n\\n    for (let i = 0; i < curLength; i++) {\\n      let curIndex = startIndex + i;\\n\\n      if (curIndex.$between(removeIndex, removeIndex + length - 1)) {\\n        removeEls.push(this.options.el.children[i]);\\n      }\\n    }\\n\\n    removeEls.forEach(el => el.remove());\\n\\n    let newRowStart = startIndex + this.options.el.childElementCount;\\n    let newRowEnd = this.options.pageLength - this.options.el.childElementCount; // 100-56\\n    let rowsLength = this.options.dataObj.length;\\n\\n    for (let i = 0; i < newRowEnd; i++) {\\n      let newIndex = newRowStart + i;\\n\\n      if (newIndex >= rowsLength) break;\\n\\n      let newNodes = this.domParse(newIndex);\\n\\n      newNodes.forEach(newNode => this.options.el.appendChild(newNode));\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정된 순번을 기준으로 화면을 생성한다.\\n   * @param {Number} - 루프순번\\n   * @example -\\n   */\\n  domBuild(loopIndex) {\\n    let curLength = this.options.el.childElementCount;\\n    let startIndex = (this.options.startIndex = loopIndex);\\n    let pageLength = parseInt(this.options.pageLength);\\n\\n    if (pageLength < curLength) {\\n      for (let i = curLength - 1; i >= pageLength; i--) {\\n        this.options.el.children[i].remove();\\n      }\\n    }\\n\\n    if (loopIndex >= startIndex + pageLength) return;\\n    if (loopIndex + this.options.pageLength < startIndex - 1) return;\\n\\n    let removeEls = [];\\n\\n    for (let i = 0; i < curLength; i++) {\\n      let curIndex = startIndex + i;\\n\\n      if (\\n        curIndex.$between(loopIndex, loopIndex + this.options.pageLength - 1)\\n      ) {\\n        if (this.options.el.children[i])\\n          removeEls.push(this.options.el.children[i]);\\n      }\\n    }\\n\\n    removeEls.forEach(el => el.remove());\\n\\n    for (let i = 0; i < this.options.dataObj.length; i++) {\\n      let watch = this.options.dataObj[i].$dataWatch;\\n\\n      if (watch) {\\n        Object.keys(watch.nodes).forEach(nodekey => {\\n          let items = watch.nodes[nodekey];\\n\\n          if (items) {\\n            for (let j = items.length - 1; j >= 0; j--) {\\n              if (!items[j].node.isConnected) {\\n                items.splice(j, 1);\\n              }\\n            }\\n          }\\n        });\\n      }\\n    }\\n\\n    let newRowStart = startIndex + this.options.el.childElementCount;\\n    let newRowEnd = this.options.pageLength - this.options.el.childElementCount;\\n    let rowsLength = this.options.dataObj.length;\\n\\n    for (let i = 0; i < newRowEnd; i++) {\\n      let newIndex = newRowStart + i;\\n\\n      if (newIndex >= rowsLength) break;\\n\\n      let newNodes = this.domParse(newIndex);\\n\\n      newNodes.forEach(newNode => this.options.el.appendChild(newNode));\\n    }\\n\\n    if (this.options.pager && loopIndex == 0) this.options.pager.refresh();\\n  }\\n\\n  /**\\n   * @desc 지정한 문자열을 리터럴정보로 변환하여 반환한다.\\n   * @param {String} - 문자열\\n   * @return {Object} - 리터럴정보\\n   * @example -\\n   */\\n  getLiteralMap(textContent) {\\n    textContent = textContent.trim();\\n\\n    let result = {\\n      literal: textContent,\\n      isDataBind: false,\\n      dataMap: []\\n    };\\n\\n    let firstPath = '';\\n\\n    if (!textContent.trim()) return result;\\n    if (!textContent.includes('${')) return result;\\n\\n    const expReg = new RegExp(/\\\\${.*?}/, 'gm');\\n\\n    let markExtract = textContent.match(expReg);\\n\\n    if (markExtract) {\\n      markExtract.forEach(markExp => {\\n        let dataExp = markExp.replace(\\n          new RegExp(/[.]\\\\w+\\\\(|\\\\w+\\\\(|[.][\\\\$]\\\\w+\\\\(/, 'gm'),\\n          ' ('\\n        );\\n\\n        const dataReg = new RegExp(\\n          /[a-zA-Z가-힣_'\\\"][a-zA-Z0-9가-힣-_\\\\[\\\\]]*[a-zA-Z0-9가-힣-_.'\\\"\\\\[\\\\]]+/,\\n          'gm'\\n        );\\n\\n        dataExp.match(dataReg).forEach((path, index) => {\\n          if (index === 0) firstPath = path;\\n\\n          let objMatechs = path.match(\\n            new RegExp(\\n              /.+(?=\\\\.[a-zA-Z0-9가-힣_]+$|\\\\[\\\\d+\\\\]$|\\\\[\\\\'\\\\+\\\\'\\\\]$|\\\\[\\\\\\\"\\\\\\\\.[a-zA-Z0-9가-힣_]\\\\\\\"\\\\]$)|\\\\.[a-zA-Z0-9가-힣_]+$|\\\\[\\\\d+\\\\]$|\\\\[\\\\'\\\\\\\\.[a-zA-Z0-9가-힣_]\\\\'\\\\]$|\\\\[\\\\\\\"\\\\w+\\\\\\\"\\\\]$/,\\n              'gm'\\n            )\\n          );\\n\\n          if (objMatechs) {\\n            let objPath = objMatechs[0];\\n            let keyReg = new RegExp(\\n              /[a-zA-Z0-9가-힣_]+|\\\\.~\\\\[a-zA-Z0-9가-힣_]+|[a-zA-Z0-9가-힣_]+\\\\[\\\\d+\\\\]|[a-zA-Z0-9가-힣_]+\\\\[\\\\'[a-zA-Z0-9가-힣_]+\\\\'\\\\]|[a-zA-Z0-9가-힣_]+\\\\[\\\\\\\"[a-zA-Z0-9가-힣_]+\\\\\\\"\\\\]/,\\n              'gm'\\n            );\\n\\n            let keyName = objMatechs[1].match(keyReg)[0];\\n\\n            if (keyName && objPath != 'Jinja') {\\n              result.dataMap.push({\\n                objPath: objPath,\\n                key: keyName\\n              });\\n            }\\n          } else {}\\n        });\\n      });\\n    }\\n\\n    if (result.dataMap.length === 1) {\\n      result.isDataBind = result.literal == '${' + firstPath + '}';\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 지정한 문자열을 리터럴바인드정보로 변환하여 반환한다.\\n   * @param {String} - 문자열\\n   * @return {Object} - 리터럴정보\\n   * @example -\\n   */\\n  getLiteralBindMap(textContent) {\\n    let result;\\n    let objReg = new RegExp(\\n      /.+(?=\\\\.[a-zA-Z0-9가-힣_]+$|\\\\[\\\\d+\\\\]$|\\\\[\\\\'\\\\+\\\\'\\\\]$|\\\\[\\\\\\\"\\\\\\\\.[a-zA-Z0-9가-힣_]\\\\\\\"\\\\]$)|\\\\.[a-zA-Z0-9가-힣_]+$|\\\\[\\\\d+\\\\]$|\\\\[\\\\'\\\\\\\\.[a-zA-Z0-9가-힣_]\\\\'\\\\]$|\\\\[\\\\\\\"\\\\w+\\\\\\\"\\\\]$/,\\n      'gm'\\n    );\\n\\n    let objMatechs = textContent.match(objReg);\\n\\n    if (objMatechs) {\\n      let objPath = objMatechs[0];\\n      let keyReg = new RegExp(\\n        /[a-zA-Z0-9가-힣_]+|\\\\.~\\\\[a-zA-Z0-9가-힣_]+|[a-zA-Z0-9가-힣_]+\\\\[\\\\d+\\\\]|[a-zA-Z0-9가-힣_]+\\\\[\\\\'[a-zA-Z0-9가-힣_]+\\\\'\\\\]|[a-zA-Z0-9가-힣_]+\\\\[\\\\\\\"[a-zA-Z0-9가-힣_]+\\\\\\\"\\\\]/,\\n        'gm'\\n      );\\n\\n      let keyName = objMatechs[1].match(keyReg)[0];\\n\\n      result = {\\n        literal: '${' + textContent + '}',\\n        isDataBind: true,\\n        dataMap: [{ objPath: objPath, key: keyName }]\\n      };\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 지정한 리터럴정보에서 리터럴값을 추출하여 반환한다.\\n   * @param {Object} - 리터럴정보\\n   * @param {Object} - 루프순번\\n   * @return {String} - 리터럴값\\n   * @example -\\n   */\\n  getLiteralValue(data, loopIndex, bindArray) {\\n    let result;\\n    let aliasData = this.options.dataObj[loopIndex];\\n\\n    if(bindArray && bindArray.length >1){\\n      \\n    }\\n\\n    data.alias = this.options.alias;\\n    data.index = loopIndex;\\n\\n    try {\\n      if (data.isDataBind && data.dataMap[0].objPath == this.options.alias) {\\n        if (Array.isArray(aliasData.$parent)) {\\n          result = aliasData[data.dataMap[0].key];\\n\\n          if (result === undefined) {\\n            if (data.dataMap[0].key == '_index') {\\n              result = aliasData.$parent.indexof(aliasData);\\n            } else if (data.dataMap[0].key == 'value') {\\n              result = aliasData;\\n            } else if (data.dataMap[0].key === undefined) {\\n              result = aliasData;\\n            }\\n          }\\n        } else {\\n          if (data.dataMap[0].key == '_index') {\\n            result = loopIndex;\\n          } else if (data.dataMap[0].key == 'value') {\\n            result = aliasData;\\n          } else if (data.dataMap[0].key === undefined) {\\n            result = aliasData;\\n          }\\n        }\\n      } else {\\n        result = new Function(\\n          'data, ' + this.options.alias,\\n          ' return ' + '`' + data.literal + '`'\\n        )(this.options.react.options.data, aliasData);\\n      }\\n    } catch (ex) {\\n      result = ex;\\n    }\\n\\n    if (result == 'undefined') {\\n      result = '';\\n    }\\n\\n    return Jinja.global.nullSpace(result);\\n  }\\n\\n  /**\\n   * @desc 노드 데이터를 노드로 변환하여 생성한다.\\n   * @param {Number} - 루프순번\\n   * @param {Eleement} - 대상 노드\\n   * @return {Array} - 노드정보\\n   * @example -\\n   */\\n  domParse(loopIndex, domData) {\\n    if (domData === undefined) domData = this.options.vdom;\\n\\n    let nodes = [];\\n\\n    if (Array.isArray(domData)) {\\n      domData.forEach(childDomData => {\\n        let loopData = this.options.dataObj[loopIndex];\\n\\n        if (typeof loopData == 'object') {\\n          loopData.$parent = this.options.dataObj.$revoke;\\n\\n          Object.defineProperty(loopData, '$parent', {\\n            enumerable: false,\\n            configurable: false\\n          });\\n        }\\n\\n        nodes.push(this._domParse(loopIndex, childDomData));\\n      });\\n    } else {\\n      nodes.push(this._domParse(loopIndex, domData));\\n    }\\n\\n    return nodes;\\n  }\\n\\n  /**\\n   * @desc 지정한 노드정보를 파싱하여 노드를 생성한다.\\n   * @param {Object} - 노드정보\\n   * @param {Object} - 속성정보\\n   * @param {Number} - 루프순번\\n   * @param {Object} - 루프데이터\\n   * @example -\\n   */\\n  domParseAttr(node, aData, loopIndex, loopData) {\\n    let isBind, attrData;\\n\\n    for (let attrName in aData) {\\n      attrData = aData[attrName];\\n\\n      let content;\\n\\n      if (attrData.d) {\\n        content = this.getLiteralValue(attrData.d, loopIndex);\\n      } else {\\n        content = attrData.v;\\n      }\\n\\n      if (attrName == 'data-bind' && attrData.v) {\\n        if (node.nodeType == 3) {\\n          let textNode = document.createTextNode(content);\\n\\n          node.appendChild(textNode);\\n\\n          if (attrData.d) {\\n            attrData.d.dataMap.forEach(pathInfo => {\\n              let dataObj, objPath = pathInfo.objPath, key = pathInfo.key;\\n\\n              if (!key) return;\\n\\n              if (objPath == this.options.alias) {\\n                if (typeof this.options.dataObj[loopIndex] == 'object') {\\n                  dataObj = this.options.dataObj[loopIndex];\\n                } else {\\n                  dataObj = this.options.dataObj;\\n                  key = loopIndex;\\n                }\\n              } else {\\n                dataObj = new Function(\\n                  'data,' + this.options.alias,\\n                  'return ' + objPath\\n                )(\\n                  this.options.react.options.data,\\n                  this.options.dataObj[loopIndex]\\n                );\\n              }\\n\\n              if (dataObj) {\\n                attrData.d.aliasData = loopData;\\n\\n                dataObj.$dataWatch.setNodeText(key, node, attrData.d);\\n              }\\n            });\\n          }\\n        } else {\\n          isBind = true;\\n\\n          JJReact.nodeBind(node, content);\\n        }\\n      } else {\\n        JJReact.attrBind(node, attrName, content);\\n\\n        if (attrData.d) {\\n          attrData.d.dataMap.forEach(pathInfo => {\\n            let dataObj, objPath = pathInfo.objPath, key = pathInfo.key;\\n\\n            if (objPath == this.options.alias) {\\n              if (typeof this.options.dataObj[loopIndex] == 'object') {\\n                dataObj = this.options.dataObj[loopIndex];\\n              } else {\\n                dataObj = this.options.dataObj;\\n                key = loopIndex;\\n              }\\n            } else {\\n              dataObj = new Function(\\n                'data,' + this.options.alias,\\n                'return ' + objPath\\n              )(\\n                this.options.react.options.data,\\n                this.options.dataObj[loopIndex]\\n              );\\n            }\\n\\n            if (dataObj) {\\n              attrData.d.aliasData = loopData;\\n\\n              dataObj.$dataWatch.setNodeAttr(key, node, attrName, attrData.d);\\n            }\\n          });\\n        }\\n      }\\n    }\\n\\n    if (isBind) {\\n      attrData = aData['data-bind'];\\n\\n      if (attrData.d.dataMap) {\\n        attrData.d.dataMap.forEach(pathInfo => {\\n          let dataObj, objPath = pathInfo.objPath, key = pathInfo.key;\\n\\n          if (objPath == this.options.alias) {\\n            if (typeof this.options.dataObj[loopIndex] == 'object') {\\n              dataObj = this.options.dataObj[loopIndex];\\n            } else {\\n              dataObj = this.options.dataObj;\\n              key = loopIndex;\\n            }\\n          } else {\\n            dataObj = new Function(\\n              'data,' + this.options.alias,\\n              'return ' + objPath\\n            )(this.options.react.options.data, this.options.dataObj[loopIndex]);\\n          }\\n\\n          if (dataObj && typeof dataObj == 'object') {\\n            attrData.d.aliasData = loopData;\\n\\n            dataObj.$dataWatch.setNodeBind(key, node, attrData.d);\\n          }\\n        });\\n      }\\n    }\\n  }\\n}\\n/* ==CssComp.710.pkg.deploy================ */\\n/* ==JJAnimation.640.class================ */\\n/* ==JJCircle3d.640.class================ */\\n/* ==JJCssElement.640.class================ */\\n/* ==JJCustomToggle.640.class================ */\\n/* ==JJTimeline.class================ */\\n/* ==JJTabs.640.class================ */\\n/**\\n * @global\\n * @event click:jj-tabs\\n * @desc globalEvent.jj-tabs 클릭 이벤트\\n */\\nJinja.event.add('click', 'globalEvent.jj-tabs', e => {\\n  if (!e.target.matches('.jj-tabs *')) return;\\n  \\n  let navLink = e.target.closest('.nav-link');\\n  let navItem = navLink.parentElement;\\n  let jjTabs  = navItem.parentElement;\\n  let tabContent = jjTabs.nextElementSibling;\\n  let navItemIndex = Jinja.dom.findIndex(navItem.parentElement,navItem);\\n  \\n  // 이미 활성된 상태이면 리턴함\\n  if (navLink.matches('.active')) return;\\n  // 현재 활성된 다른 탭을 활성취소함\\n  if(jjTabs.querySelector('.nav-link.active')){\\n  \\tjjTabs.querySelectorAll('.nav-link.active')\\n      .forEach(el=>el.classList.remove('active'));\\n  }\\n  // 선택된 탭을 활성화시킴\\n  navLink.classList.add('active');\\n  \\n  \\n  if (!tabContent.matches('.tab-content')) return;\\n  // 현재 활성된 다른 탭을 활성취소함\\n  if(tabContent.querySelector(':scope >.tab-pane.active')){\\n  \\ttabContent.querySelectorAll(':scope >.tab-pane.active')\\n      .forEach(el=>el.classList.remove('active'));\\n  }\\n  // 대상이 되는 탭판넬을 활성화 시킴\\n  if(navLink.dataset.target \\n     && tabContent.querySelector(navLink.dataset.target)){\\n    tabContent.querySelector(navLink.dataset.target).classList.add('active');\\n  } \\n  else if(navLink.getAttribute('href') \\n          && navLink.getAttribute('href') != \\\"#\\\" \\n          && tabContent.querySelector(navLink.getAttribute('href'))){\\n    tabContent.querySelector(navLink.getAttribute('href')).classList.add('active');\\n  } \\n  else if(tabContent.querySelectorAll(':scope >.tab-pane')[navItemIndex]) {\\n    tabContent.querySelectorAll(':scope >.tab-pane')[navItemIndex].classList.add('active');\\n  }\\n  \\n});\\n/* ==jjIconBox.class================ */\\n/* ==JJLineScroll.640.class================ */\\n/* ==JJMenuIcon.640.class================ */\\n/* ==DragComp.710.pkg.deploy================ */\\n/* ==JJDragable.640.class================ */\\n\\n/*\\n * @classdesc Dragable 컴포넌트관리를 위한 클래스\\n */\\nclass JJDragable extends JJElComponent {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      handles: '',\\n      handleEl: '',\\n      cancelEl: '',\\n      startClass: 'starting',\\n      detectAttr: '',\\n      distance: 10,\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 콤포넌트를 생성한다.\\n   * @example -\\n   */\\n  _render() {}\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this._startHandler = this._start.bind(this);\\n    this._moveHandler = this._move.bind(this);\\n    this._endHandler = this._end.bind(this);\\n\\n    this.el.addEventListener('mousedown', this._startHandler);\\n    this.el.addEventListener('touchstart', this._startHandler);\\n\\n    this.el.classList.add('jjdragcomp');\\n\\n    this.startPosition = {};\\n    this.movePosition = {};\\n  }\\n\\n  /**\\n   * @desc 이벤트를 삭제한다.\\n   * @example -\\n   */\\n  _clearEvent() {\\n    if (!this.el) return;\\n\\n    this.el.removeEventListener('mousedown', this._startHandler);\\n    this.el.removeEventListener('touchstart', this._startHandler);\\n\\n    this.el.classList.remove('jjdragcomp');\\n  }\\n\\n  /**\\n   * @desc 드래그를 시작한다.\\n   * @param {Event} - 이벤트\\n   * @return {Boolean} - 드래그를 시작하면 true값을 반환\\n   * @example -\\n   */\\n  _start(event) {\\n    if (event.target.classList.contains('resizer')) {\\n      return;\\n    }\\n\\n    if (!this.el) return;\\n    if (this.options.handleEl && !event.target.matches(this.options.handleEl))\\n      return;\\n    if (this.options.cancelEl && event.target.matches(this.options.cancelEl))\\n      return;\\n\\n    this.el.dispatchEvent(\\n      new CustomEvent('jjDragCompStartBefore', {\\n        detail: {},\\n        bubbles: true\\n      })\\n    );\\n\\n    this.startPosition = this._setEventPosition(event);\\n\\n    if (!this.startPosition) return;\\n\\n    this.el.style.top = this.startPosition.offsetTop + 'px';\\n    this.el.style.left = this.startPosition.offsetLeft + 'px';\\n\\n    this.el.dispatchEvent(\\n      new CustomEvent('jjDragCompStart', {\\n        detail: {\\n          startPosition: this.startPosition\\n        },\\n        bubbles: true\\n      })\\n    );\\n\\n    this.el.classList.add(this.options.startClass);\\n\\n    Jinja.classList.add('freeze');\\n\\n    return true;\\n  }\\n\\n  /**\\n   * @desc Element를 이동시킨다.\\n   * @param {Event} - 이벤트\\n   * @return {Boolean} - 이동에 성공하면 true값을 반환한다.\\n   * @example -\\n   */\\n  _move(event) {\\n    event.preventDefault();\\n\\n    if (!this.el) return;\\n    if (!this.el.classList.contains(this.options.startClass)) return;\\n\\n    this.movePosition = this._getMovePosition(event);\\n\\n    if (!this.movePosition) return;\\n\\n    if (\\n      this.options.distance <\\n      Math.abs(this.movePosition.moveX) + Math.abs(this.movePosition.moveY)\\n    ) {\\n      this.el.classList.add('move-on');\\n    }\\n\\n    this.el.dispatchEvent(\\n      new CustomEvent('jjDragCompMove', {\\n        detail: {\\n          startPosition: this.startPosition,\\n          movePosition: this.movePosition\\n        },\\n        bubbles: true\\n      })\\n    );\\n\\n    return true;\\n  }\\n\\n  /**\\n   * @desc Element의 드래그를 종료한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _end(event) {\\n    if (!this.el.classList.contains(this.options.startClass)) return;\\n\\n    if (event.type === 'mouseup' && event.button === 0) {\\n      document.removeEventListener('mousemove', this._moveHandler, {\\n        passive: false\\n      });\\n      document.removeEventListener('mouseup', this._endHandler, {\\n        passive: false\\n      });\\n    } else if (event.type === 'touchend') {\\n      document.removeEventListener('touchmove', this._moveHandler, {\\n        passive: false\\n      });\\n      document.removeEventListener('touchend', this._endHandler, {\\n        passive: false\\n      });\\n    } else {\\n      return;\\n    }\\n\\n    if (this.options.onDragend) {\\n      this.options.onDragend();\\n    }\\n\\n    this.el.classList.remove(this.options.startClass);\\n    this.el.classList.remove('move-on');\\n    this.el.dispatchEvent(\\n      new CustomEvent('jjDragCompEnd', { detail: {}, bubbles: true })\\n    );\\n\\n    if (this.el.hasAttribute('tabindex')) {\\n      this.el.focus();\\n    }\\n\\n    Jinja.classList.remove('freeze');\\n  }\\n\\n  /**\\n   * @desc 현재 이벤트를 식별하고 위치를 저장한다.\\n   * @param {Event} - 이벤트\\n   * @return {Object} - 지정된 Element의 크기정보를 담은 객체\\n   * @example -\\n   */\\n  _setEventPosition(event) {\\n    let result = {};\\n\\n    if (event.type === 'mousedown' && event.button === 0) {\\n      document.addEventListener('mousemove', this._moveHandler, {\\n        passive: false\\n      });\\n      document.addEventListener('mouseup', this._endHandler, {\\n        passive: false\\n      });\\n\\n      result.clientX = event.clientX;\\n      result.clientY = event.clientY;\\n    } else if (event.type === 'touchstart') {\\n      document.addEventListener('touchmove', this._moveHandler, {\\n        passive: false\\n      });\\n      document.addEventListener('touchend', this._endHandler, {\\n        passive: false\\n      });\\n\\n      result.clientX = event.touches[0].clientX;\\n      result.clientY = event.touches[0].clientY;\\n    } else {\\n      return null;\\n    }\\n\\n    result.offsetTop = this.el.offsetTop;\\n    result.offsetLeft = this.el.offsetLeft;\\n    result.offsetHeight = this.el.offsetHeight;\\n    result.offsetWidth = this.el.offsetWidth;\\n    result.centerX =\\n      this.el.getBoundingClientRect().x + this.el.offsetWidth / 2;\\n    result.centerY =\\n      this.el.getBoundingClientRect().y + this.el.offsetHeight / 2;\\n    result.offsetX = result.clientX - this.el.getBoundingClientRect().x;\\n    result.offsetY = result.clientY - this.el.getBoundingClientRect().y;\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc - Element의 이동할 위치를 저장한다.\\n   * @param {Object} - 이벤트\\n   * @return {Object} - 지정된 Element의 크기정보를 담은 객체\\n   * @example -\\n   */\\n  _getMovePosition(event) {\\n    let result = {};\\n\\n    if (event.type === 'mousemove' && event.button === 0) {\\n      result.clientX = event.clientX;\\n      result.clientY = event.clientY;\\n      result.rads = Math.atan2(\\n        event.clientX - this.startPosition.centerX,\\n        -(event.clientY - this.startPosition.centerY)\\n      );\\n    } else if (event.type === 'touchmove') {\\n      result.clientX = event.changedTouches[0].clientX;\\n      result.clientY = event.changedTouches[0].clientY;\\n      result.rads = Math.atan2(\\n        event.touches[0].clientX - this.startPosition.centerX,\\n        -(event.touches[0].clientY - this.startPosition.centerY)\\n      );\\n    } else {\\n      return null;\\n    }\\n\\n    result.offsetTop = this.el.offsetTop;\\n    result.offsetLeft = this.el.offsetLeft;\\n    result.offsetHeight = this.el.offsetHeight;\\n    result.offsetWidth = this.el.offsetWidth;\\n    result.moveX = result.clientX - this.startPosition.clientX;\\n    result.moveY = result.clientY - this.startPosition.clientY;\\n    result.angle = parseInt(result.rads * (180 / Math.PI));\\n\\n    if (result.angle < 0) {\\n      result.angle = 180 + (180 + result.angle);\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 옵션의 값을 지정한다.\\n   * @param {String} - 옵션명\\n   * @param {String} - 옵션값\\n   * @return {} -\\n   * @example -\\n   */\\n  on(name, callback) {\\n    this.options[name] = callback;\\n  }\\n}\\n/* ==JJMoveable.640.class================ */\\n\\n/*\\n * @classdesc Moveable 컴포넌트관리를 위한 클래스\\n */\\nclass JJMoveable extends JJDragable {\\n  /**\\n   * @desc element가 이동될 좌표값을 반환하는 이벤트를 발생시킨다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _move(event) {\\n    if (super._move(event)) {\\n      let container = this.options.container || this.el.parentElement;\\n      let maxTop = container.offsetHeight - this.el.offsetHeight;\\n      let maxLeft = container.offsetWidth - this.el.offsetWidth;\\n      let left;\\n      let top;\\n      let elLeft;\\n      let elTop;\\n\\n      if (\\n        this.options.handles.includes('n') ||\\n        this.options.handles.includes('s')\\n      ) {\\n        top = this.startPosition.offsetTop + this.movePosition.moveY;\\n\\n        if (top < 0) top = 0;\\n        if (top > maxTop) top = maxTop;\\n\\n        top = top - container.scrollTop - container.offsetTop;\\n\\n        elTop = this.startPosition.offsetTop + this.movePosition.moveY; \\n        elTop = Math.max(elTop, 0);\\n        elTop = Math.min(elTop, maxTop);\\n        \\n        this.el.style.top = elTop + 'px';\\n      }\\n      if (\\n        this.options.handles.includes('e') ||\\n        this.options.handles.includes('w')\\n      ) {\\n        left =\\n          this.startPosition.offsetLeft +\\n          this.movePosition.moveX - \\n          container.offsetLeft;\\n\\n        if (left > maxLeft) left = maxLeft;\\n\\t\\t\\t\\t\\n        elLeft = this.startPosition.offsetLeft + this.movePosition.moveX;\\n        elLeft = Math.max(elLeft, 0);\\n        elLeft = Math.min(elLeft, maxLeft);\\n        \\n        this.el.style.left = elLeft + 'px';\\n      }\\n\\n      this.el.dispatchEvent(\\n        new CustomEvent('JJMoveable.move', {\\n          detail: {\\n            \\\"container\\\": container,\\n            \\\"maxTop\\\": maxTop,\\n            \\\"maxLeft\\\": maxLeft,\\n            \\\"left\\\": left,\\n            \\\"top\\\": top,\\n            \\\"elLeft\\\": elLeft,\\n            \\\"elTop\\\": elTop,\\n            \\\"value\\\":{\\n              \\\"x\\\": parseInt(100*(elLeft/maxLeft)),\\n              \\\"y\\\": parseInt(100*(elTop/maxTop))\\n            }\\n          },\\n          bubbles: true\\n        })\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @desc 해당 엘리먼트의 top 좌표를 지정한다.\\n   * @param {Number} - 최대 top 높이의 배율\\n   * @example -\\n   */\\n  moveTop(val) {\\n    let container = this.options.container || this.el.parentElement;\\n    let maxTop = container.offsetHeight - this.el.offsetHeight;\\n    let top = maxTop * val;\\n\\n    this.el.style.top = top + 'px';\\n  }\\n}\\n/* ==JJResizable.640.class================ */\\n\\n/**\\n * @classdesc Rresizable 컴포넌트관리를 위한 클래스\\n */\\nclass JJRresizable extends JJElComponent {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      handles: 'e',\\n      aspectRatio: 0,\\n      class: 'jj-resizable',\\n      isKeyMove: false,\\n      onResizestart: function (event) {},\\n      onResize: function (event) {},\\n      onResizeend: function (event) {},\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 콤포넌트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    let html = '';\\n    \\n    this.options.handles\\n      .split(',')\\n      .forEach(\\n        arrow => (html += `<div class='resizer' data-arrow='${arrow}'></div>`)\\n      );\\n    \\n    Jinja.dom.append(this.el, html);\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this._startHandler = this._start.bind(this);\\n    this._moveHandler = this._move.bind(this);\\n    this._endHandler = this._end.bind(this);\\n    this._keydownHandler = this._keydown.bind(this);\\n\\n    this.el.addEventListener('mousedown', this._startHandler);\\n    this.el.addEventListener('touchstart', this._startHandler);\\n\\n    if (this.options.isKeyMove) {\\n      this.el.setAttribute('tabindex', 0);\\n      this.el.addEventListener('keydown', this._keydownHandler);\\n    }\\n  }\\n\\n  /**\\n   * @desc - 이벤트를 초기화 시킨다.\\n   * @example -\\n   */\\n  _clearEvent() {\\n    this.el.removeEventListener('mousedown', this._startHandler);\\n    this.el.removeEventListener('touchstart', this._startHandler);\\n\\n    if (this.options.isKeyMove) {\\n      this.el.removeEventListener('keydown', this._keydownHandler);\\n    }\\n\\n    this.el.classList.remove(this.options.class);\\n\\n    if (this.barx) this.barx.remove();\\n  }\\n\\n  /**\\n   * @desc 이벤트 타겟의 리사이즈를 시작한다.\\n   * @param {Event} - 이벤트\\n   * @return {} -\\n   * @example -\\n   */\\n  _start(event) {\\n    this.arrow = event.target.dataset.arrow;\\n    if (this.arrow && this.options.handles.split(',').includes(this.arrow)) {\\n      event.preventDefault();\\n      event.stopPropagation();\\n      event.stopImmediatePropagation();\\n\\n      this.el.classList.add('resizing');\\n      \\n      Jinja.classList.add('freeze');\\n      \\n      if (event.type === 'mousedown') {\\n        document.addEventListener('mousemove', this._moveHandler, false);\\n        document.addEventListener('mouseup', this._endHandler, false);\\n      } else {\\n        document.addEventListener('touchmove', this._moveHandler, false);\\n        document.addEventListener('touchend', this._endHandler, false);\\n      }\\n\\n      this.startPosition = this._getEventPosition(event);\\n      this.startPosition.top = this.el.offsetTop;\\n      this.startPosition.left = this.el.offsetLeft;\\n      this.startPosition.width = this.el.offsetWidth;\\n      this.startPosition.height = this.el.offsetHeight;\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 타겟의 리사이즈를 실행한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _move(event) {\\n    event.preventDefault();\\n    event.stopPropagation();\\n    event.stopImmediatePropagation();\\n\\n    if (!this.el.classList.contains('resizing')) return;\\n\\n    let move = {};\\n    let curPosition = this._getEventPosition(event);\\n    \\n    move.x = curPosition.x - this.startPosition.x;\\n    move.y = curPosition.y - this.startPosition.y;\\n\\n    if (this.arrow === 'n' || this.arrow === 'ne' || this.arrow === 'nw') {\\n      this.el.style.top = this.startPosition.top + move.y + 'px';\\n      this.el.style.height = this.startPosition.height - move.y + 'px';\\n      \\n      if (this.options.aspectRatio !== 0) {\\n        this.el.style.width =\\n          this.el.offsetHeight * this.options.aspectRatio + 'px';\\n      }\\n    }\\n\\n    if (this.arrow === 'e' || this.arrow === 'ne' || this.arrow === 'se') {\\n      this.el.style.width = this.startPosition.width + move.x + 'px';\\n      \\n      if (this.options.aspectRatio !== 0) {\\n        this.el.style.height =\\n          this.el.offsetWidth / this.options.aspectRatio + 'px';\\n      }\\n    }\\n\\n    if (this.arrow === 's' || this.arrow === 'sw' || this.arrow === 'se') {\\n      this.el.style.height = this.startPosition.height + move.y + 'px';\\n      \\n      if (this.options.aspectRatio !== 0) {\\n        this.el.style.width =\\n          this.el.offsetHeight * this.options.aspectRatio + 'px';\\n      }\\n    }\\n\\n    if (this.arrow === 'w' || this.arrow === 'sw' || this.arrow === 'nw') {\\n      let compStyle = window.getComputedStyle(this.el);\\n      \\n      if (['fixed', 'absolute'].includes(compStyle['position'])) {\\n        this.el.style.left = this.startPosition.left + move.x + 'px';\\n        this.el.style.width = this.startPosition.width - move.x + 'px';\\n        \\n        if (this.options.aspectRatio !== 0) {\\n          this.el.style.height =\\n            this.el.offsetWidth / this.options.aspectRatio + 'px';\\n        }\\n      } else {\\n        this.el.style.width = this.startPosition.width - move.x + 'px';\\n      }\\n    }\\n\\n    this.options.onResize(this.el);\\n  }\\n\\n  /**\\n   * @desc 지정한 타겟의 리사이즈를 종료한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _end(event) {\\n    event.preventDefault();\\n    \\n    this.el.classList.remove('resizing');\\n    \\n    Jinja.classList.remove('freeze');\\n    \\n    if (event.type === 'mouseup') {\\n      document.removeEventListener('mousemove', this._moveHandler, false);\\n      document.removeEventListener('mouseup', this._endHandler, false);\\n    } else {\\n      document.removeEventListener('touchmove', this._moveHandler, false);\\n      document.removeEventListener('touchend', this._endHandler, false);\\n    }\\n\\n    this.options.onResizeend();\\n\\n    if (this.el.hasAttribute('tabindex')) {\\n      this.el.focus();\\n    }\\n  }\\n\\n  /**\\n   * @desc 키 입력 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _keydown(event) {\\n    let keyMap = Jinja.global.getEventKeyMap(event);\\n\\n    switch (keyMap) {\\n      case 'Left':\\n        this.el.style.left = this.el.offsetLeft - 1 + 'px';\\n\\n        this.options.onResizeend();\\n\\n        break;\\n      case 'Right':\\n        this.el.style.left = this.el.offsetLeft + 1 + 'px';\\n\\n        this.options.onResizeend();\\n\\n        break;\\n      case 'Shift-Left':\\n        this.el.style.width = this.el.offsetWidth - 1 + 'px';\\n\\n        this.options.onResizeend();\\n\\n        break;\\n      case 'Shift-Right':\\n        this.el.style.width = this.el.offsetWidth + 1 + 'px';\\n\\n        this.options.onResizeend();\\n\\n        break;\\n      case 'Up':\\n        this.el.style.top = this.el.offsetTop - 1 + 'px';\\n\\n        this.options.onResizeend();\\n\\n        break;\\n      case 'Down':\\n        this.el.style.top = this.el.offsetTop + 1 + 'px';\\n\\n        this.options.onResizeend();\\n\\n        break;\\n      case 'Shift-Up':\\n        this.el.style.height = this.el.offsetHeight - 1 + 'px';\\n\\n        this.options.onResizeend();\\n\\n        break;\\n      case 'Shift-Down':\\n        this.el.style.height = this.el.offsetHeight + 1 + 'px';\\n\\n        this.options.onResizeend();\\n\\n        break;\\n    }\\n  }\\n\\n  /**\\n   * @desc 해당 이벤트가 일어났을때의 좌표를 반환한다.\\n   * @param {Event} - 이벤트\\n   * @return {Object} - 좌표정보\\n   * @example -\\n   */\\n  _getEventPosition(event) {\\n    let result = {};\\n\\n    switch (event.type) {\\n      case 'mousedown':\\n      case 'mousemove':\\n      case 'mouseup':\\n        result.x = event.clientX;\\n        result.y = event.clientY;\\n\\n        break;\\n      case 'touchstart':\\n      case 'touchmove':\\n      case 'touchend':\\n        result.x = event.touches[0].clientX;\\n        result.y = event.touches[0].clientY;\\n\\n        break;\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc - resize를 위한 초기화\\n   * @example -\\n   */\\n  init() {\\n    super.init();\\n    \\n    if (this.el.classList.contains('JJRresizable')) {\\n      return;\\n    }\\n    \\n    this.el.classList.add(this.options.class);\\n    this.startPosition = {};\\n  }\\n\\n  /**\\n   * @desc - 종횡비를 설정한다.\\n   * @param {Number} - 종횡비\\n   * @example -\\n   */\\n  setAspectRatio(val) {\\n    this.options.aspectRatio = val;\\n\\n    if (this.options.aspectRatio !== 0) {\\n      this.el.style.height =\\n        this.el.offsetWidth / this.options.aspectRatio + 'px';\\n    }\\n  }\\n}\\n/* ==JJResizeBox.640.class================ */\\n\\n/**\\n * @classdesc ResizeBox 컴포넌트관리를 위한 클래스\\n */\\nclass JJResizeBox extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      isRotate: true,\\n      isMove: false,\\n      isDrag: false,\\n      aspectRatio: 0,\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 콤포넌트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    let html = \\n      `<div class='rotate-handle'></div>` +\\n      `<div class='rotate-bar'></div>` +\\n      `<div class='resizer size-mark' data-arrow='top'></div>` +\\n      `<div class='resizer size-mark' data-arrow='right'></div>` +\\n      `<div class='resizer size-mark' data-arrow='bottom'></div>` +\\n      `<div class='resizer size-mark' data-arrow='left'></div>` +\\n      `<div class='resizer size-mark' data-arrow='top-left'></div>` +\\n      `<div class='resizer size-mark' data-arrow='top-right'></div>` +\\n      `<div class='resizer size-mark' data-arrow='bottom-left'></div>` +\\n      `<div class='resizer size-mark' data-arrow='bottom-right'></div>`;\\n\\n    this.innerHTML = html;\\n\\n    if (this.options.isDrag) {\\n      this.style.pointerEvents = 'auto';\\n    }\\n\\n    if (this.options.isRotate && this.options.isRotate != 'false') {\\n      this.classList.add('rotate');\\n    }\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    if (this.options.isMove) {\\n      new JJMoveable(this, {\\n        handles: 'n,e,s,w,ne,se,sw,nw,allClose',\\n        cancelEl: '.resizer, .rotate-handle'\\n      });\\n    }\\n\\n    if (this.options.isRotate) {\\n      new JJRotate(this, {\\n        handleEl: '.rotate-handle'\\n      });\\n\\n      this.addEventListener('jjRotateMove', e => {\\n        let transformStyle = `rotate(${e.detail.angle}deg)`;\\n\\t\\t\\t\\t\\n        if(this.lockEl){\\n          this.lockEl.style.msTransform = transformStyle;\\n          this.lockEl.style.MozTransform = transformStyle;\\n          this.lockEl.style.webkitTransform = transformStyle;\\n          this.lockEl.style.transform = transformStyle;\\n        }\\n      });\\n    }\\n\\n    this.arrow = '';\\n    this.startPosition = {x: 0, y: 0};\\n    this.movePosition = {x: 0, y: 0};\\n\\n    this._startHandler = this._start.bind(this);\\n    this._moveHandler = this._move.bind(this);\\n    this._endtHandler = this._end.bind(this);\\n    this._clickHandler = this._onClick.bind(this);\\n    this._observerHandler = this._onResizeObserver.bind(this);\\n\\n    this.addEventListener('mousedown', this._startHandler, true);\\n    this.addEventListener('touchstart', this._startHandler, true);\\n    this.addEventListener('click', this._clickHandler, true);\\n\\n    this.resizeObserver = new ResizeObserver(this._observerHandler);\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 삭제한다.\\n   * @example -\\n   */\\n  _destroy() {\\n    super._destroy();\\n\\n    this.resizeObserver.disconnect();\\n  }\\n\\n  /**\\n   * @desc 지정된 이벤트의 좌표를 반환한다.\\n   * @param {Event} - 이벤트\\n   * @return {Object} - 이벤트 좌표\\n   * @example -\\n   */\\n  _getEventPosition(event) {\\n    let result = {};\\n\\n    switch (event.type) {\\n      case 'mousedown':\\n      case 'mousemove':\\n      case 'mouseup':\\n        result.x = event.clientX;\\n        result.y = event.clientY;\\n\\n        break;\\n      case 'touchstart':\\n      case 'touchmove':\\n      case 'touchend':\\n        result.x = event.touches[0].clientX;\\n        result.y = event.touches[0].clientY;\\n\\n        break;\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 이벤트의 타겟에 따라 리사이즈를 시작한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _start(event) {\\n    if (event.target.matches('jj-resize-box')) {\\n      this.dispatchEvent(\\n        new CustomEvent('resizeStart', {\\n          detail: {},\\n          bubbles: true\\n        })\\n      );\\n    } else {\\n      this.arrow = event.target.dataset.arrow;\\n\\n      if (this.arrow) {\\n        if (event.type === 'mousedown') {\\n          document.addEventListener('mousemove', this._moveHandler, true);\\n          document.addEventListener('mouseup', this._endtHandler, true);\\n        } else {\\n          document.addEventListener('touchmove', this._moveHandler, true);\\n          document.addEventListener('touchend', this._endtHandler, true);\\n        }\\n\\n        event.preventDefault();\\n\\n        this.startPosition = this._getEventPosition(event);\\n        this.startPosition.top = this.offsetTop;\\n        this.startPosition.left = this.offsetLeft;\\n        this.startPosition.width = this.offsetWidth;\\n        this.startPosition.height = this.offsetHeight;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정된 Element의 Resize를 실행한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _move(event) {\\n    event.preventDefault();  \\n\\n    let move ={};\\n    this.curPosition = this._getEventPosition(event);\\n    move.x = this.curPosition.x - this.startPosition.x;\\n    move.y = this.curPosition.y - this.startPosition.y;\\n\\n    if(this.arrow === \\\"top\\\" || this.arrow === \\\"top-right\\\" || this.arrow===\\\"top-left\\\"){\\n      this.style.top = (this.startPosition.top+move.y)+\\\"px\\\";\\n      this.style.height = (this.startPosition.height-move.y)+\\\"px\\\";\\n\\t    if(this.lockEl) this.lockEl.style.top = this.style.top;\\n      if(this.lockEl) this.lockEl.style.height = this.style.height;\\n      if(this.options.aspectRatio !== 0){\\n        this.style.width = this.offsetHeight * this.options.aspectRatio+'px';\\n        if(this.lockEl) this.lockEl.style.width = this.style.width;\\n      }\\n      \\n    }\\n    if(this.arrow === \\\"right\\\" || this.arrow === \\\"top-right\\\" || this.arrow===\\\"bottom-right\\\"){\\n      this.style.width = (this.startPosition.width+move.x)+\\\"px\\\";\\n      if(this.lockEl) this.lockEl.style.width = this.style.width;\\n      if(this.options.aspectRatio !== 0){\\n        this.style.height = this.offsetWidth / this.options.aspectRatio+'px';\\n      }\\n    }\\n    if(this.arrow === \\\"bottom\\\" || this.arrow === \\\"bottom-left\\\" || this.arrow===\\\"bottom-right\\\"){\\n      this.style.height = (this.startPosition.height+move.y)+\\\"px\\\";\\n      if(this.lockEl) this.lockEl.style.height = this.style.height;\\n      if(this.options.aspectRatio !== 0){\\n        this.style.width = this.offsetHeight * this.options.aspectRatio+'px';\\n        if(this.lockEl) this.lockEl.style.width = this.style.width;\\n      }\\n    }\\n    if(this.arrow === \\\"left\\\" || this.arrow === \\\"bottom-left\\\" || this.arrow===\\\"top-left\\\"){\\n      this.style.left = (this.startPosition.left+move.x)+\\\"px\\\";\\n\\t    if(this.lockEl) this.lockEl.style.left = this.style.left;\\n      \\n      this.style.width = (this.startPosition.width-move.x)+\\\"px\\\";\\n\\t\\t\\tif(this.lockEl) this.lockEl.style.width = this.style.width;\\n      \\n      if(this.options.aspectRatio !== 0){\\n        this.style.height = this.offsetWidth / this.options.aspectRatio+'px';\\n        if(this.lockEl) this.lockEl.style.height = this.style.height;\\n      }\\n    }\\n    \\n    this.dispatchEvent(new CustomEvent('resize', {\\n      \\\"detail\\\": {\\n        arrow: this.arrow,\\n        sizeBox: this,\\n        x: move.x,\\n        y: move.y\\n      },\\n      bubbles: true\\n    }));\\n\\n\\n  }\\n\\n  /**\\n   * @desc Dom의 이벤트들을 제거하고 resizeEnd 이벤트를 발생한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _end(event) {\\n    event.preventDefault();\\n\\n    if (event.type === 'mouseup') {\\n      document.removeEventListener('mousemove', this._moveHandler, true);\\n      document.removeEventListener('mouseup', this._endtHandler, true);\\n    } else {\\n      document.removeEventListener('touchmove', this._moveHandler, true);\\n      document.removeEventListener('touchend', this._endtHandler, true);\\n    }\\n\\n    this.dispatchEvent(\\n      new CustomEvent('resizeEnd', {\\n        detail: {\\n          sizeBox: this,\\n          arrow: this.arrow\\n        }\\n      })\\n    );\\n  }\\n\\n  /**\\n   * @desc Resize가 감지되면 지정한 Element의 크기를 변경한다.\\n   * @example -\\n   */\\n  _onResizeObserver() {\\n    if(this.lockEl){\\n      let top = 0;\\n      let left = 0;\\n      //let container = document.body.querySelector(\\\"jj-vhtml-editor\\\");\\n      let container = this.$closest(\\\"jj-vhtml-editor\\\");\\n      \\n      if(container){\\n        top = this.lockEl.getBoundingClientRect().y +\\n            container.scrollTop -\\n            container.getBoundingClientRect().y;\\n\\n        left = this.lockEl.getBoundingClientRect().x - container.getBoundingClientRect().x; \\n      } else {\\n          //container = document.body.querySelector(\\\".hmi-editor\\\");\\n          container = this.$closest(\\\".hmi-editor\\\");\\n          top = this.lockEl.offsetTop;\\n          left = this.lockEl.offsetLeft;\\n        \\n      }\\n      this.style.top = top + 'px';\\n      this.style.left = left + 'px';\\n      this.style.width = this.lockEl.offsetWidth + 'px';\\n      this.style.height = this.lockEl.offsetHeight + 'px';\\n      \\n      if(this.lockEl.style.transform){\\n        this.style.transform = this.lockEl.style.transform;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 클릭 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onClick(event) {\\n    if (event.target.matches('.btn-group *'))\\n      this.dispatchEvent(\\n        new CustomEvent('clickResizeTool', {\\n          detail: event,\\n          bubbles: true\\n        })\\n      );\\n  }\\n\\n  /**\\n   * @desc 종횡비를 설정한다.\\n   * @param {Number} - 종횡비\\n   * @example -\\n   */\\n  setAspectRatio(val) {\\n    this.options.aspectRatio = val;\\n\\n    if (this.options.aspectRatio !== 0) {\\n      this.style.height = this.offsetWidth / this.options.aspectRatio + 'px';\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정된 Element를 잠금해제한다.\\n   * @param {Element} - 지정된 Element\\n   * @example -\\n   */\\n  lockElement(el) {\\n    if (this.lockEl) {\\n      this.resizeObserver.disconnect();\\n    }\\n\\n    this.lockEl = el;\\n    this.style.transform = 'none';\\n\\n    if (this.lockEl) {\\n      this.resizeObserver.observe(this.lockEl);\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-resize-box', JJResizeBox);\\n/* ==JJRotate.640.class================ */\\n\\n/**\\n * @classdesc Rotate 컴포넌트관리를 위한 클래스\\n */\\nclass JJRotate extends JJElComponent {\\n\\n  /**\\n   * @static\\n   * @desc \\\"rotatable\\\" Element를 찾아 JJRotate객체를 생성한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  static detector(event) {\\n    if (event.target.$closest('[rotatable]')) {\\n      event.target.$JJRotate = new JJRotate(event.target, {}, event);\\n    }\\n  }\\n  set value(v) {\\n    this.angle  = this.options.maxAngle * v / 100;\\n    this._setTransform(`rotate(${this.angle}deg)`);   \\n  }\\n  get value(){\\n    return parseInt(100 * this.angle/this.options.maxAngle);\\n  }\\n\\n\\n\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      handleEl: '',\\n      maxAngle:360,\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 콤포넌트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    this.originalX = 0;\\n    this.originalY = 0;\\n    this.angle = 0;\\n    this.startPosition = {\\n      x: 0,\\n      y: 0\\n    };\\n    this.moveSize = {\\n      x: 0,\\n      y: 0\\n    };\\n\\n    this.value = parseInt(this.el.getAttribute(\\\"value\\\"))||0;\\n\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this._startHandler = this._start.bind(this);\\n    this._moveHandler = this._move.bind(this);\\n    this._endHandler = this._end.bind(this);\\n\\n    this.el.addEventListener('mousedown', this._startHandler);\\n    this.el.addEventListener('touchstart', this._startHandler);\\n  }\\n\\n  /**\\n   * @desc 이벤트를 삭제한다.\\n   * @example -\\n   */\\n  _clearEvent() {\\n    this.el.removeEventListener('mousedown', this._startHandler);\\n    this.el.removeEventListener('touchstart', this._startHandler);\\n  }\\n\\n  /**\\n   * @desc 지정된 Element의 Transform을 셋팅한다.\\n   * @param {String} - style 값\\n   * @example -\\n   */\\n  _setTransform(style) {\\n    this.el.style.msTransform = style;\\n    this.el.style.MozTransform = style;\\n    this.el.style.webkitTransform = style;\\n    this.el.style.transform = style;\\n    this.el.dataset.angle = this.angle;\\n  }\\n\\n  /**\\n   * @desc 지정된 Element의 회전을 시작한다.\\n   * @param {Event} - 이벤트\\n   * @return {} -\\n   * @example -\\n   */\\n  _start(event) {\\n    if (!this.el) return;\\n\\n    if (this.options.handleEl && !event.target.matches(this.options.handleEl))\\n      return;\\n\\n    if (event.type === 'mousedown') {\\n      document.addEventListener('mousemove', this._moveHandler, true);\\n      document.addEventListener('mouseup', this._endHandler, true);\\n    } else {\\n      document.addEventListener('touchmove', this._moveHandler, true);\\n      document.addEventListener('touchend', this._endHandler, true);\\n    }\\n    this._setTransform(`rotate(0deg)`);    \\n\\n    this.startPosition.x = \\n      this.el.getBoundingClientRect().x + this.el.offsetWidth / 2;\\n    this.startPosition.y = \\n      this.el.getBoundingClientRect().y + this.el.offsetHeight / 2;\\n\\n    this._setTransform(`rotate(${this.angle}deg)`);    \\n\\n    this.el.classList.add('rotating');\\n\\n    this.el.dispatchEvent(\\n      new CustomEvent('jjRotateStart', {\\n        detail: {\\n          state: 0\\n        },\\n        bubbles: true\\n      })\\n    );\\n  }\\n\\n  /**\\n   * @desc 지정된 Element의 회전을 실행한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _move(event) {\\n    if (!this.el) return;\\n    if (!this.el.classList.contains('rotating')) return;\\n\\n    event.preventDefault();\\n\\n    let rads;\\n\\n    if (event.type === 'mousemove') {\\n      rads = Math.atan2(\\n        event.clientX - this.startPosition.x,\\n        -(event.clientY - this.startPosition.y)\\n      );\\n    } else {\\n      rads = Math.atan2(\\n        event.touches[0].clientX - this.startPosition.x,\\n        -(event.touches[0].clientY - this.startPosition.y)\\n      );\\n    }\\n\\n    this.angle = parseInt(rads * (180 / Math.PI));\\n\\n    // 최대값이 있으면 역회전금지\\n//     if (this.angle < 0) {\\n//       if(this.options.maxAngle){\\n//         this.angle = 0;\\n//       } else {\\n//         this.angle = 180 + (180 + this.angle);\\n//       }\\n//     }\\n\\n    if (this.angle < 0) {\\n      if(this.options.maxAngle == 360){\\n      \\tthis.angle = 180 + (180 + this.angle);\\n      } else {\\n        this.angle = 0;\\n      }\\n    } \\n    \\n    if(this.options.maxAngle){\\n      this.angle = Math.min(this.angle, this.options.maxAngle);\\n    }\\n\\n    this._setTransform(`rotate(${this.angle}deg)`);\\n\\n    this.el.dispatchEvent(\\n      new CustomEvent('jjRotateMove', {\\n        detail: {\\n          angle: this.angle,\\n          value: this.value\\n        },\\n        bubbles: true\\n      })\\n    );\\n  }\\n\\n  /**\\n   * @desc 지정된 Element의 회전을 종료한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _end(event) {\\n    event.preventDefault();\\n\\n    if (!this.el.classList.contains('rotating')) return;\\n\\n    if (event.type === 'mouseup') {\\n      document.removeEventListener('mousemove', this._moveHandler, true);\\n      document.removeEventListener('mouseup', this._endHandler, true);\\n    } else {\\n      document.removeEventListener('touchmove', this._moveHandler, true);\\n      document.removeEventListener('touchend', this._endHandler, true);\\n    }\\n\\n    this.el.dispatchEvent(\\n      new CustomEvent('jjRotateEnd', {\\n        detail: {\\n          angle: this.angle\\n        },\\n        bubbles: true\\n      })\\n    );\\n\\n    this.el.classList.remove('rotating');\\n  }\\n\\n\\n}\\n/* ==JJSelector.640.class================ */\\n\\n/**\\n * @classdesc Selector 컴포넌트관리를 위한 클래스\\n */\\nclass JJSelector extends JJElComponent {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      item: 'th,td',\\n      isMultiSelect: true,\\n      class: 'jj-selector',\\n      markClass: 'selected',\\n      selectBoxClass: 'selector-box',\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 콤포넌트를 생성한다.\\n   * @example -\\n   */\\n  _render() {}\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this._startHandler = this._start.bind(this);\\n    this._moveHandler = this._move.bind(this);\\n    this._endHandler = this._end.bind(this);\\n\\n    this.el.addEventListener('mousedown', this._startHandler);\\n    this.el.addEventListener('touchstart', this._startHandler);\\n\\n    this.dragbox = null;\\n    this.dragX = 0;\\n    this.dragY = 0;\\n    this.el.classList.add(this.options.class);\\n  }\\n\\n  /**\\n   * @desc 이벤트를 삭제한다.\\n   * @example -\\n   */\\n  _clearEvent() {\\n    this.el.removeEventListener('mousedown', this._startHandler);\\n    this.el.removeEventListener('touchstart', this._startHandler);\\n    this.el\\n      .querySelectorAll('.'+this.options.markClass)\\n      .forEach(el => el.classList.remove(this.options.markClass));\\n    this.el.classList.remove(this.options.class);\\n\\n    if (this.dragbox) this.dragbox.remove();\\n\\n    this.el = null;\\n  }\\n\\n  /**\\n   * @desc 이벤트 타겟의 select를 시작한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _start(event) {\\n    let target = Jinja.dom.closest(event.target, this.options.item);\\n\\n    if (target) {\\n      if (event.ctrlKey) {\\n        target.classList.toggle(this.options.markClass);\\n      } else {\\n        this.el.querySelectorAll('.'+this.options.markClass).forEach(el => {\\n          el.classList.remove(this.options.markClass);\\n        });\\n\\n        target.classList.add(this.options.markClass);\\n      }\\n    }\\n\\n    if (this.options.isMultiSelect) {\\n      this.dragbox = this.el.querySelector(`.${this.options.selectBoxClass}`);\\n\\n      if (!this.dragbox) {\\n        this.dragbox = document.createElement('span');\\n        this.dragbox.classList.add(this.options.selectBoxClass);\\n        this.el.appendChild(this.dragbox);\\n      }\\n\\n      if (event.type === 'touchstart') {\\n        this.dragX = event.touches[0].clientX;\\n        this.dragY = event.touches[0].clientY;\\n        this.el.addEventListener('touchmove', this._moveHandler, {\\n          passive: false,\\n          once: false,\\n          capture: false\\n        });\\n        this.el.addEventListener('touchend', this._endHandler, {\\n          passive: false,\\n          once: true,\\n          capture: false\\n        });\\n        this.active = event.target;\\n      } else {\\n        if (event.button == 0) {\\n          this.dragX = event.clientX;\\n          this.dragY = event.clientY;\\n          this.el.addEventListener('mousemove', this._moveHandler, {\\n            passive: false,\\n            once: false,\\n            capture: false\\n          });\\n          this.el.addEventListener('mouseup', this._endHandler, {\\n            passive: false,\\n            once: true,\\n            capture: false\\n          });\\n          this.active = event.target;\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정된 Element의 select를 실행한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _move(event) {\\n    if (this.dragbox && event.buttons == 1) {\\n      event.stopImmediatePropagation();\\n      event.stopPropagation();\\n      event.preventDefault();\\n\\n      this.dragbox.style.display = 'block';\\n\\n      let offsetX, offsetY;\\n\\n      if (event.type === 'touchmove') {\\n        offsetX = event.changedTouches[0].clientX;\\n        offsetY = event.changedTouches[0].clientY;\\n      } else {\\n        offsetX = event.clientX;\\n        offsetY = event.clientY;\\n      }\\n\\n      let bx = Math.min(this.dragX, offsetX);\\n      let by = Math.min(this.dragY, offsetY);\\n      let bw = Math.abs(offsetX - this.dragX);\\n      let bh = Math.abs(offsetY - this.dragY);\\n\\n      this.dragbox.style.top = by + 'px';\\n      this.dragbox.style.left = bx + 'px';\\n      this.dragbox.style.width = bw + 'px';\\n      this.dragbox.style.height = bh + 'px';\\n\\n      this.el.querySelectorAll(this.options.item).forEach(el => {\\n        let x = el.getBoundingClientRect().x;\\n        let w = el.getBoundingClientRect().width;\\n        let y = el.getBoundingClientRect().y;\\n        let h = el.getBoundingClientRect().height;\\n\\n        if (event.ctrlKey) {\\n        } else {\\n          el.classList.remove(this.options.markClass);\\n        }\\n\\n        let rlt = this.getIntersection(\\n          { x: bx, y: by, w: bw, h: bh },\\n          { x: x, y: y, w: w, h: h }\\n        );\\n\\n        if (rlt) {\\n          el.classList.add(this.options.markClass);\\n        }\\n      });\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정된 Element의 select를 종료한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _end(event) {\\n    event.stopImmediatePropagation();\\n    event.stopPropagation();\\n    event.preventDefault();\\n\\n    this.dragbox.remove();\\n    this.el.removeEventListener('mousemove', this._moveHandler, {\\n      passive: false,\\n      once: false,\\n      capture: false\\n    });\\n    this.el.removeEventListener('mouseup', this._endHandler, {\\n      passive: false,\\n      once: true,\\n      capture: false\\n    });\\n    this.el.removeEventListener('touchmove', this._moveHandler, {\\n      passive: false,\\n      once: false,\\n      capture: false\\n    });\\n    this.el.removeEventListener('touchend', this._endHandler, {\\n      passive: false,\\n      once: true,\\n      capture: false\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정된 두 오브젝트의 교차점을 반환한다.\\n   * @param {Object} - 오브젝트1\\n   * @param {Object} - 오브젝트2\\n   * @return {Object} - 교차점\\n   * @example -\\n   */\\n  getIntersection(r1, r2) {\\n    if (r1.x > r2.x + r2.w) return null;\\n    if (r1.x + r1.w < r2.x) return null;\\n    if (r1.y > r2.y + r2.h) return null;\\n    if (r1.y + r1.h < r2.y) return null;\\n\\n    let rect = {};\\n\\n    rect.x = Math.max(r1.x, r2.x);\\n    rect.y = Math.max(r1.y, r2.y);\\n    rect.w = Math.min(r1.x + r1.w, r2.x + r2.w) - rect.x;\\n    rect.h = Math.min(r1.y + r1.h, r2.y + r2.h) - rect.y;\\n\\n    return rect;\\n  }\\n}\\n/* ==JJSortable.640.class================ */\\n\\n/**\\n * @classdesc Sortable 컴포넌트관리를 위한 클래스\\n */\\nclass JJSortable extends JJElComponent {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      handle: '*',\\n      cancel:\\n        'a,button,input,select,[jj-command],textarea,.checkbox, .checkbox *',\\n      item: '> *',\\n      placeholder: '',\\n      handles: ['n', 'w'],\\n      isReact: false,\\n      distence: 5,\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 콤포넌트를 생성한다.\\n   * @example -\\n   */\\n  _render() {}\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this._startHandler = this._start.bind(this);\\n    this._moveHandler = this._move.bind(this);\\n    this._endHandler = this._end.bind(this);\\n\\n    if (this.el.length) {\\n      this.el = this.el;\\n    } else {\\n      this.el = [this.el];\\n    }\\n\\n    this.sortEl = null;\\n    this.cursorEl = null;\\n\\n    this.el.forEach(el => {\\n      el.classList.add('jj-sortable');\\n      el.addEventListener('mousedown', this._startHandler, {\\n        passive: false,\\n        once: false,\\n        capture: false\\n      });\\n      el.addEventListener('touchstart', this._startHandler, {\\n        passive: false,\\n        once: false,\\n        capture: false\\n      });\\n    });\\n  }\\n\\n  /**\\n   * @desc 이벤트를 삭제한다.\\n   * @example -\\n   */\\n  _clearEvent() {\\n    this.el.forEach(el => {\\n      el.classList.remove('jj-sortable');\\n      el.removeEventListener('mousedown', this._startHandler, {\\n        passive: false,\\n        once: false,\\n        capture: false\\n      });\\n      el.removeEventListener('touchstart', this._startHandler, {\\n        passive: false,\\n        once: false,\\n        capture: false\\n      });\\n    });\\n  }\\n\\n  /**\\n   * @desc - 지정된 Element의 Sort를 시작한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _start(event) {\\n    if (event.type === 'mousedown' && event.button !== 0) return;\\n    if (!event.target.matches('.jj-sortable *')) return;\\n\\n    if (this.options.cancel && event.target.matches(this.options.cancel)) return;\\n    if (this.options.handle && !event.target.matches(this.options.handle)) return;\\n\\n    event.stopImmediatePropagation();\\n    event.stopPropagation();\\n    event.preventDefault();\\n\\n    this.sortEl = event.target.closest('.jj-sortable ' + this.options.item);\\n\\n    let handleEl = event.target.closest('.jj-sortable ' + this.options.handle);\\n\\n    if (!handleEl || !this.sortEl) return;\\n\\n    this.cursorEl = this.sortEl.cloneNode(true);\\n\\n    Jinja.appendChild(this.cursorEl);\\n\\n    if (event.type === 'mousedown' && event.button === 0) {\\n      document.addEventListener('mousemove', this._moveHandler);\\n      document.addEventListener('mouseup', this._endHandler);\\n    } else if (event.type === 'touchstart') {\\n      document.addEventListener('touchmove', this._moveHandler);\\n      document.addEventListener('touchend', this._endHandler);\\n    } else {\\n      return null;\\n    }\\n\\n    this.cursorEl.style.width = this.sortEl.offsetWidth + 'px';\\n    this.cursorEl.style.height = this.sortEl.offsetHeight + 'px';\\n    this.cursorEl.style.top = event.clientY + 'px';\\n    this.cursorEl.style.left = event.clientX + 'px';\\n    this.cursorEl.classList.add('cursor-el');\\n    this.cursorEl.hidden = true;\\n    this.start = {\\n      clientX: event.clientX,\\n      clientY: event.clientY\\n    };\\n    this.el.forEach(el => el.classList.add('sort-start'));\\n    this._startIndex = Jinja.dom.findIndex(\\n      this.sortEl.parentElement,\\n      this.sortEl\\n    );\\n  }\\n\\n  /**\\n   * @desc - 지정된 Element의 Sort를 실행한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _move(event) {\\n    if (!event.target.matches('.sort-start *') && !event.target.matches('.sorting *'))\\n      return;\\n\\n    let positionX = 0;\\n    let positionY = 0;\\n    let target;\\n    let overItem;\\n\\n    if (event.type === 'mousemove' && event.button === 0) {\\n      positionY = event.clientY;\\n      positionX = event.clientX;\\n      target = event.target;\\n    } else if (event.type === 'touchmove') {\\n      positionY = event.changedTouches[0].clientY;\\n      positionX = event.changedTouches[0].clientX;\\n      target = document.elementFromPoint(\\n        event.changedTouches[0].clientX,\\n        event.changedTouches[0].clientY\\n      );\\n    }\\n\\n    this.cursorEl.style.top = positionY + 'px';\\n    this.cursorEl.style.left = positionX + 'px';\\n\\n    if (\\n      event.target.matches('.sort-start *') &&\\n      Math.abs(this.start.clientX - positionX) < this.options.distence &&\\n      Math.abs(this.start.clientY - positionY) < this.options.distence\\n    ) {\\n      return;\\n    }\\n\\n    if (event.target.matches('.sort-start *')) {\\n      this.el.forEach(el => el.classList.remove('sort-start'));\\n      this.el.forEach(el => el.classList.add('sorting'));\\n      this.sortEl.classList.add('sort-el');\\n      this.cursorEl.hidden = false;\\n    }\\n\\n    let overEl = target.closest('.jj-sortable ' + this.options.item);\\n\\n    if (this.overEl == overEl) return;\\n\\n    this.overEl = overEl;\\n\\n    event.stopImmediatePropagation();\\n    event.stopPropagation();\\n    event.preventDefault();\\n\\n    if (overEl) {\\n      let overIndex = Jinja.dom.findIndex(overEl.parentElement, overEl);\\n      let sortIndex = Jinja.dom.findIndex(overEl.parentElement, this.sortEl);\\n      if (sortIndex < overIndex) {\\n        overEl.after(this.sortEl);\\n      } else {\\n        overEl.before(this.sortEl);\\n      }\\n      this.sortEl.classList.add('animated');\\n      this.sortEl.classList.add('fadeIn');\\n    }\\n    else {\\n      if (event.target.matches('.jj-sortable')) {\\n        if (event.target.firstElementChild === null) {\\n          event.target.appendChild(this.sortEl);\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc - 지정된 Element의 Sort를 종료한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _end(event) {\\n    event.stopImmediatePropagation();\\n    event.stopPropagation();\\n    event.preventDefault();\\n\\n    if (event.type === 'mouseup') {\\n      document.removeEventListener('mousemove', this._moveHandler);\\n      document.removeEventListener('mouseup', this._endHandler);\\n    } else {\\n      document.removeEventListener('touchmove', this._moveHandler);\\n      document.removeEventListener('touchend', this._endHandler);\\n    }\\n\\n    this.cursorEl.remove();\\n    this.cursorEl = null;\\n    this.el.forEach(el => el.classList.remove('sort-start'));\\n    this.el.forEach(el => el.classList.remove('sorting'));\\n    this.el.forEach((el, index) => {\\n      el.dispatchEvent(\\n        new CustomEvent('JJSortableEnd', {\\n          detail: {\\n            index: index,\\n            container: el,\\n            sortEl: this.sortEl,\\n            startIndex: this._startIndex,\\n            endIndex: Jinja.dom.findIndex(\\n              this.sortEl.parentElement,\\n              this.sortEl\\n            )\\n          },\\n          bubbles: true\\n        })\\n      );\\n    });\\n    this.sortEl.classList.remove('sort-el');\\n    this.sortEl = null;\\n  }\\n}\\n/* ==JJSwiper.640.class================ */\\n\\n/**\\n * @classdesc JJSwiper 컴포넌트관리를 위한 클래스\\n */\\nclass JJSwiper extends JJDragable {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      handles: '',\\n      handleEl: '',\\n      cancelEl: '',\\n      activeClass: 'on',\\n      moveSize: 20,\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc - 슬라이드 아이콘 메뉴를 이동시킨다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _move(event) {\\n    super._move(event);\\n\\n    if (this.movePosition) {\\n      if (this.movePosition.moveX > this.options.moveSize) {\\n        this.el.classList.add(this.options.activeClass);\\n      }\\n\\n      if (this.movePosition.moveX < this.options.moveSize * -1) {\\n        this.el.classList.remove(this.options.activeClass);\\n      }\\n    }\\n  }\\n}\\n/* ==InputComp.710.pkg.deploy================ */\\n/* ==JJText.640.class================ */\\n\\n/**\\n * @classdesc Text 컴포넌트관리를 위한 클래스\\n */\\nclass JJText extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this._value = '';\\n\\n    return {\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc _render의 전처리를 한다.\\n   * @example -\\n   */\\n  _setRender() {\\n    this.setAttribute('data-render', 'jj-item');\\n    this.$empty();\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 생성한다.\\n   * @return {Element} - JJText 컴포넌트\\n   * @example -\\n   */\\n  _render() {\\n    // 도메인 룰을 가져온다\\n    let domainField = this.dataset.domain;\\n    let domainRule;\\n    if (domainField){\\n      domainRule = Jinja.validate.get(domainField);\\n    }\\n\\t\\t\\n\\t\\tObject.assign(this.options, domainRule, this.dataset);\\n\\n\\t\\tif(this.options.required==\\\"false\\\") this.options.required = false;\\n\\t\\tif(this.options.required==\\\"true\\\") this.options.required = true;\\n\\t\\t\\n    let controlId = Jinja.global.uuid();\\n    this.controlLabel = document.createElement(\\\"label\\\");\\n    this.controlLabel.classList.add(\\\"control-label\\\");\\n    this.controlLabel.setAttribute(\\\"for\\\", controlId);\\n    \\n    this.controlLabel.appendChild(document.createTextNode(this.options.label));\\n\\n    this.controlContent = document.createElement(\\\"div\\\");\\n    this.controlContent.classList.add(\\\"control-content\\\");\\n    \\n    this.formControl = document.createElement(\\\"input\\\");\\n\\t\\tthis.controlContent.appendChild(this.formControl );\\n    \\n    this.formControl.classList.add(\\\"form-control\\\");\\n    this.formControl.type = this.options.type;\\n    this.formControl.id = controlId;\\n\\n\\t\\tthis.helpBlock = document.createElement(\\\"span\\\");\\n\\t\\tthis.controlContent.appendChild(this.helpBlock);\\n    \\n\\t\\tthis.helpBlock.classList.add(\\\"help-block\\\");\\n\\t\\t\\n  \\tthis.classList.add(\\\"form-group\\\");\\n    \\n\\t\\tif(this.options.css) \\tthis.classList.add(this.options.css);\\n\\t\\tif(this.options.style) this.setAttribute(\\\"style\\\", this.options.style);\\n\\t\\tif(this.options.bind) \\tthis.dataset.bind \\t= this.options.bind;\\n\\t\\t\\n\\t\\t\\n\\t\\tthis.appendChild(this.controlLabel);\\n\\t\\tthis.appendChild(this.controlContent);\\n    \\n// \\t\\tthis.dataMap = new Map();\\n// \\t\\tthis.dataMap.set(\\\"options\\\", this.options);  \\n\\t\\t//t//his.bind(el);\\n\\t\\n    this.classList.add(\\\"jj-hitem\\\");\\n    this.validMessage = \\\"\\\";\\n    \\n    //this.value = this._value;\\n    \\n    this.formControl.addEventListener(\\\"input\\\", e=>{\\n       this._value = this.formControl.value;\\n    })\\n    \\n    this._optionRender();\\n\\t\\treturn this;\\n  }\\n\\n  /**\\n   * @desc 옵션에 의한 컴포넌트의 속성을 부여한다\\n   * @example -\\n   */\\n  _optionRender(){\\n    //this.formControl.visible = false;\\n    //if(this.options.pattern) this.formControl.setAttribute(\\\"pattern\\\", this.options.pattern);\\n    //if(this.options.domain) this.formControl.setAttribute(\\\"data-valid-domain\\\",this.options.domain);\\n    //if(this.options.title) this.formControl.setAttribute(\\\"title\\\",this.options.title);\\n    \\n\\t\\tif(this.options.required==\\\"false\\\") this.options.required = false;\\n\\t\\tif(this.options.required==\\\"true\\\") this.options.required = true;\\n    \\n\\t\\tif(this.options.disabled==\\\"false\\\") this.options.disabled = false;\\n\\t\\tif(this.options.disabled==\\\"true\\\") this.options.disabled = true;\\n\\t\\tif(this.options.readonly==\\\"false\\\") this.options.readonly = false;\\n\\t\\tif(this.options.readonly==\\\"true\\\") this.options.readonly = true;\\n    \\n    if(this.controlLabel) {\\n    \\tif(this.options.label) this.controlLabel.textContent = this.options.label;\\n    }\\n    if(this.formControl) {\\n      if(this.formControl.tagName==\\\"INPUT\\\"){\\n\\t      if(this.options.type) this.formControl.type = this.options.type;\\n        if (this.options.type == \\\"date\\\"){\\n          this.formControl.setAttribute(\\\"max\\\",\\\"2999-12-31\\\");  \\n        }\\n        if(this.options.min) this.formControl.setAttribute(\\\"min\\\",this.options.min);\\n        if(this.options.max) this.formControl.setAttribute(\\\"max\\\",this.options.max);\\n\\t      if(this.options.mask) this.formControl.setAttribute(\\\"mask\\\",this.options.mask);\\n      }\\n      if(this.options.required) {\\n        this.formControl.setAttribute(\\\"required\\\", \\\"\\\");\\n      } else {\\n        this.removeAttribute(\\\"data-required\\\");\\n        this.formControl.removeAttribute(\\\"required\\\");\\n      }\\n      if(this.options.disabled) {\\n        this.formControl.setAttribute(\\\"disabled\\\", \\\"disabled\\\");\\n      } else {\\n        this.removeAttribute(\\\"data-disabled\\\");\\n        this.formControl.removeAttribute(\\\"disabled\\\");\\n      }\\n      if(this.options.readonly) {\\n        this.formControl.setAttribute(\\\"readonly\\\", \\\"readonly\\\");\\n      } else {\\n        this.removeAttribute(\\\"data-readonly\\\");\\n        this.formControl.removeAttribute(\\\"readonly\\\");\\n      }\\n\\n      if(this.options.placeholder) this.formControl.setAttribute(\\\"placeholder\\\",this.options.placeholder);\\n      \\n    }\\n  }\\n  \\n  /**\\n   * @static\\n   * @memberof JJText\\n   * @method get observedAttributes\\n   * @desc 모니터링 할 속성 목록을 반환한다.\\n   * @return {Array} - 모니터링 할 속성 목록\\n   * @example -\\n   */\\n  static get observedAttributes() {\\n    return [\\n      'data-domain',\\n      'data-label',\\n      'data-type',\\n      'data-bind',\\n      'data-code',\\n      'data-min',\\n      'data-max',\\n      'data-mask',\\n      'data-default',\\n      'data-i18n',\\n      'data-required',\\n      'data-visible',\\n      'data-readonly'\\n    ];\\n  }\\n\\n  /**\\n   * @memberof JJText\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n\\t\\tlet result = this._value;\\n    if([\\\"date\\\", \\\"datetime-local\\\"].includes(this.options.type)){\\n      if (result) result = new Date(result);\\n      else result = null;\\n    } else if([\\\"number\\\",\\\"slider\\\"].includes(this.options.type)){\\n\\t\\t\\tif (result) result = parseFloat(result);\\n      else result = 0;      \\n      \\n      if(isNaN(result)){\\n        result = null; \\n      }\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * @memberof JJText\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(v) {\\n    if (!v){\\n      this._value = v;\\n      this.formControl.value = this._value;\\n    } else {\\n      if([\\\"date\\\", \\\"datetime-local\\\"].includes(this.options.type)){\\n        v = new Date(v);\\n      }\\n\\n      this._value = v;\\n      switch(this.options.type){\\n        case \\\"date\\\":\\n          this.formControl.value = this._value.$toFormat(\\\"yyyy-MM-dd\\\");   \\n          break;\\n        case \\\"datetime-local\\\":\\n          this.formControl.value = this._value.$toFormat(\\\"yyyy-MM-ddTHH:mm:ss\\\");   \\n          break;\\n        default:\\n          this.formControl.value = this._value;\\n          break;\\n      }\\n      \\n    }\\n  }\\n\\n  /**\\n   * @memberof JJText\\n   * @method get validationMessage\\n   * @desc 화면의 띄워줄 Message를 반환한다.\\n   * @return {String} - 메시지\\n   * @example -\\n   */\\n  get validationMessage() {\\n    return this.validMessage;\\n  }\\n\\n  focus(){\\n    this.formControl.focus();\\n  }\\n  \\n  change(val){\\n    if(val != undefined){\\n      this.value = val;\\n    }\\n    this.dispatchEvent(new Event('input', { bubbles: true }));\\n  }\\n  /**\\n   * @desc 옵션을 설정한다.\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  setOptions(options) {\\n    Object.keys(options).forEach(key => {\\n      this.option(key, options[key]);\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 name, value로 옵션을 설정한다.\\n   * @param {String} - 옵션명\\n   * @param {*} - 옵션\\n   * @example -\\n   */\\n  option(name, value) {\\n    this.options[name] = value;\\n\\t\\tthis._optionRender();\\n//     switch (name) {\\n//       case 'label': \\n//           if(this.controlLabel) this.controlLabel.textContent = value;\\n//         break;\\n//       case 'type': \\n//           if(this.formControl) this.formControl.type = value;\\n//         break;\\n//     }\\n  }\\n\\n  /**\\n   * @desc Domain 타입을 설정한다.\\n   * @example -\\n   */\\n  setDomain() {\\n    let domain = Jinja.validate.get(this.dataset.domain);\\n    if (domain) {\\n      this.dataset.type = domain.type;\\n      this._render();\\n    }\\n  }\\n\\n  /**\\n   * @desc 기본값을 설정한다.\\n   * @param {Array} - 추후 기입\\n   * @example -\\n   */\\n  default(val) {\\n    value(val);\\n  }\\n\\n  /**\\n   * @desc 화면에 띄워줄 메시지를 지정한다.\\n   * @param {String} - 메시지\\n   * @example -\\n   */\\n  setCustomValidity(message) {\\n    this.validMessage = message;\\n  }\\n\\n  /**\\n   * @desc 메시지가 유무 여부를 판별하여 Boolean값을 반환한다.\\n   * @return {Boolean} - 메시지 유무여부\\n   * @example -\\n   */\\n  checkValidity() {\\n    return this.validMessage ? false : true;\\n  }\\n\\n  /**\\n   * @desc filter정보를 반환한다.\\n   * @return {Object} - filter정보\\n   * @example -\\n   */\\n  getFilter() {\\n    let result;\\n\\n    if (this.dataset.filter) {\\n      result = {\\n        field: this.dataset.filter,\\n        op: this.dataset.op,\\n        val: [this.value],\\n      };\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 돔연결 이벤트 콜백을 처리한다.\\n   * @example -\\n   */\\n  connectedCallback() {\\n    this._setRender();\\n    this._render();\\n    this._setEvent();\\n  }\\n\\n  /**\\n   * @desc 엘리먼트 속성변경 이벤트 콜백을 처리한다.\\n   * @param {String} - 속성명\\n   * @param {*} - 현재 값\\n   * @param {*} - 새로운 값\\n   * @example -\\n   */\\n  attributeChangedCallback(attrName, oldVal, newVal) {\\n    if (attrName.startsWith('data-')) {\\n      this.option(attrName.replace('data-', ''), newVal);\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-item-text', JJText);\\n/* ==JJBetween.640.class================ */\\n\\n/**\\n * @classdesc Between 컴포넌트관리를 위한 클래스\\n */\\nclass JJBetween extends JJText {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this._baseDate = new Date();\\n    this._value = '';\\n\\n    return {\\n      type: 'DAY',\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 콤포넌트를 생성한다.\\n   * @return {Element} - JJBetween 컴포넌트\\n   * @example -\\n   */\\n  _render() {\\n    let domainField = this.dataset.domain;\\n    let domainRule;\\n\\n    if (domainField) {\\n      domainRule = Jinja.validate.get(domainField);\\n    }\\n\\n    Object.assign(this.options, domainRule, this.dataset);\\n\\n    if (this.options.required == 'false') this.options.required = false;\\n    if (this.options.required == 'true') this.options.required = true;\\n\\n    let controlId = Jinja.global.uuid();\\n\\n    this.controlLabel = document.createElement('label');\\n    this.controlLabel.classList.add('control-label');\\n\\n    if (this.options.i18n)\\n      this.controlLabel.setAttribute('data-i18n', this.options.i18n);\\n\\n    this.controlLabel.setAttribute('for', controlId);\\n    this.controlLabel.appendChild(document.createTextNode(this.options.label));\\n\\n    this.controlContent = document.createElement('div');\\n    this.controlContent.classList.add('control-content');\\n\\n    this.formControlFrom = document.createElement('input');\\n    this.controlContent.appendChild(this.formControlFrom);\\n\\n    this.formControlFrom.classList.add('form-control');\\n    this.formControlFrom.type = this.options.type;\\n    this.formControlFrom.id = controlId;\\n\\n    let betweenLabel = document.createElement('label');\\n\\n    betweenLabel.classList.add('between-label');\\n    betweenLabel.appendChild(document.createTextNode('-'));\\n\\n    this.controlContent.appendChild(betweenLabel);\\n\\n    this.formControlTo = document.createElement('input');\\n    this.controlContent.appendChild(this.formControlTo);\\n\\n    this.formControlTo.classList.add('form-control');\\n    this.formControlTo.type = this.options.type;\\n\\n    if (this.options.type == 'date') {\\n      this.formControlFrom.setAttribute('max', '2999-12-31');\\n      this.formControlTo.setAttribute('max', '2999-12-31');\\n    } else {\\n      this.formControlFrom.removeAttribute('max');\\n      this.formControlTo.removeAttribute('max');\\n    }\\n\\n    if (this.options.required) this.formControl.setAttribute('required', '');\\n\\n    this.helpBlock = document.createElement('span');\\n    this.controlContent.appendChild(this.helpBlock);\\n    this.helpBlock.classList.add('help-block');\\n    this.classList.add('form-group');\\n\\n    if (this.options.css) this.classList.add(this.options.css);\\n    if (this.options.style) this.setAttribute('style', this.options.style);\\n    if (this.options.bind) this.dataset.bind = this.options.bind;\\n\\n    this.appendChild(this.controlLabel);\\n    this.appendChild(this.controlContent);\\n    this.dataMap = new Map();\\n    this.dataMap.set('options', this.options);\\n    this.classList.add('jj-hitem');\\n    this.validMessage = '';\\n\\t\\t\\n   \\n    if(this.options.default){\\n      if(Jinja.global.isInt(this.options.default.split(\\\",\\\")[0])){\\n      \\tthis.value = this.options.default.split(\\\",\\\").map(data=>{\\n          let result = new Date();\\n          result.$addDate(parseInt(data));\\n          return result.$toFormat('yyyy-MM-dd');\\n        });  \\n        \\n      } else {\\n      \\tthis.value = this.options.default.split(\\\",\\\");  \\n      }\\n   }\\n   \\n    this._initValue = this._value;\\n    \\n    //this.value = this._value;\\n    this.formControlFrom.addEventListener(\\\"input\\\", e=>{\\n      if(!this.formControlFrom.value){\\n        this.formControlFrom.value = this._initValue[0]\\n      };\\n      \\n      \\n      if(this.options.width){\\n        let fromDate = new Date(this.formControlFrom.value);\\n        let toDate = new Date(this.formControlTo.value);\\n        \\n        let compDate = new Date(this.formControlFrom.value);\\n        compDate.$addDate(parseInt(this.options.width));\\n        if(compDate < toDate || toDate < fromDate || !this.formControlTo.value){\\n          this.formControlTo.value = compDate.$toFormat('yyyy-MM-dd')\\n        }\\n      }\\n    })\\n\\n    this.formControlTo.addEventListener(\\\"input\\\", e=>{\\n      if(!this.formControlTo.value){\\n        this.formControlTo.value = this._initValue[1]\\n      };\\n      \\n      if(this.options.width){\\n        let fromDate = new Date(this.formControlFrom.value);\\n        let toDate = new Date(this.formControlTo.value);\\n        \\n        let compDate = new Date(this.formControlTo.value);\\n        compDate.$addDate(parseInt(this.options.width)*-1);\\n        if(compDate > fromDate || toDate < fromDate || !this.formControlFrom.value){\\n          this.formControlFrom.value = compDate.$toFormat('yyyy-MM-dd')\\n        }\\n      }\\n    })\\n    \\n    return this;\\n  }\\n\\n  /**\\n   * @static\\n   * @memberof JJBetween\\n   * @method get observedAttributes\\n   * @desc 모니터링 할 속성 목록을 반환한다.\\n   * @return {Array} - 모니터링 할 속성 목록\\n   * @example -\\n   */\\n//   static get observedAttributes() {\\n//     return [\\n//       'data-domain',\\n//       'data-label',\\n//       'data-bind',\\n//       'data-code',\\n//       'data-min',\\n//       'data-max',\\n//       'data-mask',\\n//       'data-default',\\n//       'data-i18n',\\n//       'data-required',\\n//       'data-visible'\\n//     ];\\n//   }\\n\\n  /**\\n   * @memberof JJBetween\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n    return [this.formControlFrom.value, this.formControlTo.value];\\n  }\\n\\n  /**\\n   * @memberof JJBetween\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(val) {\\n    this._value = val;\\n    if (this.formControlTo) {\\n      this.formControlFrom.value = val[0];\\n      this.formControlTo.value = val[1];\\n    }\\n  }\\n\\n  /**\\n   * @memberof JJBetween\\n   * @method get validationMessage\\n   * @desc 화면의 띄워줄 Message를 반환한다.\\n   * @return {String} - 메시지\\n   * @example -\\n   */\\n//   get validationMessage() {\\n//     return this.validMessage;\\n//   }\\n\\n  /**\\n   * @desc 옵션을 설정한다.\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n//   setOptions(options) {\\n//     Object.keys(options).forEach(key => {\\n//       this.option(key, options[key]);\\n//     });\\n//   }\\n\\n  /**\\n   * @desc 지정한 name, value로 옵션을 설정한다.\\n   * @param {String} - 옵션명\\n   * @param {*} - 옵션\\n   * @example -\\n   */\\n  option(name, value) {\\n    this.options[name] = value;\\n\\n    switch (name) {\\n      case 'label': {\\n        if (this.controlLabel) {\\n          this.controlLabel.textContent = value;\\n        }\\n\\n        break;\\n      }\\n      case 'type': {\\n        if(this.formControlFrom){\\n          this.formControlFrom.disabled = false;\\n\\n          let _f;\\n\\n          switch (value) {\\n            case 'YEAR':\\n              this.formControlFrom.setAttribute('max', '2999');\\n              this.formControlFrom.type = 'number';\\n              this.formControlTo.setAttribute('max', '2999');\\n              this.formControlTo.type = 'number';\\n              this.value = [\\n                this._baseDate.getFullYear() - 5,\\n                this._baseDate.getFullYear()\\n              ];\\n\\n              break;\\n            case 'MONTH':\\n              this.formControlFrom.setAttribute('max', '2999-12');\\n              this.formControlFrom.type = 'month';\\n              this.formControlTo.setAttribute('max', '2999-12');\\n              this.formControlTo.type = 'month';\\n\\n              _f = new Date(this._baseDate);\\n              _f.$addMonth(-11);\\n\\n              this.value = [\\n                _f.$toFormat('yyyy-MM'),\\n                this._baseDate.$toFormat('yyyy-MM')\\n              ];\\n\\n              break;\\n            case 'DAY':\\n              this.formControlFrom.setAttribute('max', '2999-12-31');\\n              this.formControlFrom.type = 'date';\\n              this.formControlTo.setAttribute('max', '2999-12-31');\\n              this.formControlTo.type = 'date';\\n\\n              _f = new Date(this._baseDate);\\n              _f.$addMonth(-1);\\n\\n              this.value = [\\n                _f.$toFormat('yyyy-MM-dd'),\\n                this._baseDate.$toFormat('yyyy-MM-dd')\\n              ];\\n\\n              break;\\n            case 'TIME':\\n              this.formControlFrom.setAttribute('max', '2999-12-31');\\n              this.formControlFrom.type = 'date';\\n              this.formControlTo.setAttribute('max', '2999-12-31');\\n              this.formControlTo.type = 'date';\\n              this.value = [\\n                this._baseDate.$toFormat('yyyy-MM-dd'),\\n                this._baseDate.$toFormat('yyyy-MM-dd')\\n              ];\\n              this.formControlFrom.disabled = true;\\n\\n              break;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n//   /**\\n//    * @desc - Domain 타입을 설정한다.\\n//    * @example -\\n//    */\\n//   setDomain() {\\n//     let domain = Jinja.validate.get(this.dataset.domain);\\n\\n//     if (domain) {\\n//       this.dataset.type = domain.type;\\n//       this._render();\\n//     }\\n//   }\\n\\n//   /**\\n//    * @desc 기본값을 설정한다.\\n//    * @param {Array} - 추후 기입\\n//    * @example -\\n//    */\\n//   default(val) {\\n//     value(val);\\n//   }\\n\\n//   /**\\n//    * @desc 화면에 띄워줄 메시지를 지정한다.\\n//    * @param {String} - 메시지\\n//    * @example -\\n//    */\\n//   setCustomValidity(message) {\\n//     this.validMessage = message;\\n//   }\\n\\n//   /**\\n//    * @desc 메시지가 유무 여부를 판별하여 Boolean값을 반환한다.\\n//    * @return {Boolean} - 메시지 유무여부\\n//    * @example -\\n//    */\\n//   checkValidity() {\\n//     return this.validMessage ? false : true;\\n//   }\\n\\n  /**\\n   * @desc - filter정보를 반환한다.\\n   * @return {Object} - filter정보\\n   * @example -\\n   */\\n  getFilter() {\\n    let result;\\n\\n    if (this.dataset.filter) {\\n      result = {\\n        field: this.dataset.filter,\\n        op: 'between',\\n        val: [this.value[0], this.value[1]]\\n      };\\n    }\\n\\n    return result;\\n  }\\n\\n//   /**\\n//    * @desc 엘리먼트 속성변경 이벤트 콜백을 처리한다.\\n//    * @param {String} - 속성명\\n//    * @param {*} - 현재 값\\n//    * @param {*} - 새로운 값\\n//    * @example -\\n//    */\\n//   attributeChangedCallback(attrName, oldVal, newVal) {\\n//     if (attrName.startsWith('data-')) {\\n//       this.option(attrName.replace('data-', ''), newVal);\\n//     }\\n//   }\\n}\\n\\ncustomElements.define('jj-item-between', JJBetween);\\n/* ==JJCheck.640.class================ */\\n\\n/**\\n * @classdesc 체크박스 컴포넌트관리를 위한 클래스\\n */\\nclass JJCheck extends JJText {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this._value = '';\\n\\n    return {\\n      boolType: 'tf10',\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc code의 데이터로 항목을 생성한다.\\n   * @example -\\n   */\\n  _setcode() {\\n    this.controlContent.$empty();\\n    this.options.code.split(',').forEach(data => {\\n      data = data.trim();\\n\\n      let option = document.createElement('label');\\n\\n      option.classList.add('check-label');\\n\\n      let check = document.createElement('input');\\n\\n      check.type = 'checkbox';\\n      check.value = data;\\n      \\n      option.appendChild(check);\\n      option.appendChild(document.createTextNode(data));\\n\\n      this.controlContent.appendChild(option);\\n    });\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 생성한다.\\n   * @return {Element} - JJCheck 컴포넌트\\n   * @example -\\n   */\\n  _render() {\\n    let domainField = this.dataset.domain;\\n    let domainRule;\\n\\n    if (domainField) {\\n      domainRule = Jinja.validate.get(domainField);\\n    }\\n\\n    Object.assign(this.options, domainRule, this.dataset);\\n\\n    if (this.options.required == 'false') this.options.required = false;\\n    if (this.options.required == 'true') this.options.required = true;\\n\\n    let controlId = Jinja.global.uuid();\\n\\n    if (this.options.label) {\\n      this.controlLabel = document.createElement('label');\\n      this.appendChild(this.controlLabel);\\n\\n      this.controlLabel.classList.add('control-label');\\n\\n      if (this.options.i18n)\\n        this.controlLabel.setAttribute('data-i18n', this.options.i18n);\\n\\n      this.controlLabel.setAttribute('for', controlId);\\n\\n      this.controlLabel.appendChild(\\n        document.createTextNode(this.options.label)\\n      );\\n    }\\n\\n    this.controlContent = document.createElement('div');\\n    this.controlContent.classList.add('control-content');\\n\\n    if (this.options.code) {\\n      this._setcode();\\n    } else {\\n      let checkLabel = document.createElement('label');\\n\\n      checkLabel.classList.add('check-label');\\n\\n      this.formControl = document.createElement('input');\\n\\n      checkLabel.appendChild(this.formControl);\\n\\n      this.formControl.type = 'checkbox';\\n\\n      this.controlContent.appendChild(checkLabel);\\n\\n      if (this.options.required) this.formControl.setAttribute('required', '');\\n    }\\n\\n    this.helpBlock = document.createElement('span');\\n    this.controlContent.appendChild(this.helpBlock);\\n\\n    this.helpBlock.classList.add('help-block');\\n\\n    this.classList.add('form-group');\\n\\n    if (this.options.css) this.classList.add(this.options.css);\\n    if (this.options.style) this.setAttribute('style', this.options.style);\\n    if (this.options.bind) this.dataset.bind = this.options.bind;\\n\\n    this.appendChild(this.controlContent);\\n    this.dataMap = new Map();\\n    this.dataMap.set('options', this.options);\\n\\n    this.classList.add('jj-hitem');\\n    this.validMessage = '';\\n\\n    this.value = this._value;\\n\\n    return this;\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.controlContent.addEventListener('input', e => {\\n      e.stopImmediatePropagation();\\n      e.stopPropagation();\\n      e.preventDefault();\\n\\n      this.dispatchEvent(new Event('input', { bubbles: true }));\\n    });\\n  }\\n\\n  /**\\n   * @memberof JJCheck\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n    if (this.options.code) {\\n      let result = [];\\n\\n      this.controlContent\\n        .querySelectorAll('input:checked')\\n        .forEach(el => result.push(el.value));\\n\\n      return result.join(',');\\n    } else {\\n      if (this.options.boolType == '10') {\\n        return this.formControl.checked ? '1' : '0';\\n      } else {\\n        return this.formControl.checked;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @memberof JJCheck\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(val) {\\n    this._value = val;\\n\\n    if (this.controlContent) {\\n      if (this.options.code) {\\n        this.controlContent\\n          .querySelectorAll('input')\\n          .forEach(el => (el.checked = false));\\n\\n        val.split(',').forEach(v => {\\n          let el = this.controlContent.querySelector(`[value=\\\"${v.trim()}\\\"]`);\\n\\n          if (el) el.checked = true;\\n        });\\n      } else {\\n        if (this.options.boolType == '10') {\\n          this.formControl.checked = (val == '1');\\n        } else {\\n          if (typeof val == 'string') {\\n            this.formControl.checked = (val == 'true' || val == '1');\\n          } else {\\n            this.formControl.checked = val;\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-item-check', JJCheck);\\n/* ==JJDataFilter.640.class================ */\\n\\n/**\\n * @classdesc DataFilter 컴포넌트관리를 위한 클래스\\n */\\nclass JJDataFilter extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    this.colForm = this.querySelector(`.filter-col`);\\n    if(!this.colForm){\\n      this.colForm = document.createElement('div');\\n      this.colForm.setAttribute('class', 'filter-col row form-horizontal');\\n      this.colForm.setAttribute('role', 'form');\\n      this.appendChild(this.colForm);\\n      while(this.firstElementChild != this.colForm){\\n        this.colForm.appendChild(this.firstElementChild);\\n      }\\n\\n      //       this.childList.forEach(node=>{\\n      //         if(node != this.colForm){\\n      //         \\tthis.colForm.appendChild(node)\\n      //         }\\n      //       });\\n    }\\n\\n    //this.innerHTML \\n    let buttonsHtml = `\\n<div class=\\\"filter-buttons\\\" data-render=\\\"jj-item\\\">\\n<button method=\\\"query\\\" type=\\\"button\\\" class=\\\"btn btn-primary btn-sm waves-effect waves-light\\\"><i class=\\\"fa fa-search\\\"></i> 조회</button>\\n<button method=\\\"new\\\" type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\"><i class=\\\"fa fa-save\\\"></i> 추가</button>\\n<button method=\\\"delete\\\" type=\\\"button\\\" class=\\\"btn btn-danger btn-sm waves-effect waves-light\\\"><i class=\\\"fa fa-trash-o\\\"></i> 삭제</button>\\n<button method=\\\"save\\\" type=\\\"button\\\" class=\\\"btn btn-success btn-sm waves-effect waves-light\\\"><i class=\\\"fa fa-save\\\"></i> 저장</button>\\n<button method=\\\"excel\\\" type=\\\"button\\\" class=\\\"btn btn-info btn-sm waves-effect\\\"><i class=\\\"fa fa-file-excel-o\\\"></i> 엑셀</button>\\n</div>\\n`;    \\n\\n    this.buttons = this.querySelector(`.filter-buttons`);\\n    if(!this.buttons){\\n      Jinja.dom.append(this, buttonsHtml);\\n      this.buttons = this.querySelector(`.filter-buttons`);\\n      let commands = this.dataset.mode.split(\\\",\\\");\\n      this.buttons.querySelectorAll(`[method]`).forEach(el=>{\\n        if(!commands.includes(el.getAttribute('method'))){\\n          el.remove();\\n        }\\n      })\\n    }\\n\\n  }\\n\\n\\n  _destroy() {\\n    this._clearEvent();\\n  }  \\n  \\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.addEventListener('keydown', e => {\\n      let keyMap = Jinja.global.getEventKeyMap(e);\\n\\n      if (keyMap == 'Enter') {\\n        this.querySelector(`[method=\\\"query\\\"]`).click();\\n      }\\n    });\\n\\n    this.addEventListener('click', e => {\\n\\n      if(e.target.matches(`[method]`)){\\n        this.dispatchEvent(new CustomEvent('filterClick', {\\n          detail: {\\n            \\\"method\\\": e.target.getAttribute('method')\\n          },\\n          bubbles: true\\n        }));\\n      }\\n    })\\n\\n\\n  }\\n\\n  /**\\n   * @static\\n   * @memberof JJDataFilter\\n   * @method get observedAttributes\\n   * @desc 모니터링 할 속성 목록을 반환한다.\\n   * @return {Array} - 모니터링 할 속성 목록\\n   * @example -\\n   */\\n  static get observedAttributes() {\\n    return [];\\n  }\\n\\n  /**\\n   * @desc filter의 데이터를 반환한다.\\n   * @return {Array} - filter 데이터\\n   * @example -\\n   */\\n  query() {\\n    let result = this.filter();\\n\\n    this.dispatchEvent(\\n      new CustomEvent('filterQuery', {\\n        detail: {\\n          filter: result\\n        },\\n        bubbles: true\\n      })\\n    );\\n\\n    return result;\\n  }\\n\\n  filterArray(){\\n    let result = [];\\n\\n    this.querySelectorAll('[data-filter]').forEach(el => {\\n      if (el.getFilter && el.value) {\\n        result.push(el.getFilter());\\n      } else if (el.value) {\\n        result.push({\\n          field: el.dataset.filter,\\n          op: el.dataset.op||\\\"=\\\",\\n          val: [el.value]\\n        });\\n      }\\n    });  \\n    return result;\\n  }\\n  filterJson(){\\n    let result = {};\\n    this.querySelectorAll('[data-filter]').forEach(el => {\\n\\t\\t\\t\\n      if(Array.isArray(el.value)){\\n        let fields = el.dataset.filter.split(\\\",\\\");\\n        fields.forEach((field, index)=>{\\n          if(el.hasAttribute(\\\"required\\\") && !el.value[index]){\\n\\t\\t\\t\\t\\t\\tthrow new JJBizStop(`${el.dataset.label} 필수입력요소가 비었습니다`, el);\\n          }\\n\\n          result[field] = el.value[index]\\n        });\\n      } else {\\n        if(el.hasAttribute(\\\"required\\\") && !el.value){\\n\\t\\t\\t\\t\\t\\tthrow new JJBizStop(`${el.dataset.label} 필수입력요소가 비었습니다`, el);\\n        }\\n        result[el.dataset.filter] = el.value;\\n      }\\n    });  \\n    return result;\\n  }\\n\\n}\\n\\ncustomElements.define('jj-data-filter', JJDataFilter);\\n/* ==JJDataForm.640.class================ */\\n\\n/**\\n * @classdesc DataForm 컴포넌트관리를 위한 클래스\\n */\\nclass JJDataForm extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      \\\"labelWidth\\\": \\\"120px\\\",\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    this.classList.add('jj-data-form');\\n    this.style.setProperty(\\\"--label-width\\\", this.options.labelWidth);\\n  }\\n\\n\\n  _destroy() {\\n    this._clearEvent();\\n  }  \\n\\n  validity(){\\n    let result = true;\\n    this.validMessage = \\\"\\\";\\n    \\n    this.querySelectorAll('[required]').forEach(el=>{\\n      if (!el.value){\\n        result = false;\\n        this.validMessage += el.dataset.label+\\\"요소가 필수입력입니다. \\\\n\\\"\\n      }\\n    })\\n    \\n    return result;\\n  }\\n  \\n  checkValidity(){\\n    let result = true;\\n    this.validMessage = \\\"\\\";\\n    \\n    this.querySelectorAll('[required]').forEach(el=>{\\n      if (!el.value){\\n        result = false;\\n        this.validMessage += el.dataset.label+\\\"요소가 필수입력입니다. \\\\n\\\"\\n      }\\n    })\\n    \\n    return result;\\n  }\\n  \\n  /**\\n   * @static\\n   * @memberof JJDataForm\\n   * @method get observedAttributes\\n   * @desc 모니터링 할 속성 목록을 반환한다.\\n   * @return {Array} - 모니터링 할 속성 목록\\n   * @example -\\n   */\\n  static get observedAttributes() {\\n    return [\\\"data-label-width\\\"];\\n  }\\n  \\n  attributeChangedCallback(attrName, oldVal, newVal) {\\n    if (attrName.startsWith('data-label-width')) {\\n      this.options.labelWidth = newVal;\\n      this._render();\\n    }\\n  }  \\n}\\n\\ncustomElements.define('jj-data-form', JJDataForm);\\n/* ==JJDropDown.640.class================ */\\n\\n/**\\n * @classdesc 드롭다운 컴포넌트관리를 위한 클래스\\n */\\nclass JJDropDown extends JJText {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this._value = '';\\n\\n    return {\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc code의 데이터로 항목을 생성한다.\\n   * @example -\\n   */\\n  _setcode() {\\n    this.itemGroup.$empty();\\n    this.options.code.split(',').forEach(data => {\\n      data = data.trim();\\n\\n      let item = document.createElement('a');\\n\\n      item.classList.add('dropdown-item');\\n      item.setAttribute('value', data);\\n      item.appendChild(document.createTextNode(data));\\n\\n      this.itemGroup.appendChild(item);\\n    });\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 생성한다.\\n   * @return {Element} - JJDropDown 컴포넌트\\n   * @example -\\n   */\\n  _render() {\\n    let domainField = this.dataset.domain;\\n    let domainRule;\\n\\n    if (domainField) {\\n      domainRule = Jinja.validate.get(domainField);\\n    }\\n\\n    Object.assign(this.options, domainRule, this.dataset);\\n\\n    if (this.options.required == 'false') this.options.required = false;\\n    if (this.options.required == 'true') this.options.required = true;\\n\\n    let controlId = Jinja.global.uuid();\\n\\n    this.controlLabel = document.createElement('label');\\n    this.controlLabel.classList.add('control-label');\\n    this.controlLabel.setAttribute('data-i18n', this.options.i18n);\\n    this.controlLabel.setAttribute('for', controlId);\\n\\n    this.controlLabel.appendChild(document.createTextNode(this.options.label));\\n\\n    this.controlContent = document.createElement('div');\\n    this.controlContent.classList.add('control-content');\\n\\n    let inputGroup = document.createElement('div');\\n\\n    this.controlContent.appendChild(inputGroup);\\n\\n    inputGroup.setAttribute('class', 'input-group dropdown-toggle');\\n\\n    let prepend = document.createElement('div');\\n\\n    inputGroup.appendChild(prepend);\\n\\n    prepend.classList.add('input-group-prepend');\\n\\n    let iconWarp = document.createElement('span');\\n\\n    iconWarp.classList.add('input-group-text');\\n\\n    prepend.appendChild(iconWarp);\\n\\n    this.icon = document.createElement('i');\\n    this.icon.setAttribute('class', 'fa fa-user');\\n\\n    iconWarp.appendChild(this.icon);\\n\\n    this.formControl = document.createElement('input');\\n\\n    inputGroup.appendChild(this.formControl);\\n\\n    this.formControl.classList.add('form-control');\\n    this.formControl.type = this.options.type;\\n    this.formControl.id = controlId;\\n\\n    let dropdown = document.createElement('div');\\n\\n    this.controlContent.appendChild(dropdown);\\n\\n    dropdown.classList.add('dropdown-menu');\\n\\n    let formGroup = document.createElement('div');\\n\\n    dropdown.appendChild(formGroup);\\n\\n    formGroup.setAttribute('class', 'form-group p-1');\\n\\n    let formLabel = document.createElement('label');\\n\\n    formLabel.appendChild(document.createTextNode('Search:'));\\n    formGroup.appendChild(formLabel);\\n\\n    let formInput = document.createElement('input');\\n\\n    formInput.type = 'text';\\n\\n    formInput.setAttribute('class', 'form-control search');\\n\\n    formGroup.appendChild(formInput);\\n\\n    this.itemGroup = document.createElement('div');\\n\\n    dropdown.appendChild(this.itemGroup);\\n\\n    this.itemGroup.setAttribute('class', 'dropdown-item-group');\\n\\n    if (this.options.required) this.formControl.setAttribute('required', '');\\n    if (this.options.placeholder)\\n      this.formControl.setAttribute('placeholder', this.options.placeholder);\\n    if (this.options.title)\\n      this.formControl.setAttribute('title', this.options.title);\\n\\n    this.helpBlock = document.createElement('span');\\n    this.controlContent.appendChild(this.helpBlock);\\n    this.helpBlock.classList.add('help-block');\\n\\n    this.classList.add('form-group');\\n\\n    if (this.options.css) this.classList.add(this.options.css);\\n    if (this.options.style) this.setAttribute('style', this.options.style);\\n    if (this.options.bind) this.dataset.bind = this.options.bind;\\n\\n    this.appendChild(this.controlLabel);\\n    this.appendChild(this.controlContent);\\n    this.dataMap = new Map();\\n    this.dataMap.set('options', this.options);\\n\\n    this.classList.add('jj-hitem');\\n    this.validMessage = '';\\n    this._setcode();\\n\\n    this.value = this._value;\\n\\n    return this;\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.addEventListener('input', e => {\\n      if (e.target.matches('.search')) {\\n        e.stopImmediatePropagation();\\n        e.stopPropagation();\\n        e.preventDefault();\\n      }\\n    });\\n\\n    this.addEventListener('click', e => {\\n      if (e.target.matches('.dropdown-item')) {\\n        e.stopImmediatePropagation();\\n        e.stopPropagation();\\n        e.preventDefault();\\n        \\n        this.value = e.target.getAttribute('value');\\n        this.dispatchEvent(new Event('input', { bubbles: true }));\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @memberof JJDropDown\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n    return this.formControl.value;\\n  }\\n\\n  /**\\n   * @memberof JJDropDown\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(val) {\\n    this._value = val;\\n\\n    if (this.formControl) this.formControl.value = val;\\n  }\\n}\\n\\ncustomElements.define('jj-item-dropdown', JJDropDown);\\n/* ==JJIcon.640.class================ */\\n\\n/**\\n * @classdesc 아이콘 컴포넌트관리를 위한 클래스\\n */\\nclass JJIcon extends JJText {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this._value = '';\\n\\n    return {\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 생성한다.\\n   * @return {Element} - JJIcon 컴포넌트\\n   * @example -\\n   */\\n  _render() {\\n    let domainField = this.dataset.domain;\\n    let domainRule;\\n\\n    if (domainField) {\\n      domainRule = Jinja.validate.get(domainField);\\n    }\\n\\n    Object.assign(this.options, domainRule, this.dataset);\\n\\n    if (this.options.required == 'false') this.options.required = false;\\n    if (this.options.required == 'true') this.options.required = true;\\n\\n    let controlId = Jinja.global.uuid();\\n\\n    this.controlLabel = document.createElement('label');\\n    this.controlLabel.classList.add('control-label');\\n    this.controlLabel.setAttribute('data-i18n', this.options.i18n);\\n    this.controlLabel.setAttribute('for', controlId);\\n\\n    this.controlLabel.appendChild(document.createTextNode(this.options.label));\\n\\n    this.controlContent = document.createElement('div');\\n    this.controlContent.classList.add('control-content');\\n\\n    let inputGroup = document.createElement('div');\\n\\n    this.controlContent.appendChild(inputGroup);\\n\\n    inputGroup.classList.add('input-group');\\n\\n    let prepend = document.createElement('div');\\n\\n    inputGroup.appendChild(prepend);\\n\\n    prepend.classList.add('input-group-prepend');\\n\\n    let iconWarp = document.createElement('span');\\n\\n    iconWarp.classList.add('input-group-text');\\n\\n    prepend.appendChild(iconWarp);\\n\\n    this.icon = document.createElement('i');\\n    this.icon.setAttribute('class', 'fa fa-user');\\n\\n    iconWarp.appendChild(this.icon);\\n\\n    this.formControl = document.createElement('input');\\n\\n    inputGroup.appendChild(this.formControl);\\n\\n    this.formControl.classList.add('form-control');\\n    this.formControl.type = this.options.type;\\n    this.formControl.id = controlId;\\n\\n    iconWarp.addEventListener('click', e => {\\n      JJFormModal.open('getIcon.640.uc').then(result => {\\n        this.value = result.class;\\n        this.dispatchEvent(new Event('input', { bubbles: true }));\\n      });\\n    });\\n\\n    if (this.options.required) this.formControl.setAttribute('required', '');\\n    if (this.options.pattern)\\n      this.formControl.setAttribute('pattern', this.options.pattern);\\n    if (this.options.jjmask)\\n      this.formControl.setAttribute('data-mask', this.options.jjmask);\\n    if (this.options.placeholder)\\n      this.formControl.setAttribute('placeholder', this.options.placeholder);\\n    if (this.options.domain)\\n      this.formControl.setAttribute('data-valid-domain', this.options.domain);\\n    if (this.options.title)\\n      this.formControl.setAttribute('title', this.options.title);\\n    if (this.options.min)\\n      this.formControl.setAttribute('title', this.options.min);\\n    if (this.options.max)\\n      this.formControl.setAttribute('title', this.options.max);\\n\\n    this.helpBlock = document.createElement('span');\\n    this.controlContent.appendChild(this.helpBlock);\\n\\n    this.helpBlock.classList.add('help-block');\\n\\n    this.classList.add('form-group');\\n\\n    if (this.options.css) this.classList.add(this.options.css);\\n    if (this.options.style) this.setAttribute('style', this.options.style);\\n    if (this.options.bind) this.dataset.bind = this.options.bind;\\n\\n    this.appendChild(this.controlLabel);\\n    this.appendChild(this.controlContent);\\n    this.dataMap = new Map();\\n    this.dataMap.set('options', this.options);\\n\\n    this.classList.add('jj-hitem');\\n    this.validMessage = '';\\n\\n    this.value = this._value;\\n\\n    return this;\\n  }\\n\\n  /**\\n   * @memberof JJIcon\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n    return this.formControl.value;\\n  }\\n\\n  /**\\n   * @memberof JJIcon\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(val) {\\n    this._value = val;\\n\\n    if (this.formControl) {\\n      this.formControl.value = val;\\n      this.icon.setAttribute('class', `fa ${val || 'fa-user'}`);\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-item-icon', JJIcon);\\n/* ==JJImage.640.class================ */\\n\\n/**\\n * @classdesc 이미지 컴포넌트관리를 위한 클래스\\n */\\nclass JJImage extends JJText {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this._value = '/repository/systemImages/team/img1-md.jpg';\\n    return {\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 생성한다.\\n   * @return {Element} - JJImage 컴포넌트\\n   * @example -\\n   */\\n  _render() {\\n    let domainField = this.dataset.domain;\\n    let domainRule;\\n\\n    if (domainField) {\\n      domainRule = Jinja.validate.get(domainField);\\n    }\\n\\n    Object.assign(this.options, domainRule, this.dataset);\\n\\n    if (this.options.required == 'false') this.options.required = false;\\n    if (this.options.required == 'true') this.options.required = true;\\n\\n    let controlId = Jinja.global.uuid();\\n\\n    this.controlLabel = document.createElement('label');\\n    this.controlLabel.classList.add('control-label');\\n    this.controlLabel.setAttribute('data-i18n', this.options.i18n);\\n    this.controlLabel.setAttribute('for', controlId);\\n\\n    this.controlLabel.appendChild(document.createTextNode(this.options.label));\\n\\n    this.controlContent = document.createElement('div');\\n    this.controlContent.classList.add('control-content');\\n\\n    let spanZoom = document.createElement('span');\\n\\n    this.controlContent.appendChild(spanZoom);\\n\\n    this.formControl = document.createElement('input');\\n    this.formControl.type = 'file';\\n    this.formControl.id = controlId;\\n    this.formControl.setAttribute('title', '클릭하여 이미지 변경');\\n\\n    spanZoom.appendChild(this.formControl);\\n    spanZoom.classList.add('jj-overlay-zoom');\\n\\n    this.img = document.createElement('img');\\n\\n    spanZoom.appendChild(this.img);\\n\\n    this.img.classList.add('img-fluid');\\n    this.img.src = '/repository/systemImages/team/img1-md.jpg';\\n\\n    if (this.options.required) this.formControl.setAttribute('required', '');\\n\\n    this.formControl.addEventListener('input', e => {\\n      e.stopImmediatePropagation();\\n      e.stopPropagation();\\n      e.preventDefault();\\n\\n      Jinja.ajax.imageUploadApps(this.formControl.files).then(response => {\\n        this.formControl.value = '';\\n        this.img.src = response.rows[0].path + response.rows[0].fileId;\\n        this.dispatchEvent(new Event('input', { bubbles: true }));\\n      });\\n    });\\n\\n    this.helpBlock = document.createElement('span');\\n    this.controlContent.appendChild(this.helpBlock);\\n\\n    this.helpBlock.classList.add('help-block');\\n\\n    this.classList.add('form-group');\\n\\n    if (this.options.css) this.classList.add(this.options.css);\\n    if (this.options.style) this.setAttribute('style', this.options.style);\\n    if (this.options.bind) this.dataset.bind = this.options.bind;\\n\\n    this.appendChild(this.controlLabel);\\n    this.appendChild(this.controlContent);\\n    this.dataMap = new Map();\\n    this.dataMap.set('options', this.options);\\n\\n    this.classList.add('jj-hitem');\\n    this.validMessage = '';\\n\\n    this.value = this._value;\\n\\n    return this;\\n  }\\n\\n  /**\\n   * text 상속으로 인한 타입 피해를 복구함\\n   */\\n  _optionRender(){\\n    super._optionRender();\\n    if(this.formControl) {\\n    \\tthis.formControl.type = 'file';\\n    }\\n  }\\n  /**\\n   * @memberof JJImage\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n    return this.img.src;\\n  }\\n\\n  /**\\n   * @memberof JJImage\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(val) {\\n    this._value = val;\\n\\n    if (this.img)\\n      this.img.src = val || '/repository/systemImages/team/img1-md.jpg';\\n  }\\n}\\n\\ncustomElements.define('jj-item-image', JJImage);\\n/* ==JJLabelPopup.640.class================ */\\n\\n/**\\n * @classdesc LabelPopup 컴포넌트관리를 위한 클래스\\n */\\nclass JJLabelPopup extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this._value = '';\\n\\n    return {\\n      \\\"iconClass\\\": \\\"fa fa-search\\\",\\n      modalUri: '',\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 생성한다.\\n   * @return {Element} - JJLabelPopup 컴포넌트\\n   * @example -\\n   */\\n  _render() {\\n    let domainField = this.dataset.domain;\\n    let domainRule;\\n\\n    if (domainField) {\\n      domainRule = Jinja.validate.get(domainField);\\n    }\\n\\n    Object.assign(this.options, domainRule, this.dataset);\\n\\n    if (this.options.required == 'false') this.options.required = false;\\n    if (this.options.required == 'true') this.options.required = true;\\n\\n    let controlId = Jinja.global.uuid();\\n\\n    this.controlLabel = document.createElement('label');\\n    this.controlLabel.classList.add('control-label');\\n    this.controlLabel.setAttribute('data-i18n', this.options.i18n);\\n    this.controlLabel.setAttribute('for', controlId);\\n\\n    this.controlLabel.appendChild(document.createTextNode(this.options.label));\\n\\n    this.controlContent = document.createElement('div');\\n    this.controlContent.classList.add('control-content');\\n\\n    let inputGroup = document.createElement('div');\\n\\n    this.controlContent.appendChild(inputGroup);\\n\\n    inputGroup.classList.add('input-group');\\n\\n    this.formControl = document.createElement('label');\\n\\n    inputGroup.appendChild(this.formControl);\\n    \\n    let prepend = document.createElement('div');\\n\\n    inputGroup.appendChild(prepend);\\n    prepend.classList.add('input-group-append');\\n\\n    let iconWarp = document.createElement('span');\\n\\n    iconWarp.classList.add('input-group-text');\\n    prepend.appendChild(iconWarp);\\n\\n    this.icon = document.createElement('i');\\n    this.icon.setAttribute('class', this.options.iconClass);\\n\\n    iconWarp.appendChild(this.icon);\\n\\n\\n    this.formControl.classList.add('form-control');\\n    this.formControl.type = this.options.type;\\n    this.formControl.id = controlId;\\n\\n    iconWarp.addEventListener('click', e => {\\n      if (this.modalUri) {\\n        JJFormModal.open(this.modalUri, this._value).then(result => {\\n          this._value = result;\\n          this.dispatchEvent(new Event('input', { bubbles: true }));\\n        });\\n      }\\n    });\\n\\n    if (this.options.required) this.formControl.setAttribute('required', '');\\n    if (this.options.pattern)\\n      this.formControl.setAttribute('pattern', this.options.pattern);\\n    if (this.options.jjmask)\\n      this.formControl.setAttribute('data-mask', this.options.jjmask);\\n    if (this.options.placeholder)\\n      this.formControl.setAttribute('placeholder', this.options.placeholder);\\n    if (this.options.domain)\\n      this.formControl.setAttribute('data-valid-domain', this.options.domain);\\n    if (this.options.title)\\n      this.formControl.setAttribute('title', this.options.title);\\n    if (this.options.min)\\n      this.formControl.setAttribute('title', this.options.min);\\n    if (this.options.max)\\n      this.formControl.setAttribute('title', this.options.max);\\n\\n    this.helpBlock = document.createElement('span');\\n    this.controlContent.appendChild(this.helpBlock);\\n\\n    this.helpBlock.classList.add('help-block');\\n\\n    this.classList.add('form-group');\\n\\n    if (this.options.css) this.classList.add(this.options.css);\\n    if (this.options.style) this.setAttribute('style', this.options.style);\\n    if (this.options.bind) this.dataset.bind = this.options.bind;\\n\\n    this.appendChild(this.controlLabel);\\n    this.appendChild(this.controlContent);\\n    this.dataMap = new Map();\\n    this.dataMap.set('options', this.options);\\n\\n    this.classList.add('jj-hitem');\\n    this.validMessage = '';\\n\\n    this.value = this._value;\\n\\n    return this;\\n  }\\n\\n  /**\\n   * @memberof JJLabelPopup\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n    return this._value;\\n  }\\n\\n  /**\\n   * @memberof JJLabelPopup\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(val) {\\n    this._value = val;\\n    this.formControl.innerText = val.label;\\n  }\\n}\\n\\ncustomElements.define('jj-item-labelpopup', JJLabelPopup);\\n/* ==JJQR.640.class================ */\\n\\n/**\\n * @classdesc QR 컴포넌트관리를 위한 클래스\\n */\\n\\nclass JJQR extends JJText {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this._value = '';\\n\\n    return {\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 생성한다.\\n   * @return {Element} - JJQR 컴포넌트\\n   * @example -\\n   */\\n  _render() {\\n    let domainField = this.dataset.domain;\\n    let domainRule;\\n\\n    if (domainField) {\\n      domainRule = Jinja.validate.get(domainField);\\n    }\\n\\n    Object.assign(this.options, domainRule, this.dataset);\\n\\n    if (this.options.required == 'false') this.options.required = false;\\n    if (this.options.required == 'true') this.options.required = true;\\n\\n    let controlId = Jinja.global.uuid();\\n\\n    this.controlLabel = document.createElement('label');\\n    this.controlLabel.classList.add('control-label');\\n\\n    if (this.options.i18n)\\n      this.controlLabel.setAttribute('data-i18n', this.options.i18n);\\n\\n    this.controlLabel.setAttribute('for', controlId);\\n\\n    this.controlLabel.appendChild(document.createTextNode(this.options.label));\\n\\n    this.controlContent = document.createElement('div');\\n    this.controlContent.classList.add('control-content');\\n\\n    this.formControl = document.createElement('input');\\n    this.controlContent.appendChild(this.formControl);\\n\\n    this.formControl.classList.add('form-control');\\n    this.formControl.type = this.options.type;\\n    this.formControl.id = controlId;\\n\\n    if (this.options.required) this.formControl.setAttribute('required', '');\\n    if (this.options.pattern)\\n      this.formControl.setAttribute('pattern', this.options.pattern);\\n    if (this.options.jjmask)\\n      this.formControl.setAttribute('data-mask', this.options.jjmask);\\n    if (this.options.placeholder)\\n      this.formControl.setAttribute('placeholder', this.options.placeholder);\\n    if (this.options.domain)\\n      this.formControl.setAttribute('data-valid-domain', this.options.domain);\\n    if (this.options.title)\\n      this.formControl.setAttribute('title', this.options.title);\\n\\n    this.qrimg = document.createElement('span');\\n    this.controlContent.appendChild(this.qrimg);\\n\\n    this.helpBlock = document.createElement('span');\\n    this.controlContent.appendChild(this.helpBlock);\\n\\n    this.helpBlock.classList.add('help-block');\\n    this.classList.add('form-group');\\n\\n    if (this.options.css) this.classList.add(this.options.css);\\n    if (this.options.style) this.setAttribute('style', this.options.style);\\n    if (this.options.bind) this.dataset.bind = this.options.bind;\\n\\n    this.appendChild(this.controlLabel);\\n    this.appendChild(this.controlContent);\\n    this.dataMap = new Map();\\n    this.dataMap.set('options', this.options);\\n\\n    this.classList.add('jj-hitem');\\n    this.validMessage = '';\\n\\n    return this;\\n  }\\n\\n  /**\\n   * @memberof JJQR\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n    return this.formControl.value;\\n  }\\n\\n  /**\\n   * @memberof JJQR\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(val) {\\n    Jinja.require.load('qrprint').then(() => {\\n      this.formControl.value = val;\\n      this.qrimg.$empty();\\n      new QRCode(this.qrimg, {\\n        text: val,\\n        width: 370,\\n        height: 370,\\n        colorDark: '#000000',\\n        colorLight: '#ffffff',\\n        correctLevel: QRCode.CorrectLevel.H\\n      });\\n    });\\n  }\\n}\\n\\ncustomElements.define('jj-item-qr', JJQR);\\n/* ==JJRadio.640.class================ */\\n\\n/**\\n * @classdesc 라디오버튼 컴포넌트관리를 위한 클래스\\n */\\nclass JJRadio extends JJText {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this._value = '';\\n    this._radioName = Jinja.global.uuid();\\n\\n    return {\\n      code: 'a,b,c,d,e',\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc code의 데이터로 option 항목을 생성한다.\\n   * @example -\\n   */\\n  _setcode() {\\n    if(this.options.code.startsWith('APP.')){\\n      let tableSplit = this.options.code.split(\\\".\\\");\\n      Jinja.code.applinkCode(this.options.code).then(result =>{\\n        this.bindCode(result.rows.map(row=>{\\n          return {\\n            \\\"CODE\\\": row[tableSplit[3]],\\n            \\\"NAME\\\": row[tableSplit[4]]\\n          }\\n        }));\\n      });\\n    } else if (this.options.code.split(',').length === 1) {\\n      this.bindCode(Jinja.code.getGroup(this.options.code));\\n    } else {\\n      this.options.code.split(',').forEach(data => {\\n        data = data.trim();\\n\\n        let option = document.createElement('label');\\n\\n        option.classList.add('radio-label');\\n\\n        let radio = document.createElement('input');\\n\\n        radio.type = 'radio';\\n        radio.name = this._radioName;\\n        radio.value = data;\\n\\n        option.appendChild(radio);\\n        option.appendChild(document.createTextNode(data));\\n\\n        this.controlContent.appendChild(option);\\n      });\\n    }\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 생성한다.\\n   * @return {Element} - JJRadio 컴포넌트\\n   * @example -\\n   */\\n  _render() {\\n    let domainField = this.dataset.domain;\\n    let domainRule;\\n\\n    if (domainField) {\\n      domainRule = Jinja.validate.get(domainField);\\n    }\\n\\n    Object.assign(this.options, domainRule, this.dataset);\\n\\n    if (this.options.required == 'false') this.options.required = false;\\n    if (this.options.required == 'true') this.options.required = true;\\n\\n    let controlId = Jinja.global.uuid();\\n\\n    this.controlLabel = document.createElement('label');\\n    this.controlLabel.classList.add('control-label');\\n    this.controlLabel.setAttribute('data-i18n', this.options.i18n);\\n\\n    this.controlLabel.appendChild(document.createTextNode(this.options.label));\\n\\n    this.controlContent = document.createElement('div');\\n    this.controlContent.classList.add('control-content');\\n\\n    this.helpBlock = document.createElement('span');\\n    this.controlContent.appendChild(this.helpBlock);\\n\\n    this.helpBlock.classList.add('help-block');\\n    this.classList.add('form-group');\\n\\n    if (this.options.css) this.classList.add(this.options.css);\\n    if (this.options.style) this.setAttribute('style', this.options.style);\\n    if (this.options.bind) this.dataset.bind = this.options.bind;\\n\\n    this.appendChild(this.controlLabel);\\n    this.appendChild(this.controlContent);\\n    this.dataMap = new Map();\\n    this.dataMap.set('options', this.options);\\n\\n    this._setcode();\\n    this.classList.add('jj-hitem');\\n    this.validMessage = '';\\n\\n    this.value = this._value;\\n\\n    return this;\\n  }\\n\\n  /**\\n   * @static\\n   * @memberof JJRadio\\n   * @method get observedAttributes\\n   * @desc 모니터링 할 속성 목록을 반환한다.\\n   * @return {Array} - 모니터링 할 속성 목록\\n   * @example -\\n   */\\n  static get observedAttributes() {\\n    return [\\n      'data-domain',\\n      'data-label',\\n      'data-bind',\\n      'data-code',\\n      'data-min',\\n      'data-max',\\n      'data-mask',\\n      'data-default',\\n      'data-i18n',\\n      'data-required',\\n      'data-visible',\\n    ];\\n  }\\n\\n  /**\\n   * @memberof JJRadio\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n    if (this.controlContent.querySelector('input:checked')) {\\n      return this.controlContent.querySelector('input:checked').value;\\n    } else {\\n      return null;\\n    }\\n  }\\n\\n  /**\\n   * @memberof JJRadio\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(val) {\\n    this._value = val;\\n\\n    if (this.controlContent) {\\n      this.controlContent\\n        .querySelectorAll('input')\\n        .forEach(el => (el.checked = false));\\n\\n      let el = this.controlContent.querySelector(`[value=\\\"${val}\\\"]`);\\n\\n      if (el) el.checked = true;\\n    }\\n  }\\n\\n  /**\\n   * @desc rows 데이터로 옵션항목을 생성한다.\\n   * @param {Object} - 코드목록\\n   * @example -\\n   */\\n  bindCode(rows) {\\n    this.controlContent.$empty();\\n\\n    if (rows && rows.length > 0) {\\n      rows.forEach(row => {\\n        let option = document.createElement('label');\\n\\n        option.classList.add('radio-label');\\n\\n        let radio = document.createElement('input');\\n\\n        radio.type = 'radio';\\n        radio.name = this._radioName;\\n        radio.value = row.CODE;\\n\\n        option.appendChild(radio);\\n        option.appendChild(document.createTextNode(row.NAME));\\n\\n        this.controlContent.appendChild(option);\\n      });\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-item-radio', JJRadio);\\n/* ==JJRange.640.class================ */\\n\\n/**\\n * @classdesc Range 컴포넌트관리를 위한 클래스\\n */\\nclass JJRange extends JJText {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this._value = '';\\n\\n    return {\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 생성한다.\\n   * @return {Element} - JJRange 컴포넌트\\n   * @example -\\n   */\\n  _render() {\\n    let domainField = this.dataset.domain;\\n    let domainRule;\\n\\n    if (domainField) {\\n      domainRule = Jinja.validate.get(domainField);\\n    }\\n\\n    Object.assign(this.options, domainRule, this.dataset);\\n\\n    if (this.options.required == 'false') this.options.required = false;\\n    if (this.options.required == 'true') this.options.required = true;\\n\\n    let controlId = Jinja.global.uuid();\\n\\n    this.controlLabel = document.createElement('label');\\n    this.controlLabel.classList.add('control-label');\\n    this.controlLabel.setAttribute('data-i18n', this.options.i18n);\\n    this.controlLabel.setAttribute('for', controlId);\\n\\n    this.controlLabel.appendChild(document.createTextNode(this.options.label));\\n\\n    this.controlContent = document.createElement('div');\\n    this.controlContent.classList.add('control-content');\\n\\n    let inputGroup = document.createElement('div');\\n\\n    this.controlContent.appendChild(inputGroup);\\n\\n    inputGroup.classList.add('input-group');\\n\\n    let prepend = document.createElement('div');\\n\\n    inputGroup.appendChild(prepend);\\n    prepend.classList.add('input-group-prepend');\\n\\n    this.num = document.createElement('span');\\n    this.num.classList.add('input-group-text');\\n\\n    prepend.appendChild(this.num);\\n\\n    this.formControl = document.createElement('input');\\n\\n    inputGroup.appendChild(this.formControl);\\n\\n    this.formControl.classList.add('form-control');\\n    this.formControl.type = 'range';\\n    this.formControl.id = controlId;\\n\\n    if (this.options.required) this.formControl.setAttribute('required', '');\\n    if (this.options.pattern)\\n      this.formControl.setAttribute('pattern', this.options.pattern);\\n    if (this.options.jjmask)\\n      this.formControl.setAttribute('data-mask', this.options.jjmask);\\n    if (this.options.placeholder)\\n      this.formControl.setAttribute('placeholder', this.options.placeholder);\\n    if (this.options.domain)\\n      this.formControl.setAttribute('data-valid-domain', this.options.domain);\\n    if (this.options.title)\\n      this.formControl.setAttribute('title', this.options.title);\\n    if (this.options.min)\\n      this.formControl.setAttribute('title', this.options.min);\\n    if (this.options.max)\\n      this.formControl.setAttribute('title', this.options.max);\\n\\n    this.helpBlock = document.createElement('span');\\n    this.controlContent.appendChild(this.helpBlock);\\n\\n    this.helpBlock.classList.add('help-block');\\n\\n    this.classList.add('form-group');\\n\\n    if (this.options.css) this.classList.add(this.options.css);\\n    if (this.options.style) this.setAttribute('style', this.options.style);\\n    if (this.options.bind) this.dataset.bind = this.options.bind;\\n\\n    this.appendChild(this.controlLabel);\\n    this.appendChild(this.controlContent);\\n    this.dataMap = new Map();\\n    this.dataMap.set('options', this.options);\\n\\n    this.classList.add('jj-hitem');\\n    this.validMessage = '';\\n\\n    this.value = this._value;\\n\\n    this.formControl.addEventListener('input', e => {\\n      this._value = this.formControl.value;\\n      this.num.innerText = this._value;\\n    });\\n\\n    return this;\\n  }\\n\\n  /**\\n   * @memberof JJRange\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n    return this._value;\\n  }\\n\\n  /**\\n   * @memberof JJRange\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(val) {\\n    this._value = val;\\n\\n    if (this.formControl) {\\n      this.formControl.value = val;\\n      this.num.innerText = val;\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-item-range', JJRange);\\n/* ==JJSelect.640.class================ */\\n\\n/**\\n * @classdesc 셀렉트박스 컴포넌트관리를 위한 클래스\\n */\\nclass JJSelect extends JJText {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this._value = '';\\n\\n    return {\\n      code: 'a,b,c,d,e',\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc code의 데이터로 option 항목을 생성한다.\\n   * @example -\\n   */\\n  _setcode() {\\n    if(this.options.code.startsWith('APP.')){\\n      let tableSplit = this.options.code.split(\\\".\\\");\\n      Jinja.code.applinkCode(this.options.code).then(result =>{\\n       \\tthis.bindCode(result.rows.map(row=>{\\n          return {\\n            \\\"CODE\\\": row[tableSplit[3]],\\n          \\t\\\"NAME\\\": row[tableSplit[4]]\\n          }\\n        }));\\n      });\\n    \\t//Jinja.code.applinkSelectEl(this.formControl, this.options.code, !this.options.required);\\n    } else if (this.options.code.split(',').length === 1) {\\n      this.bindCode(Jinja.code.getGroup(this.options.code));\\n    } else {\\n      this.options.code.split(',').forEach(data => {\\n        data = data.trim();\\n\\n        let option = document.createElement('option');\\n\\n        option.appendChild(document.createTextNode(data));\\n        option.value = data;\\n\\n        this.formControl.appendChild(option);\\n      });\\n    }\\n  }\\n\\n\\n\\n  /**\\n   * @desc 컴포넌트를 생성한다.\\n   * @return {Element} - JJSelect 컴포넌트\\n   * @example -\\n   */\\n  _render() {\\n    let domainField = this.dataset.domain;\\n    let domainRule;\\n\\n    if (domainField) {\\n      domainRule = Jinja.validate.get(domainField);\\n    }\\n\\n    Object.assign(this.options, domainRule, this.dataset);\\n\\n    if (this.options.required == 'false') this.options.required = false;\\n    if (this.options.required == 'true') this.options.required = true;\\n\\n    let controlId = Jinja.global.uuid();\\n\\n    this.controlLabel = document.createElement('label');\\n    this.controlLabel.classList.add('control-label');\\n    this.controlLabel.setAttribute('data-i18n', this.options.i18n);\\n    this.controlLabel.setAttribute('for', controlId);\\n    this.controlLabel.appendChild(document.createTextNode(this.options.label));\\n\\n    this.controlContent = document.createElement('div');\\n    this.controlContent.classList.add('control-content');\\n\\n    this.formControl = document.createElement('select');\\n    this.controlContent.appendChild(this.formControl);\\n    this.formControl.classList.add('form-control');\\n    this.formControl.classList.id = this.formControl.id;\\n\\n    this.helpBlock = document.createElement('span');\\n    this.controlContent.appendChild(this.helpBlock);\\n\\n    this.helpBlock.classList.add('help-block');\\n\\n    this.classList.add('form-group');\\n\\n    if (this.options.css) this.classList.add(this.options.css);\\n    if (this.options.style) this.setAttribute('style', this.options.style);\\n    if (this.options.bind) this.dataset.bind = this.options.bind;\\n\\n    this.appendChild(this.controlLabel);\\n    this.appendChild(this.controlContent);\\n    this.dataMap = new Map();\\n    this.dataMap.set('options', this.options);\\n\\n    this._setcode();\\n    this.classList.add('jj-hitem');\\n    this.validMessage = '';\\n\\n    if(this.options.default){\\n      this.value = this.options.default;\\n    }\\n    this._initValue = this._value;\\n\\n    return this;\\n  }\\n\\n  /**\\n   * @static\\n   * @memberof JJSelect\\n   * @method get observedAttributes\\n   * @desc 모니터링 할 속성 목록을 반환한다.\\n   * @return {Array} - 모니터링 할 속성 목록\\n   * @example -\\n   */\\n  static get observedAttributes() {\\n    return [\\n      'data-domain',\\n      'data-label',\\n      'data-bind',\\n      'data-code',\\n      'data-min',\\n      'data-max',\\n      'data-mask',\\n      'data-default',\\n      'data-i18n',\\n      'data-required',\\n      'data-visible'\\n    ];\\n  }\\n\\n  /**\\n   * @memberof JJSelect\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n    if (this.options.multiple) {\\n      let result = [];\\n\\n      this.formControl.querySelectorAll('option').forEach(el => {\\n        if (el.selected) result.push(el.value);\\n      });\\n\\n      return result.join(',');\\n    } else {\\n      return this.formControl.value;\\n    }\\n  }\\n\\n  /**\\n   * @memberof JJSelect\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(val) {\\n    this._value = val;\\n\\n    if (this.formControl) {\\n      if (this.options.multiple) {\\n        this.formControl\\n          .querySelectorAll('option')\\n          .forEach(el => (el.selected = false));\\n\\n        val.split(',').forEach(v => {\\n          if (this.formControl.querySelector(`[value=\\\"${v}\\\"]`)) {\\n            this.formControl.querySelector(`[value=\\\"${v}\\\"]`).selected = true;\\n          }\\n        });\\n      } else {\\n        this.formControl.value = val;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc rows 데이터로 option 항목을 생성한다.\\n   * @param {Object} - 코드목록\\n   * @example -\\n   */\\n  bindCode(rows) {\\n    this.formControl.$empty();\\n\\n    if (!this.hasAttribute('required')) {\\n      let option = document.createElement('option');\\n\\n      option.appendChild(document.createTextNode('-선택-'));\\n      option.value = '';\\n\\n      this.formControl.appendChild(option);\\n    }\\n\\n    if (rows && rows.length > 0) {\\n      rows.forEach(row => {\\n        let option = document.createElement('option');\\n\\n        option.appendChild(document.createTextNode(row.NAME));\\n        option.value = row.CODE;\\n\\n        this.formControl.appendChild(option);\\n      });\\n\\n      if (this.hasAttribute('required')) {\\n        this.value = rows[0] ? rows[0].CODE : '';\\n      }\\n    }\\n    this.dispatchEvent(new Event('input', { bubbles: true }));\\n  }\\n}\\n\\ncustomElements.define('jj-item-select', JJSelect);\\n/* ==JJTags.640.class================ */\\n\\n/**\\n * @classdesc Tags 컴포넌트관리를 위한 클래스\\n */\\nclass JJTags extends JJText {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this._value = '';\\n\\n    return {\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 생성한다.\\n   * @return {Element} - JJTags 컴포넌트\\n   * @example -\\n   */\\n  _render() {\\n    let domainField = this.dataset.domain;\\n    let domainRule;\\n\\n    if (domainField) {\\n      domainRule = Jinja.validate.get(domainField);\\n    }\\n\\n    Object.assign(this.options, domainRule, this.dataset);\\n\\n    if (this.options.required == 'false') this.options.required = false;\\n    if (this.options.required == 'true') this.options.required = true;\\n\\n    let controlId = Jinja.global.uuid();\\n\\n    this.controlLabel = document.createElement('label');\\n    this.controlLabel.classList.add('control-label');\\n    this.controlLabel.setAttribute('data-i18n', this.options.i18n);\\n    this.controlLabel.setAttribute('for', controlId);\\n\\n    this.controlLabel.appendChild(document.createTextNode(this.options.label));\\n\\n    this.controlContent = document.createElement('div');\\n    this.controlContent.classList.add('control-content');\\n\\n    let inputGroup = document.createElement('div');\\n\\n    this.controlContent.appendChild(inputGroup);\\n\\n    inputGroup.setAttribute('class', 'input-group');\\n\\n    this.items = document.createElement('span');\\n\\n    inputGroup.appendChild(this.items);\\n\\n    this.items.setAttribute('class', 'tag-items');\\n\\n    this.tagControl = document.createElement('input');\\n    this.tagControl.setAttribute('class', 'tag-control');\\n    this.tagControl.setAttribute('placeholder', 'add tags');\\n\\n    inputGroup.appendChild(this.tagControl);\\n\\n    this.tagControl.type = 'text';\\n    this.tagControl.id = controlId;\\n\\n    this.helpBlock = document.createElement('span');\\n    this.controlContent.appendChild(this.helpBlock);\\n    this.helpBlock.classList.add('help-block');\\n\\n    this.classList.add('form-group');\\n\\n    if (this.options.css) this.classList.add(this.options.css);\\n    if (this.options.style) this.setAttribute('style', this.options.style);\\n    if (this.options.bind) this.dataset.bind = this.options.bind;\\n\\n    this.appendChild(this.controlLabel);\\n    this.appendChild(this.controlContent);\\n    this.dataMap = new Map();\\n    this.dataMap.set('options', this.options);\\n\\n    this.classList.add('jj-hitem');\\n    this.validMessage = '';\\n\\n    return this;\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.tagControl.addEventListener('input', e => {\\n      e.stopImmediatePropagation();\\n      e.stopPropagation();\\n      e.preventDefault();\\n    });\\n\\n    this.items.addEventListener('click', e => {\\n      if (e.target.matches('.close')) {\\n        this.dispatchEvent(new Event('input', { bubbles: true }));\\n      }\\n    });\\n\\n    this.tagControl.addEventListener('keydown', e => {\\n      let v = this.tagControl.value;\\n\\n      if (e.keyCode == 13 && val) {\\n        let html =\\n          `<span class=\\\"alert alert-info alert-dismissible fade show\\\" role=\\\"alert\\\" value=\\\"${v}\\\">` +\\n          `${v}` +\\n          `<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">` +\\n          `<span aria-hidden=\\\"true\\\">×</span>` +\\n          `</button>` +\\n          `</span>`;\\n\\n        Jinja.dom.append(this.items, html);\\n\\n        this.tagControl.value = '';\\n        this.dispatchEvent(new Event('input', { bubbles: true }));\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @memberof JJTags\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n    let result = [];\\n\\n    this.items\\n      .querySelectorAll('.alert')\\n      .forEach(el => result.push(el.getAttribute('value')));\\n    this._value = result.join(',');\\n\\n    return this._value;\\n  }\\n\\n  /**\\n   * @memberof JJTags\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(val) {\\n    this._value = val;\\n\\n    let html = ``;\\n\\n    val.split(',').forEach(v => {\\n      if (v) {\\n        html +=\\n          `<span class=\\\"alert alert-info alert-dismissible fade show\\\" role=\\\"alert\\\" value=\\\"${v}\\\">` +\\n          `${v}` +\\n          `<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">` +\\n          `<span aria-hidden=\\\"true\\\">×</span>` +\\n          `</button>` +\\n          `</span>`;\\n      }\\n    });\\n\\n    if (this.items) this.items.innerHTML = html;\\n  }\\n}\\n\\ncustomElements.define('jj-item-tags', JJTags);\\n/* ==JJTextarea.640.class================ */\\n\\n/**\\n * @classdesc Textarea 컴포넌트관리를 위한 클래스\\n */\\nclass JJTextarea extends JJText {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this._value = '';\\n\\n    return {\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 생성한다.\\n   * @return {Element} - JJText 컴포넌트\\n   * @example -\\n   */\\n  _render() {\\n    let domainField = this.dataset.domain;\\n    let domainRule;\\n\\n    if (domainField) {\\n      domainRule = Jinja.validate.get(domainField);\\n    }\\n\\n    Object.assign(this.options, domainRule, this.dataset);\\n\\n    if (this.options.required == 'false') this.options.required = false;\\n    if (this.options.required == 'true') this.options.required = true;\\n\\n    let controlId = Jinja.global.uuid();\\n\\n    this.controlLabel = document.createElement('label');\\n    this.controlLabel.classList.add('control-label');\\n    this.controlLabel.setAttribute('data-i18n', this.options.i18n);\\n    this.controlLabel.setAttribute('for', controlId);\\n\\n    this.controlLabel.appendChild(document.createTextNode(this.options.label));\\n\\n    this.controlContent = document.createElement('div');\\n    this.controlContent.classList.add('control-content');\\n\\n    this.formControl = document.createElement('textarea');\\n    this.controlContent.appendChild(this.formControl);\\n\\n    this.formControl.classList.add('form-control');\\n    this.formControl.id = controlId;\\n\\n    if (this.options.required) this.formControl.setAttribute('required', '');\\n    if (this.options.pattern)\\n      this.formControl.setAttribute('pattern', this.options.pattern);\\n    if (this.options.jjmask)\\n      this.formControl.setAttribute('data-mask', this.options.jjmask);\\n    if (this.options.placeholder)\\n      this.formControl.setAttribute('placeholder', this.options.placeholder);\\n    if (this.options.domain)\\n      this.formControl.setAttribute('data-valid-domain', this.options.domain);\\n    if (this.options.title)\\n      this.formControl.setAttribute('title', this.options.title);\\n    if (this.options.min)\\n      this.formControl.setAttribute('title', this.options.min);\\n    if (this.options.max)\\n      this.formControl.setAttribute('title', this.options.max);\\n\\n    this.helpBlock = document.createElement('span');\\n    this.controlContent.appendChild(this.helpBlock);\\n\\n    this.helpBlock.classList.add('help-block');\\n\\n    this.classList.add('form-group');\\n\\n    if (this.options.css) this.classList.add(this.options.css);\\n    if (this.options.style) this.setAttribute('style', this.options.style);\\n    if (this.options.bind) this.dataset.bind = this.options.bind;\\n\\n    this.appendChild(this.controlLabel);\\n    this.appendChild(this.controlContent);\\n    this.dataMap = new Map();\\n    this.dataMap.set('options', this.options);\\n\\n    this.classList.add('jj-hitem');\\n    this.validMessage = '';\\n\\n    this.formControl.value = this._value;\\n\\n    this.formControl.addEventListener('input', e => {\\n      this._value = this.formControl.value;\\n    });\\n\\n    return this;\\n  }\\n}\\n\\ncustomElements.define('jj-item-textarea', JJTextarea);\\n/* ==JJLabel.640.class================ */\\n\\n/**\\n * @classdesc Text 컴포넌트관리를 위한 클래스\\n */\\nclass JJLabel extends JJText {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this._value = '';\\n\\n    return {\\n      \\\"type\\\": \\\"text\\\",\\n      \\\"version\\\": \\\"640\\\"\\n    };\\n  }\\n\\n  /**\\n   * @desc _render의 전처리를 한다.\\n   * @example -\\n   */\\n  _setRender() {\\n    this.setAttribute('data-render', 'jj-item');\\n    this.$empty();\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 생성한다.\\n   * @return {Element} - JJText 컴포넌트\\n   * @example -\\n   */\\n  _render() {\\n    // 도메인 룰을 가져온다\\n    let domainField = this.dataset.domain;\\n    let domainRule;\\n    if (domainField){\\n      domainRule = Jinja.validate.get(domainField);\\n    }\\n\\t\\t\\n\\t\\tObject.assign(this.options, domainRule, this.dataset);\\n\\n\\t\\tif(this.options.required==\\\"false\\\") this.options.required = false;\\n\\t\\tif(this.options.required==\\\"true\\\") this.options.required = true;\\n\\t\\t\\n    let controlId = Jinja.global.uuid();\\n    this.controlLabel = document.createElement(\\\"label\\\");\\n    this.controlLabel.classList.add(\\\"control-label\\\");\\n    this.controlLabel.setAttribute(\\\"for\\\", controlId);\\n    this.controlLabel.appendChild(document.createTextNode(this.options.label));\\n\\n    this.controlContent = document.createElement(\\\"div\\\");\\n    this.controlContent.classList.add(\\\"control-content\\\");\\n    \\n    this.formControl = document.createElement(\\\"label\\\");\\n\\t\\tthis.controlContent.appendChild(this.formControl );\\n    this.formControl.classList.add(\\\"form-control\\\");\\n    this.formControl.id = controlId;\\n\\n\\t\\tthis.helpBlock = document.createElement(\\\"span\\\");\\n\\t\\tthis.controlContent.appendChild(this.helpBlock);\\n    \\n\\t\\tthis.helpBlock.classList.add(\\\"help-block\\\");\\n\\t\\t\\n  \\tthis.classList.add(\\\"form-group\\\");\\n    \\n\\t\\tif(this.options.css) \\tthis.classList.add(this.options.css);\\n\\t\\tif(this.options.style) this.setAttribute(\\\"style\\\", this.options.style);\\n\\t\\tif(this.options.bind) {\\n      this.dataset.bind = this.options.bind;\\n    }\\n\\t\\tif(this.options.exp) {\\n      this.formControl.innerText=this.options.exp;\\n\\t    this.formControl.title = '연산식: ' + this.options.exp;\\n    }\\n\\t\\t\\n\\t\\tthis.appendChild(this.controlLabel);\\n\\t\\tthis.appendChild(this.controlContent);\\n    \\n    this.classList.add(\\\"jj-hitem\\\");\\n    this.validMessage = \\\"\\\";\\n    \\n    \\n    this._optionRender();\\n\\t\\treturn this;\\n  }\\n\\n// \\tdataBind(val){\\n//     debugger;\\n// // \\t\\tthis._value = val;\\n// //     if (typeof(val) == \\\"number\\\"){\\n// // \\t    this.formControl.innerText=val.$toIntFormat();\\n// //     } else {\\n// //       this.formControl.innerText=parseInt(val).$toIntFormat();\\n// //     }\\n// //    \\tthis.dispatchEvent(new CustomEvent('input', { bubbles: true }));  \\n    \\n//   }\\n\\n\\tdataBindSet(node, val){\\n\\t\\n    if (typeof(val) == \\\"number\\\"){\\n      this._value = val;\\n\\t    node.textContent = this._value.$toIntFormat();\\n    } else {\\n      this._value = parseInt(val);\\n      node.textContent = this._value.$toIntFormat();\\n    }\\n   \\tthis.dispatchEvent(new CustomEvent('input', { bubbles: true }));  \\n  }\\n    \\n  \\n  /**\\n   * @memberof JJText\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n\\t\\tlet result = this._value;\\n    return result;\\n  }\\n\\n  /**\\n   * @memberof JJText\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(v) {\\n    this._value = v;\\n    //this.formControl.childNodes[0].textContent = this._value;\\n  }\\n\\n}\\n\\ncustomElements.define('jj-item-label', JJLabel);\\n/* ==JJAttach.640.class================ */\\nclass JJAttach  {\\n  constructor(el,options) {\\n    this.el = el;\\n    this.el.classList.add('jj-attch');\\n    this.el.classList.add('file-empty');\\n\\n    this.options={\\n      \\\"mode\\\": \\\"readonly\\\",\\n      \\\"message\\\":\\\"\\\",\\n      \\\"fileType\\\": \\\"file\\\",  // file, image\\n      \\\"data\\\":{\\n        \\\"images\\\":[],\\n        \\\"files\\\":[],\\n        \\\"link\\\":{}\\n      }\\n    };\\n    Object.assign(this.options, this.el.dataset, options);\\n    \\n    this.init();\\n  }\\n\\n  get value() {\\n    debugger;\\n    let files = [], indexs=[];\\n    this.options.data.files.forEach((file,index)=>{\\n      //신규파일만 대상으로 업로드함\\n      if(!file.URI || file.URI.startsWith(\\\"data\\\")){\\n        indexs.push(this.options.data.files[index]); \\n        // react이기 때문에\\n        files.push(file.FILEOBJ.$revoke);\\n      }\\n    });\\n    this.options.data.images.forEach((file,index)=>{\\n      //신규파일만 대상으로 업로드함\\n      if(!file.URI || file.URI.startsWith(\\\"data\\\")){\\n        indexs.push(this.options.data.images[index]); \\n        // react이기 때문에\\n        files.push(file.FILEOBJ.$revoke);\\n      }\\n    });\\n    \\n    \\n    return new Promise((resole, reject)=>{\\n      if (files.length){\\n        Jinja.ajax.imageUpload(files)\\n          .then(result=>result.rows.forEach((file,index)=>{\\n\\t          indexs[index].URI = file.path+file.fileId;\\n\\t          delete indexs[index].FILEOBJ;\\n        }))\\n          .then(()=>{\\n          resole(Jinja.global.string(this.options.data));\\n        })\\n      } \\n      else {\\n        resole(Jinja.global.string(this.options.data));\\n      }\\n    })\\n  }\\n\\n  set value(attchStr) {\\n    this.options.data.files = [];\\n    this.options.data.images = [];\\n    this.options.data.link = {};\\n    \\n    let attch = Jinja.global.json(attchStr);\\n    if (attch.files && Array.isArray(attch.files) && attch.files.length){\\n      this.options.data.files = attch.files;    \\n    }\\n    if (attch.images && Array.isArray(attch.images) && attch.images.length){\\n      this.options.data.images = attch.images;    \\n    }\\n    if(attch.link && attch.link.html){\\n      this.options.data.link = attch.link;    \\n      this.el.querySelector(\\\".attch-link\\\").innerHTML = this.options.data.link.html;\\n    }\\n    this.showEmpty();\\n  }  \\n\\n  init() {\\n    this.render();\\n    this.bo = new JJReact(this.el, this.options);\\n    if(this.options.mode == \\\"readonly\\\"){} \\n    else {\\n      this.onFileChangeHandle = this.onFileChange.bind(this);\\n      this.onImageChangeHandle = this.onImageChange.bind(this);\\n      \\n      this.inputFile  = this.el.querySelector(`input[type=\\\"file\\\"].attFile`);\\n      this.inputImage  = this.el.querySelector(`input[type=\\\"file\\\"].attImage`);\\n      this.inputCamera  = this.el.querySelector(`input[type=\\\"file\\\"].attCamara`);\\n\\n      this.inputFile.addEventListener(\\\"change\\\", this.onFileChangeHandle);\\n      this.inputImage.addEventListener(\\\"change\\\", this.onImageChangeHandle);\\n      this.inputCamera.addEventListener(\\\"change\\\", this.onImageChangeHandle);\\n    }\\n    this.el.addEventListener(\\\"click\\\", e=>{\\n      if(e.target.matches('[data-remove-image]')){\\n        let index = parseInt(e.target.dataset.removeImage);\\n        this.removeImage(index);\\t    \\n      }\\n      if(e.target.matches('[data-remove-index]')){\\n        let index = parseInt(e.target.dataset.removeIndex);\\n        this.removeFile(index);\\t    \\n      }\\n      if(e.target.matches('[data-download-index]')){\\n        let index = parseInt(e.target.dataset.downloadIndex);\\n        this.downloadFile(index);\\t    \\n      }\\n    })\\n    \\n\\n    this.el.addEventListener(\\\"dragover\\\", e => {\\n      e.preventDefault();\\n      this.el.classList.add(\\\"win-drag\\\");\\n    });\\n    this.el.addEventListener(\\\"dragleave\\\", e =>{\\n      this.el.classList.remove(\\\"win-drag\\\");\\n    });\\n    this.el.addEventListener(\\\"drop\\\", e => {\\n      debugger;\\n      e.stopPropagation();\\n      e.preventDefault();\\n      var data = e.dataTransfer;\\n\\n      \\n      if (data.types[0] == \\\"Files\\\" && this.options.fileType == \\\"file\\\") {\\n        this.attchFiles(data.files);\\n      } else if (data.types[0] == \\\"Files\\\" && this.options.fileType == \\\"image\\\") {\\n        this.attchFiles(data.files);\\n        //this.attchImages(data.files);\\n      } else {\\n        \\n      }\\n\\t    this.showEmpty();\\n\\n      this.el.classList.remove(\\\"win-drag\\\");\\n\\n    });\\n    \\n    this.showEmpty();\\n  }\\n\\n  onFileChange(e){\\n    this.attchFiles(e.target.files);\\n    e.target.value = null;\\n    this.showEmpty();\\n  }\\n  \\n  onImageChange(e){\\n\\t\\tthis.attchImages(e.target.files);\\t\\n    e.target.value = null;\\n    this.showEmpty();\\n  }\\n\\n  render (){\\n    this.el.$empty();\\n    this.el.setAttribute(\\\"file-type\\\", this.options.fileType);\\n    if(this.options.fileType == \\\"file\\\"){\\n      return this.renderFile();\\n    }else {\\n      return this.renderImage();\\n    }\\n  }\\n  \\n  renderFile(){\\n    let html = `\\n<div class=\\\"attch-link\\\"></div>\\t\\n<div class=\\\"attch-image card-columns\\\" j-for=\\\"row in data.images\\\" j-page=100></div>\\n<div class=\\\"attch-file\\\">\\n  <table class=\\\"table bordered\\\">\\n    <colGroup>\\n      <col style=\\\"width:40px\\\">\\n      <col style=\\\"\\\">\\n      <col style=\\\"width:100px\\\">\\n      <col style=\\\"width:20px\\\">\\n    </colGroup>\\n    <thead>\\n      <tr>\\n        <th>No</th>\\n        <th>fileName</th>\\n        <th>size(Byte)</th>\\n        <th>&nbsp;</th>\\n      </tr>\\n    </thead>\\n    <tbody j-for=\\\"row in data.files\\\"  j-page=100>\\n    </tbody>\\n  </table>\\n</div>\\t\\n<div class=\\\"attch-link\\\"></div>\\t\\n<div class=\\\"alert alert-info empty\\\" role=\\\"alert\\\"></div>\\n<input class=\\\"attFile\\\" type=\\\"file\\\" multiple hidden>\\n<input class=\\\"attImage\\\" type=\\\"file\\\" multiple accept=\\\"image/*\\\" hidden>\\n<input class=\\\"attCamara\\\" type=\\\"file\\\" accept=\\\"image/*\\\" capture=\\\"camera\\\" hidden >\\n`;   \\n\\n    this.el.innerHTML = html;\\n\\n    html = '<div class=\\\"j-card\\\" data-file-id=\\\"\\\">';\\n    html += '<div class=\\\"image-warp\\\">';\\n    html += '\\t<img class=\\\"card-img-top img-responsive\\\" img-src=\\\"${row.URI}\\\" alt=\\\"Card image cap\\\">';\\t\\n    html += '</div>';\\n    html += '<div class=\\\"card-body\\\">';\\n    html += '  <h5 class=\\\"card-title text-nowrap\\\" title=\\\"${row.NAME}\\\">${row.NAME}</h5>';\\n    html += '  <p class=\\\"card-text\\\" title=\\\"${row.TYPE}\\\">';\\n    html += '  ${row.TYPE||\\\"\\\"}';\\n    html += '  </p>';\\n    html += '</div>';\\n    \\n    html =  '<div class=\\\"card\\\">';\\n    html += '  <img img-src=\\\"${row.URI}\\\" class=\\\"card-img-top\\\" alt=\\\"${row.NAME}\\\">';\\n    html += '  <div class=\\\"card-body\\\">';\\n    html += '   <h5 class=\\\"card-title\\\">${row.NAME}</h5>';\\n    html += '   <p class=\\\"card-text\\\" >${row.TYPE||\\\"\\\"}</p>';\\n\\t\\tif(this.options.mode !== \\\"readonly\\\"){    \\n      html += '   <button data-remove-image=\\\"${row._index}\\\" ';\\n      html += '     class=\\\"btn btn-warning btn-sm waves-effect waves-light\\\">';\\n      html += '     <i class=\\\"fa fa-times-circle mr-1\\\"></i>Remove</button>';\\n    }\\n    html += '  </div>';\\n    html += '</div>';\\n    \\n    \\n    \\n      \\n    \\n\\t\\tthis.el.querySelector('.attch-image').innerHTML = html;   \\n    \\n    html = '<tr file-index=\\\"${row._index}\\\">';\\n    html += '<td>${row._index+1}</td>';\\n    html += '  <td>';\\n    html += '    <a href=\\\"${row.URI}\\\" download=\\\"${row.NAME}\\\">${row.NAME}</a>';\\n    html += '  </td>';\\n    html += '  <td>${row.SIZE}</td>';\\n    html += '  <td>';\\n    if(this.options.mode == \\\"readonly\\\"){\\n      html += '    <button data-download-index=\\\"${row._index}\\\" type=\\\"button\\\" class=\\\"btn btn-link\\\">';\\n      html += '    \\t<i class=\\\"fa fa-floppy-o\\\" aria-hidden=\\\"true\\\"></i>';\\n      html += '    </button>';\\n\\n    } else {\\n      html += '    <button data-remove-index=\\\"${row._index}\\\" type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\">';\\n      html += '    \\t<i class=\\\"fa fa-close\\\" aria-hidden=\\\"true\\\"></i>';\\n      html += '    </button>';\\n    }\\n    html += '  </td>';\\n    html += '</tr>';\\n\\n    this.el.querySelector('tbody').innerHTML = html;   \\n\\n    \\n    \\n  }\\n\\n  renderImage(){\\n    let html;\\n    if(this.options.mode == \\\"readonly\\\"){    \\n      html = `\\n<div style=\\\"\\\">\\n<div class=\\\"post\\\"  j-for=\\\"row in data.files\\\">\\n</div>\\n</div>\\n<div class=\\\"alert alert-info empty\\\" role=\\\"alert\\\"></div>\\n`;   \\n\\n      this.el.innerHTML = html;\\n\\n      html = '<div class=\\\"imageWrap\\\">';\\n      html += ' <img img-src=\\\"${row.URI}\\\" class=\\\"img-responsive\\\" alt=\\\"${row.NAME}\\\">';\\n      html += '</div>';\\n\\n      this.el.querySelector('.post').innerHTML = html;   \\n\\n    } \\n    else {\\n      html = `\\n<div style=\\\"\\\" class=\\\"jj-inline\\\">\\n<div class=\\\"post\\\"  j-for=\\\"row in data.files\\\">\\n</div>\\n</div>\\n<div class=\\\"alert alert-info empty\\\" role=\\\"alert\\\"></div>\\n<input class=\\\"attFile\\\" type=\\\"file\\\" multiple hidden>\\n<input class=\\\"attImage\\\" type=\\\"file\\\" multiple accept=\\\"image/*\\\" hidden>\\n<input class=\\\"attCamara\\\" type=\\\"file\\\" multiple accept=\\\"image/*\\\" capture=\\\"camera\\\" hidden >\\n`;   \\n\\n      this.el.innerHTML = html;\\n\\n      html = '<a>';\\n      html += ' <img src=\\\"${row.URI}\\\"  alt=\\\"${row.NAME}\\\">';\\n      html += ' <h5>';\\n      html += '   <button data-remove-index=\\\"${row._index}\\\" type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\">';\\n      html += '\\t    <i class=\\\"fa fa-close\\\" aria-hidden=\\\"true\\\"></i>';\\n      html += '   </button>';\\n      html += ' </h5>';\\n      html += '</a>';\\n\\n      this.el.querySelector('.post').innerHTML = html;       \\n    }\\n\\n  }\\n\\n  attchLink(url){\\n    \\n    Jinja.ajax.getLinkInfo(url)\\n    .then(result=>{\\n      if(result.html){\\n        this.options.data.link = result;\\n        this.el.querySelector('.attch-link').innerHTML = result.html;\\n      }\\n    })\\n    .catch(ex=>$topMessage(\\\"파일을 찾을수없습니다\\\"));  \\n  }\\n\\n  attchFiles(files){\\n    let rows = [];\\n    for (var i = 0; i < files.length; i++) {\\n      let row = {\\n        \\\"NAME\\\": files[i].name,\\n        \\\"SIZE\\\": files[i].size,\\n        \\\"TYPE\\\": files[i].type,\\n        \\\"URI\\\":\\\"\\\",\\n        \\\"FILEOBJ\\\": files[i]\\n      };\\n\\n      // react로 파일표시됨\\t\\n      let lens = this.options.data.files.push(row);\\n      var reader = new FileReader();\\n      reader.addEventListener(\\\"load\\\", readEvent=>{\\n        this.options.data.files[lens-1].URI = readEvent.target.result;\\n      });\\n      reader.readAsDataURL(files[i]);        \\n    }\\n  }\\n  \\n  attchImages(files){\\n    for (var i = 0; i < files.length; i++) {\\n      let row = {\\n        \\\"NAME\\\": files[i].name,\\n        \\\"SIZE\\\": files[i].size,\\n        \\\"TYPE\\\": files[i].type,\\n        \\\"URI\\\":\\\"\\\",\\n        \\\"FILEOBJ\\\": files[i]\\n      };\\n\\n      // react로 파일표시됨\\t\\n      let lens = this.options.data.images.push(row);\\n      var reader = new FileReader();\\n      reader.addEventListener(\\\"load\\\", readEvent=>{\\n        this.options.data.images[lens-1].URI = readEvent.target.result;\\n      });\\n      reader.readAsDataURL(files[i]);        \\n    }\\n    \\n  }\\n  \\n  showEmpty(){\\n\\t\\tif(this.options.message){\\n      if (this.options.data.files.length){\\n        this.el.classList.remove(\\\"file-empty\\\");      \\n      } else {\\n        this.el.classList.add(\\\"file-empty\\\");      \\n      }\\n    } else {\\n      this.el.classList.remove(\\\"file-empty\\\");      \\n    }\\n\\n  }\\n\\n  clear(){\\n    this.el.classList.add(\\\"file-empty\\\");      \\n    this.options.data.images = [];\\n    this.options.data.files = [];\\n    this.options.data.link = {};\\n    this.el.querySelector(\\\".attch-link\\\").innerHTML = \\\"\\\";\\n  }\\n  \\n  attach (type) {\\n    switch(type){\\n      case \\\"image\\\": \\n        this.inputImage.click();\\n        break;\\n      case \\\"camera\\\": \\n        this.inputCamera.click();\\n        break;\\n      default:  \\n        this.inputFile.click();\\n        break;\\n    }\\n  }\\n\\n  removeImage(removeIndex){\\n    this.options.data.images.removeIndex(removeIndex);\\n    this.showEmpty();\\n  }\\n  removeFile(fileIndex){\\n    this.options.data.files.removeIndex(fileIndex);\\n    this.showEmpty();\\n  }\\n  downloadFile(fileIndex){\\n    this.el.querySelector(`tr[file-index=\\\"${fileIndex}\\\"] a[download]`).click();\\n  }\\n\\n  upload () {\\n    let files = [],\\n        // 변경된 내용만 업로드하기 위해서 파악함\\n        indexs=[]; \\n\\n    this.options.data.files.forEach((file,index)=>{\\n      //신규파일만 대상으로 업로드함\\n      if(!file.URI){\\n        indexs.push(index); \\n        // react이기 때문에\\n        files.push(file.FILEOBJ.$revoke);\\n      }\\n    });\\n\\n    Jinja.ajax.imageUpload(files)\\n      .then(result=>result.rows.forEach((file,index)=>{\\n      this.options.data.files[indexs[index]].URI = file.path+file.fileId;\\n    }))\\n  }\\n\\n  downLoadAll (){\\n    this.el.querySelectorAll('a[download]').forEach(el=>el.click())\\n  }\\n\\n}/* ==JJSyncAttach.640.class================ */\\nclass JJSyncAttach  {\\n  constructor(el,options) {\\n    this.el = el;\\n    this.el.classList.add('jj-attch');\\n    this.el.classList.add('file-empty');\\n\\n    this.options={\\n      \\\"mode\\\": \\\"readonly\\\",\\n      \\\"message\\\":\\\"\\\",\\n      \\\"fileType\\\": \\\"file\\\",  // file, image\\n      \\\"data\\\":{\\n        \\\"images\\\":[],\\n        \\\"files\\\":[],\\n        \\\"link\\\":{}\\n      }\\n    };\\n    Object.assign(this.options, this.el.dataset, options);\\n\\n    this.init();\\n  }\\n\\n  get value() {\\n    return Jinja.global.string(this.options.data);\\n  }\\n\\n  set value(attchStr) {\\n    this.options.data.files = [];\\n    this.options.data.images = [];\\n    this.options.data.link = {};\\n\\n    let attch = Jinja.global.json(attchStr);\\n    if (attch.files && Array.isArray(attch.files) && attch.files.length){\\n      this.options.data.files = attch.files;    \\n    }\\n    if (attch.images && Array.isArray(attch.images) && attch.images.length){\\n      this.options.data.images = attch.images;    \\n    }\\n    if(attch.link && attch.link.html){\\n      this.options.data.link = attch.link;    \\n      this.el.querySelector(\\\".attch-link\\\").innerHTML = this.options.data.link.html;\\n    }\\n    this.showEmpty();\\n  }  \\n\\n  init() {\\n    this.render();\\n\\n    this.bo = new JJReact(this.el, this.options);\\n\\n    if(this.options.mode == \\\"readonly\\\"){} \\n    else {\\n      this.onFileChangeHandle = this.onFileChange.bind(this);\\n      this.onImageChangeHandle = this.onImageChange.bind(this);\\n\\n      this.inputFile  = this.el.querySelector(`input[type=\\\"file\\\"].attFile`);\\n      this.inputImage  = this.el.querySelector(`input[type=\\\"file\\\"].attImage`);\\n      this.inputCamera  = this.el.querySelector(`input[type=\\\"file\\\"].attCamara`);\\n\\n      this.inputFile.addEventListener(\\\"change\\\", this.onFileChangeHandle);\\n      this.inputImage.addEventListener(\\\"change\\\", this.onImageChangeHandle);\\n      this.inputCamera.addEventListener(\\\"change\\\", this.onImageChangeHandle);\\n    }\\n    this.el.addEventListener(\\\"click\\\", e=>{\\n      if(e.target.matches('[data-remove-image]')){\\n        let index = parseInt(e.target.dataset.removeImage);\\n        this.removeImage(index);\\t    \\n      }\\n      if(e.target.matches('[data-remove-index]')){\\n        let index = parseInt(e.target.dataset.removeIndex);\\n        this.removeFile(index);\\t    \\n      }\\n      if(e.target.matches('[data-download-index]')){\\n        let index = parseInt(e.target.dataset.downloadIndex);\\n        this.downloadFile(index);\\t    \\n      }\\n      if(e.target.matches('[fileviewer]')){\\n        let src = e.target.getAttribute('fileviewer');\\n        this.fileViewer(src);\\t    \\n      }\\n    })\\n\\n\\n\\n    this.el.addEventListener(\\\"dragover\\\", e => {\\n      e.preventDefault();\\n      this.el.classList.add(\\\"win-drag\\\");\\n    });\\n    this.el.addEventListener(\\\"dragleave\\\", e =>{\\n      this.el.classList.remove(\\\"win-drag\\\");\\n    });\\n    this.el.addEventListener(\\\"drop\\\", e => {\\n      e.stopPropagation();\\n      e.preventDefault();\\n      var data = e.dataTransfer;\\n\\n\\n      if (data.types[0] == \\\"Files\\\" && this.options.fileType == \\\"file\\\") {\\n        this.attchFiles(data.files);\\n      } else if (data.types[0] == \\\"Files\\\" && this.options.fileType == \\\"image\\\") {\\n        this.attchFiles(data.files);\\n        //this.attchImages(data.files);\\n      } else {\\n\\n      }\\n      this.showEmpty();\\n\\n      this.el.classList.remove(\\\"win-drag\\\");\\n\\n    });\\n\\n    this.showEmpty();\\n  }\\n\\n  onFileChange(e){\\n    this.attchFiles(e.target.files);\\n    e.target.value = null;\\n    this.showEmpty();\\n  }\\n\\n  onImageChange(e){\\n    this.attchImages(e.target.files);\\t\\n    e.target.value = null;\\n    this.showEmpty();\\n  }\\n\\n  fileViewer(src){\\n    JJFormFull.open('fileViewer.uc', {\\n      \\\"src\\\":src\\n    });    \\n  }\\n  render (){\\n    this.el.$empty();\\n    this.el.setAttribute(\\\"file-type\\\", this.options.fileType);\\n    if(this.options.fileType == \\\"file\\\"){\\n      return this.renderFile();\\n    }else {\\n      return this.renderImage();\\n    }\\n  }\\n\\n  renderFile(){\\n    let html = `\\n<div class=\\\"attch-link\\\"></div>\\t\\n<div class=\\\"attch-image card-columns\\\" j-for=\\\"row in data.images\\\" j-page=100></div>\\n<div class=\\\"attch-file\\\">\\n<table class=\\\"table bordered\\\">\\n<colGroup>\\n<col style=\\\"width:40px\\\">\\n<col style=\\\"\\\">\\n<col style=\\\"width:100px\\\">\\n<col style=\\\"width:20px\\\">\\n</colGroup>\\n<thead>\\n<tr>\\n<th>No</th>\\n<th>fileName</th>\\n<th>size(Byte)</th>\\n<th>&nbsp;</th>\\n</tr>\\n</thead>\\n<tbody j-for=\\\"row in data.files\\\"  j-page=100>\\n</tbody>\\n</table>\\n</div>\\t\\n<div class=\\\"attch-link\\\"></div>\\t\\n<div class=\\\"alert alert-info empty\\\" role=\\\"alert\\\"></div>\\n<input class=\\\"attFile\\\" type=\\\"file\\\" multiple hidden>\\n<input class=\\\"attImage\\\" type=\\\"file\\\" multiple accept=\\\"image/*\\\" hidden>\\n<input class=\\\"attCamara\\\" type=\\\"file\\\" accept=\\\"image/*\\\" capture=\\\"camera\\\" hidden >\\n`;   \\n\\n    this.el.innerHTML = html;\\n\\n    html = '<div class=\\\"j-card\\\" data-file-id=\\\"\\\">';\\n    html += '<div class=\\\"image-warp\\\">';\\n    html += '\\t<img class=\\\"card-img-top img-responsive\\\" img-src=\\\"${row.URI}\\\" alt=\\\"Card image cap\\\">';\\t\\n    html += '</div>';\\n    html += '<div class=\\\"card-body\\\">';\\n    html += '  <h5 class=\\\"card-title text-nowrap\\\" title=\\\"${row.NAME}\\\">${row.NAME}</h5>';\\n    html += '  <p class=\\\"card-text\\\" title=\\\"${row.TYPE}\\\">';\\n    html += '  ${row.TYPE||\\\"\\\"}';\\n    html += '  </p>';\\n    html += '</div>';\\n\\n    html =  '<div class=\\\"card\\\">';\\n    html += '  <img img-src=\\\"${row.URI}\\\" class=\\\"card-img-top\\\" alt=\\\"${row.NAME}\\\">';\\n    html += '  <div class=\\\"card-body\\\">';\\n    html += '   <h5 class=\\\"card-title\\\">${row.NAME}</h5>';\\n    html += '   <p class=\\\"card-text\\\" >${row.TYPE||\\\"\\\"}</p>';\\n    if(this.options.mode !== \\\"readonly\\\"){    \\n      html += '   <button data-remove-image=\\\"${row._index}\\\" ';\\n      html += '     class=\\\"btn btn-warning btn-sm waves-effect waves-light\\\">';\\n      html += '     <i class=\\\"fa fa-times-circle mr-1\\\"></i>Remove</button>';\\n    }\\n    html += '  </div>';\\n    html += '</div>';\\n\\n\\n\\n\\n\\n    this.el.querySelector('.attch-image').innerHTML = html;   \\n\\n    html = '<tr file-index=\\\"${row._index}\\\">';\\n    html += '<td>${row._index+1}</td>';\\n    html += '  <td>';\\n    html += '    <a href=\\\"${row.URI}\\\" download=\\\"${row.NAME}\\\">${row.NAME}</a>';\\n    html += '    <button fileviewer=\\\"${row.URI}\\\" type=\\\"button\\\" class=\\\"btn btn-link\\\">';\\n    html += '    \\t<i class=\\\"fa fa-floppy-o\\\" aria-hidden=\\\"true\\\">미리보기</i>';\\n    html += '    </button>';\\n    html += '  </td>';\\n    html += '  <td>${row.SIZE}</td>';\\n    html += '  <td>';\\n    if(this.options.mode == \\\"readonly\\\"){\\n      html += '    <button data-download-index=\\\"${row._index}\\\" type=\\\"button\\\" class=\\\"btn btn-link\\\">';\\n      html += '    \\t<i class=\\\"fa fa-floppy-o\\\" aria-hidden=\\\"true\\\"></i>';\\n      html += '    </button>';\\n\\n    } else {\\n      html += '    <button data-remove-index=\\\"${row._index}\\\" type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\">';\\n      html += '    \\t<i class=\\\"fa fa-close\\\" aria-hidden=\\\"true\\\"></i>';\\n      html += '    </button>';\\n    }\\n    html += '  </td>';\\n    html += '</tr>';\\n\\n    this.el.querySelector('tbody').innerHTML = html;   \\n\\n\\n\\n  }\\n\\n  renderImage(){\\n    let html;\\n    if(this.options.mode == \\\"readonly\\\"){    \\n      html = `\\n<div style=\\\"\\\">\\n<div class=\\\"post\\\"  j-for=\\\"row in data.files\\\">\\n</div>\\n</div>\\n<div class=\\\"alert alert-info empty\\\" role=\\\"alert\\\"></div>\\n`;   \\n\\n      this.el.innerHTML = html;\\n\\n      html = '<div class=\\\"imageWrap\\\">';\\n      html += ' <img img-src=\\\"${row.URI}\\\" class=\\\"img-responsive\\\" alt=\\\"${row.NAME}\\\">';\\n      html += '</div>';\\n\\n      this.el.querySelector('.post').innerHTML = html;   \\n\\n    } \\n    else {\\n      html = `\\n<div style=\\\"\\\" class=\\\"jj-inline\\\">\\n<div class=\\\"post\\\"  j-for=\\\"row in data.files\\\">\\n</div>\\n</div>\\n<div class=\\\"alert alert-info empty\\\" role=\\\"alert\\\"></div>\\n<input class=\\\"attFile\\\" type=\\\"file\\\" multiple hidden>\\n<input class=\\\"attImage\\\" type=\\\"file\\\" multiple accept=\\\"image/*\\\" hidden>\\n<input class=\\\"attCamara\\\" type=\\\"file\\\" multiple accept=\\\"image/*\\\" capture=\\\"camera\\\" hidden >\\n`;   \\n\\n      this.el.innerHTML = html;\\n\\n      html = '<a>';\\n      html += ' <img src=\\\"${row.URI}\\\"  alt=\\\"${row.NAME}\\\">';\\n      html += ' <h5>';\\n      html += '   <button data-remove-index=\\\"${row._index}\\\" type=\\\"button\\\" class=\\\"btn btn-warning btn-sm\\\">';\\n      html += '\\t    <i class=\\\"fa fa-close\\\" aria-hidden=\\\"true\\\"></i>';\\n      html += '   </button>';\\n      html += ' </h5>';\\n      html += '</a>';\\n\\n      this.el.querySelector('.post').innerHTML = html;       \\n    }\\n\\n  }\\n\\n  attchLink(url){\\n\\n    Jinja.ajax.getLinkInfo(url)\\n      .then(result=>{\\n      if(result.html){\\n        this.options.data.link = result;\\n        this.el.querySelector('.attch-link').innerHTML = result.html;\\n      }\\n    })\\n      .catch(ex=>$topMessage(\\\"파일을 찾을수없습니다\\\"));  \\n  }\\n\\n  attchFiles(files){\\n    Jinja.ajax.imageUpload(files)\\n      .then(result=>result.rows.forEach((file,index)=>{\\n      let row = {\\n        \\\"NAME\\\": file.fileName,\\n        \\\"SIZE\\\": file.fileSize,\\n        \\\"TYPE\\\": file.type,\\n        \\\"URI\\\": file.path+file.fileId\\n      };\\n\\n      this.options.data.files.push(row);        \\n      this.el.dispatchEvent(new Event('fileChange', { bubbles: true }));\\n    }))\\n\\n  }\\n\\n  attchImages(files){\\n    Jinja.ajax.imageUpload(files)\\n      .then(result=>result.rows.forEach((file,index)=>{\\n      let row = {\\n        \\\"NAME\\\": file.fileName,\\n        \\\"SIZE\\\": file.fileSize,\\n        \\\"TYPE\\\": file.type,\\n        \\\"URI\\\": file.path+file.fileId\\n      };\\n\\n      this.options.data.images.push(row);        \\n      this.el.dispatchEvent(new Event('fileChange', { bubbles: true }));\\n    }))\\n  }\\n\\n  showEmpty(){\\n    if(this.options.message){\\n      if (this.options.data.files.length){\\n        this.el.classList.remove(\\\"file-empty\\\");      \\n      } else {\\n        this.el.classList.add(\\\"file-empty\\\");      \\n      }\\n    } else {\\n      this.el.classList.remove(\\\"file-empty\\\");      \\n    }\\n\\n  }\\n\\n  clear(){\\n    this.el.classList.add(\\\"file-empty\\\");      \\n    this.options.data.images = [];\\n    this.options.data.files = [];\\n    this.options.data.link = {};\\n    this.el.querySelector(\\\".attch-link\\\").innerHTML = \\\"\\\";\\n  }\\n\\n  attach (type) {\\n    switch(type){\\n      case \\\"image\\\": \\n        this.inputImage.click();\\n        break;\\n      case \\\"camera\\\": \\n        this.inputCamera.click();\\n        break;\\n      default:  \\n        this.inputFile.click();\\n        break;\\n    }\\n  }\\n\\n  removeImage(removeIndex){\\n    this.options.data.images.removeIndex(removeIndex);\\n    this.showEmpty();\\n    this.el.dispatchEvent(new Event('fileChange', { bubbles: true }));\\n  }\\n  removeFile(fileIndex){\\n    this.options.data.files.removeIndex(fileIndex);\\n    this.showEmpty();\\n    this.el.dispatchEvent(new Event('fileChange', { bubbles: true }));\\n  }\\n  downloadFile(fileIndex){\\n    this.el.querySelector(`tr[file-index=\\\"${fileIndex}\\\"] a[download]`).click();\\n  }\\n\\n  upload () {\\n    let files = [],\\n        // 변경된 내용만 업로드하기 위해서 파악함\\n        indexs=[]; \\n\\n    this.options.data.files.forEach((file,index)=>{\\n      //신규파일만 대상으로 업로드함\\n      if(!file.URI){\\n        indexs.push(index); \\n        // react이기 때문에\\n        files.push(file.FILEOBJ.$revoke);\\n      }\\n    });\\n\\n    Jinja.ajax.imageUpload(files)\\n      .then(result=>result.rows.forEach((file,index)=>{\\n      this.options.data.files[indexs[index]].URI = file.path+file.fileId;\\n    }))\\n  }\\n\\n  downLoadAll (){\\n    this.el.querySelectorAll('a[download]').forEach(el=>el.click())\\n  }\\n\\n}/* ==JJFile.640.class================ */\\n\\n/**\\n * @classdesc 파일 컴포넌트관리를 위한 클래스\\n */\\nclass JJFile extends JJText {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this._value = '';\\n\\n    return {\\n      fileType: 'file',\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 콤포넌트를 생성한다.\\n   * @return {Element} - JJFile 컴포넌트\\n   * @example -\\n   */\\n  _render() {\\n    let domainField = this.dataset.domain;\\n    let domainRule;\\n\\n    if (domainField) {\\n      domainRule = Jinja.validate.get(domainField);\\n    }\\n\\n    Object.assign(this.options, domainRule, this.dataset);\\n\\n    if (this.options.required == 'false') this.options.required = false;\\n    if (this.options.required == 'true') this.options.required = true;\\n\\n    let controlId = Jinja.global.uuid();\\n\\n    this.controlLabel = document.createElement('label');\\n    this.controlLabel.classList.add('control-label');\\n    this.controlLabel.setAttribute('data-i18n', this.options.i18n);\\n    this.controlLabel.setAttribute('for', controlId);\\n\\n    this.controlLabel.appendChild(document.createTextNode(this.options.label));\\n\\n    this.controlContent = document.createElement('div');\\n    this.controlContent.classList.add('control-content');\\n\\n    let attchEl = document.createElement('div');\\n\\n    this.controlContent.appendChild(attchEl);\\n\\n    this.jjAttch = new JJSyncAttach(attchEl, {\\n      mode: 'edit',\\n      fileType: this.options.fileType,\\n    });\\n\\n    this.helpBlock = document.createElement('span');\\n    this.controlContent.appendChild(this.helpBlock);\\n\\n    this.helpBlock.classList.add('help-block');\\n\\n    this.classList.add('form-group');\\n\\n    if (this.options.css) this.classList.add(this.options.css);\\n    if (this.options.style) this.setAttribute('style', this.options.style);\\n    if (this.options.bind) this.dataset.bind = this.options.bind;\\n\\n    this.appendChild(this.controlLabel);\\n    this.appendChild(this.controlContent);\\n\\n    this.classList.add('jj-hitem');\\n    this.validMessage = '';\\n\\n    return this;\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    debugger;\\n    this.controlContent.addEventListener('input', e => {\\n       e.stopImmediatePropagation();\\n       e.stopPropagation();\\n       e.preventDefault();\\n    });\\n    this.controlContent.addEventListener('fileChange', e => {\\n      this.dispatchEvent(new Event('input', { bubbles: true }));\\n    });\\n\\n    \\n    this.controlLabel.addEventListener('click', e => {\\n      this.upload();\\n    });\\n  }\\n\\n  /**\\n   * @memberof JJFile\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n    return this.jjAttch.value;\\n  }\\n\\n  /**\\n   * @memberof JJFile\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(val) {\\n    if (this.jjAttch) {\\n       if(val instanceof Promise){\\n         val.then(result => {\\n           this.jjAttch.value = result;\\n\\t\\t\\t\\t\\t this._value = result;           \\n         });\\n       } else {\\n        this.jjAttch.value = val; \\n\\t\\t\\t\\tthis._value = val;         \\n       }\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 파일유형에 해당하는 업로드창을 호출한다.\\n   * @param {String} - 파일유형\\n   * @example -\\n   */\\n  upload(type) {\\n    this.jjAttch.attach(type);\\n  }\\n}\\n\\ncustomElements.define('jj-item-file', JJFile);\\n/* ==JJDateBetween.640.class================ */\\n\\n/**\\n * @classdesc Between 컴포넌트관리를 위한 클래스\\n */\\nclass JJDateBetween extends JJText {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this._baseDate = new Date();\\n    this._value = '';\\n\\n    return {\\n      type: 'DAY',\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 콤포넌트를 생성한다.\\n   * @return {Element} - JJBetween 컴포넌트\\n   * @example -\\n   */\\n  _render() {\\n    let domainField = this.dataset.domain;\\n    let domainRule;\\n\\n    if (domainField) {\\n      domainRule = Jinja.validate.get(domainField);\\n    }\\n\\n    Object.assign(this.options, domainRule, this.dataset);\\n\\n    if (this.options.required == 'false') this.options.required = false;\\n    if (this.options.required == 'true') this.options.required = true;\\n\\n    this.dataset.bindGroup = this.options.bindGroup||\\\"\\\";\\n    \\n    let controlId = Jinja.global.uuid();\\n\\n    this.controlLabel = document.createElement('label');\\n    this.controlLabel.classList.add('control-label');\\n\\n    if (this.options.i18n)\\n      this.controlLabel.setAttribute('data-i18n', this.options.i18n);\\n\\n    this.controlLabel.setAttribute('for', controlId);\\n    this.controlLabel.appendChild(document.createTextNode(this.options.label));\\n\\n    this.controlContent = document.createElement('div');\\n    this.controlContent.classList.add('control-content');\\n\\n    this.formControlFrom = document.createElement('input');\\n    this.controlContent.appendChild(this.formControlFrom);\\n\\n    this.formControlFrom.classList.add('form-control');\\n    this.formControlFrom.type = this.options.type;\\n    this.formControlFrom.dataset.type = this.options.type;\\n    this.formControlFrom.id = controlId;\\n\\n    let betweenLabel = document.createElement('label');\\n\\n    betweenLabel.classList.add('between-label');\\n    betweenLabel.appendChild(document.createTextNode('-'));\\n\\n    this.controlContent.appendChild(betweenLabel);\\n\\n    this.formControlTo = document.createElement('input');\\n    this.controlContent.appendChild(this.formControlTo);\\n\\n    this.formControlTo.classList.add('form-control');\\n    this.formControlTo.type = this.options.type;\\n    this.formControlTo.dataset.type = this.options.type;\\n\\n    if (this.options.type == 'date') {\\n      this.formControlFrom.setAttribute('max', '2999-12-31');\\n      this.formControlTo.setAttribute('max', '2999-12-31');\\n    } else {\\n      this.formControlFrom.removeAttribute('max');\\n      this.formControlTo.removeAttribute('max');\\n    }\\n\\n    if (this.options.required) this.formControl.setAttribute('required', '');\\n\\n    this.helpBlock = document.createElement('span');\\n    this.controlContent.appendChild(this.helpBlock);\\n    this.helpBlock.classList.add('help-block');\\n    this.classList.add('form-group');\\n\\n    if (this.options.css) this.classList.add(this.options.css);\\n    if (this.options.style) this.setAttribute('style', this.options.style);\\n    if (this.options.bindGroup) {\\n      this.formControlFrom.dataset.bind = this.options.bindGroup.split(\\\",\\\")[0];\\n      this.formControlTo.dataset.bind = this.options.bindGroup.split(\\\",\\\")[1];\\n    } \\n\\n    this.appendChild(this.controlLabel);\\n    this.appendChild(this.controlContent);\\n    this.dataMap = new Map();\\n    this.dataMap.set('options', this.options);\\n    this.classList.add('jj-hitem');\\n    this.validMessage = '';\\n\\n    this.value = this._value;\\n\\n    return this;\\n  }\\n\\n\\n  /**\\n   * @memberof JJBetween\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n\\n  }\\n\\n  /**\\n   * @memberof JJBetween\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(val) {\\n\\n  }\\n\\n  dataBind(node, val){\\n    let format = \\\"yyyy-MM-dd\\\";\\n    if( this.options.type == \\\"datetime-local\\\"){\\n      format = \\\"yyyy-MM-ddTHH:mm:ss\\\";\\n    } \\n    \\n    if(Jinja.global.isDate(val)){\\n  \\t\\tnode.value = val.$toFormat(format);\\n    } else {\\n      node.value = (new Date(val)).$toFormat(format);\\n    }\\n    \\n  }\\n  dataBindGet(node){\\n    return new Date(node.value);\\n  }\\n  /**\\n   * @desc 지정한 name, value로 옵션을 설정한다.\\n   * @param {String} - 옵션명\\n   * @param {*} - 옵션\\n   * @example -\\n   */\\n  option(name, value) {\\n    this.options[name] = value;\\n\\n    switch (name) {\\n      case 'label': {\\n        if (this.controlLabel) {\\n          this.controlLabel.textContent = value;\\n        }\\n\\n        break;\\n      }\\n      case 'type': {\\n        if(this.formControlFrom){\\n          this.formControlFrom.disabled = false;\\n\\n          let _f;\\n\\n          switch (value) {\\n            case 'YEAR':\\n              this.formControlFrom.setAttribute('max', '2999');\\n              this.formControlFrom.type = 'number';\\n              this.formControlTo.setAttribute('max', '2999');\\n              this.formControlTo.type = 'number';\\n              this.value = [\\n                this._baseDate.getFullYear() - 5,\\n                this._baseDate.getFullYear()\\n              ];\\n\\n              break;\\n            case 'MONTH':\\n              this.formControlFrom.setAttribute('max', '2999-12');\\n              this.formControlFrom.type = 'month';\\n              this.formControlTo.setAttribute('max', '2999-12');\\n              this.formControlTo.type = 'month';\\n\\n              _f = new Date(this._baseDate);\\n              _f.$addMonth(-11);\\n\\n              this.value = [\\n                _f.$toFormat('yyyy-MM'),\\n                this._baseDate.$toFormat('yyyy-MM')\\n              ];\\n\\n              break;\\n            case 'DAY':\\n              this.formControlFrom.setAttribute('max', '2999-12-31');\\n              this.formControlFrom.type = 'date';\\n              this.formControlTo.setAttribute('max', '2999-12-31');\\n              this.formControlTo.type = 'date';\\n\\n              _f = new Date(this._baseDate);\\n              _f.$addMonth(-1);\\n\\n              this.value = [\\n                _f.$toFormat('yyyy-MM-dd'),\\n                this._baseDate.$toFormat('yyyy-MM-dd')\\n              ];\\n\\n              break;\\n            case 'TIME':\\n              this.formControlFrom.setAttribute('max', '2999-12-31');\\n              this.formControlFrom.type = 'date';\\n              this.formControlTo.setAttribute('max', '2999-12-31');\\n              this.formControlTo.type = 'date';\\n              this.value = [\\n                this._baseDate.$toFormat('yyyy-MM-dd'),\\n                this._baseDate.$toFormat('yyyy-MM-dd')\\n              ];\\n              this.formControlFrom.disabled = true;\\n\\n              break;\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-item-datebetween', JJDateBetween);\\n/* ==JJZipcode.640.class================ */\\n\\n/**\\n * @classdesc Between 컴포넌트관리를 위한 클래스\\n */\\nclass JJZipcode extends JJText {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this._value = '';\\n\\n    return {\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 콤포넌트를 생성한다.\\n   * @return {Element} - JJBetween 컴포넌트\\n   * @example -\\n   */\\n  _render() {\\n    let domainField = this.dataset.domain;\\n    let domainRule;\\n\\n    if (domainField) {\\n      domainRule = Jinja.validate.get(domainField);\\n    }\\n\\n    Object.assign(this.options, domainRule, this.dataset);\\n\\n    this.classList.add('form-group');\\n    this.classList.add('jj-hitem');\\n    this.dataset.bindGroup = this.options.bindGroup||\\\"\\\";\\n    \\n    \\n    if (this.options.required == 'false') this.options.required = false;\\n    if (this.options.required == 'true') this.options.required = true;\\n\\n    let controlId = Jinja.global.uuid();\\n\\n    this.controlLabel = document.createElement('label');\\n    this.controlLabel.classList.add('control-label');\\n\\n    if (this.options.i18n)\\n      this.controlLabel.setAttribute('data-i18n', this.options.i18n);\\n\\n    this.controlLabel.setAttribute('for', controlId);\\n    this.controlLabel.appendChild(document.createTextNode(this.options.label));\\n\\n    this.controlContent = document.createElement('div');\\n    this.controlContent.classList.add('control-content');\\n    \\n    this.txtZipcode = document.createElement('input');\\n    this.txtZipcode.setAttribute('class', 'form-control zip-code');\\n    this.txtZipcode.type = \\\"text\\\";\\n    this.txtZipcode.dataset.type = \\\"text\\\";\\n    this.controlContent.appendChild(this.txtZipcode);\\n\\n    this.btnFind = document.createElement('button');\\n    this.btnFind.setAttribute('class', 'btn btn-primary');\\n    this.btnFind.innerHTML = '<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i>';\\n    this.controlContent.appendChild(this.btnFind);\\n    \\n    this.txtAddr1 = document.createElement('input');\\n    this.txtAddr1.setAttribute('class', 'form-control addr1');\\n    this.txtAddr1.type = \\\"text\\\";\\n    this.txtAddr1.dataset.type = \\\"text\\\";\\n    this.txtAddr1.id = controlId;\\n    this.controlContent.appendChild(this.txtAddr1);\\n\\n    this.txtAddr2 = document.createElement('input');\\n    this.txtAddr2.setAttribute('class', 'form-control addr2');\\n    this.txtAddr2.type = \\\"text\\\";\\n    this.txtAddr2.dataset.type = \\\"text\\\";\\n    this.controlContent.appendChild(this.txtAddr2);\\n\\n\\n    this.helpBlock = document.createElement('span');\\n    this.helpBlock.classList.add('help-block');\\n    this.controlContent.appendChild(this.helpBlock);\\n\\n    if (this.options.css) this.classList.add(this.options.css);\\n    if (this.options.style) this.setAttribute('style', this.options.style);\\n    \\n    if (this.options.bindGroup) {\\n      this.txtZipcode.dataset.bind = this.options.bindGroup.split(\\\",\\\")[0];\\n      this.txtAddr1.dataset.bind = this.options.bindGroup.split(\\\",\\\")[1];\\n      this.txtAddr2.dataset.bind = this.options.bindGroup.split(\\\",\\\")[2];\\n    } \\n\\n    this.appendChild(this.controlLabel);\\n    this.appendChild(this.controlContent);\\n    this.validMessage = '';\\n\\n    return this;\\n  }\\n\\n  _setEvent(){\\n    this.btnFind.addEventListener('click', e=>{\\n      JJFormModal.open(\\\"getZipcode.640.uc\\\", {\\n          \\\"addr1\\\": this.txtAddr1.value\\n        })\\n          .then(result=>{\\n        \\tthis.txtZipcode.value = result.zipNo;\\n        \\tthis.txtAddr1.value = result.roadAddr;\\n\\n          this.txtZipcode.dispatchEvent(new Event('input', { bubbles: true }));\\n          this.txtAddr1.dispatchEvent(new Event('input', { bubbles: true }));\\n        })  \\n          .catch(err=>{\\n             alert(err);\\n        });  \\n    })\\n  }\\n\\n\\n  /**\\n   * @memberof JJBetween\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n  }\\n\\n  /**\\n   * @memberof JJBetween\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(val) {\\n  }\\n\\n  \\n  dataBind(node, val){\\n    node.value = val;\\n  }\\n  \\n  dataBindSet(node, val){\\n    node.value = val;\\n  }\\n  \\n  dataBindGet(node){\\n    return node.value;\\n  }\\n\\n}\\n\\ncustomElements.define('jj-item-zipcode', JJZipcode);\\n/* ==JJButton.640.class================ */\\n\\n/**\\n * @classdesc Text 컴포넌트관리를 위한 클래스\\n */\\nclass JJButton extends JJText {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this.setAttribute('data-render', 'jj-item');\\n    return {\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 생성한다.\\n   * @return {Element} - JJIcon 컴포넌트\\n   * @example -\\n   */\\n  _render() {\\n\\n    Object.assign(this.options,  this.dataset);\\n\\t\\tthis.classList.add(\\\"jj-hitem\\\");\\n\\t\\tthis.classList.add(\\\"form-group\\\");\\n    \\n    \\n    this.setAttribute('data-render', 'jj-item');\\n    \\n    this.btn = document.createElement('button');\\n    this.btn.setAttribute(\\\"class\\\", \\\"btn btn-primary\\\");\\n\\t\\tthis.btn.innerText = this.options.label;\\n\\t\\tthis.appendChild(this.btn);\\t\\n    return this;\\n  }\\n\\n\\n  /**\\n   * @desc 지정한 name, value로 옵션을 설정한다.\\n   * @param {String} - 옵션명\\n   * @param {*} - 옵션\\n   * @example -\\n   */\\n  option(name, value) {\\n    this.options[name] = value;\\n    switch (name) {\\n      case 'label': \\n        if(this.btn) this.btn.innerText = value;\\n        break;\\n      default:\\n        break;\\n    }\\n  }  \\n  \\n}\\n\\ncustomElements.define('jj-item-button', JJButton);\\n/* ==JJWaitLayer.class================ */\\n/*jshint sub:true*/ \\n\\n/**\\n *  작업대기중 표시를 함 \\n * \\n * 사례..\\n\\t let wait = new jjWaitLayer(this, {\\\"mwssage\\\": \\\"자료를 가져오는 중입니다\\\"});\\n   return Jinja.studioV6Api.myRespurce()\\n   .then(data => this.dataBind(data.rows))\\n   .then(()=> wait.destroy());\\n* \\n*/\\n\\nclass JJWaitLayer {\\n  constructor(el,options) {\\n    \\n    this.options = {\\n    \\t\\\"message\\\": \\\"waiting\\\"  \\n    }\\n  \\tObject.assign(this.options, options);\\n    \\n    this.box = document.createElement(\\\"div\\\");\\n    this.box.classList.add(\\\"jj-wait-layer\\\");\\n    let h2 = document.createElement(\\\"h2\\\");\\n    h2.classList.add(\\\"j-center\\\");\\n    h2.appendChild(document.createTextNode(this.options.message));\\n    this.box.appendChild(h2);\\n    el.appendChild(this.box);\\n  }\\n  \\n  destroy(){\\n    this.box.remove();\\n  }\\n  \\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n/* ==CustomComp.710.pkg.deploy================ */\\n/* ==JJCarousel.640.class================ */\\n\\n/**\\n * @classdesc Carousel 컴포넌트관리를 위한 클래스\\n */\\nclass JJCarousel extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      isReact: false,\\n      interval: 5000\\n    };\\n  }\\n\\n  /**\\n   * @desc 콤포넌트를 생성한다.\\n   * @return {Element} - JJBetween 컴포넌트\\n   * @example -\\n   */\\n  _render() {\\n    this.metadb = {};\\n\\n    if (Jinja.dom.closest(this, '.vhtml-editor')) {\\n      this.removeAttribute('id');\\n\\n      return;\\n    } else {\\n      if (!this.id) {\\n        if (this.options.isReact) {\\n        } else {\\n          let indi = this.querySelector('.carousel-indicators');\\n\\n          if (indi) {\\n            this._resetIndicators();\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.addEventListener('click', e => {\\n      if (e.target.matches('.carousel-control-prev')) {\\n        this._moveSlider('prev');\\n      }\\n      if (e.target.matches('.carousel-control-next')) {\\n        this._moveSlider('next');\\n      }\\n      if (e.target.matches('.carousel-control-next')) {\\n        this._moveSlider(e.target.dataset.slideTo);\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 이벤트를 삭제한다.\\n   * @example -\\n   */\\n  _clearEvent() {\\n    if (this.timer) clearTimeout(this.timer);\\n  }\\n\\n  /**\\n   * @desc Carousel Indicators를 초기화한다.\\n   * @example -\\n   */\\n  _resetIndicators() {\\n    let indi = this.querySelector('.carousel-indicators');\\n\\n    if (indi) {\\n      indi.$empty();\\n\\n      this.querySelectorAll('.carousel-inner .carousel-item').forEach(\\n        (item, ind) => {\\n          let li = document.createElement('li');\\n\\n          li.dataset.slideTo = ind;\\n          item.classList.remove('active');\\n\\n          if (ind == 0) {\\n            item.classList.add('active');\\n            li.classList.add('active');\\n          }\\n\\n          indi.appendChild(li);\\n        }\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 방향 또는 Item번호 기준으로 Carousel을 동작시킨다.\\n   * @param {String|Number} - 방향|Item번호\\n   * @example -\\n   */\\n  _moveSlider(id) {\\n    let itemCount = this.querySelectorAll('.carousel-inner >.carousel-item').length;\\n    let curInd = Jinja.dom.findIndex(\\n      this.querySelector('.carousel-inner'),\\n      this.querySelector('.carousel-item.active')\\n    );\\n\\n    this.querySelector(\\n      '.carousel-inner .carousel-item.active'\\n    ).classList.remove('active');\\n\\n    if (this.querySelector('.carousel-indicators')) {\\n      this.querySelector('.carousel-indicators li.active').classList.remove(\\n        'active'\\n      );\\n    }\\n\\n    if (id === undefined) id = 'next';\\n\\n    switch (id) {\\n      case 'next':\\n        curInd++;\\n\\n        break;\\n      case 'prev':\\n        curInd--;\\n\\n        break;\\n      default:\\n        curInd = parseInt(id);\\n\\n        break;\\n    }\\n\\n    if (curInd < 0) curInd = itemCount - 1;\\n    if (curInd >= itemCount) curInd = 0;\\n\\n    if (this.querySelectorAll('.carousel-inner .carousel-item')[curInd])\\n      this.querySelectorAll('.carousel-inner .carousel-item')[\\n        curInd\\n      ].classList.add('active');\\n\\n    if (this.querySelectorAll('.carousel-indicators li')[curInd])\\n      this.querySelectorAll('.carousel-indicators li')[curInd].classList.add(\\n        'active'\\n      );\\n\\n    if (!this.matches('jj-vhtml-editor *')) {\\n      if (this.timer) {\\n        clearTimeout(this.timer);\\n      }\\n\\n      this.timer = setTimeout(() => {\\n        this._moveSlider();\\n      }, this.options.interval);\\n    }\\n  }\\n\\n  /**\\n   * @desc Carousel의 Caption, Indicators 표출여부를 반환한다.\\n   * @return {Object} - Caption, Indicators 표출여부\\n   * @example -\\n   */\\n  getStatus() {\\n    let isCaption, isIndicators;\\n    let captionEl = this.querySelector('.carousel-caption');\\n\\n    isCaption = captionEl && !captionEl.hidden;\\n\\n    let indicatorEl = this.querySelector('.carousel-indicators');\\n\\n    isIndicators = indicatorEl && !indicatorEl.hidden;\\n\\n    return {\\n      isCaption: isCaption,\\n      isIndicators: isIndicators\\n    };\\n  }\\n\\n  /**\\n   * @desc Carousel Caption 표출여부를 설정한다.\\n   * @param {boolean} - 표출여부\\n   * @example -\\n   */\\n  showCaption(flag) {\\n    if (flag) {\\n      this.querySelectorAll('.carousel-item').forEach(item => {\\n        let captionEl = item.querySelector('.carousel-caption');\\n\\n        if (captionEl) {\\n          captionEl.hidden = false;\\n        } else {\\n          let html = \\n            `<div class=\\\"carousel-caption d-none d-md-block\\\">` +\\n            `<h3 class=\\\"text-white\\\">slide label</h3>` +\\n            `<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>` +\\n            `</div>`;\\n\\n          Jinja.dom.append(item, html);\\n        }\\n      });\\n    } else {\\n      this.querySelectorAll('.carousel-caption').forEach(\\n        el => (el.hidden = true)\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @desc Carousel Indicators 표출여부를 설정한다.\\n   * @param {boolean} - 표출여부\\n   * @example -\\n   */\\n  showIndicators(flag) {\\n    if (flag) {\\n      let indEl = this.querySelector('.carousel-indicators');\\n\\n      if (indEl) {\\n        indEl.hidden = false;\\n      } else {\\n        let html = `<ol class=\\\"carousel-indicators\\\"></ol>`;\\n\\n        Jinja.dom.append(this, html);\\n\\n        this.resetIndicators();\\n      }\\n    } else {\\n      this.querySelector('.carousel-indicators').hidden = true;\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-carousel', JJCarousel);\\n/* ==JJChart640.class================ */\\n\\n/**\\n * @classdesc 챠트 컴포넌트관리를 위한 클래스\\n */\\nclass JJChart extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      require: ['apexchart'],\\n      type: 'bar',\\n      chartOptions: {\\n        circle: {\\n          series: this.dataset.sample ? [0] : [95],\\n          chart: {\\n            height: this.offsetHeight,\\n            type: 'radialBar',\\n            toolbar: {\\n              show: true\\n            }\\n          },\\n          title: {\\n            align: 'left',\\n            style: {\\n              color: '#fff',\\n              fontSize: '13px'\\n            }\\n          },\\n          plotOptions: {\\n            radialBar: {\\n              startAngle: 0,\\n              endAngle: 360,\\n              hollow: {\\n                margin: 0,\\n                size: '70%',\\n                position: 'front',\\n                dropShadow: {\\n                  enabled: true,\\n                  top: 3,\\n                  left: 0,\\n                  blur: 4,\\n                  opacity: 0.24\\n                }\\n              },\\n              track: {\\n                strokeWidth: '67%',\\n                margin: 0,\\n                dropShadow: {\\n                  enabled: true,\\n                  top: -3,\\n                  left: 0,\\n                  blur: 4,\\n                  opacity: 0.35\\n                }\\n              },\\n              dataLabels: {\\n                show: true,\\n                name: {\\n                  offsetY: -10,\\n                  show: true,\\n                  color: '#888',\\n                  fontSize: '17px'\\n                },\\n                value: {\\n                  formatter: function (val) {\\n                    return parseInt(val);\\n                  },\\n                  color: '#111',\\n                  fontSize: '36px',\\n                  show: true\\n                }\\n              }\\n            }\\n          },\\n          fill: {\\n            type: 'gradient',\\n            gradient: {\\n              shade: 'dark',\\n              type: 'horizontal',\\n              shadeIntensity: 0.5,\\n              gradientToColors: ['#ABE5A1'],\\n              inverseColors: true,\\n              opacityFrom: 1,\\n              opacityTo: 1,\\n              stops: [0, 100]\\n            }\\n          },\\n          stroke: {\\n            lineCap: 'round'\\n          },\\n          labels: ['Percent']\\n        },\\n        radialBar: {\\n          series: [44, 55, 67, 83],\\n          chart: {\\n            height: this.offsetHeight,\\n            type: 'radialBar',\\n            toolbar: {\\n              show: true\\n            },\\n            zoom: {\\n              enabled: true\\n            },\\n            events: {\\n              mouseMove: (event, chartContext, config) => {\\n                let orgText = chartContext.el.querySelector(\\n                  '.apexcharts-datalabel-label'\\n                );\\n\\n                if (orgText) {\\n                  this._textWarp(orgText, config);\\n                }\\n              },\\n              mounted: (chartContext, config) => {\\n                let orgText = chartContext.el.querySelector(\\n                  '.apexcharts-datalabel-label'\\n                );\\n\\n                if (orgText) {\\n                  this._textWarp(orgText, config);\\n                }\\n              },\\n              updated: (chartContext, config) => {\\n                let orgText = chartContext.el.querySelector(\\n                  '.apexcharts-datalabel-label'\\n                );\\n\\n                if (orgText) {\\n                  this._textWarp(orgText, config);\\n                }\\n              },\\n            },\\n          },\\n          title: {\\n            align: 'left',\\n            style: {\\n              color: '#fff',\\n              fontSize: '13px'\\n            }\\n          },\\n          legend: {\\n            position: 'bottom'\\n          },\\n          plotOptions: {\\n            radialBar: {\\n              offsetWrapY: -10,\\n              offsetWrapSplit: '\\\\n',\\n              dataLabels: {\\n                name: {\\n                  fontSize: '22px'\\n                },\\n                value: {\\n                  fontSize: '16px'\\n                },\\n                total: {\\n                  show: true,\\n                  label: 'Total',\\n                  formatter: function (w) {\\n                    return 249;\\n                  }\\n                }\\n              }\\n            }\\n          },\\n          labels: ['Apples', 'Oranges', 'Bananas', 'Berries']\\n        },\\n        bar: {\\n          series: this.dataset.sample\\n            ? []\\n            : [\\n                {\\n                  name: 'Net Profit',\\n                  data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\\n                },\\n                {\\n                  name: 'Revenue',\\n                  data: [76, 85, 101, 98, 87, 105, 91, 114, 94]\\n                },\\n                {\\n                  name: 'Free Cash Flow',\\n                  data: [35, 41, 36, 26, 45, 48, 52, 53, 41]\\n                }\\n              ],\\n          chart: {\\n            type: 'bar',\\n            height: this.offsetHeight,\\n            toolbar: {\\n              show: true\\n            },\\n            zoom: {\\n              enabled: true\\n            }\\n          },\\n          colors: ['#3bafda', '#1abc9c', '#CED4DC'],\\n          title: {\\n            align: 'left',\\n            style: {\\n              color: '#fff',\\n              fontSize: '13px'\\n            }\\n          },\\n          dataLabels: {\\n            enabled: false\\n          },\\n          stroke: {\\n            show: true,\\n            width: 2,\\n            colors: ['transparent']\\n          },\\n          xaxis: {\\n            title: {\\n              style: {\\n                color: '#fff',\\n                fontSize: '12px'\\n              }\\n            },\\n            labels: {\\n              style: {\\n                colors: ['#c4c9db']\\n              }\\n            }\\n          },\\n          yaxis: {\\n            title: {\\n              style: {\\n                color: '#fff',\\n                fontSize: '12px'\\n              }\\n            },\\n            labels: {\\n              style: {\\n                colors: ['#c4c9db']\\n              },\\n              formatter: value => {\\n                return value.$toFloatFormat();\\n              }\\n            }\\n          },\\n          fill: {\\n            opacity: 1\\n          },\\n          tooltip: {\\n          }\\n        },\\n        pie: {\\n          series: this.dataset.sample ? [] : [44, 55, 13, 43, 22],\\n          chart: {\\n            type: 'pie',\\n            height: this.offsetHeight,\\n            toolbar: {\\n              show: true\\n            },\\n            zoom: {\\n              enabled: true\\n            }\\n          },\\n          labels: ['Team A', 'Team B', 'Team C', 'Team D', 'Team E'],\\n          colors: ['#3bafda', '#26c6da', '#80deea', '#00b19d', '#d1dee4'],\\n          title: {\\n            align: 'left',\\n            style: {\\n              color: '#fff',\\n              fontSize: '13px'\\n            }\\n          },\\n          legend: {\\n            position: 'bottom'\\n          },\\n          Xresponsive: [\\n            {\\n              breakpoint: 480,\\n              options: {\\n                chart: {\\n                  width: 200\\n                },\\n                legend: {\\n                  position: 'bottom'\\n                }\\n              }\\n            }\\n          ]\\n        },\\n        donut: {\\n          series: this.dataset.sample ? [] : [44, 55, 13, 43, 22],\\n          chart: {\\n            type: 'donut',\\n            height: this.offsetHeight,\\n            toolbar: {\\n              show: true\\n            },\\n            zoom: {\\n              enabled: true\\n            }\\n          },\\n          colors: ['#3bafda', '#26c6da', '#80deea', '#00b19d', '#d1dee4'],\\n          labels: ['Team A', 'Team B', 'Team C', 'Team D', 'Team E'],\\n          title: {\\n            align: 'left',\\n            style: {\\n              color: '#fff',\\n              fontSize: '13px'\\n            }\\n          },\\n          plotOptions: {\\n            pie: {\\n              donut: {\\n                labels: {\\n                  show: true,\\n                  total: {\\n                    showAlways: true,\\n                    show: true,\\n                    color: '#c4c9db',\\n                    fontSize: '13px',\\n                    formatter: function (w) {\\n                      let sumVal = w.globals.seriesTotals.reduce((a, b) => {\\n                        return a + b;\\n                      }, 0);\\n\\n                      return sumVal.$toFloatFormat();\\n                    }\\n                  },\\n                  value: {\\n                    showAlways: true,\\n                    show: true,\\n                    color: '#fff',\\n                    fontSize: '18px'\\n                  }\\n                }\\n              }\\n            }\\n          },\\n          legend: {\\n            position: 'bottom'\\n          }\\n        },\\n        line: {\\n          series: this.dataset.sample\\n            ? []\\n            : [\\n                {\\n                  name: 'High - 2013',\\n                  data: [28, 29, 33, 36, 32, 32, 33]\\n                },\\n                {\\n                  name: 'Low - 2013',\\n                  data: [12, 11, 14, 18, 17, 13, 13]\\n                }\\n              ],\\n          chart: {\\n            height: this.offsetHeight,\\n            type: 'line',\\n            toolbar: {\\n              show: true\\n            },\\n            zoom: {\\n              enabled: true\\n            }\\n          },\\n          colors: ['#3bafda', '#1abc9c'],\\n          dataLabels: {\\n            enabled: false\\n          },\\n          title: {\\n            align: 'left',\\n            style: {\\n              color: '#fff',\\n              fontSize: '13px'\\n            }\\n          },\\n          grid: {\\n            borderColor: '#e7e7e7',\\n            row: {\\n              opacity: 0.5\\n            }\\n          },\\n          stroke: {\\n          },\\n          markers: {\\n            size: 3,\\n            hover: {\\n              size: 6\\n            }\\n          },\\n          xaxis: {\\n            title: {\\n              style: {\\n                color: '#fff',\\n                fontSize: '13px'\\n              }\\n            },\\n            labels: {\\n              style: {\\n                colors: '#c4c9db'\\n              }\\n            }\\n          },\\n          yaxis: {\\n            title: {\\n              style: {\\n                color: '#fff',\\n                fontSize: '12px'\\n              }\\n            },\\n            labels: {\\n              style: {\\n                colors: '#c4c9db'\\n              },\\n              formatter: value => {\\n                return value.$toFloatFormat();\\n              }\\n            }\\n          }\\n        },\\n        area: {\\n          series: this.dataset.sample\\n            ? []\\n            : [\\n                {\\n                  name: 'series1',\\n                  data: [31, 40, 28, 51, 42, 109, 100]\\n                },\\n                {\\n                  name: 'series2',\\n                  data: [11, 32, 45, 32, 34, 52, 41]\\n                }\\n              ],\\n          chart: {\\n            height: this.offsetHeight,\\n            type: 'area',\\n            toolbar: {\\n              show: true\\n            },\\n            zoom: {\\n              enabled: true\\n            }\\n          },\\n          colors: ['#3bafda', '#1abc9c', '#CED4DC'],\\n          title: {\\n            align: 'left',\\n            style: {\\n              color: '#fff',\\n              fontSize: '13px'\\n            }\\n          },\\n          dataLabels: {\\n            enabled: false\\n          },\\n          stroke: {\\n            curve: 'smooth'\\n          },\\n          xaxis: {\\n            type: 'datetime',\\n            title: {\\n              style: {\\n                color: '#fff',\\n                fontSize: '12px'\\n              }\\n            },\\n            labels: {\\n              style: {\\n                colors: '#c4c9db'\\n              }\\n            },\\n            categories: [\\n              '2018-09-19T00:00:00.000Z',\\n              '2018-09-19T01:30:00.000Z',\\n              '2018-09-19T02:30:00.000Z',\\n              '2018-09-19T03:30:00.000Z',\\n              '2018-09-19T04:30:00.000Z',\\n              '2018-09-19T05:30:00.000Z',\\n              '2018-09-19T06:30:00.000Z'\\n            ]\\n          },\\n          yaxis: {\\n            title: {\\n              style: {\\n                color: '#fff',\\n                fontSize: '12px'\\n              }\\n            },\\n            labels: {\\n              style: {\\n                colors: '#c4c9db'\\n              },\\n              formatter: value => {\\n                return value.$toFloatFormat();\\n              }\\n            }\\n          },\\n          tooltip: {\\n            x: {\\n              format: 'dd/MM/yy HH:mm'\\n            }\\n          }\\n        },\\n        mixBarLine: {\\n          series: [\\n            {\\n              name: 'PRODUCT A',\\n              type: 'bar',\\n              data: this.dataset.sample ? [] : [44, 55, 41, 67, 22, 43]\\n            },\\n            {\\n              name: 'PRODUCT B',\\n              type: 'bar',\\n              data: this.dataset.sample ? [] : [13, 23, 20, 8, 13, 27]\\n            },\\n            {\\n              name: 'PRODUCT C',\\n              type: 'bar',\\n              data: this.dataset.sample ? [] : [11, 17, 15, 15, 21, 14]\\n            },\\n            {\\n              name: 'PRODUCT D',\\n              type: 'line',\\n              data: this.dataset.sample ? [] : [21, 7, 25, 13, 22, 8]\\n            }\\n          ],\\n          chart: {\\n            height: this.offsetHeight,\\n            stacked: false,\\n            toolbar: {\\n              show: true\\n            },\\n            zoom: {\\n              enabled: true\\n            }\\n          },\\n          colors: ['#3bafda', '#1abc9c', '#CED4DC', '#f1556c'],\\n          title: {\\n            text: '',\\n            align: 'left'\\n          },\\n          responsive: [\\n            {\\n              breakpoint: 480,\\n              options: {\\n                legend: {\\n                  position: 'bottom',\\n                  offsetX: -10,\\n                  offsetY: 0\\n                }\\n              }\\n            }\\n          ],\\n          plotOptions: {\\n            bar: {\\n              horizontal: false\\n            }\\n          },\\n          xaxis: {\\n            type: 'datetime',\\n            title: {\\n              style: {\\n                color: '#fff',\\n                fontSize: '12px'\\n              }\\n            },\\n            labels: {\\n              style: {\\n                colors: '#c4c9db'\\n              }\\n            },\\n            categories: [\\n              '01/01/2011 GMT',\\n              '01/02/2011 GMT',\\n              '01/03/2011 GMT',\\n              '01/04/2011 GMT',\\n              '01/05/2011 GMT',\\n              '01/06/2011 GMT'\\n            ]\\n          },\\n          yaxis: {\\n            title: {\\n              style: {\\n                color: '#fff',\\n                fontSize: '12px'\\n              }\\n            },\\n            labels: {\\n              style: {\\n                colors: '#c4c9db'\\n              },\\n              formatter: value => {\\n                return value.$toFloatFormat();\\n              }\\n            }\\n          },\\n          markers: {\\n            Xshape: 'square',\\n            size: 6,\\n            hover: {\\n              size: 7\\n            }\\n          },\\n          legend: {\\n            position: 'bottom'\\n          },\\n          fill: {\\n            opacity: 5\\n          }\\n        },\\n        mixStackLine: {\\n          series: [\\n            {\\n              name: 'PRODUCT A',\\n              type: 'bar',\\n              data: this.dataset.sample ? [] : [44, 55, 41, 67, 22, 43]\\n            },\\n            {\\n              name: 'PRODUCT B',\\n              type: 'bar',\\n              data: this.dataset.sample ? [] : [13, 23, 20, 8, 13, 27]\\n            },\\n            {\\n              name: 'PRODUCT C',\\n              type: 'bar',\\n              data: this.dataset.sample ? [] : [11, 17, 15, 15, 21, 14]\\n            },\\n            {\\n              name: 'PRODUCT D',\\n              type: 'line',\\n              data: this.dataset.sample ? [] : [21, 7, 25, 13, 22, 8]\\n            }\\n          ],\\n          chart: {\\n            height: this.offsetHeight,\\n            stacked: true,\\n            toolbar: {\\n              show: true\\n            },\\n            zoom: {\\n              enabled: true\\n            },\\n          },\\n          colors: ['#3bafda', '#1abc9c', '#CED4DC', '#f1556c'],\\n          title: {\\n            text: '',\\n            align: 'left'\\n          },\\n          responsive: [\\n            {\\n              breakpoint: 480,\\n              options: {\\n                legend: {\\n                  position: 'bottom',\\n                  offsetX: -10,\\n                  offsetY: 0\\n                }\\n              }\\n            }\\n          ],\\n          plotOptions: {\\n            bar: {\\n              horizontal: false\\n            },\\n          },\\n          xaxis: {\\n            type: 'datetime',\\n            title: {\\n              style: {\\n                color: '#fff',\\n                fontSize: '12px'\\n              }\\n            },\\n            labels: {\\n              style: {\\n                colors: '#c4c9db'\\n              }\\n            },\\n            categories: [\\n              '01/01/2011 GMT',\\n              '01/02/2011 GMT',\\n              '01/03/2011 GMT',\\n              '01/04/2011 GMT',\\n              '01/05/2011 GMT',\\n              '01/06/2011 GMT'\\n            ]\\n          },\\n          yaxis: {\\n            title: {\\n              style: {\\n                color: '#fff',\\n                fontSize: '12px'\\n              }\\n            },\\n            labels: {\\n              style: {\\n                colors: '#c4c9db'\\n              },\\n              formatter: value => {\\n                return value.$toFloatFormat();\\n              }\\n            }\\n          },\\n          markers: {\\n            Xshape: 'square',\\n            size: 6,\\n            hover: {\\n              size: 7\\n            }\\n          },\\n          legend: {\\n            position: 'bottom'\\n          },\\n          fill: {\\n            opacity: 5\\n          }\\n        },\\n        compareBarLine: {\\n          series: [\\n            {\\n              name: '금년',\\n              type: 'column',\\n              data: this.dataset.sample ? [] : [23, 11]\\n            },\\n            {\\n              name: '전년',\\n              type: 'line',\\n              data: this.dataset.sample ? [] : [30, 25]\\n            }\\n          ],\\n          chart: {\\n            height: this.offsetHeight,\\n            type: 'line',\\n            stacked: false,\\n            toolbar: {\\n              show: false\\n            },\\n            zoom: {\\n              enabled: false\\n            },\\n          },\\n          stroke: {\\n            width: [0, 2, 5],\\n            curve: 'smooth'\\n          },\\n          plotOptions: {\\n            bar: {\\n              columnWidth: '50%'\\n            }\\n          },\\n          colors: ['#3bafda', '#1abc9c'],\\n          fill: {\\n            opacity: 1\\n          },\\n          labels: ['평일', '주말'],\\n          markers: {\\n            size: 5\\n          },\\n          xaxis: {\\n            title: {\\n              style: {\\n                color: '#fff',\\n                fontSize: '12px',\\n              },\\n            },\\n            labels: {\\n              style: {\\n                colors: '#c4c9db'\\n              }\\n            }\\n          },\\n          yaxis: {\\n            title: {\\n              style: {\\n                color: '#fff',\\n                fontSize: '12px'\\n              }\\n            },\\n            labels: {\\n              style: {\\n                colors: '#c4c9db'\\n              },\\n              formatter: value => {\\n                return value.$toFloatFormat();\\n              }\\n            }\\n          },\\n          tooltip: {\\n            shared: true,\\n            intersect: false,\\n            y: {\\n              formatter: function (y) {\\n                if (typeof y !== 'undefined') {\\n                  return y.toFixed(0) + ' points';\\n                }\\n\\n                return y;\\n              }\\n            }\\n          }\\n        },\\n        sparkLine: {\\n          series: [\\n            {\\n              data: this.dataset.sample\\n                ? []\\n                : [15, 75, 47, 65, 14, 2, 41, 54, 4, 27, 15]\\n            }\\n          ],\\n          chart: {\\n            type: 'line',\\n            width: 100,\\n            height: this.offsetHeight,\\n            sparkline: {\\n              enabled: true\\n            }\\n          },\\n          tooltip: {\\n            fixed: {\\n              enabled: false\\n            },\\n            x: {\\n              show: false\\n            },\\n            y: {\\n              title: {\\n                formatter: function (seriesName) {\\n                  return '';\\n                }\\n              }\\n            },\\n            marker: {\\n              show: false\\n            }\\n          }\\n        },\\n        sparkBar: {\\n          series: [\\n            {\\n              data: this.dataset.sample\\n                ? []\\n                : [25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54]\\n            }\\n          ],\\n          chart: {\\n            type: 'bar',\\n            height: this.offsetHeight,\\n            sparkline: {\\n              enabled: true\\n            }\\n          },\\n          plotOptions: {\\n            bar: {\\n              columnWidth: '80%'\\n            }\\n          },\\n          labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\\n          xaxis: {\\n            crosshairs: {\\n              width: 1\\n            }\\n          },\\n          tooltip: {\\n            fixed: {\\n              enabled: false\\n            },\\n            x: {\\n              show: false\\n            },\\n            y: {\\n              title: {\\n                formatter: function (seriesName) {\\n                  return '';\\n                }\\n              }\\n            },\\n            marker: {\\n              show: false\\n            }\\n          }\\n        },\\n        sparkArea: {\\n          series: [\\n            {\\n              data: this.dataset.sample\\n                ? []\\n                : [25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54]\\n            }\\n          ],\\n          chart: {\\n            type: 'area',\\n            height: this.offsetHeight,\\n            sparkline: {\\n              enabled: true\\n            }\\n          },\\n          tooltip: {\\n            fixed: {\\n              enabled: false\\n            },\\n            x: {\\n              show: false\\n            },\\n            y: {\\n              title: {\\n                formatter: function (seriesName) {\\n                  return '';\\n                }\\n              }\\n            },\\n            marker: {\\n              show: false\\n            }\\n          },\\n          stroke: {\\n            curve: 'straight'\\n          },\\n          fill: {\\n            opacity: 0.3\\n          },\\n          xaxis: {\\n            crosshairs: {\\n              width: 1\\n            }\\n          },\\n          yaxis: {\\n            min: 0\\n          },\\n          xtitle: {\\n            enabled: false,\\n            text: '$135,965',\\n            offsetX: 0,\\n            style: {\\n              fontSize: '24px'\\n            }\\n          },\\n          xsubtitle: {\\n            enabled: false,\\n            text: 'Profits',\\n            offsetX: 0,\\n            style: {\\n              fontSize: '14px'\\n            }\\n          }\\n        },\\n      },\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @param {String} - 챠트유형\\n   * @example -\\n   */\\n  _render(type) {\\n    type = type || this.options.type;\\n\\n    this.setAttribute('data-render', 'JJChart');\\n    this.chart = null;\\n\\n    if (type && this.options.chartOptions[type]) {\\n      this.options.type = type;\\n\\n      let chartOption = this.options.chartOptions[type];\\n\\n      this.requirePromise.then(() => {\\n        if (this.dataset.group) {\\n          chartOption.chart.group = this.dataset.group;\\n          chartOption.chart.id = this.dataset.chartId || Jinja.global.uuid();\\n        }\\n\\n        this.chart = new ApexCharts(this, chartOption);\\n\\n        this.chart.render();\\n      });\\n    } else {\\n      alert('지정된 차트옵션이 없습니다.');\\n    }\\n  }\\n\\n  /**\\n   * @static\\n   * @memberof JJChart\\n   * @method get observedAttributes\\n   * @desc 모니터링 할 속성 목록을 반환한다.\\n   * @return {Array} - 모니터링 할 속성 목록\\n   * @example -\\n   */\\n  static get observedAttributes() {\\n    return ['data-type'];\\n  }\\n\\n  /**\\n   * @desc 지정한 옵션으로 챠트를 초기화한다.\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  init(options) {\\n    Object.assign(this.options, this.dataset, options);\\n  }\\n\\n  /**\\n   * @desc 지정한 옵션으로 챠트를 수정한다.\\n   * @param {Object} - 옵션\\n   * @param {Boolean} - 새로그리기여부\\n   * @param {Boolean} - 에니메이션효과여부\\n   * @param {Boolean} - 동기화여부\\n   * @example -\\n   */\\n  updateOptions(options, redrawPaths, animate, updateSyncedCharts) {\\n    if (redrawPaths == undefined) redrawPaths = false;\\n    if (animate == undefined) animate = true;\\n    if (updateSyncedCharts == undefined) updateSyncedCharts = true;\\n\\n    this.requirePromise.then(() => {\\n      this.chart.updateOptions(\\n        options,\\n        redrawPaths,\\n        animate,\\n        updateSyncedCharts\\n      );\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 시리즈로 챠트를 수정한다.\\n   * @param {Object} - 시리즈정보\\n   * @example -\\n   */\\n  updateSeries(series) {\\n    this.requirePromise.then(() => {\\n      this.chart.updateSeries(series);\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 엘리먼트의 문자열을 자동개행 처리한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {Object} - 챠트설정정보\\n   * @example -\\n   */\\n  _textWarp(el, config) {\\n    let svgNS = 'http://www.w3.org/2000/svg';\\n    let text = el.textContent;\\n    let tArr = text.split(\\n      config.config.plotOptions.radialBar.offsetWrapSplit || '\\\\n'\\n    );\\n\\n    if (tArr.length > 1) {\\n      el.textContent = '';\\n\\n      tArr.forEach((t, i) => {\\n        let newText = document.createElementNS(svgNS, 'tspan');\\n        let offsetY = config.config.plotOptions.radialBar.offsetWrapY || 0;\\n        let pY = parseInt(el.getAttributeNS(null, 'y'));\\n        let pX = parseInt(el.getAttributeNS(null, 'x'));\\n        let pH = parseInt(\\n          el.getAttributeNS(null, 'font-size').replace('px', '')\\n        );\\n\\n        newText.setAttributeNS(null, 'y', pY + i * pH + offsetY);\\n        newText.setAttributeNS(null, 'x', pX);\\n        newText.appendChild(document.createTextNode(t));\\n\\n        el.appendChild(newText);\\n      });\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 생성정보로 시리즈를 생성하여 반환한다.\\n   * @param {Number} - 시작값\\n   * @param {Number} - X좌표 개수\\n   * @param {Object} - Y좌표 범위정보\\n   * @return {Array} - 시리즈정보\\n   * @example -\\n   */\\n  _generateDayWiseTimeSeries(baseval, count, yrange) {\\n    let i = 0;\\n    let series = [];\\n\\n    while (i < count) {\\n      let x = baseval;\\n      let y =\\n        Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\\n\\n      series.push([x, y]);\\n      baseval += 86400000;\\n      i++;\\n    }\\n\\n    return series;\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 삭제한다.\\n   * @example -\\n   */\\n  _destroy() {\\n    this.chart.destroy();\\n  }\\n\\n  /**\\n   * @desc 엘리먼트 속성변경 이벤트 콜백을 처리한다.\\n   * @param {String} - 속성명\\n   * @param {*} - 이전값\\n   * @param {*} - 신규값\\n   * @example -\\n   */\\n  attributeChangedCallback(attrName, oldVal, newVal) {\\n    if (\\n      attrName == 'data-type' &&\\n      oldVal &&\\n      oldVal != newVal &&\\n      this.isConnected\\n    ) {\\n      this.options.type = newVal;\\n      this._render();\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-chart', JJChart);\\n/* ==JJChartMap.640.class================ */\\n\\n/**\\n * @classdesc 맵챠트 컴포넌트관리를 위한 클래스\\n */\\nclass JJChartMap extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      require: ['toast.map'],\\n      type: 'bar',\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    this.chart = null;\\n    this.setAttribute('data-render', 'JJChart');\\n\\n    let data = {\\n      series: []\\n    };\\n\\n    let options = {\\n      chart: {\\n        width: 570,\\n        height: 720,\\n        title: 'Average annual temperature of South Korea (°C)'\\n      },\\n      map: 'south-korea',\\n      legend: {\\n        align: 'bottom'\\n      },\\n      tooltip: {\\n        suffix: '°C'\\n      }\\n    };\\n\\n    let theme = {\\n      series: {\\n        startColor: '#ffefef',\\n        endColor: '#ac4142',\\n        overColor: '#75b5aa',\\n      },\\n      chart: {\\n        fontFamily: 'Verdana',\\n        background: {\\n          color: '#323b44',\\n          opacity: 1\\n        }\\n      }\\n    };\\n\\n    this.requirePromise.then(() => {\\n      tui.chart.registerTheme('myTheme', theme);\\n\\n      options.theme = 'myTheme';\\n\\n      this._map = tui.chart.mapChart(this, data, options);\\n    });\\n  }\\n\\n  /**\\n   * @desc 데이터를 설정한다.\\n   * @param {Object} - 대상 데이터\\n   * @example -\\n   */\\n  setData(data) {\\n    this.requirePromise.then(result => {\\n      this._map.setData(data);\\n    });\\n  }\\n}\\n\\ncustomElements.define('jj-chartmap', JJChartMap);\\n/* ==JJCircleChartSimple.640.class================ */\\n\\n/**\\n * @classdesc 심플서클챠트 컴포넌트관리를 위한 클래스\\n */\\nclass JJCircleChartSimple extends JJElement {\\n  \\n  static get observedAttributes() {\\n    return ['value'];\\n  }\\n\\n  \\n  get value() {\\n    return this.options.data.value;\\n  }\\n\\n  \\n  set value(val) {\\n    this.options.data.value = val;\\n  }\\n\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      data: {\\n        value: 20\\n      },\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    if (Jinja.global.isInt(this.getAttribute('value'))) {\\n      this.options.data.value = this.getAttribute('value');\\n    }\\n\\n    this.setAttribute('data-render', 'JJCircleC100');\\n\\n    let html =\\n      `<div class=\\\"m100 p${data.value} small\\\">` +\\n      `<span><p class=\\\"title\\\"></p>${data.value}</span>` +\\n      `<div class=\\\"slice\\\">` +\\n      `<div class=\\\"bar\\\"></div>` +\\n      `<div class=\\\"fill\\\"></div>` +\\n      `</div>` +\\n      `</div>`;\\n\\n    this.innerHTML = html;\\n    this.bo = new JJReact(this.querySelector('div'), this.options);\\n  }\\n\\n  /**\\n   * @desc 엘리먼트 속성변경 이벤트 콜백을 처리한다.\\n   * @param {String} - 속성명\\n   * @param {*} - 이전값\\n   * @param {*} - 신규값\\n   * @example -\\n   */\\n  attributeChangedCallback(attrName, oldVal, newVal) {\\n    if (attrName == 'value') {\\n      if (Jinja.global.isInt(newVal)) {\\n        this.options.data.value = newVal;\\n      }\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-circlechart-s', JJCircleChartSimple);\\n/* ==JJCircleChart.640.class================ */\\n\\n/**\\n * @classdesc 서클챠트 컴포넌트관리를 위한 클래스\\n */\\nclass JJCircleChart extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      data: {\\n        value: 20\\n      },\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @static\\n   * @memberof JJCircleChart\\n   * @method get observedAttributes\\n   * @desc 모니터링 할 속성 목록을 반환한다.\\n   * @return {Array} - 모니터링 할 속성 목록\\n   * @example -\\n   */\\n  static get observedAttributes() {\\n    return ['value', 'data-color'];\\n  }\\n\\n  /**\\n   * @memberof JJCircleChart\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n    return this.options.data.value;\\n  }\\n\\n  /**\\n   * @memberof JJCircleChart\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(val) {\\n    this.options.data.value = val;\\n    this._renderChart();\\n    \\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @param {String} - 챠트유형\\n   * @example -\\n   */\\n  _render() {\\n    this.setAttribute('data-render', 'JJCircleChart');\\n\\n    if (Jinja.global.isInt(this.getAttribute('value'))) {\\n      this.options.data.value = this.getAttribute('value');\\n    }\\n\\n    if (!this.getAttribute('data-color')) {\\n      this.setAttribute('data-color', 'green');\\n    }\\n\\n    this._renderChart();\\n\\n  }\\n\\n  /**\\n   * @desc 차트 SVG를 그립니다\\n   * @example -\\n   */  \\n  _renderChart(){\\n    let html = \\n      `<svg viewBox=\\\"0 0 36 36\\\" class=\\\"circular-chart\\\">` +\\n      `<path class=\\\"circle-bg\\\" d=\\\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\\\"/>` +\\n      `<path class=\\\"circle\\\" stroke-dasharray=\\\"${this.options.data.value}, 100\\\" d=\\\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\\\"/>` +\\n      `<text x=\\\"18\\\" y=\\\"20.35\\\" class=\\\"percentage\\\">${this.options.data.value}%</text>` +\\n      `</svg>`;\\n\\n    this.innerHTML = html;\\n  }\\n  \\n  /**\\n   * @desc 엘리먼트 속성변경 이벤트 콜백을 처리한다.\\n   * @param {String} - 속성명\\n   * @param {*} - 이전값\\n   * @param {*} - 신규값\\n   * @example -\\n   */\\n  attributeChangedCallback(attrName, oldVal, newVal) {\\n    if (attrName == 'value') {\\n      if (Jinja.global.isInt(newVal)) {\\n        this.value = newVal;\\n      }\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-circlechart', JJCircleChart);\\n/* ==JJFloatChart.640,class================ */\\n\\n/**\\n * @classdesc 플로트챠트 컴포넌트관리를 위한 클래스\\n */\\nclass JJFloatChart extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this._dataSet = [];\\n    return {\\n      require: ['flot'],\\n      totalPoints: 300,\\n      series: {\\n        shadowSize: 0\\n      },\\n      colors: ['red', 'blue', 'green'],\\n      yaxis: {\\n        min: 0,\\n        max: 100\\n      },\\n      xaxis: {\\n        show: false\\n      },\\n      legend: '',\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @param {String} - 챠트유형\\n   * @example -\\n   */\\n  _render(type) {\\n    this.setAttribute('data-render', 'JJFloatChart');\\n    this.chart = null;\\n\\n    this.requirePromise.then(() => {\\n      this.chart = $.plot(\\n        $(this),\\n        [\\n          {\\n            label: 'Europe (EU27)',\\n            data: []\\n          },\\n          {\\n            label: 'asia (hh27)',\\n            data: []\\n          },\\n          {\\n            label: 'amerca (hh27)',\\n            data: []\\n          }\\n        ],\\n        {\\n          series: {\\n            shadowSize: 0\\n          },\\n          colors: ['red', 'blue', 'green'],\\n          yaxis: {\\n            min: 0,\\n            max: 100\\n          },\\n          xaxis: {\\n            show: false\\n          },\\n          legend: ''\\n        }\\n      );\\n    });\\n  }\\n\\n  /**\\n   * @desc 무작위 X, Y좌표 데이터를 생성 반환한다.\\n   * @param {Number} - 최대값\\n   * @return {Array} - X, Y좌표 데이터\\n   * @example -\\n   */\\n  _getRandomData(max) {\\n\\t\\tlet data3 = [];\\n    if (data3.length > 0)\\n      data3 = data3.slice(1);\\n\\n    while (data3.length < this.options.totalPoints) {\\n\\n      let prev = data3.length > 0 ? data3[data3.length - 1] : 50;\\n      let y = prev + Math.random() * 10 - 5;\\n\\n      if (y < 0) {\\n        y = 0;\\n      } else if (y > 100) {\\n        y = 100;\\n      }\\n\\n      data3.push(y);\\n    }\\n\\n    // Zip the generated y values with the x values\\n\\n    var res = [];\\n    for (var i = 0; i < data3.length; ++i) {\\n      res.push([i,data3[i]])\\n    } \\n    return res;\\n  }\\n\\n  _getDemoItem(){\\n    let result =[];\\n    \\n    this._dataSet.forEach(ds=>{\\n      let prev = ds.data.length > 0 ? ds.data[ds.data.length-1][1] : 50;\\n      let y = prev + Math.random() * 10 - 5;\\n\\n      if (y < 0) {\\n        y = 0;\\n      } else if (y > 100) {\\n        y = 100;\\n      }\\n\\n      result.push(y);\\n      \\n    })\\n    this.addSeries(result);\\n    return result;\\n  }\\n  \\n  /**\\n   * @desc Y축 좌표값이 없는 X, Y좌표 데이터를 생성 반환한다.\\n   * @return {Array} - X, Y좌표 데이터\\n   * @example -\\n   */\\n  _blankDataset() {\\n    let result = [];\\n\\n    for (let i = 0; i < this.options.totalPoints; i++) {\\n      result.push([i, 0]);\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @static\\n   * @memberof JJFloatChart\\n   * @method get observedAttributes\\n   * @desc 모니터링 할 속성 목록을 반환한다.\\n   * @return {Array} - 모니터링 할 속성 목록\\n   * @example -\\n   */\\n  static get observedAttributes() {\\n    return ['data-type'];\\n  }\\n\\n  /**\\n   * @desc 지정한 옵션으로 챠트를 초기화한다.\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  init(options) {\\n    Object.assign(this.options, this.dataset, options);\\n  }\\n\\n  /**\\n   * @desc 지정한 옵션으로 챠트를 수정한다.\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  updateOptions(options) {\\n    Object.assign(this.options, options);\\n\\n    this._dataSet = [];\\n\\n    options.labels.forEach(label => {\\n      this._dataSet.push({\\n        label: label,\\n        data: this._blankDataset()\\n      });\\n    });\\n\\n    this.requirePromise.then(() => {\\n      this.chart = $.plot($(this), this._dataSet, this.options);\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 시리즈를 챠트에 추가한다.\\n   * @param {Array} - 시리즈\\n   * @return {} -\\n   * @example -\\n   */\\n  addSeries(series) {\\n    this._dataSet.forEach((ds, index) => {\\n      ds.data.splice(0, 1);\\n      ds.data.push([ds.data.length, series[index]]);\\n\\n      ds.data.forEach((dataItem, index) => {\\n        dataItem[0] = index;\\n      });\\n    });\\n\\n    let bindData = [];\\n\\n    this._dataSet.forEach(ds => {\\n      bindData.push(ds.data);\\n    });\\n\\n    this.requirePromise.then(() => {\\n      this.chart.setData(bindData);\\n      this.chart.draw();\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 시리즈로 챠트를 수정한다.\\n   * @param {Object} - 시리즈정보\\n   * @example -\\n   */\\n  updateSeries(series) {\\n    this._dataSet = series;\\n    this.requirePromise.then(() => {\\n      this.chart = $.plot($(this), this._dataSet, this.options);\\n    });\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 삭제한다.\\n   * @example -\\n   */\\n  _destroy() {\\n    this.chart.shutdown();\\n  }\\n\\n  /**\\n   * @desc 엘리먼트 속성변경 이벤트 콜백을 처리한다.\\n   * @param {String} - 속성명\\n   * @param {*} - 이전값\\n   * @param {*} - 신규값\\n   * @example -\\n   */\\n  attributeChangedCallback(attrName, oldVal, newVal) {}\\n}\\n\\ncustomElements.define('jj-float', JJFloatChart);\\n/* ==JJGauge.640.class================ */\\n\\n/**\\n * @classdesc 게이지 컴포넌트관리를 위한 클래스\\n */\\nclass JJGauge extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      require: ['gauge'],\\n      type: 'type1',\\n      chartOption: {\\n        type1: {\\n          angle: 0,\\n          lineWidth: 0.2,\\n          radiusScale: 0.9,\\n          pointer: {\\n            length: 0.6,\\n            strokeWidth: 0.035\\n          },\\n          limitMax: 100,\\n          limitMin: 0,\\n          maxValue: 100,\\n          animationSpeed: 32,\\n          staticLabels: {\\n            font: '10px sans-serif',\\n            labels: [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100],\\n            color: '#000000',\\n            fractionDigits: 0\\n          },\\n          staticZones: [\\n            { strokeStyle: '#D6494B', min: 0, max: 10 },\\n            { strokeStyle: '#f96868', min: 10, max: 20 },\\n            { strokeStyle: '#f2a654', min: 20, max: 30 },\\n            { strokeStyle: '#f6be80', min: 30, max: 40 },\\n            { strokeStyle: '#f8e59b', min: 40, max: 50 },\\n            { strokeStyle: '#f7da64', min: 50, max: 60 },\\n            { strokeStyle: '#bad896', min: 60, max: 70 },\\n            { strokeStyle: '#9ece67', min: 70, max: 80 },\\n            { strokeStyle: '#46be8a', min: 80, max: 90 },\\n            { strokeStyle: '#279566', min: 90, max: 100 }\\n          ]\\n        },\\n        type2: {\\n          angle: -0.2,\\n          lineWidth: 0.2,\\n          radiusScale: 1,\\n          pointer: {\\n            length: 0.6,\\n            strokeWidth: 0.035,\\n            color: '#000000'\\n          },\\n          limitMax: false,\\n          limitMin: false,\\n          colorStart: '#6FADCF',\\n          colorStop: '#8FC0DA',\\n          strokeColor: '#E0E0E0',\\n          generateGradient: true,\\n          highDpiSupport: true,\\n          renderTicks: {\\n            divisions: 6,\\n            divWidth: 1.1,\\n            divLength: 0.27,\\n            divColor: '#333333',\\n            subDivisions: 3,\\n            subLength: 0.5,\\n            subWidth: 0.6,\\n            subColor: '#666666'\\n          }\\n        },\\n        dark1: {\\n          angle: 0,\\n          lineWidth: 0.2,\\n          radiusScale: 0.9,\\n          pointer: {\\n            length: 0.6,\\n            strokeWidth: 0.035,\\n            color: '#f1556c'\\n          },\\n          limitMax: 100,\\n          limitMin: 0,\\n          maxValue: 100,\\n          animationSpeed: 32,\\n          staticLabels: {\\n            font: '10px sans-serif',\\n            labels: [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100],\\n            color: '#c4c9db',\\n            fractionDigits: 0\\n          },\\n          staticZones: [\\n            { strokeStyle: '#D6494B', min: 0, max: 10 },\\n            { strokeStyle: '#f96868', min: 10, max: 20 },\\n            { strokeStyle: '#f2a654', min: 20, max: 30 },\\n            { strokeStyle: '#f6be80', min: 30, max: 40 },\\n            { strokeStyle: '#f8e59b', min: 40, max: 50 },\\n            { strokeStyle: '#f7da64', min: 50, max: 60 },\\n            { strokeStyle: '#bad896', min: 60, max: 70 },\\n            { strokeStyle: '#9ece67', min: 70, max: 80 },\\n            { strokeStyle: '#46be8a', min: 80, max: 90 },\\n            { strokeStyle: '#279566', min: 90, max: 100 }\\n          ]\\n        },\\n        dark2: {\\n          angle: -0.2,\\n          lineWidth: 0.2,\\n          radiusScale: 1,\\n          pointer: {\\n            length: 0.6,\\n            strokeWidth: 0.035,\\n            color: '#f1556c'\\n          },\\n          limitMax: false,\\n          limitMin: false,\\n          colorStart: '#6FADCF',\\n          colorStop: '#8FC0DA',\\n          strokeColor: '#E0E0E0',\\n          generateGradient: true,\\n          highDpiSupport: true,\\n          renderTicks: {\\n            divisions: 6,\\n            divWidth: 1.1,\\n            divLength: 0.27,\\n            divColor: '#333333',\\n            subDivisions: 3,\\n            subLength: 0.5,\\n            subWidth: 0.6,\\n            subColor: '#666666'\\n          }\\n        }\\n      },\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    this.$empty();\\n    this.chart = null;\\n    this.setAttribute('data-render', 'JJChart');\\n    this.chartEl = document.createElement('canvas');\\n    this.appendChild(this.chartEl);\\n\\n    this.requirePromise.then(() => {\\n      let options = Object.assign(\\n        {},\\n        this.options.chartOption[this.options.type],\\n        this._maxOption()\\n      );\\n      this.chart = new Gauge(this.chartEl).setOptions(options);\\n      this.chart.maxValue = this.options.maxValue || 100;\\n      this.chart.set(parseInt(this.getAttribute('value')) || 0);\\n    });\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this._oResizeObserver = new ResizeObserver(entries => {\\n      if (this._resizeTimeout) {\\n        clearTimeout(this._resizeTimeout);\\n\\n        this._resizeTimeout = null;\\n      }\\n\\n      this._resizeTimeout = setTimeout(e => {\\n        clearTimeout(this._resizeTimeout);\\n\\n        this._resizeTimeout = null;\\n      }, 500);\\n    });\\n\\n    this._oResizeObserver.observe(this);\\n  }\\n\\n  /**\\n   * @desc 게이지 수치표시정보를 반환한다.\\n   * @return {Object} - 수치표시정보\\n   * @example -\\n   */\\n  _maxOption() {\\n    let _m = this.options.maxValue || 100;\\n\\n    return {\\n      staticLabels: {\\n        labels: [\\n          0,\\n          parseInt(_m * 0.1),\\n          parseInt(_m * 0.2),\\n          parseInt(_m * 0.3),\\n          parseInt(_m * 0.4),\\n          parseInt(_m * 0.5),\\n          parseInt(_m * 0.6),\\n          parseInt(_m * 0.7),\\n          parseInt(_m * 0.8),\\n          parseInt(_m * 0.9),\\n          parseInt(_m * 1.0)\\n        ]\\n      },\\n      staticZones: [\\n        { strokeStyle: '#D6494B', min: _m * 0.0, max: _m * 0.1 },\\n        { strokeStyle: '#f96868', min: _m * 0.1, max: _m * 0.2 },\\n        { strokeStyle: '#f2a654', min: _m * 0.2, max: _m * 0.3 },\\n        { strokeStyle: '#f6be80', min: _m * 0.3, max: _m * 0.4 },\\n        { strokeStyle: '#f8e59b', min: _m * 0.4, max: _m * 0.5 },\\n        { strokeStyle: '#f7da64', min: _m * 0.5, max: _m * 0.6 },\\n        { strokeStyle: '#bad896', min: _m * 0.6, max: _m * 0.7 },\\n        { strokeStyle: '#9ece67', min: _m * 0.7, max: _m * 0.8 },\\n        { strokeStyle: '#46be8a', min: _m * 0.8, max: _m * 0.9 },\\n        { strokeStyle: '#279566', min: _m * 0.9, max: _m * 1.0 }\\n      ]\\n    };\\n  }\\n\\n  /**\\n   * @static\\n   * @memberof JJGauge\\n   * @method get observedAttributes\\n   * @desc 모니터링 할 속성 목록을 반환한다.\\n   * @return {Array} - 모니터링 할 속성 목록\\n   * @example -\\n   */\\n  static get observedAttributes() {\\n    return ['data-type', 'value', 'data-max'];\\n  }\\n\\n  /**\\n   * @memberof JJGauge\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n    return this.chart.get();\\n  }\\n\\n  /**\\n   * @memberof JJGauge\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(val) {\\n    this.requirePromise.then(() => {\\n      this.chart.set(val);\\n    });\\n  }\\n\\n  /**\\n   * @desc 엘리먼트 속성변경 이벤트 콜백을 처리한다.\\n   * @param {String} - 속성명\\n   * @param {*} - 이전값\\n   * @param {*} - 신규값\\n   * @example -\\n   */\\n  attributeChangedCallback(attrName, oldVal, newVal) {\\n    if (this.chart) {\\n      if (attrName == 'data-max') {\\n        this.requirePromise.then(() => {\\n          this.chart.maxValue = parseInt(newVal);\\n\\n          let _m = this.chart.maxValue;\\n\\n          this.chart.setOptions({\\n            staticLabels: {\\n              labels: [\\n                0,\\n                parseInt(_m * 0.1),\\n                parseInt(_m * 0.2),\\n                parseInt(_m * 0.3),\\n                parseInt(_m * 0.4),\\n                parseInt(_m * 0.5),\\n                parseInt(_m * 0.6),\\n                parseInt(_m * 0.7),\\n                parseInt(_m * 0.8),\\n                parseInt(_m * 0.9),\\n                parseInt(_m * 1.0)\\n              ]\\n            },\\n            staticZones: [\\n              { strokeStyle: '#D6494B', min: _m * 0.0, max: _m * 0.1 },\\n              { strokeStyle: '#f96868', min: _m * 0.1, max: _m * 0.2 },\\n              { strokeStyle: '#f2a654', min: _m * 0.2, max: _m * 0.3 },\\n              { strokeStyle: '#f6be80', min: _m * 0.3, max: _m * 0.4 },\\n              { strokeStyle: '#f8e59b', min: _m * 0.4, max: _m * 0.5 },\\n              { strokeStyle: '#f7da64', min: _m * 0.5, max: _m * 0.6 },\\n              { strokeStyle: '#bad896', min: _m * 0.6, max: _m * 0.7 },\\n              { strokeStyle: '#9ece67', min: _m * 0.7, max: _m * 0.8 },\\n              { strokeStyle: '#46be8a', min: _m * 0.8, max: _m * 0.9 },\\n              { strokeStyle: '#279566', min: _m * 0.9, max: _m * 1.0 }\\n            ]\\n          });\\n        });\\n      }\\n\\n      if (attrName == 'value') {\\n        this.requirePromise.then(() => {\\n          this.chart.set(parseInt(newVal));\\n        });\\n      }\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-gauge', JJGauge);\\n/* ==JJGradientBar.640.class================ */\\n\\n/**\\n * @classdesc 그라디언트바 컴포넌트관리를 위한 클래스\\n */\\nclass JJGradientBar extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      data: {\\n        value: 20,\\n        direction: 'vertical'\\n      },\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    if (Jinja.global.isInt(this.getAttribute('value'))) {\\n      this.options.data.value = this.getAttribute('value');\\n    }\\n\\n    this.setAttribute('data-render', 'JJGradientBar');\\n\\n    let html = `<t>${data.value}%</t>`;\\n\\n    this.innerHTML = html;\\n    this.bo = new JJReact(this.querySelector('t'), this.options);\\n    this.dataset.direction = this.options.data.direction;\\n  }\\n\\n  /**\\n   * @desc 바의 수치를 설정한다.\\n   * @param {Number} - 바수치\\n   * @example -\\n   */\\n  _setValue(val) {\\n    if (!val) {\\n      val = this.options.data.value;\\n    } else {\\n      this.options.data.value = val;\\n    }\\n\\n    if (this.options.data.direction == 'vertical') {\\n      this.style.backgroundSize = '100% ' + val + '%';\\n    } else {\\n      this.style.backgroundSize = val + '%';\\n    }\\n  }\\n\\n  /**\\n   * @static\\n   * @memberof JJGradientBar\\n   * @method get observedAttributes\\n   * @desc 모니터링 할 속성 목록을 반환한다.\\n   * @return {Array} - 모니터링 할 속성 목록\\n   * @example -\\n   */\\n  static get observedAttributes() {\\n    return ['data-direction', 'value'];\\n  }\\n\\n  /**\\n   * @memberof JJGradientBar\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n    return this.options.data.value;\\n  }\\n\\n  /**\\n   * @memberof JJGradientBar\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(val) {\\n    this._setValue(val);\\n  }\\n\\n  /**\\n   * @desc 엘리먼트 속성변경 이벤트 콜백을 처리한다.\\n   * @param {String} - 속성명\\n   * @param {*} - 이전값\\n   * @param {*} - 신규값\\n   * @example -\\n   */\\n  attributeChangedCallback(attrName, oldVal, newVal) {\\n    if (attrName == 'value') {\\n      this._setValue(newVal);\\n    }\\n\\n    if (attrName == 'data-direction') {\\n      this.options.data.direction = newVal;\\n      this._setValue();\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-gradient-bar', JJGradientBar);\\n/* ==JJProgressBar.640.class================ */\\n\\n/**\\n * @classdesc 프로그래스바 컴포넌트관리를 위한 클래스\\n */\\nclass JJProgressBar extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      data: {\\n        value: 20\\n      },\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    if (Jinja.global.isInt(this.getAttribute('value'))) {\\n      this.options.data.value = this.getAttribute('value');\\n    }\\n\\n    this.setAttribute('data-render', 'JJProgressBar');\\n\\n    let html =\\n      `<div class=\\\"progress\\\" style=\\\"width:100%\\\">` +\\n      `<div class=\\\"progress-bar progress-bar-striped\\\" ` +\\n      `role=\\\"progressbar\\\" aria-valuenow=\\\"45\\\" ` +\\n      `aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: ${data.value}%\\\">` +\\n      `<span class=\\\"\\\">${data.value}%</span>` +\\n      `</div>` +\\n      `</div>`;\\n\\n    this.innerHTML = html;\\n    this.bo = new JJReact(this.querySelector('.progress'), this.options);\\n  }\\n\\n  /**\\n   * @static\\n   * @memberof JJProgressBar\\n   * @method get observedAttributes\\n   * @desc 모니터링 할 속성 목록을 반환한다.\\n   * @return {Array} - 모니터링 할 속성 목록\\n   * @example -\\n   */\\n  static get observedAttributes() {\\n    return ['value'];\\n  }\\n\\n  /**\\n   * @memberof JJProgressBar\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n    return this.options.data.value;\\n  }\\n\\n  /**\\n   * @memberof JJProgressBar\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(val) {\\n    this.options.data.value = val;\\n  }\\n\\n  /**\\n   * @desc 엘리먼트 속성변경 이벤트 콜백을 처리한다.\\n   * @param {String} - 속성명\\n   * @param {*} - 이전값\\n   * @param {*} - 신규값\\n   * @example -\\n   */\\n  attributeChangedCallback(attrName, oldVal, newVal) {\\n    if (attrName == 'value') {\\n      if (Jinja.global.isInt(newVal)) {\\n        this.options.data.value = newVal;\\n      }\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-progress-bar', JJProgressBar);\\n/* ==JJSankey.640.class================ */\\n\\nclass JJSankey extends JJElement  {\\n  static get observedAttributes() {\\n    return [\\\"value\\\"];\\n  }\\t\\n\\n  get value() {\\n    //return this.chart.get();\\n    return this._value;\\n  }\\n\\n  set value(val) {\\n    this.requirePromise.then(()=>{\\n      this._chartRender(val);\\n    });\\n  }\\n\\n  _defaultOption(){\\n    return {\\n      \\\"require\\\":[\\\"sankey.d3\\\"],\\n      \\\"margin\\\": {\\\"top\\\": 10, \\\"right\\\": 10, \\\"bottom\\\": 10, \\\"left\\\": 10},\\n      \\\"width\\\":1200,\\n      \\\"height\\\":400,\\n      \\\"nodeWidth\\\": 30,\\n      \\\"nodePadding\\\": 20,\\n      \\\"version\\\": \\\"630\\\"\\n    };\\n  }\\n\\n  _render(){\\n    this.$empty();\\n    this.chart = null;\\n    this.setAttribute(\\\"data-render\\\", \\\"JJChart\\\");\\n    this._width = (this.offsetWidth||this.options.width) - this.options.margin.left - this.options.margin.right;\\n    this._height = (this.offsetHeight||this.options.height) - this.options.margin.top - this.options.margin.bottom;\\n\\n    return this.requirePromise.then(()=>{\\n      this.svg = d3.select(this).append(\\\"svg\\\")\\n      \\t.attr(\\\"width\\\", this.offsetWidth)\\n        .attr(\\\"height\\\", this.offsetHeight)\\n        .append(\\\"g\\\")\\n        .attr(\\\"transform\\\",\\n              \\\"translate(\\\" + this.options.margin.left + \\\",\\\" + this.options.margin.top + \\\")\\\");\\n\\n      // Color scale used\\n      this._color = d3.scaleOrdinal(d3.schemeCategory20);\\n\\n      // Set the sankey diagram properties\\n      this.chart = d3.sankey()\\n        .nodeWidth(this.options.nodeWidth)\\n        .nodePadding(this.options.nodePadding)\\n        .size([this._width, this._height]);\\n    });\\n  }\\n\\n  \\n  /* 이벤트 설정 */\\n  _setEvent(){\\n  }\\n\\n  //   /** 외부에서 수동 초기화 */\\n  init(opt){\\n    if(opt){\\n      Object.assign(this.options, opt);\\t\\t\\n      this._render();\\n    }\\n  }    \\n  \\n  // 차트 함수명 통일로 생성함\\n  updateSeries(graph){\\n    this.chartRender(graph);\\n  }\\n  \\n  chartRender(graph){\\n    this.requirePromise.then(()=>{\\n      this._render().then(()=>{\\n      \\tthis._chartRender(graph);  \\n      })\\n      \\n    })\\n  }\\n  _chartRender(graph){\\n    this._value = graph;\\n\\t\\tlet __width = this._width;\\n\\t\\tlet __height = this._height;\\n    let __chart = this.chart;\\n    \\n    //this.svg.$empty();\\n    \\n    this.chart\\n      .nodes(graph.nodes)\\n      .links(graph.links)\\n      .layout(1);\\n\\n    // add in the links\\n    var link = this.svg.append(\\\"g\\\")\\n    .selectAll(\\\".link\\\")\\n    .data(graph.links)\\n    .enter()\\n    .append(\\\"path\\\")\\n    .attr(\\\"class\\\", \\\"link\\\")\\n    .attr(\\\"d\\\", this.chart.link() )\\n    .style(\\\"stroke-width\\\", function(d) { return Math.max(1, d.dy); })\\n    .sort(function(a, b) { return b.dy - a.dy; });\\n\\n    // add in the nodes\\n    var node = this.svg.append(\\\"g\\\")\\n    .selectAll(\\\".node\\\")\\n    .data(graph.nodes)\\n    .enter().append(\\\"g\\\")\\n    .attr(\\\"class\\\", \\\"node\\\")\\n    .attr(\\\"transform\\\", function(d) { return \\\"translate(\\\" + d.x + \\\",\\\" + d.y + \\\")\\\"; })\\n    .call(d3.drag()\\n          .subject(function(d) { return d; })\\n          .on(\\\"start\\\",  function() {  this.parentNode.appendChild(this); })\\n          .on(\\\"drag\\\", dragmove));\\n\\n\\n\\n    // add the rectangles for the nodes\\n    node\\n      .append(\\\"rect\\\")\\n      .attr(\\\"height\\\", function(d) { return d.dy; })\\n      .attr(\\\"width\\\", this.chart.nodeWidth())\\n      .style(\\\"fill\\\", d=>{ return d.color = this._color(d.name.replace(/ .*/, \\\"\\\")); })\\n      .style(\\\"stroke\\\", d=>{ return d3.rgb(d.color).darker(2); })\\n    // Add hover text\\n      .append(\\\"title\\\")\\n      .text(function(d) { return d.name + \\\"\\\\n\\\" + \\\"There is \\\" + d.value + \\\" stuff in this node\\\"; });\\n\\n    // add in the title for the nodes\\n    node\\n      .append(\\\"text\\\")\\n      .attr(\\\"x\\\", -6)\\n      .attr(\\\"y\\\", function(d) { return d.dy / 2; })\\n      .attr(\\\"dy\\\", \\\".35em\\\")\\n      .attr(\\\"text-anchor\\\", \\\"end\\\")\\n      .attr(\\\"transform\\\", null)\\n      .text(function(d) { return d.name; })\\n      .filter(function(d) { return d.x < __width / 2; })\\n      .attr(\\\"x\\\", 6 + this.chart.nodeWidth())\\n      .attr(\\\"text-anchor\\\", \\\"start\\\");\\n\\n    // the function for moving the nodes\\n    function dragmove(d) {\\n      d3.select(this)\\n        .attr(\\\"transform\\\",\\n              \\\"translate(\\\" + \\n              d.x + \\\",\\\" + \\n              (d.y = Math.max( 0, Math.min(__height - d.dy, d3.event.y))\\n              ) + \\\")\\\");\\n\\n      __chart.relayout();\\n      link.attr(\\\"d\\\", __chart.link() );\\n    }\\n\\n  } \\n\\n  demo(){\\n    this.requirePromise.then(()=>{\\n    \\tlet graph = {\\n  \\\"nodes\\\": [\\n    {\\n      \\\"node\\\": 0,\\n      \\\"name\\\": \\\"node0\\\"\\n    },\\n    {\\n      \\\"node\\\": 1,\\n      \\\"name\\\": \\\"node1\\\"\\n    },\\n    {\\n      \\\"node\\\": 2,\\n      \\\"name\\\": \\\"node2\\\"\\n    },\\n    {\\n      \\\"node\\\": 3,\\n      \\\"name\\\": \\\"node3\\\"\\n    },\\n    {\\n      \\\"node\\\": 4,\\n      \\\"name\\\": \\\"node4\\\"\\n    },\\n    {\\n      \\\"node\\\": 5,\\n      \\\"name\\\": \\\"node5\\\",\\n      \\\"class\\\": \\\"red\\\"\\n    }\\n  ],\\n  \\\"links\\\": [\\n\\t\\t{\\n      \\\"source\\\": 0,\\n      \\\"target\\\": 1,\\n      \\\"value\\\": 5\\n    },\\n    {\\n      \\\"source\\\": 0,\\n      \\\"target\\\": 2,\\n      \\\"value\\\": 5\\n    },\\n    {\\n      \\\"source\\\": 1,\\n      \\\"target\\\": 3,\\n      \\\"value\\\": 4.2\\n    },\\n    {\\n      \\\"source\\\": 3,\\n      \\\"target\\\": 4,\\n      \\\"value\\\": 2\\n    },\\n    {\\n      \\\"source\\\": 2,\\n      \\\"target\\\": 3,\\n      \\\"value\\\": 4\\n    },\\n    {\\n      \\\"source\\\": 2,\\n      \\\"target\\\": 5,\\n      \\\"value\\\": 1\\n    },\\n    {\\n      \\\"source\\\": 1,\\n      \\\"target\\\": 5,\\n      \\\"value\\\": 1\\n    }\\n\\n  ]\\n};\\n      this._chartRender(graph);\\n     })\\n  }\\n\\n  attributeChangedCallback(attrName, oldVal, newVal) {\\n  }  \\n\\n}\\n\\ncustomElements.define('jj-sankey', JJSankey);\\t/* ==JJDiagram.640.class================ */\\n\\n/**\\n * @classdesc - 다이어그램 컴포넌트관리를 위한 클래스\\n */\\nclass JJDiagram extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      require: ['jsplumb.2.12.5'],\\n      mode: 'studio'\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    this.$empty();\\n\\n    if(this.options.mode == \\\"studio\\\"){\\n      this.setAttribute(\\\"tabindex\\\", -1);\\n      this.classList.add(\\\"hmi-editor\\\");\\n      this.sizeBox = document.createElement('jj-resize-box');\\n      this.sizeBox.hidden = true;\\n      this.appendChild(this.sizeBox);\\n      this.setAttribute(\\\"tabindex\\\", -1); \\n    }    \\n\\n    this.requirePromise.then(()=>{\\n      jsPlumb.ready(()=>{\\n        this.instance = jsPlumb.getInstance({\\n          Container: this,\\n          Endpoint: [\\\"Dot\\\", {radius: 5}],\\n          Connector:\\\"StateMachine\\\",\\n          HoverPaintStyle: {stroke: \\\"#1e8151\\\", strokeWidth: 5 },\\n          ConnectionOverlays: [\\n            [ \\\"Arrow\\\", {\\n              location: 1,\\n              id: \\\"arrow\\\",\\n              length: 14,\\n              foldback: 0.8\\n            } ],\\n            //[ \\\"Label\\\", { label: \\\"AppLink\\\", id: \\\"label\\\", cssClass: \\\"aLabel\\\" }]\\n          ]\\n        });\\n\\n        this.instance.registerConnectionType(\\\"basic\\\", { anchor:\\\"Continuous\\\", connector:\\\"StateMachine\\\" });\\n\\n        if(this.options.mode == \\\"studio\\\"){\\n          this.instance.bind(\\\"click\\\", c=>{\\n            this.selectNode(c);\\n          });\\n\\t\\t\\t\\t\\t// 컨넥션연결을 위한 드래그 시작시\\n          this.instance.bind(\\\"beforeDrag\\\", info=>{\\n            this.sizeBox.hidden = true;\\n          });   \\n\\t\\t\\t\\t\\t// 컨넥션 연결시 종료시\\n          this.instance.bind(\\\"connection\\\", info=>{\\n            //info.connection.getOverlay(\\\"label\\\").setLabel(info.connection.id);\\n          });   \\n          this.instance.on(this, \\\"click\\\", \\\".node-collapse\\\", (e)=>{\\n            var g = e.target.parentNode.getAttribute(\\\"group\\\"), \\n                collapsed =  this.instance.hasClass(e.target.parentNode, \\\"collapsed\\\");\\n\\n            this.instance[collapsed ? \\\"removeClass\\\" : \\\"addClass\\\"](e.target.parentNode, \\\"collapsed\\\");\\n            this.instance[collapsed ? \\\"expandGroup\\\" : \\\"collapseGroup\\\"](g);\\n          });\\n        }\\n        //this.innerItemInit();\\n      });\\n\\n    })    \\n\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    // 개발관련이벤트는 모드를 파악하여 처리함\\n    if(this.options.mode != \\\"studio\\\") return;\\n\\n    this.addEventListener(\\\"paste\\\", e=>{\\n      e.preventDefault();\\n      if(e.clipboardData.files.length) \\t{\\n\\n        Jinja.ajax.imageUpload(e.clipboardData.files)\\n          .then(result=>{\\n          let file = result.rows[0];\\n          this.newImage(e.offsetX, e.offsetY, file.path+file.fileId);        \\n        });\\n      }\\n    });    \\n\\n    this.addEventListener(\\\"drop\\\", e=>{\\n      e.preventDefault();\\n\\n      let html = e.dataTransfer.getData(\\\"text/html\\\");\\n      let diagramType = e.dataTransfer.getData(\\\"diagram-type\\\");\\n      let dropObject = e.dataTransfer.getData(\\\"objtype/application\\\");\\n      let dropData = e.dataTransfer.getData(\\\"objdata/application\\\");\\n\\n      if (diagramType==\\\"group\\\"){\\n        this.newGroup(e.offsetX, e.offsetY, html);  \\n      } else if(diagramType==\\\"node\\\") {\\n        this.newNode(e.offsetX, e.offsetY, html);  \\n      } else if(dropObject==\\\"table\\\") {\\n        dropData = Jinja.global.json(dropData);\\n        this.newTable(e.offsetX, e.offsetY, dropData);\\n      } else {\\n        this.newNode(e.offsetX, e.offsetY, html);  \\n      }\\n    })\\n\\n    this.addEventListener(\\\"dragover\\\", e=>{\\n      e.preventDefault();\\n    });\\n\\n    this.addEventListener(\\\"click\\\", e=>{\\n      e.preventDefault();\\n      if(e.target.matches(`.w, .w *`)){\\n        this.selectNode(e.target.$closest(`.w`));\\n      } else if(e.target.matches(`.group-container, .group-container *`)){\\n        this.selectNode(e.target.$closest(`.group-container`));\\n      } else if(Object.is(this, e.target)) {\\n        // 빈공간을 선택하면 취소처리함\\n        this.clearSelectNode();\\n      }\\n    });\\n\\n    this.addEventListener(\\\"keydown\\\", e=>{\\n      let keyMap =  Jinja.global.getEventKeyMap(e);\\n\\n      if ([\\\"Delete\\\"].includes(keyMap)){\\n        e.preventDefault();\\n        e.stopPropagation();\\n      }\\n      switch(keyMap){\\n        case \\\"Delete\\\":\\n          this.deleteNode(e);\\n          break;\\n\\n        default:\\n          break;\\n\\n      }      \\n    });\\n\\n    this.addEventListener(\\\"resize\\\", e=>{\\n      e.preventDefault();\\n      e.stopPropagation();\\n      this.instance.repaintEverything();\\n      \\n    });\\n    \\n    //     this.addEventListener(\\\"mousedown\\\", e=>{\\n    //       if(e.button === 0 && !e.target.matches(`jj-resize-box *`)){\\n    //        this.sizeBox.hidden = true;\\n    //       }\\n    //     });\\n\\n  }\\n\\n  /**\\n   * @desc 지정한 엘리먼트에 대한 Marker를 설정한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  _setMarker(el) {\\n    this.instance.makeSource(el, {\\n      filter: '.ep',\\n      anchor: 'Continuous',\\n      connectorStyle: {\\n        stroke: '#5c96bc',\\n        strokeWidth: 2,\\n        outlineStroke: 'transparent',\\n        outlineWidth: 4\\n      },\\n      connectionType: 'basic',\\n      extract: {\\n        action: 'the-action'\\n      },\\n      maxConnections: 12,\\n      onMaxConnections: (info, e) => {\\n        alert('Maximum connections (' + info.maxConnections + ') reached');\\n      }\\n    });\\n\\n    this.instance.makeTarget(el, {\\n      dropOptions: {hoverClass: 'dragHover'},\\n      anchor: 'Continuous',\\n      allowLoopback: true\\n    });\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 삭제한다.\\n   * @example -\\n   */\\n  _clear() {\\n    this.querySelectorAll('[group]').forEach(el => {\\n      let g = el.getAttribute('group');\\n\\n      this.instance.removeGroup(g, true);\\n    });\\n\\n    this.instance.deleteEveryConnection();\\n    this.querySelectorAll('.w').forEach(el => el.remove());\\n  }\\n\\n  /**\\n   * @desc 지정한 JSON 데이터를 엘리먼트의 그룹, 노드, 연결정보로 셋팅한다.\\n   * @param {Object} - 엘리먼트정보\\n   * @example -\\n   */\\n  _fromJSON(jsonData) {\\n    this.clear(true);\\n\\n    let defaultBody = {\\n      groups: [],\\n      nodes: [],\\n      connectors: []\\n    };\\n\\n    let body = Object.assign(defaultBody, jsonData);\\n\\n    body.groups.forEach(g => {\\n      let groupEl = document.createElement('div');\\n\\n      groupEl.className = 'group-container';\\n      groupEl.setAttribute('group', g.group);\\n      groupEl.setAttribute('style', g.style);\\n      groupEl.innerHTML = g.html;\\n\\n      if (g.bodystyle) {\\n        groupEl.classList.add('group-image');\\n      }\\n\\n      this.instance.getContainer().appendChild(groupEl);\\n      this.initGroup(groupEl);\\n    });\\n\\n    body.nodes.forEach(node => {\\n      let nodeEl = document.createElement('div');\\n\\n      nodeEl.className = 'w';\\n      nodeEl.setAttribute('jj-id', node.wid);\\n      nodeEl.setAttribute('style', node.style);\\n      nodeEl.innerHTML = node.html;\\n\\n      this.instance.getContainer().appendChild(nodeEl);\\n      this.initNode(nodeEl);\\n\\n      if (node.object) {\\n        nodeEl.setAttribute('objtype', node.object.type);\\n        nodeEl.dataset.objdata = Jinja.global.string(node.object.data);\\n      }\\n    });\\n\\n    body.connectors.forEach(conn => {\\n      this.instance.connect({\\n        source: this.querySelector(`[jj-id=\\\"${conn.source}\\\"]`),\\n        target: this.querySelector(`[jj-id=\\\"${conn.target}\\\"]`),\\n        type: 'basic'\\n      });\\n    });\\n  }\\n\\n  /**\\n   * @static\\n   * @memberof JJText\\n   * @method get observedAttributes\\n   * @desc 모니터링 할 속성 목록을 반환한다.\\n   * @return {Array} - 모니터링 할 속성 목록\\n   * @example -\\n   */\\n  static get observedAttributes() {\\n    return [''];\\n  }\\n\\n  /**\\n   * @desc 지정한 노드를 선택한다.\\n   * @param {Element} - 노드\\n   * @example -\\n   */\\n  selectNode(el) {\\n    this.clearSelectNode();\\n\\n    this.selectEl = el;\\n\\n    if (el.canvas) {\\n      el.canvas.classList.add('selected');\\n    } else if (el.classList) {\\n      el.classList.add('selected');\\n    }\\n\\n    this.sizeBox.lockElement(this.selectEl);\\n    this.sizeBox.hidden = false;\\n\\n    this.selectEl.dispatchEvent(\\n      new CustomEvent('selected', {\\n        detail: {\\n          editor: this,\\n          node: this.selectEl.firstElementChild\\n        },\\n        bubbles: true\\n      })\\n    );\\n  }\\n\\n  /**\\n   * @desc 선택된 노드를 선택해제한다.\\n   * @example -\\n   */\\n  clearSelectNode() {\\n    if (this.selectEl) {\\n      if (this.selectEl.canvas) {\\n        this.selectEl.canvas.classList.remove('selected');\\n      } else if (this.selectEl.classList) {\\n        this.selectEl.classList.remove('selected');\\n      }\\n\\n      this.selectEl = null;\\n    }\\n\\n    this.sizeBox.hidden = true;\\n  }\\n\\n  /**\\n   * @desc 선택된 노드를 삭제한다.\\n   * @example -\\n   */\\n  deleteNode() {\\n    if(!this.selectEl){\\n      alert(\\\"선택된 항목이 없습니다\\\");\\n      return;\\n    }\\n\\n    Jinja.confirm.delete(\\\"Connection delete ?\\\")\\n      .then(()=>{\\n\\n      if (this.selectEl.canvas){\\n        this.instance.deleteConnection(this.selectEl);\\n      } else if(this.selectEl.matches('.group-container')) {\\n        // .w에 연결된 Connection을 먼저 제거한다\\n        var g = this.selectEl.getAttribute(\\\"group\\\");\\n        this.instance.removeGroup(g, true);\\n\\n      } else if(this.selectEl.matches('.w')) {\\n        // .w에 연결된 Connection을 먼저 제거한다\\n        this.instance.getConnections().forEach(conn=>{\\n          if (Object.is(this.selectEl,conn.source) || Object.is(this.selectEl, conn.target)){\\n            this.instance.deleteConnection(conn);\\n          }\\n        });\\n        this.selectEl.remove();\\n      }\\n      this.clearSelectNode()\\n    })\\n      .catch(()=>{});\\n  }\\n\\n  /**\\n   * @desc 지정된 이미지를 출력한다.\\n   * @example -\\n   */\\n  print() {\\n    Jinja.global.capture(this).then(img => {\\n      JJHee.open('getCapture.610.uc', {\\n        search: {\\n          image: img\\n        },\\n        position: {\\n          width: '80%'\\n        },\\n        isModal: true,\\n        isMoveable: true\\n      })\\n        .then(result => {})\\n        .catch(ex => {});\\n    });\\n  }\\n\\n  /**\\n   * @desc 신규 노드를 추가한다.\\n   * @param {Number} - x 좌표\\n   * @param {Number} - y 좌표\\n   * @param {String} - 노드내용\\n   * @return {Element} - 노드\\n   * @example -\\n   */\\n  newNode(x, y, html) {\\n    let d ;\\n    let id = Jinja.global.uuid(); //jsPlumbUtil.uuid();\\n    let ep = document.createElement(\\\"div\\\");\\n    ep.classList.add('ep');\\n\\n    let _warp =document.createElement(\\\"div\\\");\\n    _warp.innerHTML = html;\\n    \\n//     if(_warp.childElementCount == 1){\\n//       d = _warp.childNodes[0]\\n//     } else {\\n//     \\td = document.createElement(\\\"div\\\");  \\n// \\t    //d.innerHTML = (html || id.substring(0, 7)) + \\\"<div class=\\\\\\\"ep\\\\\\\"></div>\\\";\\n//     }\\n    \\n    d = document.createElement(\\\"div\\\");  \\n \\t  d.innerHTML = html;\\n    d.appendChild(ep);\\n    \\n    d.classList.add(\\\"w\\\");\\n    d.setAttribute(\\\"jj-id\\\", id);\\n    d.style.left = x + \\\"px\\\";\\n    d.style.top = y + \\\"px\\\";\\n    this.instance.getContainer().appendChild(d);\\n    d.querySelectorAll('.list-group-item').forEach(el=>{\\n      el.classList.remove('list-group-item');\\n    })\\n    this.initNode(d);\\n    return d;\\n  }\\n\\n  /**\\n   * @desc 신규 그룹을 추가한다.\\n   * @param {Number} - x좌표\\n   * @param {Number} - y좌표\\n   * @param {String} - 그룹내용\\n   * @example -\\n   */\\n  newGroup(x, y, html) {\\n    let group = document.createElement(\\\"div\\\");\\n    group.className = \\\"group-container\\\";\\n    group.style.left = x + \\\"px\\\";\\n    group.style.top = y + \\\"px\\\";\\n    group.setAttribute(\\\"group\\\", Jinja.global.uuid());\\n    group.innerHTML = `\\n<div class=\\\"title\\\">newGroup</div>\\n<div class=\\\"group-body\\\">${html}</div>\\n<div class=\\\"del\\\" delete-all></div>\\n<div class=\\\"node-collapse\\\"></div>\\n`;\\n\\n    this.instance.getContainer().appendChild(group);\\n    group.querySelectorAll('.list-group-item').forEach(el=>{\\n      el.classList.remove('list-group-item');\\n    })\\n    this.initGroup(group);\\n  }\\n\\n  /**\\n   * @desc 신규 이미지그룹을 추가한다.\\n   * @param {Number} - x좌표\\n   * @param {Number} - y좌표\\n   * @param {String} - 이미지주소\\n   * @example -\\n   */\\n  newImage(x, y, image) {\\n    let group = document.createElement(\\\"div\\\");\\n    group.setAttribute(\\\"class\\\", \\\"group-container group-image\\\");\\n    group.style.left = x + \\\"px\\\";\\n    group.style.top = y + \\\"px\\\";\\n    group.setAttribute(\\\"group\\\", Jinja.global.uuid());\\n    group.innerHTML = `\\n<div class=\\\"title\\\">newGroup</div>\\n<div class=\\\"group-body\\\" style=\\\"background-image: url(${image});\\\"></div>\\n<div class=\\\"del\\\" delete-all></div>\\n<div class=\\\"node-collapse\\\"></div>\\n`;\\n\\n\\n    this.instance.getContainer().appendChild(group);\\n    this.initGroup(group);\\n  }\\n\\n  /**\\n   * @desc 신규 테이블을 추가한다.(Ul, LI 태그)\\n   * @param {Number} - x좌표\\n   * @param {Number} - y좌표\\n   * @param {Object} - 옵션\\n   * @return {Element} - 테이블을 담은 DIV\\n   * @example -\\n   */\\n  newTable(x, y, options) {\\n    let nodeEl = document.createElement('div');\\n    let cont = document.createElement('div');\\n\\n    cont.classList.add('table-wrap');\\n\\n    nodeEl.appendChild(cont);\\n    nodeEl.id = Jinja.global.uuid();\\n\\n    nodeEl.className = 'w';\\n    nodeEl.setAttribute('jj-id', nodeEl.id);\\n    nodeEl.setAttribute('objtype', 'table');\\n    nodeEl.dataset.objdata = Jinja.global.string(options);\\n    nodeEl.style.left = x + 'px';\\n    nodeEl.style.top = y + 'px';\\n\\n    let html = `<h4>${options.table}</h4><ul class=\\\"list-group\\\">`;\\n\\n    this.dbo.setWorkspace(options.jbatis);\\n    this.dbo.getColumns(options.table).then(result => {\\n      result.rows.forEach(row => {\\n        html += `<li class=\\\"list-group-item\\\">${row.COLUMN_NAME}</li>`;\\n      });\\n\\n      html += `</ul>`;\\n\\n      cont.innerHTML = html + '<div class=\\\"ep\\\"></div>';\\n\\n      this.instance.getContainer().appendChild(nodeEl);\\n\\n      new JJSortable(nodeEl.querySelector('.list-group'), {});\\n\\n      this.initNode(nodeEl);\\n    });\\n\\n    return nodeEl;\\n  }\\n\\n  /**\\n   * @desc - 지정한 노드를 초기화한다.\\n   * @param {Element} - 노드\\n   * @return {} -\\n   * @example -\\n   */\\n  initNode(el) {\\n    if(this.options.mode == \\\"studio\\\"){\\n      this.instance.draggable(el,{\\n        filter:\\\".resizer, .list-group *,.resizer, .resizer * \\\",\\n        grid:[5,5]\\n      });\\n      this._setMarker(el);\\n    } else {\\n      this._setMarker(el);  \\n    }\\t\\t\\n    return el;\\n  }\\n\\n  /**\\n   * @desc 지정한 그룹을 초기화한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  initGroup(el) {\\n    if(this.options.mode == \\\"studio\\\"){\\n      this.instance.addGroup({\\n        \\\"el\\\":el,\\n        \\\"id\\\":el.getAttribute(\\\"group\\\"),\\n        \\\"orphan\\\":true,\\n        \\\"droppable\\\":true,\\n        \\\"dragOptions\\\": {\\n          \\\"filter\\\":\\\".resizer, .list-group *,.resizer, .resizer * \\\"\\n        },\\n        \\\"endpoint\\\":[\\\"Dot\\\", { radius:3 }]\\n      });\\n\\n      el.querySelectorAll(\\\".w\\\").forEach(nodeEl=>{\\n        this.initNode(nodeEl);\\n\\n        this.instance.addToGroup(el.getAttribute(\\\"group\\\"), nodeEl);\\n      })\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 이미지를 초기화한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  initImage(el) {\\n    if (this.options.mode == 'studio') {\\n      this.instance.addGroup({\\n        el: el,\\n        id: el.getAttribute('group'),\\n        orphan: true,\\n        droppable: true,\\n        endpoint: ['Dot', { radius: 3 }]\\n      });\\n\\n      el.querySelectorAll('.w').forEach(nodeEl => {\\n        this.initNode(nodeEl);\\n        this.instance.addToGroup(el.getAttribute('group'), nodeEl);\\n      });\\n    }\\n  }\\n\\n  /**\\n   * @desc 내부 요소들을 초기화한다.\\n   * @example -\\n   */\\n  innerItemInit() { \\n    this.querySelectorAll('[group]').forEach(el => this.initGroup(el));\\n    this.querySelectorAll('.w').forEach(el => {\\n      if (!el.matches('[group] .w')) {\\n        this.initNode(el);\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 이미지파일목록을 컴포넌트에 추가한다.\\n   * @param {Array} - 이미지파일정보목록\\n   * @example -\\n   */\\n  attchImages(files) {\\n    for (let i = 0; i < files.length; i++) {\\n      let row = {\\n        NAME: files[i].name,\\n        SIZE: files[i].size,\\n        TYPE: files[i].type,\\n        URI: '',\\n        FILEOBJ: files[i]\\n      };\\n\\n      let lens = this.options.data.images.push(row);\\n      let reader = new FileReader();\\n\\n      reader.addEventListener('load', readEvent => {\\n        this.options.data.images[lens - 1].URI = readEvent.target.result;\\n      });\\n\\n      reader.readAsDataURL(files[i]);\\n    }\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 삭제한다.\\n   * @param {Boolean} - 삭제유무\\n   * @example -\\n   */\\n  clear(isConfirm) {\\n    if (isConfirm) {\\n      this._clear();\\n    } else {\\n      Jinja.confirm\\n        .delete('Diagram All Clear ?')\\n        .then(() => this._clear())\\n        .catch(() => {});\\n    }\\n  }\\n\\n  /**\\n   * @desc 엘리먼트의 그룹, 노드, 연결정보를 JSON 오브젝트로 반환한다.\\n   * @return {Object} - 엘리먼트정보\\n   * @example -\\n   */\\n  toJSON() {\\n    let groups = [];\\n\\n    this.querySelectorAll('[group]').forEach(el => {\\n      let g = {\\n        group: el.getAttribute('group'),\\n        style: el.getAttribute('style'),\\n        html: el.innerHTML\\n      };\\n\\n      if (el.classList.contains('group-image')) {\\n        g.bodystyle = el.querySelector('.group-body').getAttribute('style');\\n      }\\n\\n      groups.push(g);\\n    });\\n\\n    let nodes = [];\\n\\n    this.querySelectorAll('.w').forEach(el => {\\n      if (!el.matches('[group] .w')) {\\n        let node = {\\n          wid: el.getAttribute('jj-id'),\\n          style: el.getAttribute('style'),\\n          html: el.innerHTML,\\n          object: {\\n            type: el.getAttribute('objtype'),\\n            data: el.dataset.objdata\\n          }\\n        };\\n\\n        nodes.push(node);\\n      }\\n    });\\n\\n    let connectors = [];\\n\\n    this.instance.getConnections().forEach(conn => {\\n      connectors.push({\\n        source: conn.source.getAttribute('jj-id'),\\n        target: conn.target.getAttribute('jj-id')\\n      });\\n    });\\n\\n    return {\\n      groups: groups,\\n      nodes: nodes,\\n      connectors: connectors\\n    };\\n  }\\n\\n  /**\\n   * @desc 지정한 JSON 데이터를 엘리먼트의 그룹, 노드, 연결정보로 셋팅한다.\\n   * @param {Object} - 엘리먼트정보\\n   * @example -\\n   */\\n  fromJSON(jsonData) {\\n    this.requirePromise.then(() => {\\n      this._fromJSON(jsonData);\\n    });\\n  }\\n}\\n\\ncustomElements.define('jj-diagram', JJDiagram);\\n/* ==JJErdDiagram.640.class================ */\\nclass JJErdDiagram extends JJElement {\\n\\n  /**\\n   * https://docs.jsplumbtoolkit.com/community/current/index.html\\n   * https://jsplumbtoolkit.com/community\\n   */\\n  static get observedAttributes() {\\n    return [\\\"\\\"];\\n  }\\t  \\n\\n  _defaultOption(){\\n    \\n    this.dao = new JJBatisDBA();\\n\\n    return {\\n      \\\"require\\\":[\\\"jsplumb.2.12.5\\\"],\\n      \\\"mode\\\": \\\"studio\\\"\\n    }\\n  }\\n\\n  _render(){\\n    this.$empty();\\n\\n    if(this.options.mode == \\\"studio\\\"){\\n      this.setAttribute(\\\"tabindex\\\", -1);\\n      this.classList.add(\\\"hmi-editor\\\");\\n      this.sizeBox = document.createElement('jj-resize-box');\\n      this.sizeBox.hidden = true;\\n      this.appendChild(this.sizeBox);\\n      this.setAttribute(\\\"tabindex\\\", -1); \\n    }    \\n\\n    this.requirePromise.then(()=>{\\n      jsPlumb.ready(()=>{\\n        this.instance = jsPlumb.getInstance({\\n          Container: this,\\n          Endpoint: [\\\"Dot\\\", {radius: 5}],\\n          Connector:\\\"StateMachine\\\",\\n          HoverPaintStyle: {stroke: \\\"#1e8151\\\", strokeWidth: 5 },\\n          ConnectionOverlays: [\\n            [ \\\"Arrow\\\", {\\n              location: 1,\\n              id: \\\"arrow\\\",\\n              length: 14,\\n              foldback: 0.8\\n            } ],\\n            //[ \\\"Label\\\", { label: \\\"AppLink\\\", id: \\\"label\\\", cssClass: \\\"aLabel\\\" }]\\n          ]\\n        });\\n\\n        this.instance.registerConnectionType(\\\"basic\\\", { anchor:\\\"Continuous\\\", connector:\\\"StateMachine\\\" });\\n\\n        if(this.options.mode == \\\"studio\\\"){\\n          this.instance.bind(\\\"click\\\", c=>{\\n            this.selectNode(c);\\n          });\\n\\t\\t\\t\\t\\t// 컨넥션연결을 위한 드래그 시작시\\n          this.instance.bind(\\\"beforeDrag\\\", info=>{\\n            this.sizeBox.hidden = true;\\n          });   \\n\\t\\t\\t\\t\\t// 컨넥션 연결시 종료시\\n          this.instance.bind(\\\"connection\\\", info=>{\\n            //info.connection.getOverlay(\\\"label\\\").setLabel(info.connection.id);\\n          });   \\n          this.instance.on(this, \\\"click\\\", \\\".node-collapse\\\", (e)=>{\\n            var g = e.target.parentNode.getAttribute(\\\"group\\\"), \\n                collapsed =  this.instance.hasClass(e.target.parentNode, \\\"collapsed\\\");\\n\\n            this.instance[collapsed ? \\\"removeClass\\\" : \\\"addClass\\\"](e.target.parentNode, \\\"collapsed\\\");\\n            this.instance[collapsed ? \\\"expandGroup\\\" : \\\"collapseGroup\\\"](g);\\n          });\\n        }\\n        //this.innerItemInit();\\n      });\\n\\n    })    \\n\\n  }\\n\\n  _setEvent(){\\n    // 개발관련이벤트는 모드를 파악하여 처리함\\n    if(this.options.mode != \\\"studio\\\") return;\\n\\n    this.addEventListener(\\\"paste\\\", e=>{\\n      e.preventDefault();\\n      if(e.clipboardData.files.length) \\t{\\n\\n        Jinja.ajax.imageUpload(e.clipboardData.files)\\n          .then(result=>{\\n          let file = result.rows[0];\\n          this.newImage(e.offsetX, e.offsetY, file.path+file.fileId);        \\n        });\\n      }\\n    });    \\n\\n    this.addEventListener(\\\"drop\\\", e=>{\\n      debugger;\\n      e.preventDefault();\\n\\n      let html = e.dataTransfer.getData(\\\"text/html\\\");\\n      let diagramType = e.dataTransfer.getData(\\\"diagram-type\\\");\\n      let dropObject = e.dataTransfer.getData(\\\"objtype/application\\\");\\n      let dropData = e.dataTransfer.getData(\\\"objdata/application\\\");\\n\\n      if (diagramType==\\\"group\\\"){\\n        this.newGroup(e.offsetX, e.offsetY, html);  \\n      } else if(diagramType==\\\"node\\\") {\\n        this.newNode(e.offsetX, e.offsetY, html);  \\n      } else if(dropObject==\\\"table\\\") {\\n        dropData = Jinja.global.json(dropData);\\n        this.newTable(e.offsetX, e.offsetY, dropData);\\n      } else {\\n        this.newNode(e.offsetX, e.offsetY, html);  \\n      }\\n    })\\n\\n    this.addEventListener(\\\"dragover\\\", e=>{\\n      e.preventDefault();\\n    });\\n\\n    this.addEventListener(\\\"click\\\", e=>{\\n      e.preventDefault();\\n      if(e.target.matches(`.w, .w *`)){\\n        this.selectNode(e.target.$closest(`.w`));\\n      } else if(e.target.matches(`.group-container, .group-container *`)){\\n        this.selectNode(e.target.$closest(`.group-container`));\\n      } else if(Object.is(this, e.target)) {\\n        // 빈공간을 선택하면 취소처리함\\n        this.clearSelectNode();\\n      }\\n    });\\n\\n    this.addEventListener(\\\"keydown\\\", e=>{\\n      let keyMap =  Jinja.global.getEventKeyMap(e);\\n\\n      if ([\\\"Delete\\\"].includes(keyMap)){\\n        e.preventDefault();\\n        e.stopPropagation();\\n      }\\n      switch(keyMap){\\n        case \\\"Delete\\\":\\n          this.deleteNode(e);\\n          break;\\n\\n        default:\\n          break;\\n\\n      }      \\n    });\\n\\n    this.addEventListener(\\\"resize\\\", e=>{\\n      e.preventDefault();\\n      e.stopPropagation();\\n      this.instance.repaintEverything();\\n      \\n    });\\n    \\n    //     this.addEventListener(\\\"mousedown\\\", e=>{\\n    //       if(e.button === 0 && !e.target.matches(`jj-resize-box *`)){\\n    //        this.sizeBox.hidden = true;\\n    //       }\\n    //     });\\n\\n  }\\n\\n\\n\\n  clearSelectNode(){\\n    if (this.selectEl){\\n      if (this.selectEl.canvas){\\n        this.selectEl.canvas.classList.remove(\\\"selected\\\");\\n      } \\n      else if(this.selectEl.classList) {\\n        this.selectEl.classList.remove(\\\"selected\\\");\\n      }\\n\\n      this.selectEl = null;\\n\\n    }\\n\\n    this.sizeBox.hidden = true;\\n  }\\n\\n  selectNode(obj, e){\\n    this.clearSelectNode();\\n\\n    this.selectEl = obj;\\n\\n    if (obj.canvas){\\n      obj.canvas.classList.add(\\\"selected\\\");\\n    } \\n    else if(obj.classList) {\\n      obj.classList.add(\\\"selected\\\");\\n    }\\n\\n    this.sizeBox.lockElement(this.selectEl);\\n    this.sizeBox.hidden = false;\\n\\n    //this.selectEl.focus();\\n\\n    this.selectEl.dispatchEvent(new CustomEvent('selected', {\\n      \\\"detail\\\": {\\n        \\\"editor\\\": this,\\n        \\\"node\\\": this.selectEl.firstElementChild\\n      },      \\n      bubbles: true\\n    }));      \\n\\n\\n  }\\n\\n  deleteNode(obj){\\n    if(!this.selectEl){\\n      alert(\\\"선택된 항목이 없습니다\\\");\\n      return;\\n    }\\n\\n    Jinja.confirm.delete(\\\"Connection delete ?\\\")\\n      .then(()=>{\\n\\n      if (this.selectEl.canvas){\\n        this.instance.deleteConnection(this.selectEl);\\n      } else if(this.selectEl.matches('.group-container')) {\\n        // .w에 연결된 Connection을 먼저 제거한다\\n        var g = this.selectEl.getAttribute(\\\"group\\\");\\n        this.instance.removeGroup(g, true);\\n\\n      } else if(this.selectEl.matches('.w')) {\\n        // .w에 연결된 Connection을 먼저 제거한다\\n        this.instance.getConnections().forEach(conn=>{\\n          if (Object.is(this.selectEl,conn.source) || Object.is(this.selectEl, conn.target)){\\n            this.instance.deleteConnection(conn);\\n          }\\n        });\\n        this.selectEl.remove();\\n      }\\n      this.clearSelectNode()\\n    })\\n      .catch(()=>{});\\n\\n  }\\n\\n  print(){\\n    Jinja.global.capture(this)\\n      .then(img =>{\\n      JJHee.open(\\\"getCapture.610.uc\\\",{\\n        \\\"search\\\":{\\n          \\\"image\\\": img\\n        },  \\n        \\\"position\\\": {\\n          \\\"width\\\": \\\"80%\\\"\\n        },\\n        isModal: true,\\n        isMoveable: true\\n      })\\n        .then(result=>{\\n        //hee.text.value = result.text;\\n      })\\n        .catch(ex=>{});\\n    })\\n  }\\n\\n  newNode(x, y, html) {\\n    let d ;\\n    let id = Jinja.global.uuid(); //jsPlumbUtil.uuid();\\n    let ep = document.createElement(\\\"div\\\");\\n    ep.classList.add('ep');\\n\\n    let _warp =document.createElement(\\\"div\\\");\\n    _warp.innerHTML = html;\\n    \\n//     if(_warp.childElementCount == 1){\\n//       d = _warp.childNodes[0]\\n//     } else {\\n//     \\td = document.createElement(\\\"div\\\");  \\n// \\t    //d.innerHTML = (html || id.substring(0, 7)) + \\\"<div class=\\\\\\\"ep\\\\\\\"></div>\\\";\\n//     }\\n    \\n    d = document.createElement(\\\"div\\\");  \\n \\t  d.innerHTML = html;\\n    d.appendChild(ep);\\n    \\n    d.classList.add(\\\"w\\\");\\n    d.setAttribute(\\\"jj-id\\\", id);\\n    d.style.left = x + \\\"px\\\";\\n    d.style.top = y + \\\"px\\\";\\n    this.instance.getContainer().appendChild(d);\\n    d.querySelectorAll('.list-group-item').forEach(el=>{\\n      el.classList.remove('list-group-item');\\n    })\\n    this.initNode(d);\\n    return d;\\n  }  \\n\\n\\n\\n  newGroup(x,y,html){\\n    let group = document.createElement(\\\"div\\\");\\n    group.className = \\\"group-container\\\";\\n    group.style.left = x + \\\"px\\\";\\n    group.style.top = y + \\\"px\\\";\\n    group.setAttribute(\\\"group\\\", Jinja.global.uuid());\\n    group.innerHTML = `\\n<div class=\\\"title\\\">newGroup</div>\\n<div class=\\\"group-body\\\">${html}</div>\\n<div class=\\\"del\\\" delete-all></div>\\n<div class=\\\"node-collapse\\\"></div>\\n`;\\n\\n    this.instance.getContainer().appendChild(group);\\n    group.querySelectorAll('.list-group-item').forEach(el=>{\\n      el.classList.remove('list-group-item');\\n    })\\n    this.initGroup(group);\\n  }\\n\\n  newImage(x,y,image){\\n    let group = document.createElement(\\\"div\\\");\\n    group.setAttribute(\\\"class\\\", \\\"group-container group-image\\\");\\n    group.style.left = x + \\\"px\\\";\\n    group.style.top = y + \\\"px\\\";\\n    group.setAttribute(\\\"group\\\", Jinja.global.uuid());\\n    group.innerHTML = `\\n<div class=\\\"title\\\">newGroup</div>\\n<div class=\\\"group-body\\\" style=\\\"background-image: url(${image});\\\"></div>\\n<div class=\\\"del\\\" delete-all></div>\\n<div class=\\\"node-collapse\\\"></div>\\n`;\\n\\n\\n    this.instance.getContainer().appendChild(group);\\n    this.initGroup(group);\\n  }\\n\\n\\n  XXnewTable(x, y, options){\\n    var nodeEl = document.createElement(\\\"div\\\");\\n    var cont = document.createElement(\\\"div\\\");\\n    nodeEl.appendChild(cont);\\n    nodeEl.id = Jinja.global.uuid();\\n\\n    nodeEl.className = \\\"w\\\";\\n    nodeEl.setAttribute(\\\"jj-id\\\", nodeEl.id);\\n    nodeEl.setAttribute(\\\"objtype\\\", \\\"table\\\");\\n    nodeEl.dataset.objdata = Jinja.global.string(options);\\n    nodeEl.style.left = x + \\\"px\\\";\\n    nodeEl.style.top = y + \\\"px\\\";\\n\\n    let html = `<table class=\\\"table\\\"><thead><tr><th><label>${options.table}</label></th></tr></thead><tbody>`;\\n    this.dbo.setWorkspace(options.jbatis);\\n    this.dbo.getColumns(options.table)\\n      .then(result=>{\\n      result.rows.forEach(row=>{\\n        html += `<tr><td>${row.COLUMN_NAME}</td></tr>`;\\t\\n      });\\n      html += `</tbody></table>`;\\n      cont.innerHTML = (html+ \\\"<div class=\\\\\\\"ep\\\\\\\"></div>\\\");\\n      this.instance.getContainer().appendChild(nodeEl);\\n\\n      //       new JJRresizable(nodeEl, {\\n      //         \\\"handles\\\":\\\"n,e,s,w,ne,se,sw,nw\\\",\\n      // //         \\\"onResizestart\\\": (e)=>{\\n      // //         },\\n      //         \\\"onResize\\\": (e)=>{\\n      //           this.instance.revalidate(nodeEl);\\n      //         }\\n      //       }); \\n      new JJSortable([nodeEl.querySelector(\\\"tbody\\\")],{\\n        \\\"handle\\\": \\\"td\\\"\\n      }); \\n\\n      this.initNode(nodeEl);\\n    });\\n    return nodeEl;\\n  }  \\n\\n  newTable(x, y, options){\\n    debugger;\\n    var nodeEl = document.createElement(\\\"div\\\");\\n    var cont = document.createElement(\\\"div\\\");\\n    cont.classList.add(\\\"table-wrap\\\")\\n    nodeEl.appendChild(cont);\\n    nodeEl.id = Jinja.global.uuid();\\n\\n    nodeEl.className = \\\"w\\\";\\n    nodeEl.setAttribute(\\\"jj-id\\\", nodeEl.id);\\n    nodeEl.setAttribute(\\\"objtype\\\", \\\"table\\\");\\n    nodeEl.dataset.objdata = Jinja.global.string(options);\\n    nodeEl.style.left = x + \\\"px\\\";\\n    nodeEl.style.top = y + \\\"px\\\";\\n\\n    let html = `<h4>${options.table}</h4>\\n<ul class=\\\"list-group\\\">\\n`;\\n    this.dao.setWorkspace(options.jbatis);\\n    this.dao.getColumns(options.table)\\n      .then(result=>{\\n      result.rows.forEach(row=>{\\n        html += `<li class=\\\"list-group-item\\\">${row.COLUMN_NAME}</li>`;\\t\\n      });\\n      html += `</ul>`;\\n\\n      cont.innerHTML = (html+ \\\"<div class=\\\\\\\"ep\\\\\\\"></div>\\\");\\n      this.instance.getContainer().appendChild(nodeEl);\\n\\n      //       new JJRresizable(nodeEl, {\\n      //         \\\"handles\\\":\\\"n,e,s,w,ne,se,sw,nw\\\",\\n      // //         \\\"onResizestart\\\": (e)=>{\\n      // //         },\\n      //         \\\"onResize\\\": (e)=>{\\n      //           this.instance.revalidate(nodeEl);\\n      //         }\\n      //       }); \\n\\n      new JJSortable(nodeEl.querySelector(\\\".list-group\\\"),{\\n      }); \\n\\n      this.initNode(nodeEl);\\n    });\\n    return nodeEl;\\n  }  \\n\\n\\n  initNode(el) {\\n\\n    if(this.options.mode == \\\"studio\\\"){\\n      this.instance.draggable(el,{\\n        filter:\\\".resizer, .list-group *,.resizer, .resizer * \\\",\\n        grid:[5,5]\\n      });\\n      this._setMarker(el);\\n    } else {\\n      this._setMarker(el);  \\n    }\\t\\t\\n\\n\\n\\n    return el;\\n  }\\n\\n  _setMarker(el){\\n    this.instance.makeSource(el, {\\n      filter: \\\".ep\\\",\\n      anchor: \\\"Continuous\\\",\\n      connectorStyle: { stroke: \\\"#5c96bc\\\", strokeWidth: 2, outlineStroke: \\\"transparent\\\", outlineWidth: 4 },\\n      connectionType:\\\"basic\\\",\\n      extract:{\\n        \\\"action\\\":\\\"the-action\\\"\\n      },\\n      maxConnections: 12,\\n      onMaxConnections: (info, e)=>{\\n        alert(\\\"Maximum connections (\\\" + info.maxConnections + \\\") reached\\\");\\n      }\\n    });\\n\\n    this.instance.makeTarget(el, {\\n      dropOptions: { hoverClass: \\\"dragHover\\\" },\\n      anchor: \\\"Continuous\\\",\\n      allowLoopback: true\\n    });\\n\\n  }\\n\\n  initGroup(el) {\\n    if(this.options.mode == \\\"studio\\\"){\\n      this.instance.addGroup({\\n        \\\"el\\\":el,\\n        \\\"id\\\":el.getAttribute(\\\"group\\\"),\\n        \\\"orphan\\\":true,\\n        \\\"droppable\\\":true,\\n        \\\"dragOptions\\\": {\\n          \\\"filter\\\":\\\".resizer, .list-group *,.resizer, .resizer * \\\"\\n        },\\n        \\\"endpoint\\\":[\\\"Dot\\\", { radius:3 }]\\n      });\\n\\n      el.querySelectorAll(\\\".w\\\").forEach(nodeEl=>{\\n        this.initNode(nodeEl);\\n\\n        this.instance.addToGroup(el.getAttribute(\\\"group\\\"), nodeEl);\\n      })\\n\\n    }\\n    //     new JJRresizable(el, {\\n    //       \\\"handles\\\": \\\"n,e,s,w,ne,se,sw,nw,allClose\\\"    \\n    //     })\\n\\n  }\\n\\n  initImage(el) {\\n    if(this.options.mode == \\\"studio\\\"){\\n      this.instance.addGroup({\\n        \\\"el\\\":el,\\n        \\\"id\\\":el.getAttribute(\\\"group\\\"),\\n        \\\"orphan\\\":true,\\n        \\\"droppable\\\":true,\\n        \\\"endpoint\\\":[\\\"Dot\\\", { radius:3 }]\\n      });\\n      el.querySelectorAll(\\\".w\\\").forEach(nodeEl=>{\\n        this.initNode(nodeEl);\\n        this.instance.addToGroup(el.getAttribute(\\\"group\\\"), nodeEl);\\n      })\\n\\n    }\\n    //     new JJRresizable(el, {\\n    //       \\\"handles\\\": \\\"n,e,s,w,ne,se,sw,nw,allClose\\\"    \\n    //     })\\n\\n\\n  }\\n\\n  innerItemInit(){\\n\\n    this.querySelectorAll(\\\"[group]\\\").forEach(el=>this.initGroup(el));\\n    this.querySelectorAll(\\\".w\\\").forEach(el=>{\\n      if(!el.matches('[group] .w')){\\n        this.initNode(el)\\n      }\\n    })\\n  }\\n\\n  attchImages(files){\\n    for (var i = 0; i < files.length; i++) {\\n      let row = {\\n        \\\"NAME\\\": files[i].name,\\n        \\\"SIZE\\\": files[i].size,\\n        \\\"TYPE\\\": files[i].type,\\n        \\\"URI\\\":\\\"\\\",\\n        \\\"FILEOBJ\\\": files[i]\\n      };\\n\\n      // react로 파일표시됨\\t\\n      let lens = this.options.data.images.push(row);\\n      var reader = new FileReader();\\n      reader.addEventListener(\\\"load\\\", readEvent=>{\\n        this.options.data.images[lens-1].URI = readEvent.target.result;\\n      });\\n      reader.readAsDataURL(files[i]);        \\n    }\\n\\n  }  \\n\\n  clear(isConfirm){\\n    if (isConfirm){\\n      this._clear();\\n    } else {\\n      Jinja.confirm.delete(\\\"Diagram All Clear ?\\\")\\n        .then(()=>this._clear())\\n        .catch(()=>{});\\n    }\\t\\n  }\\n  _clear(){\\n    /**\\n     * 그룹요소를 먼저 제거하고 다음요소를 제거해야 한다\\n     */\\n    this.querySelectorAll(\\\"[group]\\\").forEach(el=>{\\n      var g = el.getAttribute(\\\"group\\\");\\n      this.instance.removeGroup(g, true);\\n    });\\n\\n    //this.instance.clear();\\n    this.instance.deleteEveryConnection();\\n    this.querySelectorAll(\\\".w\\\").forEach(el=>el.remove());\\n\\n  }\\n\\n\\n  toJSON(){\\n    let groups = [];\\n    this.querySelectorAll(\\\"[group]\\\").forEach(el=>{\\n      let g = {\\n        \\\"group\\\": el.getAttribute(\\\"group\\\"),\\n        \\\"style\\\": el.getAttribute(\\\"style\\\"),\\n\\n        \\\"html\\\":  el.innerHTML\\n      }\\n\\n      // 그룹이미지이면 배경이미지를 보관한다\\n      if(el.classList.contains(\\\"group-image\\\")){\\n        g.bodystyle = el.querySelector(\\\".group-body\\\").getAttribute(\\\"style\\\");\\n      }\\n\\n      groups.push(g);\\n    });\\n\\n    let nodes = [];\\n    this.querySelectorAll(\\\".w\\\").forEach(el=>{\\n      if(!el.matches('[group] .w')){\\n        let node = {\\n          \\\"wid\\\": el.getAttribute(\\\"jj-id\\\"),\\n          \\\"style\\\": el.getAttribute(\\\"style\\\"),\\n          \\\"html\\\":  el.innerHTML,\\n          \\\"object\\\": {\\n            \\\"type\\\": el.getAttribute(\\\"objtype\\\"),\\n            \\\"data\\\": el.dataset.objdata\\n          }\\n        }\\n        nodes.push(node);\\n      }\\n    });    \\n\\n    let connectors = [];\\n    this.instance.getConnections().forEach(conn=>{\\n      connectors.push({\\n        \\\"source\\\": conn.source.getAttribute(\\\"jj-id\\\"),\\n        \\\"target\\\": conn.target.getAttribute(\\\"jj-id\\\")\\n      })\\n    });\\n\\n    return {\\n      \\\"groups\\\": groups,\\n      \\\"nodes\\\": nodes,\\n      \\\"connectors\\\": connectors\\n    }\\n  }\\n\\n  fromJSON(jsonData){\\n    this.requirePromise.then(()=>{\\n      this._fromJSON(jsonData);\\n    })\\n\\n  }  \\n  _fromJSON(jsonData){\\n\\n    this.clear(true);\\n\\n    let defaultBody = {\\n      \\\"groups\\\": [],\\n      \\\"nodes\\\": [],\\n      \\\"connectors\\\": []\\n    };\\n\\n    let body =  Object.assign(defaultBody, jsonData);\\n    body.groups.forEach(g=>{\\n      let groupEl = document.createElement(\\\"div\\\");\\n      groupEl.className = \\\"group-container\\\";\\n      groupEl.setAttribute(\\\"group\\\", g.group);\\n      groupEl.setAttribute(\\\"style\\\", g.style);\\n      groupEl.innerHTML = g.html;\\n\\n      if(g.bodystyle){\\n        groupEl.classList.add(\\\"group-image\\\");\\n      }\\n\\n\\n      this.instance.getContainer().appendChild(groupEl);\\n      this.initGroup(groupEl);      \\n    })\\n\\n    body.nodes.forEach(node=>{\\n      var nodeEl = document.createElement(\\\"div\\\");\\n      nodeEl.className = \\\"w\\\";\\n      nodeEl.setAttribute(\\\"jj-id\\\", node.wid);\\n      nodeEl.setAttribute(\\\"style\\\", node.style);\\n      nodeEl.innerHTML = node.html;\\n      this.instance.getContainer().appendChild(nodeEl);\\n      this.initNode(nodeEl);\\n\\n      if(node.object){\\n        nodeEl.setAttribute(\\\"objtype\\\", node.object.type);\\n        nodeEl.dataset.objdata = Jinja.global.string(node.object.data)\\n      }\\n\\n    })\\n\\n    body.connectors.forEach(conn=>{\\n      this.instance.connect({ \\n        source: this.querySelector(`[jj-id=\\\"${conn.source}\\\"]`), \\n        target: this.querySelector(`[jj-id=\\\"${conn.target}\\\"]`), type:\\\"basic\\\" });\\n    });\\n\\n  }\\n\\n}\\n\\ncustomElements.define('jj-erd-diagram', JJErdDiagram);\\t/* ==JJDiv4box.640.class================ */\\n\\n/**\\n * @classdesc - 4분할박스 컴포넌트관리를 위한 클래스\\n */\\nclass JJDiv4Box extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      isTheme: false,\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    this.viewId = Jinja.global.uuid();\\n    this.innerHTML = \\n      `<div class=\\\"toolbar\\\">` +\\n      `<div class=\\\"btn-group\\\">` +\\n      `<button type=\\\"button\\\" class=\\\"btn btn-link btn-sm\\\" data-style=\\\"show22\\\"><i class=\\\"fa fa-th-large\\\" aria-hidden=\\\"true\\\"></i></button>` +\\n      `<button type=\\\"button\\\" class=\\\"btn btn-link btn-sm\\\" data-style=\\\"show31\\\"><i class=\\\"fa fa-caret-square-o-down\\\" aria-hidden=\\\"true\\\"></i></button>` +\\n      `<button type=\\\"button\\\" class=\\\"btn btn-link btn-sm\\\" data-style=\\\"show13\\\"><i class=\\\"fa fa-caret-square-o-up\\\" aria-hidden=\\\"true\\\"></i></button>` +\\n      `<button type=\\\"button\\\" class=\\\"btn btn-link btn-sm\\\" data-style=\\\"showTab\\\"><i class=\\\"fa fa-mobile\\\" aria-hidden=\\\"true\\\"></i></button>` +\\n      `<button type=\\\"button\\\" class=\\\"btn btn-link btn-sm\\\" data-style=\\\"showTabH\\\"><i class=\\\"fa fa-mobile\\\" aria-hidden=\\\"true\\\"></i></button>` +\\n      `<button type=\\\"button\\\" class=\\\"hidden btn btn-link btn-sm\\\" data-style=\\\"showComponent\\\"><i class=\\\"fa fa-columns\\\" aria-hidden=\\\"true\\\"></i></button>` +\\n      `</div>` +\\n      `<div class=\\\"btn-group tabbox pull-right\\\">` +\\n      `<button type=\\\"button\\\" class=\\\"btn btn-link btn-sm\\\" data-tabbox=\\\"box1\\\">html</button>` +\\n      `<button type=\\\"button\\\" class=\\\"btn btn-link btn-sm\\\" data-tabbox=\\\"box3\\\">script</button>` +\\n      `<button type=\\\"button\\\" class=\\\"btn btn-link btn-sm\\\" data-tabbox=\\\"box2\\\">css</button>` +\\n      `</div>` +\\n      `<div class=\\\"btn-group pull-right\\\" hidden>` +\\n      `<button type=\\\"button\\\" class=\\\"btn btn-link btn-sm\\\" jj-command=\\\"setFirePad\\\">setFirePad</button>` +\\n      `<button type=\\\"button\\\" class=\\\"btn btn-link btn-sm\\\" jj-command=\\\"resetFirePad\\\">resetFirePad</button>` +\\n      `</div>` +\\n      `</div>` +\\n      `<div jj-id=\\\"boxwarp\\\" class=\\\"box40-warp\\\">` +\\n      `<div jj-id=\\\"box1\\\" class=\\\"box40 box1\\\">` +\\n      `<jj-code-editor jj-id=\\\"htmlEditor\\\" data-mode=\\\"html\\\" data-theme=\\\"eclipse\\\"></jj-code-editor>` +\\n      `</div>` +\\n      `<div jj-id=\\\"box2\\\" class=\\\"box40 box2\\\">` +\\n      `<jj-code-editor jj-id=\\\"lessEditor\\\" data-mode=\\\"less\\\" data-theme=\\\"eclipse\\\"></jj-code-editor>` +\\n      `</div>` +\\n      `<div jj-id=\\\"box3\\\" class=\\\"box40 box3\\\">` +\\n      `<jj-code-editor jj-id=\\\"scriptEditor\\\"  data-mode=\\\"javascript\\\" data-theme=\\\"eclipse\\\"></jj-code-editor>` +\\n      `</div>` +\\n      `<div jj-id=\\\"box4\\\" class=\\\"box40 box4\\\">` +\\n      `<jj-frame-viewer jj-id=\\\"viewer\\\"></jj-frame-viewer>` +\\n      `</div>` +\\n      `<div jj-id=\\\"dragbarX\\\"  class=\\\"dragbar-x\\\"></div>` +\\n      `<div jj-id=\\\"dragbarX2\\\" class=\\\"dragbar-x2\\\"></div>` +\\n      `<div jj-id=\\\"dragbarY\\\"  class=\\\"dragbar-y\\\"></div>` +\\n      `<div jj-id=\\\"dragbarY2\\\" class=\\\"dragbar-y2\\\"></div>` +\\n      `</div>`;\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.isHtmlChanged = false;\\n\\n    this.addEventListener('changeedit', e => {\\n      if (e.detail.mode == 'html') {\\n        this.isHtmlChanged = true;\\n      }\\n\\n      let uuid = Jinja.global.uuid();\\n      let less = this.lessEditor.value;\\n\\n      Jinja.dom\\n        .lessUUIDcss(less, uuid)\\n        .then(css =>\\n          Jinja.global.string({\\n            uuid: uuid,\\n            html: this.htmlEditor.value,\\n            css: css,\\n            less: less,\\n            script: this.scriptEditor.value,\\n          })\\n        )\\n        .then(content => {\\n          this.viewer.syncLoad(content);\\n        })\\n        .catch(ex => {\\n          console.error(ex);\\n        });\\n    });\\n\\n    this.addEventListener('excute', e => {\\n      this.excute();\\n    });\\n\\n    this.addEventListener('click', e => {\\n      if (e.target.matches(`[data-style], [data-style] *`)) {\\n        let el = e.target.closest('[data-style]');\\n        this.setViewType(el.dataset.style);\\n      }\\n      if(e.target.matches(`[data-tabbox]`)){\\n        let el = e.target.closest(\\\"[data-tabbox]\\\");\\n        this.tabbox(el.dataset.tabbox);\\n      }\\n      \\n    });\\n\\n    this.addEventListener('keydown', e => {\\n      let keyMap = Jinja.global.getEventKeyMap(e);\\n\\n      if (['Ctrl-H', 'Ctrl-L', 'Ctrl-J'].includes(keyMap)) {\\n        e.preventDefault();\\n        e.stopPropagation();\\n      }\\n      switch (keyMap) {\\n        case 'Ctrl-H':\\n          this.htmlEditor.focus();\\n          break;\\n        case 'Ctrl-L':\\n          this.lessEditor.focus();\\n          break;\\n        case 'Ctrl-J':\\n          this.scriptEditor.focus();\\n          break;\\n      }\\n    });\\n\\n    this.scriptEditor.onFocus(e => {\\n      // html 변경이력이 없으면 생략함\\n      if (!this.isHtmlChanged) {\\n        return;\\n      }\\n      this.isHtmlChanged = false;\\n\\n      try{\\n        this.scriptEditor.updateFormHint(this.htmlEditor.value);\\n      } catch(ex){\\n        alert(ex);\\n      }\\n    });\\n    \\n    Jinja.event.add(\\\"Framwview.formError\\\", \\\"JJDev4Box:\\\"+this.viewId,  e=>{\\n      if (e.detail.viewId == this.viewId && e.detail.data.line != undefined  ){\\n      \\t  this.scriptEditor.gotoLine(e.detail.data.line);\\n      }\\n    });\\n    \\n\\n    if (Jinja.isMobile) {\\n      this.setViewType('showTab');\\n    } else {\\n      this.setViewType(Jinja.store.getMymemory(\\\"JJDiv4Box-type\\\", this.dataset.mode||\\\"show22\\\"));     \\n    }\\n  }\\n\\n  /**\\n   * @desc 객체의 종료시에 설정된 이벤트를 제거합니다.\\n   * @example -\\n   */\\n\\t_clearEvent() {\\n    Jinja.event.remove(\\\"Framwview.formError\\\", \\\"JJDev4Box:\\\"+this.viewId);\\n  }  \\n  \\n  /**\\n   * @memberof JJDiv4Box\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n    let uuid = Jinja.global.uuid();\\n\\n    return Jinja.global.string({\\n      uuid: uuid,\\n      html: this.htmlEditor.value,\\n      less: this.lessEditor.value,\\n      script: this.scriptEditor.value\\n    });\\n  }\\n\\n  /**\\n   * @memberof JJDiv4Box\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(val) {\\n    val = Jinja.global.json(val);\\n\\n    this.htmlEditor.value = val.html;\\n    this.lessEditor.value = val.less || val.css;\\n    this.scriptEditor.value = val.script;\\n  }\\n\\n  init(){\\n    if(Jinja.isMobile){\\n      this.setViewType(\\\"showTab\\\");\\n    } else {\\n      //this.setViewType(this.dataset.mode||\\\"show22\\\");  \\n      this.setViewType(Jinja.store.getMymemory(\\\"JJDiv4Box-type\\\", this.dataset.mode||\\\"show22\\\"));     \\n    }\\n  }\\n  \\n  /**\\n   * @desc 지정된 Element의 위치정보를 설정한다.\\n   * @example -\\n   */\\n  setPos(el, top, left, width, height) {\\n    el.style.top = top + '%';\\n    el.style.left = left + '%';\\n    el.style.width = width + '%';\\n    el.style.height = height + '%';\\n  }\\n\\n  /**\\n   * @desc 드래그바를 초기화한다.\\n   * @example -\\n   */\\n  dragInit() {\\n    this.box1.style.display = 'block';\\n    this.box2.style.display = 'block';\\n    this.box3.style.display = 'block';\\n\\n    this.box1.style.visibility = 'visible';\\n    this.box2.style.visibility = 'visible';\\n    this.box3.style.visibility = 'visible';\\n\\n    if (this.dragX) {\\n      this.dragbarX.style.display = 'none';\\n      this.dragX.destroy();\\n    }\\n\\n    if (this.dragX2) {\\n      this.dragbarX2.style.display = 'none';\\n      this.dragX2.destroy();\\n    }\\n\\n    if (this.dragY) {\\n      this.dragbarY.style.display = 'none';\\n      this.dragY.destroy();\\n    }\\n\\n    if (this.dragY2) {\\n      this.dragbarY2.style.display = 'none';\\n      this.dragY2.destroy();\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 유형에 따라 컴포넌트의 화면구성을 설정한다.\\n   * @param {String} - 유형\\n   * @example -\\n   */\\n  setViewType(type) {\\n    \\n    this.setAttribute('view-type', type);\\n\\t\\tJinja.store.setMymemory(\\\"JJDiv4Box-type\\\", type);\\n    \\n    switch (type) {\\n      case 'showComponentMode': {\\n        this.showComponent();\\n\\n        break;\\n      }\\n      case 'show31': {\\n        this.show31();\\n\\n        break;\\n      }\\n      case 'show13': {\\n        this.show13();\\n\\n        break;\\n      }\\n      case 'showTab': {\\n        this.showTab();\\n\\n        break;\\n      }\\n      case 'showTabH': {\\n        this.showTabH();\\n\\n        break;\\n      }\\n      default: {\\n        this.show22();\\n\\n        break;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 컴포넌트 화면을 4분할 형태로 보여준다.\\n   * @example -\\n   */\\n  show22() {\\n    this.dragInit();\\n\\n    this.setPos(this.box1, 0, 0, 50, 50);\\n    this.setPos(this.box2, 0, 50, 50, 50);\\n    this.setPos(this.box3, 50, 0, 50, 50);\\n    this.setPos(this.box4, 50, 50, 50, 50);\\n\\n    this.dragbarX.style.display = 'block';\\n    this.dragbarX.style.left = '50%';\\n    this.dragbarX.style.top = '0%';\\n    this.dragbarX.style.height = '100%';\\n    this.dragbarX2.style.display = 'none';\\n    this.dragX = new JJMoveable(this.dragbarX, {\\n      handles: 'e',\\n      onDragend: rlt => {\\n        let resizeX = (this.dragbarX.offsetLeft * 100.0) / this.offsetWidth;\\n\\n        this.dragbarX.style.left = resizeX + '%';\\n\\n        this.box1.style.width = resizeX + '%';\\n        this.box3.style.width = resizeX + '%';\\n        this.box2.style.left = resizeX + '%';\\n        this.box4.style.left = resizeX + '%';\\n\\n        this.box2.style.width = 100 - resizeX + '%';\\n        this.box4.style.width = 100 - resizeX + '%';\\n      }\\n    });\\n\\n    this.dragbarY.style.display = 'block';\\n    this.dragbarY.style.top = '50%';\\n    this.dragbarY.style.left = '0';\\n    this.dragbarY.style.width = '100%';\\n    this.dragbarY2.style.display = 'none';\\n    this.dragY = new JJMoveable(this.dragbarY, {\\n      handles: 's',\\n      onDragend: rlt => {\\n        let resizeY =\\n          (this.dragbarY.offsetTop * 100) / this.boxwarp.offsetHeight;\\n        this.box1.style.height = resizeY + '%';\\n        this.box2.style.height = resizeY + '%';\\n        this.box3.style.top = resizeY + '%';\\n        this.box4.style.top = resizeY + '%';\\n        this.box3.style.height = 100 - resizeY + '%';\\n        this.box4.style.height = 100 - resizeY + '%';\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 컴포넌트 화면을 가로 3분할(HTML, LESS, SCRIPT), 가로 1분할(뷰어) 형태로 보여준다.\\n   * @example -\\n   */\\n  show31() {\\n    this.dragInit();\\n\\n    this.setPos(this.box1, 0, 0, 33.33, 50);\\n    this.setPos(this.box3, 0, 33.33, 33.33, 50);\\n    this.setPos(this.box2, 0, 66.66, 100 - 66.66, 50);\\n    this.setPos(this.box4, 50, 0, 100, 50);\\n\\n    this.dragbarX.style.display = 'block';\\n    this.dragbarX.style.left = '33.33%';\\n    this.dragbarX.style.height = '50%';\\n    this.dragbarX.style.top = '0%';\\n    this.dragX = new JJMoveable(this.dragbarX, {\\n      handles: 'e',\\n      parent: this,\\n      onDragend: rlt => {\\n        let resizeX = (this.dragbarX.offsetLeft * 100) / this.offsetWidth;\\n        this.dragbarX.style.left = resizeX + '%';\\n        this.box1.style.width = resizeX + '%';\\n        this.box3.style.left = resizeX + '%';\\n        this.box3.style.width =\\n          ((this.box2.offsetLeft - this.dragbarX.offsetLeft) * 100) /\\n            this.offsetWidth +\\n          '%';\\n      }\\n    });\\n\\n    this.dragbarX2.style.display = 'block';\\n    this.dragbarX2.style.left = '66.66%';\\n    this.dragbarX2.style.height = '50%';\\n    this.dragbarX2.style.top = '0%';\\n    this.dragX2 = new JJMoveable(this.dragbarX2, {\\n      handles: 'e',\\n      onDragend: rlt => {\\n        let resizeX = (this.dragbarX2.offsetLeft * 100) / this.offsetWidth;\\n        this.dragbarX2.style.left = resizeX + '%';\\n\\n        this.box3.style.width =\\n          ((this.dragbarX2.offsetLeft - this.box3.offsetLeft) * 100) /\\n            this.offsetWidth +\\n          '%';\\n        this.box2.style.left = resizeX + '%';\\n        this.box2.style.width = 100 - resizeX + '%';\\n      }\\n    });\\n\\n    this.dragbarY.style.display = 'block';\\n    this.dragbarY.style.top = '50%';\\n    this.dragbarY.style.left = '0%';\\n    this.dragbarY2.style.display = 'none';\\n    this.dragY = new JJMoveable(this.dragbarY, {\\n      handles: 's',\\n      onDragend: rlt => {\\n        let resizeY =\\n          (this.dragbarY.offsetTop * 100) / this.boxwarp.offsetHeight;\\n        this.dragbarX.style.height = resizeY + '%';\\n        this.dragbarX2.style.height = resizeY + '%';\\n\\n        this.box1.style.height = resizeY + '%';\\n        this.box2.style.height = resizeY + '%';\\n        this.box3.style.height = resizeY + '%';\\n        this.box4.style.top = resizeY + '%';\\n        this.box4.style.height = 100 - resizeY + '%';\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 컴포넌트 화면을 가로 1분할(뷰어), 가로 3분할(HTML, LESS, SCRIPT) 형태로 보여준다.\\n   * @example -\\n   */\\n  show13() {\\n    this.dragInit();\\n\\n    this.setPos(this.box1, 50, 0, 33.33, 50);\\n    this.setPos(this.box3, 50, 33.33, 33.33, 50);\\n    this.setPos(this.box2, 50, 66.66, 100 - 66.66, 50);\\n    this.setPos(this.box4, 0, 0, 100, 50);\\n\\n    this.dragbarX.style.display = 'block';\\n    this.dragbarX.style.left = '33.33%';\\n    this.dragbarX.style.top = '50%';\\n    this.dragbarX.style.height = '50%';\\n    this.dragX = new JJMoveable(this.dragbarX, {\\n      handles: 'e',\\n      onDragend: rlt => {\\n        let resizeX = (this.dragbarX.offsetLeft * 100) / this.offsetWidth;\\n        this.dragbarX.style.left = resizeX + '%';\\n        this.box1.style.width = resizeX + '%';\\n        this.box3.style.left = resizeX + '%';\\n        this.box3.style.width =\\n          ((this.box2.offsetLeft - this.dragbarX.offsetLeft) * 100) /\\n            this.offsetWidth +\\n          '%';\\n      }\\n    });\\n\\n    this.dragbarX2.style.display = 'block';\\n    this.dragbarX2.style.left = '66.66%';\\n    this.dragbarX2.style.top = '50%';\\n    this.dragbarX2.style.height = '50%';\\n    this.dragX2 = new JJMoveable(this.dragbarX2, {\\n      handles: 'e',\\n      onDragend: rlt => {\\n        let resizeX = (this.dragbarX2.offsetLeft * 100) / this.offsetWidth;\\n        this.dragbarX2.style.left = resizeX + '%';\\n\\n        this.box3.style.width =\\n          ((this.dragbarX2.offsetLeft - this.box3.offsetLeft) * 100) /\\n            this.offsetWidth +\\n          '%';\\n        this.box2.style.left = resizeX + '%';\\n        this.box2.style.width = 100 - resizeX + '%';\\n      }\\n    });\\n\\n    this.dragbarY.style.display = 'block';\\n    this.dragbarY.style.top = '50%';\\n    this.dragbarY.style.left = '0%';\\n    this.dragbarY2.style.display = 'none';\\n    this.dragY = new JJMoveable(this.dragbarY, {\\n      handles: 's',\\n      onDragend: rlt => {\\n        let resizeY =\\n          (this.dragbarY.offsetTop * 100) / this.boxwarp.offsetHeight;\\n        this.dragbarX.style.top = resizeY + '%';\\n        this.dragbarX.style.height = 100 - resizeY + '%';\\n        this.dragbarX2.style.top = resizeY + '%';\\n        this.dragbarX2.style.height = 100 - resizeY + '%';\\n\\n        this.box4.style.height = resizeY + '%';\\n        this.box1.style.top = resizeY + '%';\\n        this.box1.style.height = 100 - resizeY + '%';\\n        this.box2.style.top = resizeY + '%';\\n        this.box2.style.height = 100 - resizeY + '%';\\n        this.box3.style.top = resizeY + '%';\\n        this.box3.style.height = 100 - resizeY + '%';\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 컴포넌트 화면을 세로 2분할(HTML, 뷰어) 형태로 보여주고 나머지화면(LESS, SCRIPT)은 숨긴다.\\n   * @example -\\n   */\\n  showTab() {\\n    this.dragInit();\\n\\n    this.box1.style.visibility = 'visible';\\n    this.box2.style.visibility = 'hidden';\\n    this.box3.style.visibility = 'hidden';\\n\\n    this.setPos(this.box1, 50, 0, 100, 50);\\n    this.setPos(this.box2, 50, 0, 100, 50);\\n    this.setPos(this.box3, 50, 0, 100, 50);\\n    this.setPos(this.box4, 0, 0, 100, 50);\\n\\n    this.dragbarY.style.display = 'block';\\n    this.dragbarY.style.top = '50%';\\n    this.dragbarY.style.left = '0%';\\n\\n    this.dragY = new JJMoveable(this.dragbarY, {\\n      handles: 's',\\n      onDragend: rlt => {\\n        let resizeY =\\n          (this.dragbarY.offsetTop * 100) / this.boxwarp.offsetHeight;\\n        this.dragbarX.style.top = resizeY + '%';\\n        this.dragbarX.style.height = 100 - resizeY + '%';\\n        this.dragbarX2.style.top = resizeY + '%';\\n        this.dragbarX2.style.height = 100 - resizeY + '%';\\n\\n        this.box4.style.height = resizeY + '%';\\n        this.box1.style.top = resizeY + '%';\\n        this.box1.style.height = 100 - resizeY + '%';\\n        this.box2.style.top = resizeY + '%';\\n        this.box2.style.height = 100 - resizeY + '%';\\n        this.box3.style.top = resizeY + '%';\\n        this.box3.style.height = 100 - resizeY + '%';\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 컴포넌트 화면을 가로 2분할(HTML, 뷰어) 형태로 보여주고 나머지화면(LESS, SCRIPT)은 숨긴다.\\n   * @example -\\n   */\\n  showTabH() {\\n    this.dragInit();\\n\\n    this.box1.style.visibility = 'visible';\\n    this.box2.style.visibility = 'hidden';\\n    this.box3.style.visibility = 'hidden';\\n\\n    this.setPos(this.box1, 0, 0, 50, 100);\\n    this.setPos(this.box2, 0, 0, 50, 100);\\n    this.setPos(this.box3, 0, 0, 50, 100);\\n    this.setPos(this.box4, 0, 50, 50, 100);\\n\\n    this.dragbarX.style.display = 'block';\\n    this.dragbarX.style.top = '0';\\n    this.dragbarX.style.left = '50%';\\n\\n    this.dragbarX.style.display = 'block';\\n    this.dragbarX.style.left = '50%';\\n    this.dragbarX.style.height = '100%';\\n    this.dragX = new JJMoveable(this.dragbarX, {\\n      handles: 'e',\\n      onDragend: rlt => {\\n        let resizeX = (this.dragbarX.offsetLeft * 100) / this.offsetWidth;\\n        this.dragbarX.style.left = resizeX + '%';\\n\\n        this.box1.style.width = resizeX + '%';\\n        this.box2.style.width = resizeX + '%';\\n        this.box3.style.width = resizeX + '%';\\n        this.box4.style.left = resizeX + '%';\\n        this.box4.style.width = 100 - resizeX + '%';\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 박스의 크기변경할때 dragbar를 보여준다.\\n   * @example -\\n   */\\n  showComponent() {\\n    this.dragInit();\\n\\n    this.setPos(this.box3, 0, 0, 50, 100);\\n    this.setPos(this.box2, 0, 50, 50, 100);\\n    this.setPos(this.box1, 0, 0, 0, 0);\\n    this.setPos(this.box4, 0, 0, 0, 0);\\n\\n    this.dragbarX.style.display = 'block';\\n    this.dragbarX.style.left = '50%';\\n    this.dragX = new JJMoveable(this.dragbarX, {\\n      handles: 'e',\\n      onDragend: rlt => {\\n        let resizeX = (this.dragbarX.offsetLeft * 100) / this.offsetWidth;\\n        this.dragbarX.style.left = resizeX + '%';\\n\\n        this.box3.style.width = resizeX + '%';\\n        this.box2.style.left = resizeX + '%';\\n        this.box2.style.width = 100 - resizeX + '%';\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정된 박스만 보이게 하고 나머지 박스는 숨긴다.\\n   * @param {String} - 박스명\\n   * @example -\\n   */\\n  tabbox(box) {\\n    this.classList.add('tr-off');\\n    this.box1.style.visibility = 'hidden';\\n    this.box2.style.visibility = 'hidden';\\n    this.box3.style.visibility = 'hidden';\\n\\n    switch (box) {\\n      case 'box1': {\\n        this.box1.style.visibility = 'visible';\\n\\n        break;\\n      }\\n      case 'box2': {\\n        this.box2.style.visibility = 'visible';\\n\\n        break;\\n      }\\n      case 'box3': {\\n        this.box3.style.visibility = 'visible';\\n\\n        break;\\n      }\\n    }\\n\\n    setTimeout(() => {\\n      this.classList.remove('tr-off');\\n    }, 200);\\n  }\\n\\n  /**\\n   * @desc 작성한 스크립트(HTML, LESS, SCRIPT)를 파싱하여 뷰어화면에 보여준다.\\n   * @example -\\n   */\\n  excute() {\\n    let uuid = Jinja.global.uuid();\\n    let less = this.lessEditor.value;\\n\\n    Jinja.dom\\n      .lessUUIDcss(less, uuid)\\n      .then(css =>\\n        Jinja.global.string({\\n          uuid: uuid,\\n          html: this.htmlEditor.value,\\n          css: css,\\n          less: less,\\n          script: this.scriptEditor.value\\n        })\\n      )\\n      .then(content => {\\n        this.viewer.excuteLoad(content, this.options.isTheme, this.viewId);\\n      })\\n      .catch(ex => {\\n        console.error(ex);\\n      });\\n  }\\n}\\n\\ncustomElements.define('jj-div4box', JJDiv4Box);\\n/* ==JJCodeEditor.640.class================ */\\n/**\\n * @classdesc 코드에디터 컴포넌트관리를 위한 클래스\\n */\\nclass JJCodeEditor extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      require: ['jjCodeMirror'],\\n      mode: 'html',\\n      defaultOption: {\\n        mode: 'html',\\n        theme: 'eclipse',\\n        autoCloseTags: true,\\n        autoCloseBrackets: true,\\n        lineNumbers: true,\\n        matchBrackets: true,\\n        continueComments: 'Enter',\\n        extraKeys: {\\n          'Ctrl-Space': 'autocomplete',\\n          'Alt-0': cm => CodeMirror.commands.foldAll(cm),\\n          'Alt-9': cm => CodeMirror.commands.unfoldAll(cm),\\n          'Alt-I': cm => cm.foldCode(cm.getCursor()),\\n          'Alt-F': 'findPersistent',\\n          'Alt-Q': 'toggleComment',\\n          F11: cm => cm.setOption('fullScreen', !cm.getOption('fullScreen')),\\n          Esc: cm => {\\n            if (cm.getOption('fullScreen')) cm.setOption('fullScreen', false);\\n          }\\n        },\\n        linewrapping: true,\\n        rulers: [80],\\n        scrollbarStyle: 'simple',\\n        foldGutter: true,\\n        lint: true,\\n        dragDrop: true,\\n        tabSize: 2,\\n        indentUnit: 2,\\n        gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter'],\\n        contextMenu: [\\n          { label: 'copy', command: 'copy', icon: 'fa-copy' },\\n          { label: 'cut', command: 'cut', icon: 'fa-cut' },\\n          { label: 'paste', command: 'paste', icon: 'fa-paste' },\\n          { label: 'divider' }\\n        ]\\n      },\\n      modeOptions: {\\n        html: {\\n          mode: {\\n            name: 'htmlmixed',\\n            scriptTypes: [\\n              { matches: /\\\\/x-handlebars-template|\\\\/x-mustache/i, mode: null },\\n              {\\n                matches: /(text|application)\\\\/(x-)?vb(a|script)/i,\\n                mode: 'vbscript',\\n              },\\n            ]\\n          },\\n          contextMenu: [\\n            { label: 'copy', command: 'copy', icon: 'fa-copy' },\\n            { label: 'cut', command: 'cut', icon: 'fa-cut' },\\n            { label: 'paste', command: 'paste', icon: 'fa-paste' },\\n            { label: 'divider' },\\n            { label: 'Encode', command: 'htmlEncode', icon: 'fa-files-o' },\\n            { label: 'Remark', command: 'htmlRemark', icon: 'fa-scissors' },\\n            { label: 'Part', command: 'getHtmlPart', icon: 'fa-scissors' }\\n          ]\\n        },\\n        less: {\\n          mode: 'text/x-less',\\n          lint: false,\\n          contextMenu: [\\n            { label: 'copy', command: 'copy', icon: 'fa-copy' },\\n            { label: 'cut', command: 'cut', icon: 'fa-cut' },\\n            { label: 'paste', command: 'paste', icon: 'fa-paste' },\\n            { label: 'divider' },\\n            { label: 'Remark', command: 'scriptRemark', icon: 'fa-scissors' }\\n          ]\\n        },\\n        java: {\\n          mode: 'text/x-java',\\n          lint: false,\\n          contextMenu: []\\n        },\\n        css: {\\n          mode: 'text/css',\\n          lint: false,\\n          contextMenu: [\\n            { label: 'copy', command: 'copy', icon: 'fa-copy' },\\n            { label: 'cut', command: 'cut', icon: 'fa-cut' },\\n            { label: 'paste', command: 'paste', icon: 'fa-paste' },\\n            { label: 'divider' },\\n            { label: 'Remark', command: 'scriptRemark', icon: 'fa-scissors' }\\n          ]\\n        },\\n        text: {\\n          mode: 'text',\\n          lint: false,\\n          contextMenu: [\\n            { label: 'copy', command: 'copy', icon: 'fa-copy' },\\n            { label: 'cut', command: 'cut', icon: 'fa-cut' },\\n            { label: 'paste', command: 'paste', icon: 'fa-paste' },\\n            { label: 'divider' },\\n            { label: 'Remark', command: 'scriptRemark', icon: 'fa-scissors' },\\n          ],\\n        },\\n        sql: {\\n          mode: 'text/x-sql',\\n          lint: false,\\n          contextMenu: [\\n            { label: 'copy', command: 'copy', icon: 'fa-copy' },\\n            { label: 'cut', command: 'cut', icon: 'fa-cut' },\\n            { label: 'paste', command: 'paste', icon: 'fa-paste' },\\n            { label: 'divider' },\\n            { label: 'Remark', command: 'scriptRemark', icon: 'fa-scissors' }\\n          ]\\n        },\\n        javascript: {\\n          mode: 'javascript',\\n          lint: false,\\n          contextMenu: [\\n            { label: 'copy', command: 'copy', icon: 'fa-copy' },\\n            { label: 'cut', command: 'cut', icon: 'fa-cut' },\\n            { label: 'paste', command: 'paste', icon: 'fa-paste' },\\n            { label: 'divider' },\\n            { label: 'Remark', command: 'scriptRemark', icon: 'fa-scissors' },\\n            { label: 'Hint', command: 'scriptHint', icon: 'fa-bolt' },\\n            { label: 'Part', command: 'getScriptPart', icon: 'fa-scissors' }\\n          ]\\n        },\\n        json: {\\n          mode: 'application/ld+json',\\n          lint: false,\\n          continueComments: 'Enter',\\n          matchBrackets: true,\\n          autoCloseBrackets: true,\\n          contextMenu: [\\n            { label: 'copy', command: 'copy', icon: 'fa-copy' },\\n            { label: 'cut', command: 'cut', icon: 'fa-cut' },\\n            { label: 'paste', command: 'paste', icon: 'fa-paste' }\\n          ]\\n        },\\n        python: {\\n          mode: { name: 'python', version: 3, singleLineStringErrors: false },\\n          continueComments: 'Enter',\\n          contextMenu: [\\n            { label: 'copy', command: 'copy', icon: 'fa-copy' },\\n            { label: 'cut', command: 'cut', icon: 'fa-cut' },\\n            { label: 'paste', command: 'paste', icon: 'fa-paste' }\\n          ]\\n        },\\n        xml: {\\n          mode: 'xml',\\n          lint: false,\\n          contextMenu: []\\n        },\\n        yaml: {\\n          mode: 'text/x-yaml',\\n          tabSize: 4,\\n          indentUnit: 4,\\n          continueComments: 'Enter',\\n          contextMenu: [\\n            { label: 'copy', command: 'copy', icon: 'fa-copy' },\\n            { label: 'cut', command: 'cut', icon: 'fa-cut' },\\n            { label: 'paste', command: 'paste', icon: 'fa-paste' }\\n          ]\\n        }\\n      },\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this._isUserChange = true;\\n    this.requirePromise.then(() => {\\n      this.oEditor = CodeMirror(this, {\\n        ...this.options.defaultOption,\\n        ...this.options.modeOptions[this.options.mode],\\n      });\\n\\n      if (this.options.mode == 'javascript') {\\n        if(CodeMirror.TernServer){\\n          this.ternServer = new CodeMirror.TernServer({defs: [\\n            Jinja.tern.browse, \\n            Jinja.tern.ecma5,\\n            Jinja.tern.jinja \\n          ]});\\n\\n          this.oEditor.setOption(\\\"extraKeys\\\", {\\n            \\\"Ctrl-Space\\\": cm=>this.ternServer.complete(cm),\\n            \\\"Ctrl-I\\\": \\t\\tcm=>this.ternServer.showType(cm),\\n            \\\"Ctrl-O\\\": \\t\\tcm=>this.ternServer.showDocs(cm),\\n            \\\"Ctrl-Q\\\": \\t\\tcm=>this.ternServer.rename(cm),\\n            \\\"Ctrl-.\\\": \\t\\tcm=>this.ternServer.selectName(cm),\\n            \\\"Alt-.\\\": \\t\\t\\tcm=>this.ternServer.jumpToDef(cm),\\n            \\\"Alt-,\\\": \\t\\t\\tcm=>this.ternServer.jumpBack(cm),\\n            \\\"Alt-0\\\": \\t\\t\\tcm =>CodeMirror.commands.foldAll(cm),\\n            \\\"Alt-9\\\": \\t\\t\\tcm =>CodeMirror.commands.unfoldAll(cm),\\t\\t\\t\\n            \\\"Alt-I\\\": \\t\\t\\tcm =>cm.foldCode(cm.getCursor()),\\n            \\\"F11\\\": \\t\\t\\t\\tcm =>cm.setOption(\\\"fullScreen\\\", !cm.getOption(\\\"fullScreen\\\")),\\n            \\\"Esc\\\": \\t\\t\\t\\tcm =>cm.setOption(\\\"fullScreen\\\", false),\\n            \\\"Alt-F\\\": \\t\\t\\t\\\"findPersistent\\\",\\n            \\\"Alt-Q\\\": \\t\\t\\t\\\"toggleComment\\\"\\n          });\\n        }\\n      }\\n\\n      this.oEditor.on('change', (cm, ed) => {\\n        if (this._isUserChange) {\\n          this.dispatchEvent(\\n            new CustomEvent('changeedit', {\\n              detail: {\\n                mode: this.options.mode,\\n              },\\n              bubbles: true\\n            })\\n          );\\n        }\\n      });\\n\\n      this.oEditor.on('drop', (cm, ed) => {\\n        let dropHtml = ed.dataTransfer.getData('text/html');\\n        let dropText = ed.dataTransfer.getData('text/plain');\\n        let dropScript = ed.dataTransfer.getData('text/script');\\n        let dropJson = ed.dataTransfer.getData('text/json');\\n        let coords = cm.coordsChar({\\n          left: ed.x,\\n          top: ed.y\\n        });\\n\\n        \\n        \\n        switch (this.options.mode) {\\n          case 'html':\\n            \\n            cm.replaceRange('\\\\n'+(dropHtml || dropText), coords);\\n\\n            break;\\n          case 'script':\\n            cm.replaceRange('\\\\n'+(dropScript || dropText), coords);\\n\\n            break;\\n          case 'json':\\n            cm.replaceRange('\\\\n'+(dropJson || dropScript || dropText), coords);\\n\\n            break;\\n          default:\\n            cm.replaceRange('\\\\n'+(dropScript || dropText || dropHtml), coords);\\n        }\\n        ed.preventDefault();\\n      });\\n    });\\n\\n    this.addEventListener('contextmenu', e => {\\n      e.preventDefault();\\n\\n      Jinja.context.render(\\n        this,\\n        e,\\n        this.options.modeOptions[this.options.mode].contextMenu\\n      );\\n    });\\n\\n    this.addEventListener('jjContextMenuclick', e => {\\n      e.stopImmediatePropagation();\\n      e.stopPropagation();\\n      e.preventDefault();\\n\\n      let word;\\n      let contextMenu = e.detail.menu;\\n\\n      switch (contextMenu) {\\n        case 'copy': {\\n          word = this.oEditor.getSelection();\\n\\n          if (word) Jinja.store.clipBoard(word);\\n\\n          break;\\n        }\\n        case 'cut': {\\n          word = this.oEditor.getSelection();\\n\\n          if (word) {\\n            Jinja.store.clipBoard(word);\\n\\n            this.oEditor.replaceSelection('');\\n          }\\n\\n          break;\\n        }\\n        case 'paste': {\\n          word = Jinja.store.clipBoard();\\n\\n          if (typeof word == 'object') {\\n            word.then(clipText => this.oEditor.replaceSelection(clipText));\\n          } else {\\n            this.oEditor.replaceSelection(word);\\n          }\\n\\n          break;\\n        }\\n        case 'htmlEncode': {\\n          word = this.oEditor.getSelection();\\n          word = Jinja.global.encodeAce(word);\\n\\n          this.oEditor.replaceSelection(word);\\n\\n          break;\\n        }\\n        case 'htmlRemark': {\\n          word = \\n            `<!--` +\\n            `* memo : ` +\\n            `*` +\\n            `* Editor : ${Jinja.uo.USER_NAME}` +\\n            `* Edit Date : ${new Date().toLocaleString()}` +\\n            `*` +\\n            `${this.oEditor.getSelection()}` +\\n            `*` +\\n            `-->`;\\n\\n          return this.oEditor.replaceSelection(word);\\n\\n          break;\\n        }\\n        case 'scriptRemark': {\\n          word = \\n            `/**` +\\n            `* memo : ` +\\n            `*` +\\n            `* Editor : ${Jinja.uo.USER_NAME}` +\\n            `* Edit Date : ${new Date().toLocaleString()}` +\\n            `*` +\\n            `${this.oEditor.getSelection()}` +\\n            `*/`;\\n\\n          return this.oEditor.replaceSelection(word);\\n\\n          break;\\n        }\\n        case 'scriptHint': {\\n          word = `/*jshint sub:true*/ \\\\n`;\\n\\n          return this.oEditor.replaceSelection(word);\\n\\n          break;\\n        }\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 삭제한다.\\n   * @example -\\n   */\\n  _destroy() {\\n    this.oEditor.off('change');\\n    this.oEditor = null;\\n\\n    Jinja.dom.empty(this);\\n  }\\n\\n  /**\\n   * @memberof JJCodeEditor\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n    if (this.oEditor) {\\n      return this.oEditor.getValue() || '';\\n    } else {\\n      return '';\\n    }\\n  }\\n\\n  /**\\n   * @memberof JJCodeEditor\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(val) {\\n    this.requirePromise.then(editor => {\\n      this._isUserChange = false;\\n      this.oEditor.setValue(val || '');\\n      this._isUserChange = true;\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 핸들러를 포커스 이벤트 발생시 실행한다.\\n   * @param {Object} - 핸들러\\n   * @example -\\n   */\\n  onFocus(handler) {\\n    this.requirePromise.then(() => this.oEditor.on('focus', handler));\\n  }\\n\\t\\n  gotoLine(line){\\n    this.requirePromise.then(() => this.oEditor.setCursor({\\\"line\\\": line, \\\"ch\\\": 1}));\\n  }\\n\\n  /**\\n   * @desc 엘리먼트에 포커스를 준다.\\n   * @example -\\n   */\\n  focus() {\\n    this.requirePromise.then(() => this.oEditor.focus());\\n  }\\n\\n  /**\\n   * @desc 지정한 룰셋으로 Tern을 활성화한다.\\n   * @param {String} - 룰셋\\n   * @example -\\n   */\\n  enableTern(rule) {\\n    this.ternServer.server.deleteDefs('form');\\n    this.ternServer.server.addDefs(rule);\\n    this.ternServer.updateArgHints(this.oEditor);\\n  }\\n  \\n  /**\\n   * 폼에서 스크립트를 포커스 하는 경우에 해당폼의 객체에서 추출하여생성함\\n   * 구: enableTern(rule) 함수를 대치함\\n   */\\n  /**\\n   * @desc 폼에서 스크립트를 포커스 하는 경우에 해당폼의 HTML에서 객체 추출하여생성함\\n   * @param {html} - HTML\\n   * @example -\\n   */  \\n  updateFormHint(html){\\n    \\n    \\n    this.requirePromise.then(()=>{\\n      let formHint = {\\n        \\\"!name\\\": \\\"formHint\\\",\\n        \\\"form\\\": {\\n          \\\"!name\\\": \\\"form\\\",\\n          \\\"fromLoad\\\":\\\"fn(arg: options)\\\",\\n          \\\"fromClose\\\":\\\"fn(arg: options)\\\",\\n          \\\"modalOk\\\":\\\"fn(arg: options)\\\",\\n          \\\"return\\\":\\\"fn(arg: options)\\\"\\n        }                \\n      }; \\n\\n\\t\\t\\tif(html){\\n        const idRegex = /jj-id(\\\\s)?=(\\\\s)?['|\\\"]\\\\w+['|\\\"]/gm;\\n        let ids =  html.match(idRegex);\\n        if (ids){\\n          ids.map(p=>{\\n            let jjId  = p.split(/['|\\\"]/)[1];\\n            if (jjId){\\n              formHint.form[jjId] = \\\"appspeed\\\";\\n            }\\n          });  \\n        }\\n\\n        const commandRegex = /jj-command(\\\\s)?=(\\\\s)?['|\\\"]\\\\w+/gm;\\n        let commands = html.match(commandRegex);\\n        if(commands){\\n          commands.map(p=>{\\n            let jjCommand  = p.split(/['|\\\"]/)[1];\\n            if (jjCommand){\\n              formHint.form[jjCommand] = \\\"fn() -> appspeed\\\"\\n            }\\n          });  \\n        }\\n      }\\n      this.ternServer.server.deleteDefs('form');\\n      this.ternServer.server.addDefs(formHint);\\n      this.ternServer.updateArgHints(this.oEditor);\\n\\n    });\\n\\n  }  \\n\\n  /**\\n   * @desc 지정한 name, value로 옵션을 설정한다.\\n   * @param {String} - 옵션명\\n   * @param {*} - 옵션\\n   * @example -\\n   */\\n  option(name, value) {\\n    switch (name) {\\n      case 'theme':\\n        this.oEditor.setOption('theme', value);\\n\\n        break;\\n      case 'mode':\\n        this._setMode('mode', value);\\n\\n        break;\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-code-editor', JJCodeEditor);\\n/* ==JJCodeEditorTern.class================ */\\nJinja.tern = {\\n  \\\"ecma5\\\" : {\\n    \\\"!name\\\": \\\"ecmascript\\\",\\n    \\\"!define\\\": {\\n      \\\"Error.prototype\\\": \\\"Error.prototype\\\",\\n      \\\"propertyDescriptor\\\": {\\n        \\\"enumerable\\\": \\\"bool\\\",\\n        \\\"configurable\\\": \\\"bool\\\",\\n        \\\"value\\\": \\\"?\\\",\\n        \\\"writable\\\": \\\"bool\\\",\\n        \\\"get\\\": \\\"fn() -> ?\\\",\\n        \\\"set\\\": \\\"fn(value: ?)\\\"\\n      },\\n      \\\"Promise.prototype\\\": {\\n        \\\"catch\\\": {\\n          \\\"!doc\\\": \\\"The catch() method returns a Promise and deals with rejected cases only. It behaves the same as calling Promise.prototype.then(undefined, onRejected).\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch\\\",\\n          \\\"!type\\\": \\\"fn(onRejected: fn(reason: ?)) -> !this\\\"\\n        },\\n        \\\"then\\\": {\\n          \\\"!doc\\\": \\\"The then() method returns a Promise. It takes two arguments, both are callback functions for the success and failure cases of the Promise.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then\\\",\\n          \\\"!type\\\": \\\"fn(onFulfilled: fn(value: ?), onRejected: fn(reason: ?)) -> !custom:Promise_then\\\",\\n          \\\"!effects\\\": [\\\"call !0 !this.:t\\\"]\\n        },\\n        \\\"finally\\\": {\\n          \\\"!doc\\\": \\\"The finally() method returns a Promise. When the promise is settled, whether fulfilled or rejected, the specified callback function is executed. \\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/finally\\\",\\n          \\\"!type\\\": \\\"fn(onFinally: fn()) -> !custom:Promise_then\\\"\\n        }\\n      },\\n      \\\"Promise_reject\\\": {\\n        \\\"!type\\\": \\\"fn(reason: ?) -> !this\\\",\\n        \\\"!doc\\\": \\\"The Promise.reject(reason) method returns a Promise object that is rejected with the given reason.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject\\\"\\n      },\\n      \\\"iter_prototype\\\": {\\n        \\\":Symbol.iterator\\\": \\\"fn() -> !this\\\"\\n      },\\n      \\\"iter\\\": {\\n        \\\"!proto\\\": \\\"iter_prototype\\\",\\n        \\\"next\\\": {\\n          \\\"!type\\\": \\\"fn() -> +iter_result[value=!this.:t]\\\",\\n          \\\"!doc\\\": \\\"Return the next item in the sequence.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators\\\"\\n        },\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators\\\"\\n      },\\n      \\\"iter_result\\\": {\\n        \\\"done\\\": \\\"bool\\\",\\n        \\\"value\\\": \\\"?\\\"\\n      },\\n      \\\"generator_prototype\\\": {\\n        \\\"!proto\\\": \\\"iter_prototype\\\",\\n        \\\"next\\\": \\\"fn(value?: ?) -> iter_result\\\",\\n        \\\"return\\\": \\\"fn(value?: ?) -> iter_result\\\",\\n        \\\"throw\\\": \\\"fn(exception: +Error)\\\"\\n      },\\n      \\\"async_iter_prototype\\\": {\\n        \\\":Symbol.asyncIterator\\\": \\\"fn() -> !this\\\"\\n      },\\n      \\\"async_iter\\\": {\\n        \\\"!proto\\\": \\\"async_iter_prototype\\\",\\n        \\\"next\\\": {\\n          \\\"!type\\\": \\\"fn() -> +Promise[:t=+iter_result[value=!this.:t]]\\\",\\n          \\\"!doc\\\": \\\"Return the next item in the sequence.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators\\\"\\n        },\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators\\\"\\n      },\\n      \\\"async_generator_prototype\\\": {\\n        \\\"!proto\\\": \\\"async_iter_prototype\\\",\\n        \\\"next\\\": \\\"fn(value?: ?) -> +Promise[:t=iter_result]\\\",\\n        \\\"return\\\": \\\"fn(value?: ?) -> +Promise[:t=iter_result]\\\",\\n        \\\"throw\\\": \\\"fn(exception: +Error)\\\"\\n      },\\n      \\\"Proxy_handler\\\": {\\n        \\\"!doc\\\": \\\"The proxy's handler object is a placeholder object which contains traps for proxies.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler\\\",\\n        \\\"getPrototypeOf\\\": \\\"fn(target: ?)\\\",\\n        \\\"setPrototypeOf\\\": \\\"fn(target: ?, prototype: ?)\\\",\\n        \\\"isExtensible\\\": \\\"fn(target: ?)\\\",\\n        \\\"preventExtensions\\\": \\\"fn(target: ?)\\\",\\n        \\\"getOwnPropertyDescriptor\\\": \\\"fn(target: ?, property: string) -> propertyDescriptor\\\",\\n        \\\"defineProperty\\\": \\\"fn(target: ?, property: string, descriptor: propertyDescriptor)\\\",\\n        \\\"has\\\": \\\"fn(target: ?, property: string)\\\",\\n        \\\"get\\\": \\\"fn(target: ?, property: string)\\\",\\n        \\\"set\\\": \\\"fn(target: ?, property: string, value: ?)\\\",\\n        \\\"deleteProperty\\\": \\\"fn(target: ?, property: string)\\\",\\n        \\\"enumerate\\\": \\\"fn(target: ?)\\\",\\n        \\\"ownKeys\\\": \\\"fn(target: ?)\\\",\\n        \\\"apply\\\": \\\"fn(target: ?, self: ?, arguments: [?])\\\",\\n        \\\"construct\\\": \\\"fn(target: ?, arguments: [?])\\\"\\n      },\\n      \\\"Proxy_revocable\\\": {\\n        \\\"proxy\\\": \\\"+Proxy\\\",\\n        \\\"revoke\\\": \\\"fn()\\\"\\n      },\\n      \\\"TypedArray\\\": {\\n        \\\"!type\\\": \\\"fn(size: number)\\\",\\n        \\\"!doc\\\": \\\"A TypedArray object describes an array-like view of an underlying binary data buffer. There is no global property named TypedArray, nor is there a directly visible TypedArray constructor.  Instead, there are a number of different global properties, whose values are typed array constructors for specific element types, listed below. On the following pages you will find common properties and methods that can be used with any typed array containing elements of any type.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\\\",\\n        \\\"from\\\": {\\n          \\\"!type\\\": \\\"fn(arrayLike: ?, mapFn?: fn(elt: ?, i: number) -> number, thisArg?: ?) -> +TypedArray\\\",\\n          \\\"!effects\\\": [\\\"call !1 this=!2 !0.<i> number\\\"],\\n          \\\"!doc\\\": \\\"Creates a new typed array from an array-like or iterable object.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/from\\\"\\n        },\\n        \\\"of\\\": {\\n          \\\"!type\\\": \\\"fn(elements: number) -> +TypedArray\\\",\\n          \\\"!doc\\\": \\\"Creates a new typed array from a variable number of arguments.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/of\\\"\\n        },\\n        \\\"BYTES_PER_ELEMENT\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!doc\\\": \\\"The TypedArray.BYTES_PER_ELEMENT property represents the size in bytes of each element in an typed array.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/BYTES_PER_ELEMENT\\\"\\n        },\\n        \\\"name\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!doc\\\": \\\"The TypedArray.name property represents a string value of the typed array constructor name.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/name\\\"\\n        },\\n        \\\"prototype\\\": {\\n          \\\"<i>\\\": \\\"number\\\",\\n          \\\"buffer\\\": {\\n            \\\"!type\\\": \\\"+ArrayBuffer\\\",\\n            \\\"!doc\\\": \\\"The buffer accessor property represents the ArrayBuffer referenced by a TypedArray at construction time.\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/buffer\\\"\\n          },\\n          \\\"byteLength\\\": {\\n            \\\"!type\\\": \\\"number\\\",\\n            \\\"!doc\\\": \\\"The byteLength accessor property represents the length (in bytes) of a typed array from the start of its ArrayBuffer.\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/byteLength\\\"\\n          },\\n          \\\"byteOffset\\\": {\\n            \\\"!type\\\": \\\"number\\\",\\n            \\\"!doc\\\": \\\"The byteOffset accessor property represents the offset (in bytes) of a typed array from the start of its ArrayBuffer.\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/byteOffset\\\"\\n          },\\n          \\\"copyWithin\\\": {\\n            \\\"!type\\\": \\\"fn(target: number, start: number, end?: number) -> ?\\\",\\n            \\\"!doc\\\": \\\"The copyWithin() method copies the sequence of array elements within the array to the position starting at target. The copy is taken from the index positions of the second and third arguments start and end. The end argument is optional and defaults to the length of the array. This method has the same algorithm as Array.prototype.copyWithin. TypedArray is one of the typed array types here.\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/copyWithin\\\"\\n          },\\n          \\\"entries\\\": {\\n            \\\"!type\\\": \\\"fn() -> +iter[:t=number]\\\",\\n            \\\"!doc\\\": \\\"The entries() method returns a new Array Iterator object that contains the key/value pairs for each index in the array.\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/entries\\\"\\n          },\\n          \\\"every\\\": {\\n            \\\"!type\\\": \\\"fn(callback: fn(element: number, index: number, array: TypedArray) -> bool, thisArg?: ?) -> bool\\\",\\n            \\\"!effects\\\": [\\\"call !0 this=!1 number number !this\\\"],\\n            \\\"!doc\\\": \\\"The every() method tests whether all elements in the typed array pass the test implemented by the provided function. This method has the same algorithm as Array.prototype.every(). TypedArray is one of the typed array types here.\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/every\\\"\\n          },\\n          \\\"fill\\\": {\\n            \\\"!type\\\": \\\"fn(value: number, start?: number, end?: number)\\\",\\n            \\\"!doc\\\": \\\"The fill() method fills all the elements of a typed array from a start index to an end index with a static value. This method has the same algorithm as Array.prototype.fill(). TypedArray is one of the typed array types here.\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/fill\\\"\\n          },\\n          \\\"filter\\\": {\\n            \\\"!type\\\": \\\"fn(test: fn(element: number, i: number) -> bool, context?: ?) -> !this\\\",\\n            \\\"!effects\\\": [\\\"call !0 this=!1 number number\\\"],\\n            \\\"!doc\\\": \\\"Creates a new array with all of the elements of this array for which the provided filtering function returns true. See also Array.prototype.filter().\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/filter\\\"\\n          },\\n          \\\"find\\\": {\\n            \\\"!type\\\": \\\"fn(callback: fn(element: number, index: number, array: +TypedArray) -> bool, thisArg?: ?) -> number\\\",\\n            \\\"!effects\\\": [\\\"call !0 this=!1 number number !this\\\"],\\n            \\\"!doc\\\": \\\"The find() method returns a value in the typed array, if an element satisfies the provided testing function. Otherwise undefined is returned. TypedArray is one of the typed array types here.\\\\nSee also the findIndex() method, which returns the index of a found element in the typed array instead of its value.\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/find\\\"\\n          },\\n          \\\"findIndex\\\": {\\n            \\\"!type\\\": \\\"fn(callback: fn(element: number, index: number, array: +TypedArray) -> bool, thisArg?: ?) -> number\\\",\\n            \\\"!effects\\\": [\\\"call !0 this=!1 number number !this\\\"],\\n            \\\"!doc\\\": \\\"The findIndex() method returns an index in the typed array, if an element in the typed array satisfies the provided testing function. Otherwise -1 is returned.\\\\nSee also the find() method, which returns the value of a found element in the typed array instead of its index.\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/findIndex\\\"\\n          },\\n          \\\"forEach\\\": {\\n            \\\"!type\\\": \\\"fn(callback: fn(value: number, key: number, array: +TypedArray), thisArg?: ?)\\\",\\n            \\\"!effects\\\": [\\\"call !0 this=!1 number number !this\\\"],\\n            \\\"!doc\\\": \\\"Executes a provided function once per array element.\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/forEach\\\"\\n          },\\n          \\\"indexOf\\\": {\\n            \\\"!type\\\": \\\"fn(searchElement: number, fromIndex?: number) -> number\\\",\\n            \\\"!doc\\\": \\\"The indexOf() method returns the first index at which a given element can be found in the typed array, or -1 if it is not present. This method has the same algorithm as Array.prototype.indexOf(). TypedArray is one of the typed array types here.\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/indexOf\\\"\\n          },\\n          \\\"join\\\": {\\n            \\\"!type\\\": \\\"fn(separator?: string) -> string\\\",\\n            \\\"!doc\\\": \\\"The join() method joins all elements of an array into a string. This method has the same algorithm as Array.prototype.join(). TypedArray is one of the typed array types here.\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/join\\\"\\n          },\\n          \\\"keys\\\": {\\n            \\\"!type\\\": \\\"fn() -> +iter[:t=number]\\\",\\n            \\\"!doc\\\": \\\"The keys() method returns a new Array Iterator object that contains the keys for each index in the array.\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/keys\\\"\\n          },\\n          \\\"lastIndexOf\\\": {\\n            \\\"!type\\\": \\\"fn(searchElement: number, fromIndex?: number) -> number\\\",\\n            \\\"!doc\\\": \\\"The lastIndexOf() method returns the last index at which a given element can be found in the typed array, or -1 if it is not present. The typed array is searched backwards, starting at fromIndex. This method has the same algorithm as Array.prototype.lastIndexOf(). TypedArray is one of the typed array types here.\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/lastIndexOf\\\"\\n          },\\n          \\\"length\\\": {\\n            \\\"!type\\\": \\\"number\\\",\\n            \\\"!doc\\\": \\\"Returns the number of elements hold in the typed array. Fixed at construction time and thus read only.\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/length\\\"\\n          },\\n          \\\"map\\\": {\\n            \\\"!type\\\": \\\"fn(f: fn(element: number, i: number) -> number, context?: ?) -> +TypedArray\\\",\\n            \\\"!effects\\\": [\\\"call !0 this=!1 number number\\\"],\\n            \\\"!doc\\\": \\\"Creates a new array with the results of calling a provided function on every element in this array. See also Array.prototype.map().\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/map\\\"\\n          },\\n          \\\"reduce\\\": {\\n            \\\"!type\\\": \\\"fn(combine: fn(sum: ?, elt: number, i: number) -> ?, init?: ?) -> !0.!ret\\\",\\n            \\\"!effects\\\": [\\\"call !0 !1 number number\\\"],\\n            \\\"!doc\\\": \\\"Apply a function against an accumulator and each value of the array (from left-to-right) as to reduce it to a single value. See also Array.prototype.reduce().\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/reduce\\\"\\n          },\\n          \\\"reduceRight\\\": {\\n            \\\"!type\\\": \\\"fn(combine: fn(sum: ?, elt: number, i: number) -> ?, init?: ?) -> !0.!ret\\\",\\n            \\\"!effects\\\": [\\\"call !0 !1 number number\\\"],\\n            \\\"!doc\\\": \\\"Apply a function against an accumulator and each value of the array (from right-to-left) as to reduce it to a single value. See also Array.prototype.reduceRight().\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/reduceRight\\\"\\n          },\\n          \\\"reverse\\\": {\\n            \\\"!type\\\": \\\"fn()\\\",\\n            \\\"!doc\\\": \\\"The reverse() method reverses a typed array in place. The first typed array element becomes the last and the last becomes the first. This method has the same algorithm as Array.prototype.reverse(). TypedArray is one of the typed array types here.\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/reverse\\\"\\n          },\\n          \\\"set\\\": {\\n            \\\"!type\\\": \\\"fn(array: [number], offset?: number)\\\",\\n            \\\"!doc\\\": \\\"The set() method stores multiple values in the typed array, reading input values from a specified array.\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/set\\\"\\n          },\\n          \\\"slice\\\": {\\n            \\\"!type\\\": \\\"fn(from: number, to?: number) -> +TypedArray\\\",\\n            \\\"!doc\\\": \\\"Extracts a section of an array and returns a new array. See also Array.prototype.slice().\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/slice\\\"\\n          },\\n          \\\"some\\\": {\\n            \\\"!type\\\": \\\"fn(test: fn(elt: number, i: number) -> bool, context?: ?) -> bool\\\",\\n            \\\"!effects\\\": [\\\"call !0 this=!1 number number\\\"],\\n            \\\"!doc\\\": \\\"The some() method tests whether some element in the typed array passes the test implemented by the provided function. This method has the same algorithm as Array.prototype.some(). TypedArray is one of the typed array types here.\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/some\\\"\\n          },\\n          \\\"sort\\\": {\\n            \\\"!type\\\": \\\"fn(compare?: fn(a: number, b: number) -> number)\\\",\\n            \\\"!effects\\\": [\\\"call !0 number number\\\"],\\n            \\\"!doc\\\": \\\"Sorts the elements of an array in place and returns the array. See also Array.prototype.sort().\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/sort\\\"\\n          },\\n          \\\"subarray\\\": {\\n            \\\"!type\\\": \\\"fn(begin?: number, end?: number) -> +TypedArray\\\",\\n            \\\"!doc\\\": \\\"The subarray() method returns a new TypedArray on the same ArrayBuffer store and with the same element types as for this TypedArray object. The begin offset is inclusive and the end offset is exclusive. TypedArray is one of the typed array types.\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/subarray\\\"\\n          },\\n          \\\"values\\\": {\\n            \\\"!type\\\": \\\"fn() -> +iter[:t=number]\\\",\\n            \\\"!doc\\\": \\\"The values() method returns a new Array Iterator object that contains the values for each index in the array.\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/values\\\"\\n          },\\n          \\\":Symbol.iterator\\\": {\\n            \\\"!type\\\": \\\"fn() -> +iter[:t=number]\\\",\\n            \\\"!doc\\\": \\\"Returns a new Array Iterator object that contains the values for each index in the array.\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/@@iterator\\\"\\n          }\\n        }\\n      }\\n    },\\n    \\\"Infinity\\\": {\\n      \\\"!type\\\": \\\"number\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Infinity\\\",\\n      \\\"!doc\\\": \\\"A numeric value representing infinity.\\\"\\n    },\\n    \\\"undefined\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/undefined\\\",\\n      \\\"!doc\\\": \\\"The value undefined.\\\"\\n    },\\n    \\\"NaN\\\": {\\n      \\\"!type\\\": \\\"number\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/NaN\\\",\\n      \\\"!doc\\\": \\\"A value representing Not-A-Number.\\\"\\n    },\\n    \\\"Object\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"getPrototypeOf\\\": {\\n        \\\"!type\\\": \\\"fn(obj: ?) -> ?\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\\\",\\n        \\\"!doc\\\": \\\"Returns the prototype (i.e. the internal prototype) of the specified object.\\\"\\n      },\\n      \\\"create\\\": {\\n        \\\"!type\\\": \\\"fn(proto: ?) -> !custom:Object_create\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/create\\\",\\n        \\\"!doc\\\": \\\"Creates a new object with the specified prototype object and properties.\\\"\\n      },\\n      \\\"defineProperty\\\": {\\n        \\\"!type\\\": \\\"fn(obj: ?, prop: string, desc: propertyDescriptor) -> !custom:Object_defineProperty\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/defineProperty\\\",\\n        \\\"!doc\\\": \\\"Defines a new property directly on an object, or modifies an existing property on an object, and returns the object. If you want to see how to use the Object.defineProperty method with a binary-flags-like syntax, see this article.\\\"\\n      },\\n      \\\"defineProperties\\\": {\\n        \\\"!type\\\": \\\"fn(obj: ?, props: ?) -> !custom:Object_defineProperties\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/defineProperty\\\",\\n        \\\"!doc\\\": \\\"Defines a new property directly on an object, or modifies an existing property on an object, and returns the object. If you want to see how to use the Object.defineProperty method with a binary-flags-like syntax, see this article.\\\"\\n      },\\n      \\\"getOwnPropertyDescriptor\\\": {\\n        \\\"!type\\\": \\\"fn(obj: ?, prop: string) -> propertyDescriptor\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor\\\",\\n        \\\"!doc\\\": \\\"Returns a property descriptor for an own property (that is, one directly present on an object, not present by dint of being along an object's prototype chain) of a given object.\\\"\\n      },\\n      \\\"keys\\\": {\\n        \\\"!type\\\": \\\"fn(obj: ?) -> [string]\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/keys\\\",\\n        \\\"!doc\\\": \\\"Returns an array of a given object's own enumerable properties, in the same order as that provided by a for-in loop (the difference being that a for-in loop enumerates properties in the prototype chain as well).\\\"\\n      },\\n      \\\"getOwnPropertyNames\\\": {\\n        \\\"!type\\\": \\\"fn(obj: ?) -> [string]\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\\\",\\n        \\\"!doc\\\": \\\"Returns an array of all properties (enumerable or not) found directly upon a given object.\\\"\\n      },\\n      \\\"seal\\\": {\\n        \\\"!type\\\": \\\"fn(obj: ?)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/seal\\\",\\n        \\\"!doc\\\": \\\"Seals an object, preventing new properties from being added to it and marking all existing properties as non-configurable. Values of present properties can still be changed as long as they are writable.\\\"\\n      },\\n      \\\"isSealed\\\": {\\n        \\\"!type\\\": \\\"fn(obj: ?) -> bool\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/isSealed\\\",\\n        \\\"!doc\\\": \\\"Determine if an object is sealed.\\\"\\n      },\\n      \\\"freeze\\\": {\\n        \\\"!type\\\": \\\"fn(obj: ?) -> !0\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/freeze\\\",\\n        \\\"!doc\\\": \\\"Freezes an object: that is, prevents new properties from being added to it; prevents existing properties from being removed; and prevents existing properties, or their enumerability, configurability, or writability, from being changed. In essence the object is made effectively immutable. The method returns the object being frozen.\\\"\\n      },\\n      \\\"isFrozen\\\": {\\n        \\\"!type\\\": \\\"fn(obj: ?) -> bool\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/isFrozen\\\",\\n        \\\"!doc\\\": \\\"Determine if an object is frozen.\\\"\\n      },\\n      \\\"preventExtensions\\\": {\\n        \\\"!type\\\": \\\"fn(obj: ?)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions\\\",\\n        \\\"!doc\\\": \\\"Prevents new properties from ever being added to an object.\\\"\\n      },\\n      \\\"isExtensible\\\": {\\n        \\\"!type\\\": \\\"fn(obj: ?) -> bool\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\\\",\\n        \\\"!doc\\\": \\\"The Object.isExtensible() method determines if an object is extensible (whether it can have new properties added to it).\\\"\\n      },\\n      \\\"assign\\\": {\\n        \\\"!type\\\": \\\"fn(target: ?, source: ?, source?: ?) -> !0\\\",\\n        \\\"!effects\\\": [\\\"copy !1 !0\\\", \\\"copy !2 !0\\\", \\\"copy !3 !0\\\"],\\n        \\\"!doc\\\": \\\"The Object.assign() method is used to copy the values of all enumerable own properties from one or more source objects to a target object. It will return the target object.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\\\"\\n      },\\n      \\\"getOwnPropertySymbols\\\": {\\n        \\\"!type\\\": \\\"fn(obj: ?) -> !custom:getOwnPropertySymbols\\\",\\n        \\\"!doc\\\": \\\"The Object.getOwnPropertySymbols() method returns an array of all symbol properties found directly upon a given object.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols\\\"\\n      },\\n      \\\"is\\\": {\\n        \\\"!type\\\": \\\"fn(value1: ?, value2: ?) -> bool\\\",\\n        \\\"!doc\\\": \\\"The Object.is() method determines whether two values are the same value.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\\\"\\n      },\\n      \\\"setPrototypeOf\\\": {\\n        \\\"!type\\\": \\\"fn(obj: ?, prototype: ?)\\\",\\n        \\\"!doc\\\": \\\"The Object.setPrototype() method sets the prototype (i.e., the internal [[Prototype]] property) of a specified object to another object or null.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\\\"\\n      },\\n      \\\"prototype\\\": {\\n        \\\"!stdProto\\\": \\\"Object\\\",\\n        \\\"toString\\\": {\\n          \\\"!type\\\": \\\"fn() -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/toString\\\",\\n          \\\"!doc\\\": \\\"Returns a string representing the object.\\\"\\n        },\\n        \\\"toLocaleString\\\": {\\n          \\\"!type\\\": \\\"fn() -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/toLocaleString\\\",\\n          \\\"!doc\\\": \\\"Returns a string representing the object. This method is meant to be overriden by derived objects for locale-specific purposes.\\\"\\n        },\\n        \\\"valueOf\\\": {\\n          \\\"!type\\\": \\\"fn() -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/valueOf\\\",\\n          \\\"!doc\\\": \\\"Returns the primitive value of the specified object\\\"\\n        },\\n        \\\"hasOwnProperty\\\": {\\n          \\\"!type\\\": \\\"fn(prop: string) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\\\",\\n          \\\"!doc\\\": \\\"Returns a boolean indicating whether the object has the specified property.\\\"\\n        },\\n        \\\"propertyIsEnumerable\\\": {\\n          \\\"!type\\\": \\\"fn(prop: string) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable\\\",\\n          \\\"!doc\\\": \\\"Returns a Boolean indicating whether the specified property is enumerable.\\\"\\n        },\\n        \\\"isPrototypeOf\\\": {\\n          \\\"!type\\\": \\\"fn(obj: ?) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf\\\",\\n          \\\"!doc\\\": \\\"Tests for an object in another object's prototype chain.\\\"\\n        }\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object\\\",\\n      \\\"!doc\\\": \\\"Creates an object wrapper.\\\"\\n    },\\n    \\\"Function\\\": {\\n      \\\"!type\\\": \\\"fn(body: string) -> fn()\\\",\\n      \\\"prototype\\\": {\\n        \\\"!stdProto\\\": \\\"Function\\\",\\n        \\\"apply\\\": {\\n          \\\"!type\\\": \\\"fn(this: ?, args: [?])\\\",\\n          \\\"!effects\\\": [\\n            \\\"call and return !this this=!0 !1.<i> !1.<i> !1.<i>\\\"\\n          ],\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/apply\\\",\\n          \\\"!doc\\\": \\\"Calls a function with a given this value and arguments provided as an array (or an array like object).\\\"\\n        },\\n        \\\"call\\\": {\\n          \\\"!type\\\": \\\"fn(this: ?, args?: ?) -> !this.!ret\\\",\\n          \\\"!effects\\\": [\\n            \\\"call and return !this this=!0 !1 !2 !3 !4\\\"\\n          ],\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/call\\\",\\n          \\\"!doc\\\": \\\"Calls a function with a given this value and arguments provided individually.\\\"\\n        },\\n        \\\"bind\\\": {\\n          \\\"!type\\\": \\\"fn(this: ?, args?: ?) -> !custom:Function_bind\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\\\",\\n          \\\"!doc\\\": \\\"Creates a new function that, when called, has its this keyword set to the provided value, with a given sequence of arguments preceding any provided when the new function was called.\\\"\\n        },\\n        \\\"prototype\\\": \\\"?\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function\\\",\\n      \\\"!doc\\\": \\\"Every function in JavaScript is actually a Function object.\\\"\\n    },\\n    \\\"Array\\\": {\\n      \\\"!type\\\": \\\"fn(size: number) -> !custom:Array_ctor\\\",\\n      \\\"isArray\\\": {\\n        \\\"!type\\\": \\\"fn(value: ?) -> bool\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/isArray\\\",\\n        \\\"!doc\\\": \\\"Returns true if an object is an array, false if it is not.\\\"\\n      },\\n      \\\"from\\\": {\\n        \\\"!type\\\": \\\"fn(arrayLike: ?, mapFn?: fn(elt: ?, i: number) -> ?, thisArg?: ?) -> [!0.<i>]\\\",\\n        \\\"!effects\\\": [\\n          \\\"call !1 this=!2 !0.<i> number\\\"\\n        ],\\n        \\\"!doc\\\": \\\"The Array.from() method creates a new Array instance from an array-like or iterable object.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\\\"\\n      },\\n      \\\"of\\\": {\\n        \\\"!type\\\": \\\"fn(elementN: ?) -> [!0]\\\",\\n        \\\"!doc\\\": \\\"The Array.of() method creates a new Array instance with a variable number of arguments, regardless of number or type of the arguments.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\\\"\\n      },\\n      \\\"prototype\\\": {\\n        \\\"!stdProto\\\": \\\"Array\\\",\\n        \\\"length\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/length\\\",\\n          \\\"!doc\\\": \\\"An unsigned, 32-bit integer that specifies the number of elements in an array.\\\"\\n        },\\n        \\\"concat\\\": {\\n          \\\"!type\\\": \\\"fn(other: [?]) -> !this\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/concat\\\",\\n          \\\"!doc\\\": \\\"Returns a new array comprised of this array joined with other array(s) and/or value(s).\\\"\\n        },\\n        \\\"join\\\": {\\n          \\\"!type\\\": \\\"fn(separator?: string) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/join\\\",\\n          \\\"!doc\\\": \\\"Joins all elements of an array into a string.\\\"\\n        },\\n        \\\"splice\\\": {\\n          \\\"!type\\\": \\\"fn(pos: number, amount: number, newelt?: ?) -> [?]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/splice\\\",\\n          \\\"!doc\\\": \\\"Changes the content of an array, adding new elements while removing old elements.\\\"\\n        },\\n        \\\"pop\\\": {\\n          \\\"!type\\\": \\\"fn() -> !this.<i>\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/pop\\\",\\n          \\\"!doc\\\": \\\"Removes the last element from an array and returns that element.\\\"\\n        },\\n        \\\"push\\\": {\\n          \\\"!type\\\": \\\"fn(newelt: ?) -> number\\\",\\n          \\\"!effects\\\": [\\n            \\\"propagate !0 !this.<i>\\\"\\n          ],\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/push\\\",\\n          \\\"!doc\\\": \\\"Mutates an array by appending the given elements and returning the new length of the array.\\\"\\n        },\\n        \\\"shift\\\": {\\n          \\\"!type\\\": \\\"fn() -> !this.<i>\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/shift\\\",\\n          \\\"!doc\\\": \\\"Removes the first element from an array and returns that element. This method changes the length of the array.\\\"\\n        },\\n        \\\"unshift\\\": {\\n          \\\"!type\\\": \\\"fn(newelt: ?) -> number\\\",\\n          \\\"!effects\\\": [\\n            \\\"propagate !0 !this.<i>\\\"\\n          ],\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/unshift\\\",\\n          \\\"!doc\\\": \\\"Adds one or more elements to the beginning of an array and returns the new length of the array.\\\"\\n        },\\n        \\\"slice\\\": {\\n          \\\"!type\\\": \\\"fn(from?: number, to?: number) -> !this\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/slice\\\",\\n          \\\"!doc\\\": \\\"Returns a shallow copy of a portion of an array.\\\"\\n        },\\n        \\\"reverse\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/reverse\\\",\\n          \\\"!doc\\\": \\\"Reverses an array in place.  The first array element becomes the last and the last becomes the first.\\\"\\n        },\\n        \\\"sort\\\": {\\n          \\\"!type\\\": \\\"fn(compare?: fn(a: ?, b: ?) -> number)\\\",\\n          \\\"!effects\\\": [\\n            \\\"call !0 !this.<i> !this.<i>\\\"\\n          ],\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/sort\\\",\\n          \\\"!doc\\\": \\\"Sorts the elements of an array in place and returns the array.\\\"\\n        },\\n        \\\"indexOf\\\": {\\n          \\\"!type\\\": \\\"fn(elt: ?, from?: number) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/indexOf\\\",\\n          \\\"!doc\\\": \\\"Returns the first index at which a given element can be found in the array, or -1 if it is not present.\\\"\\n        },\\n        \\\"lastIndexOf\\\": {\\n          \\\"!type\\\": \\\"fn(elt: ?, from?: number) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/lastIndexOf\\\",\\n          \\\"!doc\\\": \\\"Returns the last index at which a given element can be found in the array, or -1 if it is not present. The array is searched backwards, starting at fromIndex.\\\"\\n        },\\n        \\\"every\\\": {\\n          \\\"!type\\\": \\\"fn(test: fn(elt: ?, i: number, array: +Array) -> bool, context?: ?) -> bool\\\",\\n          \\\"!effects\\\": [\\n            \\\"call !0 this=!1 !this.<i> number !this\\\"\\n          ],\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/every\\\",\\n          \\\"!doc\\\": \\\"Tests whether all elements in the array pass the test implemented by the provided function.\\\"\\n        },\\n        \\\"some\\\": {\\n          \\\"!type\\\": \\\"fn(test: fn(elt: ?, i: number, array: +Array) -> bool, context?: ?) -> bool\\\",\\n          \\\"!effects\\\": [\\n            \\\"call !0 this=!1 !this.<i> number !this\\\"\\n          ],\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/some\\\",\\n          \\\"!doc\\\": \\\"Tests whether some element in the array passes the test implemented by the provided function.\\\"\\n        },\\n        \\\"filter\\\": {\\n          \\\"!type\\\": \\\"fn(test: fn(elt: ?, i: number, array: +Array) -> bool, context?: ?) -> !this\\\",\\n          \\\"!effects\\\": [\\n            \\\"call !0 this=!1 !this.<i> number !this\\\"\\n          ],\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/filter\\\",\\n          \\\"!doc\\\": \\\"Creates a new array with all elements that pass the test implemented by the provided function.\\\"\\n        },\\n        \\\"forEach\\\": {\\n          \\\"!type\\\": \\\"fn(f: fn(elt: ?, i: number, array: +Array), context?: ?)\\\",\\n          \\\"!effects\\\": [\\n            \\\"call !0 this=!1 !this.<i> number !this\\\"\\n          ],\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/forEach\\\",\\n          \\\"!doc\\\": \\\"Executes a provided function once per array element.\\\"\\n        },\\n        \\\"map\\\": {\\n          \\\"!type\\\": \\\"fn(f: fn(elt: ?, i: number, array: +Array) -> ?, context?: ?) -> [!0.!ret]\\\",\\n          \\\"!effects\\\": [\\n            \\\"call !0 this=!1 !this.<i> number !this\\\"\\n          ],\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/map\\\",\\n          \\\"!doc\\\": \\\"Creates a new array with the results of calling a provided function on every element in this array.\\\"\\n        },\\n        \\\"reduce\\\": {\\n          \\\"!type\\\": \\\"fn(combine: fn(sum: ?, elt: ?, i: number, array: +Array) -> ?, init?: ?) -> !0.!ret\\\",\\n          \\\"!effects\\\": [\\n            \\\"call !0 !1 !this.<i> number !this\\\"\\n          ],\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/Reduce\\\",\\n          \\\"!doc\\\": \\\"Apply a function against an accumulator and each value of the array (from left-to-right) as to reduce it to a single value.\\\"\\n        },\\n        \\\"reduceRight\\\": {\\n          \\\"!type\\\": \\\"fn(combine: fn(sum: ?, elt: ?, i: number, array: +Array) -> ?, init?: ?) -> !0.!ret\\\",\\n          \\\"!effects\\\": [\\n            \\\"call !0 !1 !this.<i> number !this\\\"\\n          ],\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/ReduceRight\\\",\\n          \\\"!doc\\\": \\\"Apply a function simultaneously against two values of the array (from right-to-left) as to reduce it to a single value.\\\"\\n        },\\n        \\\"copyWithin\\\": {\\n          \\\"!type\\\": \\\"fn(target: number, start: number, end?: number) -> !this\\\",\\n          \\\"!doc\\\": \\\"The copyWithin() method copies the sequence of array elements within the array to the position starting at target. The copy is taken from the index positions of the second and third arguments start and end.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/copyWithin\\\"\\n        },\\n        \\\"entries\\\": {\\n          \\\"!type\\\": \\\"fn() -> +iter[:t=[number, !this.<i>]]\\\",\\n          \\\"!doc\\\": \\\"The entries() method returns a new Array Iterator object that contains the key/value pairs for each index in the array.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/entries\\\"\\n        },\\n        \\\"fill\\\": {\\n          \\\"!type\\\": \\\"fn(value: ?, start?: number, end?: number) -> !this\\\",\\n          \\\"!doc\\\": \\\"The fill() method fills all the elements of an array from a start index to an end index with a static value.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\\\"\\n        },\\n        \\\"find\\\": {\\n          \\\"!type\\\": \\\"fn(callback: fn(element: ?, index: number, array: [?]) -> bool, thisArg?: ?) -> !this.<i>\\\",\\n          \\\"!effects\\\": [\\\"call !0 this=!2 !this.<i> number\\\"],\\n          \\\"!doc\\\": \\\"The find() method returns a value in the array, if an element in the array satisfies the provided testing function. Otherwise undefined is returned.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\\\"\\n        },\\n        \\\"findIndex\\\": {\\n          \\\"!type\\\": \\\"fn(callback: fn(element: ?, index: number, array: [?]), thisArg?: ?) -> number\\\",\\n          \\\"!effects\\\": [\\\"call !0 this=!2 !this.<i> number\\\"],\\n          \\\"!doc\\\": \\\"The findIndex() method returns an index in the array, if an element in the array satisfies the provided testing function. Otherwise -1 is returned.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\\\"\\n        },\\n        \\\"keys\\\": {\\n          \\\"!type\\\": \\\"fn() -> +iter[:t=number]\\\",\\n          \\\"!doc\\\": \\\"The keys() method returns a new Array Iterator that contains the keys for each index in the array.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/keys\\\"\\n        },\\n        \\\"values\\\": {\\n          \\\"!type\\\": \\\"fn() -> +iter[:t=!this.<i>]\\\",\\n          \\\"!doc\\\": \\\"The values() method returns a new Array Iterator object that contains the values for each index in the array.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/values\\\"\\n        },\\n        \\\":Symbol.iterator\\\": {\\n          \\\"!type\\\": \\\"fn() -> +iter[:t=!this.<i>]\\\",\\n          \\\"!doc\\\": \\\"Returns a new Array Iterator object that contains the values for each index in the array.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/@@iterator\\\"\\n        },\\n        \\\"includes\\\": {\\n          \\\"!type\\\": \\\"fn(value: ?, fromIndex?: number) -> bool\\\",\\n          \\\"!doc\\\": \\\"Determines whether an array includes a certain element, returning true or false as appropriate.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\\\"\\n        }\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array\\\",\\n      \\\"!doc\\\": \\\"The JavaScript Array global object is a constructor for arrays, which are high-level, list-like objects.\\\"\\n    },\\n    \\\"String\\\": {\\n      \\\"!type\\\": \\\"fn(value: ?) -> string\\\",\\n      \\\"fromCharCode\\\": {\\n        \\\"!type\\\": \\\"fn(code: number) -> string\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/fromCharCode\\\",\\n        \\\"!doc\\\": \\\"Returns a string created by using the specified sequence of Unicode values.\\\"\\n      },\\n      \\\"fromCodePoint\\\": {\\n        \\\"!type\\\": \\\"fn(point: number, point?: number) -> string\\\",\\n        \\\"!doc\\\": \\\"The static String.fromCodePoint() method returns a string created by using the specified sequence of code points.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint\\\"\\n      },\\n      \\\"raw\\\": {\\n        \\\"!type\\\": \\\"fn(template: [string], substitutions: ?, templateString: ?) -> string\\\",\\n        \\\"!doc\\\": \\\"The static String.raw() method is a tag function of template strings, used to get the raw string form of template strings.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/raw\\\"\\n      },\\n      \\\"prototype\\\": {\\n        \\\"!stdProto\\\": \\\"String\\\",\\n        \\\"length\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/JavaScript/Reference/Global_Objects/String/length\\\",\\n          \\\"!doc\\\": \\\"Represents the length of a string.\\\"\\n        },\\n        \\\"<i>\\\": \\\"string\\\",\\n        \\\"charAt\\\": {\\n          \\\"!type\\\": \\\"fn(i: number) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/charAt\\\",\\n          \\\"!doc\\\": \\\"Returns the specified character from a string.\\\"\\n        },\\n        \\\"charCodeAt\\\": {\\n          \\\"!type\\\": \\\"fn(i: number) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/charCodeAt\\\",\\n          \\\"!doc\\\": \\\"Returns the numeric Unicode value of the character at the given index (except for unicode codepoints > 0x10000).\\\"\\n        },\\n        \\\"indexOf\\\": {\\n          \\\"!type\\\": \\\"fn(char: string, from?: number) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/indexOf\\\",\\n          \\\"!doc\\\": \\\"Returns the index within the calling String object of the first occurrence of the specified value, starting the search at fromIndex,\\\\nreturns -1 if the value is not found.\\\"\\n        },\\n        \\\"lastIndexOf\\\": {\\n          \\\"!type\\\": \\\"fn(char: string, from?: number) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/lastIndexOf\\\",\\n          \\\"!doc\\\": \\\"Returns the index within the calling String object of the last occurrence of the specified value, or -1 if not found. The calling string is searched backward, starting at fromIndex.\\\"\\n        },\\n        \\\"substring\\\": {\\n          \\\"!type\\\": \\\"fn(from: number, to?: number) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/substring\\\",\\n          \\\"!doc\\\": \\\"Returns a subset of a string between one index and another, or through the end of the string.\\\"\\n        },\\n        \\\"substr\\\": {\\n          \\\"!type\\\": \\\"fn(from: number, length?: number) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/substr\\\",\\n          \\\"!doc\\\": \\\"Returns the characters in a string beginning at the specified location through the specified number of characters.\\\"\\n        },\\n        \\\"slice\\\": {\\n          \\\"!type\\\": \\\"fn(from: number, to?: number) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/slice\\\",\\n          \\\"!doc\\\": \\\"Extracts a section of a string and returns a new string.\\\"\\n        },\\n        \\\"padStart\\\": {\\n          \\\"!type\\\": \\\"fn(targetLength: number, padString?: string) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\\\",\\n          \\\"!doc\\\": \\\"Pads the current string with another string (repeated, if needed) so that the resulting string reaches the given length.\\\"\\n        },\\n        \\\"padEnd\\\": {\\n          \\\"!type\\\": \\\"fn(targetLength: number, padString?: string) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd\\\",\\n          \\\"!doc\\\": \\\"pads the current string with a given string (repeated, if needed) so that the resulting string reaches a given length.\\\"\\n        },\\n        \\\"trim\\\": {\\n          \\\"!type\\\": \\\"fn() -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/Trim\\\",\\n          \\\"!doc\\\": \\\"Removes whitespace from both ends of the string.\\\"\\n        },\\n        \\\"trimStart\\\": {\\n          \\\"!type\\\": \\\"fn() -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trimStart\\\",\\n          \\\"!doc\\\": \\\"Removes whitespace from the beginning of a string. \\\"\\n        },\\n        \\\"trimLeft\\\": \\\"String.prototype.trimStart\\\",\\n        \\\"trimEnd\\\": {\\n          \\\"!type\\\": \\\"fn() -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trimEnd\\\",\\n          \\\"!doc\\\": \\\"Removes whitespace from the end of a string.\\\"\\n        },\\n        \\\"trimRight\\\": \\\"String.prototype.trimEnd\\\",\\n        \\\"toUpperCase\\\": {\\n          \\\"!type\\\": \\\"fn() -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/toUpperCase\\\",\\n          \\\"!doc\\\": \\\"Returns the calling string value converted to uppercase.\\\"\\n        },\\n        \\\"toLowerCase\\\": {\\n          \\\"!type\\\": \\\"fn() -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/toLowerCase\\\",\\n          \\\"!doc\\\": \\\"Returns the calling string value converted to lowercase.\\\"\\n        },\\n        \\\"toLocaleUpperCase\\\": {\\n          \\\"!type\\\": \\\"fn() -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/toLocaleUpperCase\\\",\\n          \\\"!doc\\\": \\\"Returns the calling string value converted to upper case, according to any locale-specific case mappings.\\\"\\n        },\\n        \\\"toLocaleLowerCase\\\": {\\n          \\\"!type\\\": \\\"fn() -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/toLocaleLowerCase\\\",\\n          \\\"!doc\\\": \\\"Returns the calling string value converted to lower case, according to any locale-specific case mappings.\\\"\\n        },\\n        \\\"split\\\": {\\n          \\\"!type\\\": \\\"fn(pattern?: string|+RegExp, limit?: number) -> [string]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/split\\\",\\n          \\\"!doc\\\": \\\"Splits a String object into an array of strings by separating the string into substrings.\\\"\\n        },\\n        \\\"concat\\\": {\\n          \\\"!type\\\": \\\"fn(other: string) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/concat\\\",\\n          \\\"!doc\\\": \\\"Combines the text of two or more strings and returns a new string.\\\"\\n        },\\n        \\\"localeCompare\\\": {\\n          \\\"!type\\\": \\\"fn(other: string) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/localeCompare\\\",\\n          \\\"!doc\\\": \\\"Returns a number indicating whether a reference string comes before or after or is the same as the given string in sort order.\\\"\\n        },\\n        \\\"match\\\": {\\n          \\\"!type\\\": \\\"fn(pattern: +RegExp) -> [string]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/match\\\",\\n          \\\"!doc\\\": \\\"Used to retrieve the matches when matching a string against a regular expression.\\\"\\n        },\\n        \\\"replace\\\": {\\n          \\\"!type\\\": \\\"fn(pattern: string|+RegExp, replacement: string) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/replace\\\",\\n          \\\"!doc\\\": \\\"Returns a new string with some or all matches of a pattern replaced by a replacement.  The pattern can be a string or a RegExp, and the replacement can be a string or a function to be called for each match.\\\"\\n        },\\n        \\\"search\\\": {\\n          \\\"!type\\\": \\\"fn(pattern: +RegExp) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/search\\\",\\n          \\\"!doc\\\": \\\"Executes the search for a match between a regular expression and this String object.\\\"\\n        },\\n        \\\"codePointAt\\\": {\\n          \\\"!type\\\": \\\"fn(pos: number) -> number\\\",\\n          \\\"!doc\\\": \\\"The codePointAt() method returns a non-negative integer that is the UTF-16 encoded code point value.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt\\\"\\n        },\\n        \\\"endsWith\\\": {\\n          \\\"!type\\\": \\\"fn(searchString: string, position?: number) -> bool\\\",\\n          \\\"!doc\\\": \\\"The endsWith() method determines whether a string ends with the characters of another string, returning true or false as appropriate.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\\\"\\n        },\\n        \\\"includes\\\": {\\n          \\\"!type\\\": \\\"fn(searchString: string, position?: number) -> bool\\\",\\n          \\\"!doc\\\": \\\"The includes() method determines whether one string may be found within another string, returning true or false as appropriate.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/contains\\\"\\n        },\\n        \\\"normalize\\\": {\\n          \\\"!type\\\": \\\"fn(form: string) -> string\\\",\\n          \\\"!doc\\\": \\\"The normalize() method returns the Unicode Normalization Form of a given string (if the value isn't a string, it will be converted to one first).\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\\\"\\n        },\\n        \\\"repeat\\\": {\\n          \\\"!type\\\": \\\"fn(count: number) -> string\\\",\\n          \\\"!doc\\\": \\\"The repeat() method constructs and returns a new string which contains the specified number of copies of the string on which it was called, concatenated together.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\\\"\\n        },\\n        \\\"startsWith\\\": {\\n          \\\"!type\\\": \\\"fn(searchString: string, position?: number) -> bool\\\",\\n          \\\"!doc\\\": \\\"The startsWith() method determines whether a string begins with the characters of another string, returning true or false as appropriate.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\\\"\\n        },\\n        \\\":Symbol.iterator\\\": {\\n          \\\"!type\\\": \\\"fn() -> +iter[:t=string]\\\",\\n          \\\"!doc\\\": \\\"Returns a new Iterator object that iterates over the code points of a String value, returning each code point as a String value.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/@@iterator\\\"\\n        }\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String\\\",\\n      \\\"!doc\\\": \\\"The String global object is a constructor for strings, or a sequence of characters.\\\"\\n    },\\n    \\\"Number\\\": {\\n      \\\"!type\\\": \\\"fn(value: ?) -> number\\\",\\n      \\\"MAX_VALUE\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Number/MAX_VALUE\\\",\\n        \\\"!doc\\\": \\\"The maximum numeric value representable in JavaScript.\\\"\\n      },\\n      \\\"MIN_VALUE\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Number/MIN_VALUE\\\",\\n        \\\"!doc\\\": \\\"The smallest positive numeric value representable in JavaScript.\\\"\\n      },\\n      \\\"POSITIVE_INFINITY\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Number/POSITIVE_INFINITY\\\",\\n        \\\"!doc\\\": \\\"A value representing the positive Infinity value.\\\"\\n      },\\n      \\\"NEGATIVE_INFINITY\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Number/NEGATIVE_INFINITY\\\",\\n        \\\"!doc\\\": \\\"A value representing the negative Infinity value.\\\"\\n      },\\n      \\\"prototype\\\": {\\n        \\\"!stdProto\\\": \\\"Number\\\",\\n        \\\"toString\\\": {\\n          \\\"!type\\\": \\\"fn(radix?: number) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Number/toString\\\",\\n          \\\"!doc\\\": \\\"Returns a string representing the specified Number object\\\"\\n        },\\n        \\\"toFixed\\\": {\\n          \\\"!type\\\": \\\"fn(digits: number) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Number/toFixed\\\",\\n          \\\"!doc\\\": \\\"Formats a number using fixed-point notation\\\"\\n        },\\n        \\\"toExponential\\\": {\\n          \\\"!type\\\": \\\"fn(digits: number) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Number/toExponential\\\",\\n          \\\"!doc\\\": \\\"Returns a string representing the Number object in exponential notation\\\"\\n        },\\n        \\\"toPrecision\\\": {\\n          \\\"!type\\\": \\\"fn(digits: number) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Number/toPrecision\\\",\\n          \\\"!doc\\\": \\\"The toPrecision() method returns a string representing the number to the specified precision.\\\"\\n        }\\n      },\\n      \\\"EPSILON\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!doc\\\": \\\"The Number.EPSILON property represents the difference between one and the smallest value greater than one that can be represented as a Number.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\\\"\\n      },\\n      \\\"MAX_SAFE_INTEGER\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!doc\\\": \\\"The Number.MAX_SAFE_INTEGER constant represents the maximum safe integer in JavaScript (253 - 1).\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\\\"\\n      },\\n      \\\"MIN_SAFE_INTEGER\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!doc\\\": \\\"The Number.MIN_SAFE_INTEGER constant represents the minimum safe integer in JavaScript (-(253 - 1)).\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER\\\"\\n      },\\n      \\\"isFinite\\\": {\\n        \\\"!type\\\": \\\"fn(testValue: ?) -> bool\\\",\\n        \\\"!doc\\\": \\\"The Number.isFinite() method determines whether the passed value is finite.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\\\"\\n      },\\n      \\\"isInteger\\\": {\\n        \\\"!type\\\": \\\"fn(testValue: ?) -> bool\\\",\\n        \\\"!doc\\\": \\\"The Number.isInteger() method determines whether the passed value is an integer.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\\\"\\n      },\\n      \\\"isNaN\\\": {\\n        \\\"!type\\\": \\\"fn(testValue: ?) -> bool\\\",\\n        \\\"!doc\\\": \\\"The Number.isNaN() method determines whether the passed value is NaN. More robust version of the original global isNaN().\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\\\"\\n      },\\n      \\\"isSafeInteger\\\": {\\n        \\\"!type\\\": \\\"fn(testValue: ?) -> bool\\\",\\n        \\\"!doc\\\": \\\"The Number.isSafeInteger() method determines whether the provided value is a number that is a safe integer. A safe integer is an integer that\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger\\\"\\n      },\\n      \\\"parseFloat\\\": {\\n        \\\"!type\\\": \\\"fn(string: string) -> number\\\",\\n        \\\"!doc\\\": \\\"The Number.parseFloat() method parses a string argument and returns a floating point number.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/parseFloat\\\"\\n      },\\n      \\\"parseInt\\\": {\\n        \\\"!type\\\": \\\"fn(string: string, radix?: number) -> number\\\",\\n        \\\"!doc\\\": \\\"The Number.parseInt() method parses a string argument and returns an integer of the specified radix or base.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/parseInt\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Number\\\",\\n      \\\"!doc\\\": \\\"The Number JavaScript object is a wrapper object allowing you to work with numerical values. A Number object is created using the Number() constructor.\\\"\\n    },\\n    \\\"Boolean\\\": {\\n      \\\"!type\\\": \\\"fn(value: ?) -> bool\\\",\\n      \\\"prototype\\\": {\\n        \\\"!stdProto\\\": \\\"Boolean\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Boolean\\\",\\n      \\\"!doc\\\": \\\"The Boolean object is an object wrapper for a boolean value.\\\"\\n    },\\n    \\\"RegExp\\\": {\\n      \\\"!type\\\": \\\"fn(source: string, flags?: string)\\\",\\n      \\\"prototype\\\": {\\n        \\\"!stdProto\\\": \\\"RegExp\\\",\\n        \\\"exec\\\": {\\n          \\\"!type\\\": \\\"fn(input: string) -> [string]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/RegExp/exec\\\",\\n          \\\"!doc\\\": \\\"Executes a search for a match in a specified string. Returns a result array, or null.\\\"\\n        },\\n        \\\"test\\\": {\\n          \\\"!type\\\": \\\"fn(input: string) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/RegExp/test\\\",\\n          \\\"!doc\\\": \\\"Executes the search for a match between a regular expression and a specified string. Returns true or false.\\\"\\n        },\\n        \\\"global\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/RegExp\\\",\\n          \\\"!doc\\\": \\\"Creates a regular expression object for matching text with a pattern.\\\"\\n        },\\n        \\\"ignoreCase\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/RegExp\\\",\\n          \\\"!doc\\\": \\\"Creates a regular expression object for matching text with a pattern.\\\"\\n        },\\n        \\\"multiline\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/RegExp/multiline\\\",\\n          \\\"!doc\\\": \\\"Reflects whether or not to search in strings across multiple lines.\\\"\\n        },\\n        \\\"source\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/RegExp/source\\\",\\n          \\\"!doc\\\": \\\"A read-only property that contains the text of the pattern, excluding the forward slashes.\\\"\\n        },\\n        \\\"lastIndex\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/RegExp/lastIndex\\\",\\n          \\\"!doc\\\": \\\"A read/write integer property that specifies the index at which to start the next match.\\\"\\n        },\\n        \\\"flags\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!doc\\\": \\\"The flags property returns a string consisting of the flags of the current regular expression object.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/flags\\\"\\n        },\\n        \\\"sticky\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!doc\\\": \\\"The sticky property reflects whether or not the search is sticky (searches in strings only from the index indicated by the lastIndex property of this regular expression). sticky is a read-only property of an individual regular expression object.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/sticky\\\"\\n        },\\n        \\\"unicode\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!doc\\\": \\\"The 'u' flag enables various Unicode-related features.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/unicode\\\"\\n        }\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/RegExp\\\",\\n      \\\"!doc\\\": \\\"Creates a regular expression object for matching text with a pattern.\\\"\\n    },\\n    \\\"Date\\\": {\\n      \\\"!type\\\": \\\"fn(ms: number)\\\",\\n      \\\"parse\\\": {\\n        \\\"!type\\\": \\\"fn(source: string) -> +Date\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/parse\\\",\\n        \\\"!doc\\\": \\\"Parses a string representation of a date, and returns the number of milliseconds since January 1, 1970, 00:00:00 UTC.\\\"\\n      },\\n      \\\"UTC\\\": {\\n        \\\"!type\\\": \\\"fn(year: number, month: number, date: number, hour?: number, min?: number, sec?: number, ms?: number) -> number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/UTC\\\",\\n        \\\"!doc\\\": \\\"Accepts the same parameters as the longest form of the constructor, and returns the number of milliseconds in a Date object since January 1, 1970, 00:00:00, universal time.\\\"\\n      },\\n      \\\"now\\\": {\\n        \\\"!type\\\": \\\"fn() -> number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/now\\\",\\n        \\\"!doc\\\": \\\"Returns the number of milliseconds elapsed since 1 January 1970 00:00:00 UTC.\\\"\\n      },\\n      \\\"prototype\\\": {\\n        \\\"toUTCString\\\": {\\n          \\\"!type\\\": \\\"fn() -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/toUTCString\\\",\\n          \\\"!doc\\\": \\\"Converts a date to a string, using the universal time convention.\\\"\\n        },\\n        \\\"toISOString\\\": {\\n          \\\"!type\\\": \\\"fn() -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/toISOString\\\",\\n          \\\"!doc\\\": \\\"JavaScript provides a direct way to convert a date object into a string in ISO format, the ISO 8601 Extended Format.\\\"\\n        },\\n        \\\"toDateString\\\": {\\n          \\\"!type\\\": \\\"fn() -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/toDateString\\\",\\n          \\\"!doc\\\": \\\"Returns the date portion of a Date object in human readable form in American English.\\\"\\n        },\\n        \\\"toTimeString\\\": {\\n          \\\"!type\\\": \\\"fn() -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/toTimeString\\\",\\n          \\\"!doc\\\": \\\"Returns the time portion of a Date object in human readable form in American English.\\\"\\n        },\\n        \\\"toLocaleDateString\\\": {\\n          \\\"!type\\\": \\\"fn() -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/toLocaleDateString\\\",\\n          \\\"!doc\\\": \\\"Converts a date to a string, returning the \\\\\\\"date\\\\\\\" portion using the operating system's locale's conventions.\\\"\\n        },\\n        \\\"toLocaleTimeString\\\": {\\n          \\\"!type\\\": \\\"fn() -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\\\",\\n          \\\"!doc\\\": \\\"Converts a date to a string, returning the \\\\\\\"time\\\\\\\" portion using the current locale's conventions.\\\"\\n        },\\n        \\\"getTime\\\": {\\n          \\\"!type\\\": \\\"fn() -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/getTime\\\",\\n          \\\"!doc\\\": \\\"Returns the numeric value corresponding to the time for the specified date according to universal time.\\\"\\n        },\\n        \\\"getFullYear\\\": {\\n          \\\"!type\\\": \\\"fn() -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/getFullYear\\\",\\n          \\\"!doc\\\": \\\"Returns the year of the specified date according to local time.\\\"\\n        },\\n        \\\"getYear\\\": {\\n          \\\"!type\\\": \\\"fn() -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/getYear\\\",\\n          \\\"!doc\\\": \\\"Returns the year in the specified date according to local time.\\\"\\n        },\\n        \\\"getMonth\\\": {\\n          \\\"!type\\\": \\\"fn() -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/getMonth\\\",\\n          \\\"!doc\\\": \\\"Returns the month in the specified date according to local time.\\\"\\n        },\\n        \\\"getUTCMonth\\\": {\\n          \\\"!type\\\": \\\"fn() -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/getUTCMonth\\\",\\n          \\\"!doc\\\": \\\"Returns the month of the specified date according to universal time.\\\"\\n        },\\n        \\\"getDate\\\": {\\n          \\\"!type\\\": \\\"fn() -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/getDate\\\",\\n          \\\"!doc\\\": \\\"Returns the day of the month for the specified date according to local time.\\\"\\n        },\\n        \\\"getUTCDate\\\": {\\n          \\\"!type\\\": \\\"fn() -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/getUTCDate\\\",\\n          \\\"!doc\\\": \\\"Returns the day (date) of the month in the specified date according to universal time.\\\"\\n        },\\n        \\\"getDay\\\": {\\n          \\\"!type\\\": \\\"fn() -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/getDay\\\",\\n          \\\"!doc\\\": \\\"Returns the day of the week for the specified date according to local time.\\\"\\n        },\\n        \\\"getUTCDay\\\": {\\n          \\\"!type\\\": \\\"fn() -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/getUTCDay\\\",\\n          \\\"!doc\\\": \\\"Returns the day of the week in the specified date according to universal time.\\\"\\n        },\\n        \\\"getHours\\\": {\\n          \\\"!type\\\": \\\"fn() -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/getHours\\\",\\n          \\\"!doc\\\": \\\"Returns the hour for the specified date according to local time.\\\"\\n        },\\n        \\\"getUTCHours\\\": {\\n          \\\"!type\\\": \\\"fn() -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/getUTCHours\\\",\\n          \\\"!doc\\\": \\\"Returns the hours in the specified date according to universal time.\\\"\\n        },\\n        \\\"getMinutes\\\": {\\n          \\\"!type\\\": \\\"fn() -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/getMinutes\\\",\\n          \\\"!doc\\\": \\\"Returns the minutes in the specified date according to local time.\\\"\\n        },\\n        \\\"getUTCMinutes\\\": {\\n          \\\"!type\\\": \\\"fn() -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date\\\",\\n          \\\"!doc\\\": \\\"Creates JavaScript Date instances which let you work with dates and times.\\\"\\n        },\\n        \\\"getSeconds\\\": {\\n          \\\"!type\\\": \\\"fn() -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/getSeconds\\\",\\n          \\\"!doc\\\": \\\"Returns the seconds in the specified date according to local time.\\\"\\n        },\\n        \\\"getUTCSeconds\\\": {\\n          \\\"!type\\\": \\\"fn() -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/getUTCSeconds\\\",\\n          \\\"!doc\\\": \\\"Returns the seconds in the specified date according to universal time.\\\"\\n        },\\n        \\\"getMilliseconds\\\": {\\n          \\\"!type\\\": \\\"fn() -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/getMilliseconds\\\",\\n          \\\"!doc\\\": \\\"Returns the milliseconds in the specified date according to local time.\\\"\\n        },\\n        \\\"getUTCMilliseconds\\\": {\\n          \\\"!type\\\": \\\"fn() -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/getUTCMilliseconds\\\",\\n          \\\"!doc\\\": \\\"Returns the milliseconds in the specified date according to universal time.\\\"\\n        },\\n        \\\"getTimezoneOffset\\\": {\\n          \\\"!type\\\": \\\"fn() -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/getTimezoneOffset\\\",\\n          \\\"!doc\\\": \\\"Returns the time-zone offset from UTC, in minutes, for the current locale.\\\"\\n        },\\n        \\\"setTime\\\": {\\n          \\\"!type\\\": \\\"fn(date: +Date) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/setTime\\\",\\n          \\\"!doc\\\": \\\"Sets the Date object to the time represented by a number of milliseconds since January 1, 1970, 00:00:00 UTC.\\\"\\n        },\\n        \\\"setFullYear\\\": {\\n          \\\"!type\\\": \\\"fn(year: number) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/setFullYear\\\",\\n          \\\"!doc\\\": \\\"Sets the full year for a specified date according to local time.\\\"\\n        },\\n        \\\"setUTCFullYear\\\": {\\n          \\\"!type\\\": \\\"fn(year: number) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/setUTCFullYear\\\",\\n          \\\"!doc\\\": \\\"Sets the full year for a specified date according to universal time.\\\"\\n        },\\n        \\\"setMonth\\\": {\\n          \\\"!type\\\": \\\"fn(month: number) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/setMonth\\\",\\n          \\\"!doc\\\": \\\"Set the month for a specified date according to local time.\\\"\\n        },\\n        \\\"setUTCMonth\\\": {\\n          \\\"!type\\\": \\\"fn(month: number) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/setUTCMonth\\\",\\n          \\\"!doc\\\": \\\"Sets the month for a specified date according to universal time.\\\"\\n        },\\n        \\\"setDate\\\": {\\n          \\\"!type\\\": \\\"fn(day: number) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/setDate\\\",\\n          \\\"!doc\\\": \\\"Sets the day of the month for a specified date according to local time.\\\"\\n        },\\n        \\\"setUTCDate\\\": {\\n          \\\"!type\\\": \\\"fn(day: number) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/setUTCDate\\\",\\n          \\\"!doc\\\": \\\"Sets the day of the month for a specified date according to universal time.\\\"\\n        },\\n        \\\"setHours\\\": {\\n          \\\"!type\\\": \\\"fn(hour: number) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/setHours\\\",\\n          \\\"!doc\\\": \\\"Sets the hours for a specified date according to local time, and returns the number of milliseconds since 1 January 1970 00:00:00 UTC until the time represented by the updated Date instance.\\\"\\n        },\\n        \\\"setUTCHours\\\": {\\n          \\\"!type\\\": \\\"fn(hour: number) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/setUTCHours\\\",\\n          \\\"!doc\\\": \\\"Sets the hour for a specified date according to universal time.\\\"\\n        },\\n        \\\"setMinutes\\\": {\\n          \\\"!type\\\": \\\"fn(min: number) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/setMinutes\\\",\\n          \\\"!doc\\\": \\\"Sets the minutes for a specified date according to local time.\\\"\\n        },\\n        \\\"setUTCMinutes\\\": {\\n          \\\"!type\\\": \\\"fn(min: number) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/setUTCMinutes\\\",\\n          \\\"!doc\\\": \\\"Sets the minutes for a specified date according to universal time.\\\"\\n        },\\n        \\\"setSeconds\\\": {\\n          \\\"!type\\\": \\\"fn(sec: number) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/setSeconds\\\",\\n          \\\"!doc\\\": \\\"Sets the seconds for a specified date according to local time.\\\"\\n        },\\n        \\\"setUTCSeconds\\\": {\\n          \\\"!type\\\": \\\"fn(sec: number) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/setUTCSeconds\\\",\\n          \\\"!doc\\\": \\\"Sets the seconds for a specified date according to universal time.\\\"\\n        },\\n        \\\"setMilliseconds\\\": {\\n          \\\"!type\\\": \\\"fn(ms: number) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/setMilliseconds\\\",\\n          \\\"!doc\\\": \\\"Sets the milliseconds for a specified date according to local time.\\\"\\n        },\\n        \\\"setUTCMilliseconds\\\": {\\n          \\\"!type\\\": \\\"fn(ms: number) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/setUTCMilliseconds\\\",\\n          \\\"!doc\\\": \\\"Sets the milliseconds for a specified date according to universal time.\\\"\\n        },\\n        \\\"toJSON\\\": {\\n          \\\"!type\\\": \\\"fn() -> string\\\",\\n          \\\"!doc\\\": \\\"Returns a string (using toISOString()) representing the Date object's value.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toJSON\\\"\\n        }\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date\\\",\\n      \\\"!doc\\\": \\\"Creates JavaScript Date instances which let you work with dates and times.\\\"\\n    },\\n    \\\"Error\\\": {\\n      \\\"!type\\\": \\\"fn(message: string)\\\",\\n      \\\"prototype\\\": {\\n        \\\"name\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Error/name\\\",\\n          \\\"!doc\\\": \\\"A name for the type of error.\\\"\\n        },\\n        \\\"message\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Error/message\\\",\\n          \\\"!doc\\\": \\\"A human-readable description of the error.\\\"\\n        }\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Error\\\",\\n      \\\"!doc\\\": \\\"Creates an error object.\\\"\\n    },\\n    \\\"SyntaxError\\\": {\\n      \\\"!type\\\": \\\"fn(message: string)\\\",\\n      \\\"prototype\\\": \\\"Error.prototype\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/SyntaxError\\\",\\n      \\\"!doc\\\": \\\"Represents an error when trying to interpret syntactically invalid code.\\\"\\n    },\\n    \\\"ReferenceError\\\": {\\n      \\\"!type\\\": \\\"fn(message: string)\\\",\\n      \\\"prototype\\\": \\\"Error.prototype\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/ReferenceError\\\",\\n      \\\"!doc\\\": \\\"Represents an error when a non-existent variable is referenced.\\\"\\n    },\\n    \\\"URIError\\\": {\\n      \\\"!type\\\": \\\"fn(message: string)\\\",\\n      \\\"prototype\\\": \\\"Error.prototype\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/URIError\\\",\\n      \\\"!doc\\\": \\\"Represents an error when a malformed URI is encountered.\\\"\\n    },\\n    \\\"EvalError\\\": {\\n      \\\"!type\\\": \\\"fn(message: string)\\\",\\n      \\\"prototype\\\": \\\"Error.prototype\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/EvalError\\\",\\n      \\\"!doc\\\": \\\"Represents an error regarding the eval function.\\\"\\n    },\\n    \\\"RangeError\\\": {\\n      \\\"!type\\\": \\\"fn(message: string)\\\",\\n      \\\"prototype\\\": \\\"Error.prototype\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/RangeError\\\",\\n      \\\"!doc\\\": \\\"Represents an error when a number is not within the correct range allowed.\\\"\\n    },\\n    \\\"TypeError\\\": {\\n      \\\"!type\\\": \\\"fn(message: string)\\\",\\n      \\\"prototype\\\": \\\"Error.prototype\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/TypeError\\\",\\n      \\\"!doc\\\": \\\"Represents an error an error when a value is not of the expected type.\\\"\\n    },\\n    \\\"parseInt\\\": {\\n      \\\"!type\\\": \\\"fn(string: string, radix?: number) -> number\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/parseInt\\\",\\n      \\\"!doc\\\": \\\"Parses a string argument and returns an integer of the specified radix or base.\\\"\\n    },\\n    \\\"parseFloat\\\": {\\n      \\\"!type\\\": \\\"fn(string: string) -> number\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/parseFloat\\\",\\n      \\\"!doc\\\": \\\"Parses a string argument and returns a floating point number.\\\"\\n    },\\n    \\\"isNaN\\\": {\\n      \\\"!type\\\": \\\"fn(value: number) -> bool\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/isNaN\\\",\\n      \\\"!doc\\\": \\\"Determines whether a value is NaN or not. Be careful, this function is broken. You may be interested in ECMAScript 6 Number.isNaN.\\\"\\n    },\\n    \\\"isFinite\\\": {\\n      \\\"!type\\\": \\\"fn(value: number) -> bool\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/isFinite\\\",\\n      \\\"!doc\\\": \\\"Determines whether the passed value is a finite number.\\\"\\n    },\\n    \\\"eval\\\": {\\n      \\\"!type\\\": \\\"fn(code: string) -> ?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/eval\\\",\\n      \\\"!doc\\\": \\\"Evaluates JavaScript code represented as a string.\\\"\\n    },\\n    \\\"encodeURI\\\": {\\n      \\\"!type\\\": \\\"fn(uri: string) -> string\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/encodeURI\\\",\\n      \\\"!doc\\\": \\\"Encodes a Uniform Resource Identifier (URI) by replacing each instance of certain characters by one, two, three, or four escape sequences representing the UTF-8 encoding of the character (will only be four escape sequences for characters composed of two \\\\\\\"surrogate\\\\\\\" characters).\\\"\\n    },\\n    \\\"encodeURIComponent\\\": {\\n      \\\"!type\\\": \\\"fn(uri: string) -> string\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/encodeURIComponent\\\",\\n      \\\"!doc\\\": \\\"Encodes a Uniform Resource Identifier (URI) component by replacing each instance of certain characters by one, two, three, or four escape sequences representing the UTF-8 encoding of the character (will only be four escape sequences for characters composed of two \\\\\\\"surrogate\\\\\\\" characters).\\\"\\n    },\\n    \\\"decodeURI\\\": {\\n      \\\"!type\\\": \\\"fn(uri: string) -> string\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/decodeURI\\\",\\n      \\\"!doc\\\": \\\"Decodes a Uniform Resource Identifier (URI) previously created by encodeURI or by a similar routine.\\\"\\n    },\\n    \\\"decodeURIComponent\\\": {\\n      \\\"!type\\\": \\\"fn(uri: string) -> string\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/decodeURIComponent\\\",\\n      \\\"!doc\\\": \\\"Decodes a Uniform Resource Identifier (URI) component previously created by encodeURIComponent or by a similar routine.\\\"\\n    },\\n    \\\"Math\\\": {\\n      \\\"E\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/E\\\",\\n        \\\"!doc\\\": \\\"The base of natural logarithms, e, approximately 2.718.\\\"\\n      },\\n      \\\"LN2\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/LN2\\\",\\n        \\\"!doc\\\": \\\"The natural logarithm of 2, approximately 0.693.\\\"\\n      },\\n      \\\"LN10\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/LN10\\\",\\n        \\\"!doc\\\": \\\"The natural logarithm of 10, approximately 2.302.\\\"\\n      },\\n      \\\"LOG2E\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/LOG2E\\\",\\n        \\\"!doc\\\": \\\"The base 2 logarithm of E (approximately 1.442).\\\"\\n      },\\n      \\\"LOG10E\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/LOG10E\\\",\\n        \\\"!doc\\\": \\\"The base 10 logarithm of E (approximately 0.434).\\\"\\n      },\\n      \\\"SQRT1_2\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/SQRT1_2\\\",\\n        \\\"!doc\\\": \\\"The square root of 1/2; equivalently, 1 over the square root of 2, approximately 0.707.\\\"\\n      },\\n      \\\"SQRT2\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/SQRT2\\\",\\n        \\\"!doc\\\": \\\"The square root of 2, approximately 1.414.\\\"\\n      },\\n      \\\"PI\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/PI\\\",\\n        \\\"!doc\\\": \\\"The ratio of the circumference of a circle to its diameter, approximately 3.14159.\\\"\\n      },\\n      \\\"abs\\\": {\\n        \\\"!type\\\": \\\"fn(number) -> number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/abs\\\",\\n        \\\"!doc\\\": \\\"Returns the absolute value of a number.\\\"\\n      },\\n      \\\"cos\\\": {\\n        \\\"!type\\\": \\\"fn(number) -> number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/cos\\\",\\n        \\\"!doc\\\": \\\"Returns the cosine of a number.\\\"\\n      },\\n      \\\"sin\\\": {\\n        \\\"!type\\\": \\\"fn(number) -> number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/sin\\\",\\n        \\\"!doc\\\": \\\"Returns the sine of a number.\\\"\\n      },\\n      \\\"tan\\\": {\\n        \\\"!type\\\": \\\"fn(number) -> number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/tan\\\",\\n        \\\"!doc\\\": \\\"Returns the tangent of a number.\\\"\\n      },\\n      \\\"acos\\\": {\\n        \\\"!type\\\": \\\"fn(number) -> number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/acos\\\",\\n        \\\"!doc\\\": \\\"Returns the arccosine (in radians) of a number.\\\"\\n      },\\n      \\\"asin\\\": {\\n        \\\"!type\\\": \\\"fn(number) -> number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/asin\\\",\\n        \\\"!doc\\\": \\\"Returns the arcsine (in radians) of a number.\\\"\\n      },\\n      \\\"atan\\\": {\\n        \\\"!type\\\": \\\"fn(number) -> number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/atan\\\",\\n        \\\"!doc\\\": \\\"Returns the arctangent (in radians) of a number.\\\"\\n      },\\n      \\\"atan2\\\": {\\n        \\\"!type\\\": \\\"fn(y: number, x: number) -> number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/atan2\\\",\\n        \\\"!doc\\\": \\\"Returns the arctangent of the quotient of its arguments.\\\"\\n      },\\n      \\\"ceil\\\": {\\n        \\\"!type\\\": \\\"fn(number) -> number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/ceil\\\",\\n        \\\"!doc\\\": \\\"Returns the smallest integer greater than or equal to a number.\\\"\\n      },\\n      \\\"floor\\\": {\\n        \\\"!type\\\": \\\"fn(number) -> number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/floor\\\",\\n        \\\"!doc\\\": \\\"Returns the largest integer less than or equal to a number.\\\"\\n      },\\n      \\\"round\\\": {\\n        \\\"!type\\\": \\\"fn(number) -> number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/round\\\",\\n        \\\"!doc\\\": \\\"Returns the value of a number rounded to the nearest integer.\\\"\\n      },\\n      \\\"exp\\\": {\\n        \\\"!type\\\": \\\"fn(number) -> number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/exp\\\",\\n        \\\"!doc\\\": \\\"Returns Ex, where x is the argument, and E is Euler's constant, the base of the natural logarithms.\\\"\\n      },\\n      \\\"log\\\": {\\n        \\\"!type\\\": \\\"fn(number) -> number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/log\\\",\\n        \\\"!doc\\\": \\\"Returns the natural logarithm (base E) of a number.\\\"\\n      },\\n      \\\"sqrt\\\": {\\n        \\\"!type\\\": \\\"fn(number) -> number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/sqrt\\\",\\n        \\\"!doc\\\": \\\"Returns the square root of a number.\\\"\\n      },\\n      \\\"pow\\\": {\\n        \\\"!type\\\": \\\"fn(number, number) -> number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/pow\\\",\\n        \\\"!doc\\\": \\\"Returns base to the exponent power, that is, baseexponent.\\\"\\n      },\\n      \\\"max\\\": {\\n        \\\"!type\\\": \\\"fn(number, number) -> number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/max\\\",\\n        \\\"!doc\\\": \\\"Returns the largest of zero or more numbers.\\\"\\n      },\\n      \\\"min\\\": {\\n        \\\"!type\\\": \\\"fn(number, number) -> number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/min\\\",\\n        \\\"!doc\\\": \\\"Returns the smallest of zero or more numbers.\\\"\\n      },\\n      \\\"random\\\": {\\n        \\\"!type\\\": \\\"fn() -> number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/random\\\",\\n        \\\"!doc\\\": \\\"Returns a floating-point, pseudo-random number in the range [0, 1) that is, from 0 (inclusive) up to but not including 1 (exclusive), which you can then scale to your desired range.\\\"\\n      },\\n      \\\"acosh\\\": {\\n        \\\"!type\\\": \\\"fn(x: number) -> number\\\",\\n        \\\"!doc\\\": \\\"The Math.acosh() function returns the hyperbolic arc-cosine of a number.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/acosh\\\"\\n      },\\n      \\\"asinh\\\": {\\n        \\\"!type\\\": \\\"fn(x: number) -> number\\\",\\n        \\\"!doc\\\": \\\"The Math.asinh() function returns the hyperbolic arcsine of a number.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/asinh\\\"\\n      },\\n      \\\"atanh\\\": {\\n        \\\"!type\\\": \\\"fn(x: number) -> number\\\",\\n        \\\"!doc\\\": \\\"The Math.atanh() function returns the hyperbolic arctangent of a number.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/atanh\\\"\\n      },\\n      \\\"cbrt\\\": {\\n        \\\"!type\\\": \\\"fn(x: number) -> number\\\",\\n        \\\"!doc\\\": \\\"The Math.cbrt() function returns the cube root of a number.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/cbrt\\\"\\n      },\\n      \\\"clz32\\\": {\\n        \\\"!type\\\": \\\"fn(x: number) -> number\\\",\\n        \\\"!doc\\\": \\\"The Math.clz32() function returns the number of leading zero bits in the 32-bit binary representation of a number.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\\\"\\n      },\\n      \\\"cosh\\\": {\\n        \\\"!type\\\": \\\"fn(x: number) -> number\\\",\\n        \\\"!doc\\\": \\\"The Math.cosh() function returns the hyperbolic cosine of a number, that can be expressed using the constant e:\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/cosh\\\"\\n      },\\n      \\\"expm1\\\": {\\n        \\\"!type\\\": \\\"fn(x: number) -> number\\\",\\n        \\\"!doc\\\": \\\"The Math.expm1() function returns ex - 1, where x is the argument, and e the base of the natural logarithms.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/expm1\\\"\\n      },\\n      \\\"fround\\\": {\\n        \\\"!type\\\": \\\"fn(x: number) -> number\\\",\\n        \\\"!doc\\\": \\\"The Math.fround() function returns the nearest single precision float representation of a number.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\\\"\\n      },\\n      \\\"hypot\\\": {\\n        \\\"!type\\\": \\\"fn(value: number) -> number\\\",\\n        \\\"!doc\\\": \\\"The Math.hypot() function returns the square root of the sum of squares of its arguments.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/hypot\\\"\\n      },\\n      \\\"imul\\\": {\\n        \\\"!type\\\": \\\"fn(a: number, b: number) -> number\\\",\\n        \\\"!doc\\\": \\\"The Math.imul() function returns the result of the C-like 32-bit multiplication of the two parameters.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\\\"\\n      },\\n      \\\"log10\\\": {\\n        \\\"!type\\\": \\\"fn(x: number) -> number\\\",\\n        \\\"!doc\\\": \\\"The Math.log10() function returns the base 10 logarithm of a number.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/log10\\\"\\n      },\\n      \\\"log1p\\\": {\\n        \\\"!type\\\": \\\"fn(x: number) -> number\\\",\\n        \\\"!doc\\\": \\\"The Math.log1p() function returns the natural logarithm (base e) of 1 + a number.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/log1p\\\"\\n      },\\n      \\\"log2\\\": {\\n        \\\"!type\\\": \\\"fn(x: number) -> number\\\",\\n        \\\"!doc\\\": \\\"The Math.log2() function returns the base 2 logarithm of a number.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/log2\\\"\\n      },\\n      \\\"sign\\\": {\\n        \\\"!type\\\": \\\"fn(x: number) -> number\\\",\\n        \\\"!doc\\\": \\\"The Math.sign() function returns the sign of a number, indicating whether the number is positive, negative or zero.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\\\"\\n      },\\n      \\\"sinh\\\": {\\n        \\\"!type\\\": \\\"fn(x: number) -> number\\\",\\n        \\\"!doc\\\": \\\"The Math.sinh() function returns the hyperbolic sine of a number, that can be expressed using the constant e:\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sinh\\\"\\n      },\\n      \\\"tanh\\\": {\\n        \\\"!type\\\": \\\"fn(x: number) -> number\\\",\\n        \\\"!doc\\\": \\\"The Math.tanh() function returns the hyperbolic tangent of a number.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/tanh\\\"\\n      },\\n      \\\"trunc\\\": {\\n        \\\"!type\\\": \\\"fn(x: number) -> number\\\",\\n        \\\"!doc\\\": \\\"The Math.trunc() function returns the integral part of a number by removing any fractional digits. It does not round any numbers. The function can be expressed with the floor() and ceil() function:\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math\\\",\\n      \\\"!doc\\\": \\\"A built-in object that has properties and methods for mathematical constants and functions.\\\"\\n    },\\n    \\\"JSON\\\": {\\n      \\\"parse\\\": {\\n        \\\"!type\\\": \\\"fn(json: string, reviver?: fn(key: string, value: ?) -> ?) -> ?\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/JSON/parse\\\",\\n        \\\"!doc\\\": \\\"Parse a string as JSON, optionally transforming the value produced by parsing.\\\"\\n      },\\n      \\\"stringify\\\": {\\n        \\\"!type\\\": \\\"fn(value: ?, replacer?: fn(key: string, value: ?) -> ?, space?: string|number) -> string\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/JSON/stringify\\\",\\n        \\\"!doc\\\": \\\"Convert a value to JSON, optionally replacing values if a replacer function is specified, or optionally including only the specified properties if a replacer array is specified.\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/JSON\\\",\\n      \\\"!doc\\\": \\\"JSON (JavaScript Object Notation) is a data-interchange format.  It closely resembles a subset of JavaScript syntax, although it is not a strict subset. (See JSON in the JavaScript Reference for full details.)  It is useful when writing any kind of JavaScript-based application, including websites and browser extensions.  For example, you might store user information in JSON format in a cookie, or you might store extension preferences in JSON in a string-valued browser preference.\\\"\\n    },\\n    \\\"ArrayBuffer\\\": {\\n      \\\"!type\\\": \\\"fn(length: number)\\\",\\n      \\\"!doc\\\": \\\"The ArrayBuffer object is used to represent a generic, fixed-length raw binary data buffer.\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\\\",\\n      \\\"isView\\\": {\\n        \\\"!type\\\": \\\"fn(arg: +ArrayBuffer) -> bool\\\",\\n        \\\"!doc\\\": \\\"The ArrayBuffer.isView() method returns true if arg is one of the ArrayBuffer views, such as typed array objects or a DataView; false otherwise.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/isView\\\"\\n      },\\n      \\\"prototype\\\": {\\n        \\\"byteLength\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!doc\\\": \\\"The byteLength accessor property represents the length of an ArrayBuffer in bytes.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/byteLength\\\"\\n        },\\n        \\\"slice\\\": {\\n          \\\"!type\\\": \\\"fn(begin: number, end?: number) -> +ArrayBuffer\\\",\\n          \\\"!doc\\\": \\\"The slice() method returns a new ArrayBuffer whose contents are a copy of this ArrayBuffer's bytes from begin, inclusive, up to end, exclusive.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/slice\\\"\\n        }\\n      }\\n    },\\n    \\\"DataView\\\": {\\n      \\\"!type\\\": \\\"fn(buffer: +ArrayBuffer, byteOffset?: number, byteLength?: number)\\\",\\n      \\\"!doc\\\": \\\"The DataView view provides a low-level interface for reading data from and writing it to an ArrayBuffer.\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\\\",\\n      \\\"prototype\\\": {\\n        \\\"buffer\\\": {\\n          \\\"!type\\\": \\\"+ArrayBuffer\\\",\\n          \\\"!doc\\\": \\\"The buffer accessor property represents the ArrayBuffer referenced by the DataView at construction time.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/buffer\\\"\\n        },\\n        \\\"byteLength\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!doc\\\": \\\"The byteLength accessor property represents the length (in bytes) of this view from the start of its ArrayBuffer.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/byteLength\\\"\\n        },\\n        \\\"byteOffset\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!doc\\\": \\\"The byteOffset accessor property represents the offset (in bytes) of this view from the start of its ArrayBuffer.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/byteOffset\\\"\\n        },\\n        \\\"getFloat32\\\": {\\n          \\\"!type\\\": \\\"fn(byteOffset: number, littleEndian?: bool) -> number\\\",\\n          \\\"!doc\\\": \\\"The getFloat32() method gets a signed 32-bit integer (float) at the specified byte offset from the start of the DataView.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/getFloat32\\\"\\n        },\\n        \\\"getFloat64\\\": {\\n          \\\"!type\\\": \\\"fn(byteOffset: number, littleEndian?: bool) -> number\\\",\\n          \\\"!doc\\\": \\\"The getFloat64() method gets a signed 64-bit float (double) at the specified byte offset from the start of the DataView.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/getFloat64\\\"\\n        },\\n        \\\"getInt16\\\": {\\n          \\\"!type\\\": \\\"fn(byteOffset: number, littleEndian?: bool) -> number\\\",\\n          \\\"!doc\\\": \\\"The getInt16() method gets a signed 16-bit integer (short) at the specified byte offset from the start of the DataView.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/getInt16\\\"\\n        },\\n        \\\"getInt32\\\": {\\n          \\\"!type\\\": \\\"fn(byteOffset: number, littleEndian?: bool) -> number\\\",\\n          \\\"!doc\\\": \\\"The getInt32() method gets a signed 32-bit integer (long) at the specified byte offset from the start of the DataView.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/getInt32\\\"\\n        },\\n        \\\"getInt8\\\": {\\n          \\\"!type\\\": \\\"fn(byteOffset: number, littleEndian?: bool) -> number\\\",\\n          \\\"!doc\\\": \\\"The getInt8() method gets a signed 8-bit integer (byte) at the specified byte offset from the start of the DataView.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/getInt8\\\"\\n        },\\n        \\\"getUint16\\\": {\\n          \\\"!type\\\": \\\"fn(byteOffset: number, littleEndian?: bool) -> number\\\",\\n          \\\"!doc\\\": \\\"The getUint16() method gets an unsigned 16-bit integer (unsigned short) at the specified byte offset from the start of the DataView.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/getUint16\\\"\\n        },\\n        \\\"getUint32\\\": {\\n          \\\"!type\\\": \\\"fn(byteOffset: number, littleEndian?: bool) -> number\\\",\\n          \\\"!doc\\\": \\\"The getUint32() method gets an unsigned 32-bit integer (unsigned long) at the specified byte offset from the start of the DataView.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/getUint32\\\"\\n        },\\n        \\\"getUint8\\\": {\\n          \\\"!type\\\": \\\"fn(byteOffset: number) -> number\\\",\\n          \\\"!doc\\\": \\\"The getUint8() method gets an unsigned 8-bit integer (unsigned byte) at the specified byte offset from the start of the DataView.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/getUint8\\\"\\n        },\\n        \\\"setFloat32\\\": {\\n          \\\"!type\\\": \\\"fn(byteOffset: number, value: number, littleEndian?: bool)\\\",\\n          \\\"!doc\\\": \\\"The setFloat32() method stores a signed 32-bit integer (float) value at the specified byte offset from the start of the DataView.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/setFloat32\\\"\\n        },\\n        \\\"setFloat64\\\": {\\n          \\\"!type\\\": \\\"fn(byteOffset: number, value: number, littleEndian?: bool)\\\",\\n          \\\"!doc\\\": \\\"The setFloat64() method stores a signed 64-bit integer (double) value at the specified byte offset from the start of the DataView.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/setFloat64\\\"\\n        },\\n        \\\"setInt16\\\": {\\n          \\\"!type\\\": \\\"fn(byteOffset: number, value: number, littleEndian?: bool)\\\",\\n          \\\"!doc\\\": \\\"The setInt16() method stores a signed 16-bit integer (short) value at the specified byte offset from the start of the DataView.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/setInt16\\\"\\n        },\\n        \\\"setInt32\\\": {\\n          \\\"!type\\\": \\\"fn(byteOffset: number, value: number, littleEndian?: bool)\\\",\\n          \\\"!doc\\\": \\\"The setInt32() method stores a signed 32-bit integer (long) value at the specified byte offset from the start of the DataView.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/setInt32\\\"\\n        },\\n        \\\"setInt8\\\": {\\n          \\\"!type\\\": \\\"fn(byteOffset: number, value: number)\\\",\\n          \\\"!doc\\\": \\\"The setInt8() method stores a signed 8-bit integer (byte) value at the specified byte offset from the start of the DataView.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/setInt8\\\"\\n        },\\n        \\\"setUint16\\\": {\\n          \\\"!type\\\": \\\"fn(byteOffset: number, value: number, littleEndian?: bool)\\\",\\n          \\\"!doc\\\": \\\"The setUint16() method stores an unsigned 16-bit integer (unsigned short) value at the specified byte offset from the start of the DataView.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/setUint16\\\"\\n        },\\n        \\\"setUint32\\\": {\\n          \\\"!type\\\": \\\"fn(byteOffset: number, value: number, littleEndian?: bool)\\\",\\n          \\\"!doc\\\": \\\"The setUint32() method stores an unsigned 32-bit integer (unsigned long) value at the specified byte offset from the start of the DataView.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/setUint32\\\"\\n        },\\n        \\\"setUint8\\\": {\\n          \\\"!type\\\": \\\"fn(byteOffset: number, value: number)\\\",\\n          \\\"!doc\\\": \\\"The setUint8() method stores an unsigned 8-bit integer (byte) value at the specified byte offset from the start of the DataView.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView/setUint8\\\"\\n        }\\n      }\\n    },\\n    \\\"Float32Array\\\": \\\"TypedArray\\\",\\n    \\\"Float64Array\\\": \\\"TypedArray\\\",\\n    \\\"Int16Array\\\": \\\"TypedArray\\\",\\n    \\\"Int32Array\\\": \\\"TypedArray\\\",\\n    \\\"Int8Array\\\": \\\"TypedArray\\\",\\n    \\\"Map\\\": {\\n      \\\"!type\\\": \\\"fn(iterable?: [?])\\\",\\n      \\\"!doc\\\": \\\"The Map object is a simple key/value map. Any value (both objects and primitive values) may be used as either a key or a value.\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\\\",\\n      \\\"prototype\\\": {\\n        \\\"clear\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!doc\\\": \\\"The clear() method removes all elements from a Map object.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/clear\\\"\\n        },\\n        \\\"delete\\\": {\\n          \\\"!type\\\": \\\"fn(key: ?)\\\",\\n          \\\"!doc\\\": \\\"The delete() method removes the specified element from a Map object.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/delete\\\"\\n        },\\n        \\\"entries\\\": {\\n          \\\"!type\\\": \\\"fn() -> +iter[:t=[!this.:key, !this.:value]]\\\",\\n          \\\"!doc\\\": \\\"The entries() method returns a new Iterator object that contains the [key, value] pairs for each element in the Map object in insertion order.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/entries\\\"\\n        },\\n        \\\"forEach\\\": {\\n          \\\"!type\\\": \\\"fn(callback: fn(value: ?, key: ?, map: +Map), thisArg?: ?)\\\",\\n          \\\"!effects\\\": [\\\"call !0 this=!1 !this.:value !this.:key !this\\\"],\\n          \\\"!doc\\\": \\\"The forEach() method executes a provided function once per each key/value pair in the Map object, in insertion order.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach\\\"\\n        },\\n        \\\"get\\\": {\\n          \\\"!type\\\": \\\"fn(key: ?) -> !this.:value\\\",\\n          \\\"!doc\\\": \\\"The get() method returns a specified element from a Map object.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get\\\"\\n        },\\n        \\\"has\\\": {\\n          \\\"!type\\\": \\\"fn(key: ?) -> bool\\\",\\n          \\\"!doc\\\": \\\"The has() method returns a boolean indicating whether an element with the specified key exists or not.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has\\\"\\n        },\\n        \\\"keys\\\": {\\n          \\\"!type\\\": \\\"fn() -> +iter[:t=!this.:key]\\\",\\n          \\\"!doc\\\": \\\"The keys() method returns a new Iterator object that contains the keys for each element in the Map object in insertion order.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/keys\\\"\\n        },\\n        \\\"set\\\": {\\n          \\\"!type\\\": \\\"fn(key: ?, value: ?) -> !this\\\",\\n          \\\"!effects\\\": [\\\"propagate !0 !this.:key\\\", \\\"propagate !1 !this.:value\\\"],\\n          \\\"!doc\\\": \\\"The set() method adds a new element with a specified key and value to a Map object.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/set\\\"\\n        },\\n        \\\"size\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!doc\\\": \\\"The size accessor property returns the number of elements in a Map object.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/size\\\"\\n        },\\n        \\\"values\\\": {\\n          \\\"!type\\\": \\\"fn() -> +iter[:t=!this.:value]\\\",\\n          \\\"!doc\\\": \\\"The values() method returns a new Iterator object that contains the values for each element in the Map object in insertion order.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/values\\\"\\n        },\\n        \\\":Symbol.iterator\\\": {\\n          \\\"!type\\\": \\\"fn() -> +iter[:t=[!this.:key, !this.:value]]\\\",\\n          \\\"!doc\\\": \\\"Returns a new Iterator object that contains the [key, value] pairs for each element in the Map object in insertion order.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/@@iterator\\\"\\n        }\\n      }\\n    },\\n    \\\"Promise\\\": {\\n      \\\"!type\\\": \\\"fn(executor: fn(resolve: fn(value: ?), reject: fn(reason: ?))) -> !custom:Promise_ctor\\\",\\n      \\\"!doc\\\": \\\"The Promise object is used for deferred and asynchronous computations. A Promise is in one of the three states:\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\\\",\\n      \\\"all\\\": {\\n        \\\"!type\\\": \\\"fn(iterable: [+Promise]) -> +Promise[:t=[!0.<i>.:t]]\\\",\\n        \\\"!doc\\\": \\\"The Promise.all(iterable) method returns a promise that resolves when all of the promises in the iterable argument have resolved.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all\\\"\\n      },\\n      \\\"race\\\": {\\n        \\\"!type\\\": \\\"fn(iterable: [+Promise]) -> !0.<i>\\\",\\n        \\\"!doc\\\": \\\"The Promise.race(iterable) method returns a promise that resolves or rejects as soon as one of the promises in the iterable resolves or rejects, with the value or reason from that promise.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/race\\\"\\n      },\\n      \\\"reject\\\": \\\"Promise_reject\\\",\\n      \\\"resolve\\\": {\\n        \\\"!type\\\": \\\"fn(value: ?) -> !custom:Promise_resolve\\\",\\n        \\\"!doc\\\": \\\"The Promise.resolve(value) method returns a Promise object that is resolved with the given value. If the value is a thenable (i.e. has a then method), the returned promise will 'follow' that thenable, adopting its eventual state; otherwise the returned promise will be fulfilled with the value.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve\\\"\\n      },\\n      \\\"prototype\\\": \\\"Promise.prototype\\\"\\n    },\\n    \\\"Proxy\\\": {\\n      \\\"!type\\\": \\\"fn(target: ?, handler: Proxy_handler)\\\",\\n      \\\"!doc\\\": \\\"The Proxy object is used to define the custom behavior in JavaScript fundamental operation (e.g. property lookup, assignment, enumeration, function invocation, etc).\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\\\",\\n      \\\"revocable\\\": {\\n        \\\"!type\\\": \\\"fn(target: ?, handler: Proxy_handler) -> Proxy_revocable\\\",\\n        \\\"!doc\\\": \\\"The Proxy.revocable() method is used to create a revocable Proxy object.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/revocable\\\"\\n      }\\n    },\\n    \\\"Reflect\\\": {\\n      \\\"!doc\\\": \\\"Reflect is a built-in object that provides methods for interceptable JavaScript operations.\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect\\\",\\n      \\\"apply\\\": {\\n        \\\"!type\\\": \\\"fn(target: fn(), thisArg?: ?, argumentList?: [?]) -> !0.!ret\\\",\\n        \\\"!doc\\\": \\\"Calls a target function with arguments as specified.\\\",\\n        \\\"!url\\\":  \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/apply\\\"\\n      },\\n      \\\"construct\\\": {\\n        \\\"!type\\\": \\\"fn(target: fn(), argumentList?: [?]) -> ?\\\",\\n        \\\"!doc\\\": \\\"Acts like the new operator as a function. It is equivalent to calling new target(...args).\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/construct\\\"\\n      },\\n      \\\"defineProperty\\\": {\\n        \\\"!type\\\": \\\"fn(target: ?, property: string, descriptor: propertyDescriptor) -> bool\\\",\\n        \\\"!doc\\\": \\\"The static Reflect.defineProperty() method is like Object.defineProperty() but returns a Boolean.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/defineProperty\\\"\\n      },\\n      \\\"deleteProperty\\\": {\\n        \\\"!type\\\": \\\"fn(target: ?, property: string) -> bool\\\",\\n        \\\"!doc\\\": \\\"Works like the delete operator as a function.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/deleteProperty\\\"\\n      },\\n      \\\"enumerate\\\": {\\n        \\\"!type\\\": \\\"fn(target: ?) -> +iter[:t=string]\\\",\\n        \\\"!doc\\\": \\\"Returns an iterator with the enumerable own and inherited properties of the target object.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/enumerate\\\"\\n      },\\n      \\\"get\\\": {\\n        \\\"!type\\\": \\\"fn(target: ?, property: string) -> ?\\\",\\n        \\\"!doc\\\": \\\"Gets a property from an object.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/get\\\"\\n      },\\n      \\\"getOwnPropertyDescriptor\\\": {\\n        \\\"!type\\\": \\\"fn(target: ?, property: string) -> ?\\\",\\n        \\\"!doc\\\": \\\"Returns a property descriptor of the given property if it exists on the object, undefined otherwise.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/getOwnPropertyDescriptor\\\"\\n      },\\n      \\\"getPrototypeOf\\\": {\\n        \\\"!type\\\": \\\"fn(target: ?) -> ?\\\",\\n        \\\"!doc\\\": \\\"Returns the prototype of the specified object.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/getPrototypeOf\\\"\\n      },\\n      \\\"has\\\": {\\n        \\\"!type\\\": \\\"fn(target: ?, property: string) -> bool\\\",\\n        \\\"!doc\\\": \\\"The static Reflect.has() method works like the in operator as a function.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/has\\\"\\n      },\\n      \\\"isExtensible\\\": {\\n        \\\"!type\\\": \\\"fn(target: ?) -> bool\\\",\\n        \\\"!doc\\\": \\\"Determines if an object is extensible (whether it can have new properties added to it).\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/isExtensible\\\"\\n      },\\n      \\\"ownKeys\\\": {\\n        \\\"!type\\\": \\\"fn(target: ?) -> [string]\\\",\\n        \\\"!doc\\\": \\\"Returns an array of the target object's own property keys.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/ownKeys\\\"\\n      },\\n      \\\"preventExtensions\\\": {\\n        \\\"!type\\\": \\\"fn(target: ?) -> bool\\\",\\n        \\\"!doc\\\": \\\"Prevents new properties from ever being added to an object.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/preventExtensions\\\"\\n      },\\n      \\\"set\\\": {\\n        \\\"!type\\\": \\\"fn(target: ?, property: string, value: ?) -> bool\\\",\\n        \\\"!doc\\\": \\\"Set a property on an object.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/set\\\"\\n      },\\n      \\\"setPrototypeOf\\\": {\\n        \\\"!type\\\": \\\"fn(target: ?, prototype: ?) -> bool\\\",\\n        \\\"!doc\\\": \\\"Sets the prototype of a specified object to another object or to null.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect/setPrototypeOf\\\"\\n      }\\n    },\\n    \\\"Set\\\": {\\n      \\\"!type\\\": \\\"fn(iterable?: [?])\\\",\\n      \\\"!doc\\\": \\\"The Set object lets you store unique values of any type, whether primitive values or object references.\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\\\",\\n      \\\"prototype\\\": {\\n        \\\"add\\\": {\\n          \\\"!type\\\": \\\"fn(value: ?) -> !this\\\",\\n          \\\"!effects\\\": [\\\"propagate !0 !this.:t\\\"],\\n          \\\"!doc\\\": \\\"The add() method appends a new element with a specified value to the end of a Set object.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/add\\\"\\n        },\\n        \\\"clear\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!doc\\\": \\\"The clear() method removes all elements from a Set object.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/clear\\\"\\n        },\\n        \\\"delete\\\": {\\n          \\\"!type\\\": \\\"fn(value: ?) -> bool\\\",\\n          \\\"!doc\\\": \\\"The delete() method removes the specified element from a Set object.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/delete\\\"\\n        },\\n        \\\"entries\\\": {\\n          \\\"!type\\\": \\\"fn() -> +iter[:t=[!this.:t]]\\\",\\n          \\\"!doc\\\": \\\"The entries() method returns a new Iterator object that contains an array of [value, value] for each element in the Set object, in insertion order. For Set objects there is no key like in Map objects. However, to keep the API similar to the Map object, each entry has the same value for its key and value here, so that an array [value, value] is returned.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/entries\\\"\\n        },\\n        \\\"forEach\\\": {\\n          \\\"!type\\\": \\\"fn(callback: fn(value: ?, value2: ?, set: +Set), thisArg?: ?)\\\",\\n          \\\"!effects\\\": [\\\"call !0 this=!1 !this.:t number !this\\\"],\\n          \\\"!doc\\\": \\\"The forEach() method executes a provided function once per each value in the Set object, in insertion order.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/forEach\\\"\\n        },\\n        \\\"has\\\": {\\n          \\\"!type\\\": \\\"fn(value: ?) -> bool\\\",\\n          \\\"!doc\\\": \\\"The has() method returns a boolean indicating whether an element with the specified value exists in a Set object or not.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/has\\\"\\n        },\\n        \\\"keys\\\": {\\n          \\\"!type\\\": \\\"fn() -> +iter[:t=!this.:t]\\\",\\n          \\\"!doc\\\": \\\"The values() method returns a new Iterator object that contains the values for each element in the Set object in insertion order.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/keys\\\"\\n        },\\n        \\\"size\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!doc\\\": \\\"The size accessor property returns the number of elements in a Set object.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/size\\\"\\n        },\\n        \\\"values\\\": {\\n          \\\"!type\\\": \\\"fn() -> +iter[:t=!this.:t]\\\",\\n          \\\"!doc\\\": \\\"The values() method returns a new Iterator object that contains the values for each element in the Set object in insertion order.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/values\\\"\\n        },\\n        \\\":Symbol.iterator\\\": {\\n          \\\"!type\\\": \\\"fn() -> +iter[:t=!this.:t]\\\",\\n          \\\"!doc\\\": \\\"Returns a new Iterator object that contains the values for each element in the Set object in insertion order.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/@@iterator\\\"\\n        }\\n      }\\n    },\\n    \\\"Symbol\\\": {\\n      \\\"!type\\\": \\\"fn(description?: string) -> !custom:getSymbol\\\",\\n      \\\"!doc\\\": \\\"A symbol is a unique and immutable data type and may be used as an identifier for object properties. The symbol object is an implicit object wrapper for the symbol primitive data type.\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\\\",\\n      \\\"for\\\": {\\n        \\\"!type\\\": \\\"fn(key: string) -> !custom:getSymbol\\\",\\n        \\\"!doc\\\": \\\"The Symbol.for(key) method searches for existing symbols in a runtime-wide symbol registry with the given key and returns it if found. Otherwise a new symbol gets created in the global symbol registry with this key.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/for\\\"\\n      },\\n      \\\"keyFor\\\": {\\n        \\\"!type\\\": \\\"fn(sym: +Symbol) -> string\\\",\\n        \\\"!doc\\\": \\\"The Symbol.keyFor(sym) method retrieves a shared symbol key from the global symbol registry for the given symbol.\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/keyFor\\\"\\n      },\\n      \\\"hasInstance\\\": \\\":Symbol.hasInstance\\\",\\n      \\\"isConcatSpreadable\\\": \\\":Symbol.isConcatSpreadable\\\",\\n      \\\"iterator\\\": \\\":Symbol.iterator\\\",\\n      \\\"asyncIterator\\\": \\\":Symbol.asyncIterator\\\",\\n      \\\"match\\\": \\\":Symbol.match\\\",\\n      \\\"replace\\\": \\\":Symbol.replace\\\",\\n      \\\"search\\\": \\\":Symbol.search\\\",\\n      \\\"species\\\": \\\":Symbol.species\\\",\\n      \\\"split\\\": \\\":Symbol.split\\\",\\n      \\\"toStringTag\\\": \\\":Symbol.toStringTag\\\",\\n      \\\"unscopables\\\": \\\":Symbol.unscopables\\\",\\n      \\\"prototype\\\": {\\n        \\\"!stdProto\\\": \\\"Symbol\\\"\\n      }\\n    },\\n    \\\"Uint16Array\\\": \\\"TypedArray\\\",\\n    \\\"Uint32Array\\\": \\\"TypedArray\\\",\\n    \\\"Uint8Array\\\": \\\"TypedArray\\\",\\n    \\\"Uint8ClampedArray\\\": \\\"TypedArray\\\",\\n    \\\"WeakMap\\\": {\\n      \\\"!type\\\": \\\"fn(iterable?: [?])\\\",\\n      \\\"!doc\\\": \\\"The WeakMap object is a collection of key/value pairs in which the keys are objects and the values can be arbitrary values.\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\\\",\\n      \\\"prototype\\\": {\\n        \\\"delete\\\": {\\n          \\\"!type\\\": \\\"fn(key: ?) -> bool\\\",\\n          \\\"!doc\\\": \\\"The delete() method removes the specified element from a WeakMap object.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap/delete\\\"\\n        },\\n        \\\"get\\\": {\\n          \\\"!type\\\": \\\"fn(key: ?) -> !this.:value\\\",\\n          \\\"!doc\\\": \\\"The get() method returns a specified element from a WeakMap object.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap/get\\\"\\n        },\\n        \\\"has\\\": {\\n          \\\"!type\\\": \\\"fn(key: ?) -> bool\\\",\\n          \\\"!doc\\\": \\\"The has() method returns a boolean indicating whether an element with the specified key exists in the WeakMap object or not.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap/has\\\"\\n        },\\n        \\\"set\\\": {\\n          \\\"!type\\\": \\\"fn(key: ?, value: ?)\\\",\\n          \\\"!effects\\\": [\\\"propagate !0 !this.:key\\\", \\\"propagate !1 !this.:value\\\"],\\n          \\\"!doc\\\": \\\"The set() method adds a new element with a specified key and value to a WeakMap object.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap/set\\\"\\n        }\\n      }\\n    },\\n    \\\"WeakSet\\\": {\\n      \\\"!type\\\": \\\"fn(iterable?: [?])\\\",\\n      \\\"!doc\\\": \\\"The WeakSet object lets you store weakly held objects in a collection.\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\\\",\\n      \\\"prototype\\\": {\\n        \\\"add\\\": {\\n          \\\"!type\\\": \\\"fn(value: ?)\\\",\\n          \\\"!doc\\\": \\\"The add() method appends a new object to the end of a WeakSet object.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet/add\\\"\\n        },\\n        \\\"delete\\\": {\\n          \\\"!type\\\": \\\"fn(value: ?) -> bool\\\",\\n          \\\"!doc\\\": \\\"The delete() method removes the specified element from a WeakSet object.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet/delete\\\"\\n        },\\n        \\\"has\\\": {\\n          \\\"!type\\\": \\\"fn(value: ?) -> bool\\\",\\n          \\\"!doc\\\": \\\"The has() method returns a boolean indicating whether an object exists in a WeakSet or not.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet/has\\\"\\n        }\\n      }\\n    }\\n  },\\n  \\\"browse\\\":{\\n    \\\"!name\\\": \\\"browser\\\",\\n    \\\"!define\\\": {\\n      \\\"Geolocation\\\": {\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Geolocation\\\",\\n        \\\"!doc\\\": \\\"The Geolocation interface represents an object able to programmatically obtain the position of the device. It gives Web content access to the location of the device. This allows a Web site or app to offer customized results based on the user's location.\\\",\\n        \\\"clearWatch\\\": {\\n          \\\"!type\\\": \\\"fn(id: number)\\\",\\n          \\\"!doc\\\": \\\"The Geolocation.clearWatch() method is used to unregister location/error monitoring handlers previously installed using Geolocation.watchPosition().\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/clearWatch\\\"\\n        },\\n        \\\"getCurrentPosition\\\": {\\n          \\\"!type\\\": \\\"fn(sucess: fn(Position), error?: fn(PositionError), options?: PositionOptions)\\\",\\n          \\\"!doc\\\": \\\"The Geolocation.getCurrentPosition() method is used to get the current position of the device.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/getCurrentPosition\\\"\\n        },\\n        \\\"watchPosition\\\": {\\n          \\\"!type\\\": \\\"fn(sucess: fn(Position), error?: fn(PositionError), options?: PositionOptions)\\\",\\n          \\\"!doc\\\": \\\"The Geolocation.watchPosition() method is used to register a handler function that will be called automatically each time the position of the device changes. You can also, optionally, specify an error handling callback function.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/watchPosition\\\"\\n        }\\n      },\\n      \\\"PositionOptions\\\": {\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions\\\",\\n        \\\"!doc\\\": \\\"The PositionOptions interface describes an object containing option properties to pass as a parameter of Geolocation.getCurrentPosition() and Geolocation.watchPosition().\\\",\\n        \\\"enableHighAccuracy\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions/enableHighAccuracy\\\",\\n          \\\"!doc\\\": \\\"The PositionOptions.enableHighAccuracy property is a Boolean that indicates the application would like to receive the best possible results. If true and if the device is able to provide a more accurate position, it will do so. Note that this can result in slower response times or increased power consumption (with a GPS chip on a mobile device for example). On the other hand, if false (the default value), the device can take the liberty to save resources by responding more quickly and/or using less power.\\\"\\n        },\\n        \\\"timeout\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions/timeout\\\",\\n          \\\"!doc\\\": \\\"The PositionOptions.timeout property is a positive long value representing the maximum length of time (in milliseconds) the device is allowed to take in order to return a position. The default value is Infinity, meaning that getCurrentPosition() won't return until the position is available.\\\"\\n        },\\n        \\\"maximumAge\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions/maximumAge\\\",\\n          \\\"!doc\\\": \\\"The PositionOptions.maximumAge property is a positive long value indicating the maximum age in milliseconds of a possible cached position that is acceptable to return. If set to 0, it means that the device cannot use a cached position and must attempt to retrieve the real current position. If set to Infinity the device must return a cached position regardless of its age.\\\"\\n        }\\n      },\\n      \\\"PositionError\\\": {\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/PositionError\\\",\\n        \\\"!doc\\\": \\\"The PositionError interface represents the reason of an error occurring when using the geolocating device.\\\",\\n        \\\"code\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/PositionError/code\\\",\\n          \\\"!doc\\\": \\\"The PositionError.code read-only property is an unsigned short representing the error code.\\\"\\n        },\\n        \\\"message\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/PositionError/message\\\",\\n          \\\"!doc\\\": \\\"The PositionError.message read-only property returns a human-readable DOMString describing the details of the error.\\\"\\n        }\\n      },\\n      \\\"Position\\\": {\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Position\\\",\\n        \\\"!doc\\\": \\\"The Position interface represents the position of the concerned device at a given time. The position, represented by a Coordinates object, comprehends the 2D position of the device, on a spheroid representing the Earth, but also its altitude and its speed.\\\",\\n        \\\"coords\\\": {\\n          \\\"!type\\\": \\\"Coordinates\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Position/coords\\\",\\n          \\\"!doc\\\": \\\"The Position.coords read-only property, a Coordinates object, represents a geographic attitude: it contains the location, that is longitude and latitude on the Earth, the altitude, and the speed of the object concerned, regrouped inside the returned value. It also contains accuracy information about these values.\\\"\\n        },\\n        \\\"timestamp\\\": {\\n          \\\"!type\\\": \\\"+DOMTimeStamp\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Position/timestamp\\\",\\n          \\\"!doc\\\": \\\"The Position.timestamp read-only property, a DOMTimeStamp object, represents the date and the time of the creation of the Position object it belongs to. The precision is to the millisecond.\\\"\\n        }\\n      },\\n      \\\"Coordinates\\\": {\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Coordinates\\\",\\n        \\\"!doc\\\": \\\"The Coordinates interface represents the position and altitude of the device on Earth, as well as the accuracy with which these properties are calculated.\\\",\\n        \\\"latitude\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Coordinates/latitude\\\",\\n          \\\"!doc\\\": \\\"The Coordinates.latitude read-only property is a double representing the latitude of the position in decimal degrees.\\\"\\n        },\\n        \\\"longitude\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Coordinates/longitude\\\",\\n          \\\"!doc\\\": \\\"The Coordinates.longitude read-only property is a double representing the longitude of the position in decimal degrees.\\\"\\n        },\\n        \\\"altitude\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Coordinates/altitude\\\",\\n          \\\"!doc\\\": \\\"The Coordinates.altitude read-only property is a double representing the altitude of the position in meters, relative to sea level. This value is null if the implementation cannot provide this data.\\\"\\n        },\\n        \\\"accuracy\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Coordinates/accuracy\\\",\\n          \\\"!doc\\\": \\\"The Coordinates.accuracy read-only property is a strictly positive double representing the accuracy, with a 95% confidence level, of the Coordinates.latitude and Coordinates.longitude properties expressed in meters.\\\"\\n        },\\n        \\\"altitudeAccuracy\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Coordinates/altitudeAccuracy\\\",\\n          \\\"!doc\\\": \\\"The Coordinates.altitudeAccuracy read-only property is a strictly positive double representing the accuracy, with a 95% confidence level, of the altitude expressed in meters. This value is null if the implementation doesn't support measuring altitude.\\\"\\n        },\\n        \\\"heading\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Coordinates/heading\\\",\\n          \\\"!doc\\\": \\\"The Coordinates.heading read-only property is a double representing the direction in which the device is traveling. This value, specified in degrees, indicates how far off from heading due north the device is. 0 degrees represents true true north, and the direction is determined clockwise (which means that east is 90 degrees and west is 270 degrees). If Coordinates.speed is 0, heading is NaN. If the device is not able to provide heading information, this value is null.\\\"\\n        },\\n        \\\"speed\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Coordinates/speed\\\",\\n          \\\"!doc\\\": \\\"The Coordinates.speed read-only property is a double representing the velocity of the device in meters per second. This value is null if the implementation is not able to measure it.\\\"\\n        }\\n      },\\n      \\\"MutationObserverInit\\\": {\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver#MutationObserverInit\\\",\\n        \\\"childList\\\": \\\"bool\\\",\\n        \\\"attributes\\\": \\\"bool\\\",\\n        \\\"characterData\\\": \\\"bool\\\",\\n        \\\"subtree\\\": \\\"bool\\\",\\n        \\\"attributeOldValue\\\": \\\"bool\\\",\\n        \\\"characterDataOldValue\\\": \\\"bool\\\",\\n        \\\"attributeFilter\\\": \\\"[string]\\\"\\n      },\\n      \\\"Permissions\\\": {\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Permissions\\\",\\n        \\\"query\\\": {\\n          \\\"!type\\\": \\\"fn(descriptor: PermissionDescriptor) -> +Promise[:t=PermissionStatus]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Permissions/query\\\",\\n          \\\"!doc\\\": \\\"Returns the user permission status for a given API.\\\"\\n        },\\n        \\\"revoke\\\": {\\n          \\\"!type\\\": \\\"fn(descriptor: PermissionDescriptor) -> +Promise[:t=PermissionStatus]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Permissions/revoke\\\",\\n          \\\"!doc\\\": \\\"Revokes the permission currently set on a given API.\\\"\\n        }\\n      },\\n      \\\"PermissionDescriptor\\\": {\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Permissions/query\\\",\\n        \\\"name\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!doc\\\": \\\"The name of the API whose permissions you want to query. Valid values are 'geolocation', 'midi', 'notifications', 'push', 'persistent-storage', 'camera' and 'microphone'.\\\"\\n        },\\n        \\\"userVisibleOnly\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!doc\\\": \\\"Indicates whether you want to show a notification for every message or be able to send silent push notifications. The default is false.\\\"\\n        },\\n        \\\"sysex\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!doc\\\": \\\"Indicates whether you need and/or receive system exclusive messages. The default is false.\\\"\\n        }\\n      },\\n      \\\"PermissionStatus\\\": {\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/PermissionStatus\\\",\\n        \\\"state\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/PermissionStatus/state\\\",\\n          \\\"!doc\\\": \\\"Returns the state of a requested permission; one of 'granted', 'denied', or 'prompt'.\\\"\\n        },\\n        \\\"onchange\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/PermissionStatus/onchange\\\",\\n          \\\"!doc\\\": \\\"An event called whenever PermissionStatus.status changes.\\\"\\n        }\\n      }\\n    },\\n    \\\"location\\\": {\\n      \\\"assign\\\": {\\n        \\\"!type\\\": \\\"fn(url: string)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.location\\\",\\n        \\\"!doc\\\": \\\"Load the document at the provided URL.\\\"\\n      },\\n      \\\"replace\\\": {\\n        \\\"!type\\\": \\\"fn(url: string)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.location\\\",\\n        \\\"!doc\\\": \\\"Replace the current document with the one at the provided URL. The difference from the assign() method is that after using replace() the current page will not be saved in session history, meaning the user won't be able to use the Back button to navigate to it.\\\"\\n      },\\n      \\\"reload\\\": {\\n        \\\"!type\\\": \\\"fn()\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.location\\\",\\n        \\\"!doc\\\": \\\"Reload the document from the current URL. forceget is a boolean, which, when it is true, causes the page to always be reloaded from the server. If it is false or not specified, the browser may reload the page from its cache.\\\"\\n      },\\n      \\\"origin\\\": {\\n        \\\"!type\\\": \\\"string\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.location\\\",\\n        \\\"!doc\\\": \\\"The origin of the URL.\\\"\\n      },\\n      \\\"hash\\\": {\\n        \\\"!type\\\": \\\"string\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.location\\\",\\n        \\\"!doc\\\": \\\"The part of the URL that follows the # symbol, including the # symbol.\\\"\\n      },\\n      \\\"search\\\": {\\n        \\\"!type\\\": \\\"string\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.location\\\",\\n        \\\"!doc\\\": \\\"The part of the URL that follows the ? symbol, including the ? symbol.\\\"\\n      },\\n      \\\"pathname\\\": {\\n        \\\"!type\\\": \\\"string\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.location\\\",\\n        \\\"!doc\\\": \\\"The path (relative to the host).\\\"\\n      },\\n      \\\"port\\\": {\\n        \\\"!type\\\": \\\"string\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.location\\\",\\n        \\\"!doc\\\": \\\"The port number of the URL.\\\"\\n      },\\n      \\\"hostname\\\": {\\n        \\\"!type\\\": \\\"string\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.location\\\",\\n        \\\"!doc\\\": \\\"The host name (without the port number or square brackets).\\\"\\n      },\\n      \\\"host\\\": {\\n        \\\"!type\\\": \\\"string\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.location\\\",\\n        \\\"!doc\\\": \\\"The host name and port number.\\\"\\n      },\\n      \\\"protocol\\\": {\\n        \\\"!type\\\": \\\"string\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.location\\\",\\n        \\\"!doc\\\": \\\"The protocol of the URL.\\\"\\n      },\\n      \\\"href\\\": {\\n        \\\"!type\\\": \\\"string\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.location\\\",\\n        \\\"!doc\\\": \\\"The entire URL.\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.location\\\",\\n      \\\"!doc\\\": \\\"Returns a location object with information about the current location of the document. Assigning to the location property changes the current page to the new address.\\\"\\n    },\\n    \\\"Node\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": {\\n        \\\"parentElement\\\": {\\n          \\\"!type\\\": \\\"+Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.parentElement\\\",\\n          \\\"!doc\\\": \\\"Returns the DOM node's parent Element, or null if the node either has no parent, or its parent isn't a DOM Element.\\\"\\n        },\\n        \\\"textContent\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.textContent\\\",\\n          \\\"!doc\\\": \\\"Gets or sets the text content of a node and its descendants.\\\"\\n        },\\n        \\\"baseURI\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.baseURI\\\",\\n          \\\"!doc\\\": \\\"The absolute base URI of a node or null if unable to obtain an absolute URI.\\\"\\n        },\\n        \\\"localName\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.localName\\\",\\n          \\\"!doc\\\": \\\"Returns the local part of the qualified name of this node.\\\"\\n        },\\n        \\\"prefix\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.prefix\\\",\\n          \\\"!doc\\\": \\\"Returns the namespace prefix of the specified node, or null if no prefix is specified. This property is read only.\\\"\\n        },\\n        \\\"namespaceURI\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.namespaceURI\\\",\\n          \\\"!doc\\\": \\\"The namespace URI of the node, or null if the node is not in a namespace (read-only). When the node is a document, it returns the XML namespace for the current document.\\\"\\n        },\\n        \\\"ownerDocument\\\": {\\n          \\\"!type\\\": \\\"+Document\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.ownerDocument\\\",\\n          \\\"!doc\\\": \\\"The ownerDocument property returns the top-level document object for this node.\\\"\\n        },\\n        \\\"attributes\\\": {\\n          \\\"!type\\\": \\\"+NamedNodeMap\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.attributes\\\",\\n          \\\"!doc\\\": \\\"A collection of all attribute nodes registered to the specified node. It is a NamedNodeMap,not an Array, so it has no Array methods and the Attr nodes' indexes may differ among browsers.\\\"\\n        },\\n        \\\"nextSibling\\\": {\\n          \\\"!type\\\": \\\"+Node\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.nextSibling\\\",\\n          \\\"!doc\\\": \\\"Returns the node immediately following the specified one in its parent's childNodes list, or null if the specified node is the last node in that list.\\\"\\n        },\\n        \\\"previousSibling\\\": {\\n          \\\"!type\\\": \\\"+Node\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.previousSibling\\\",\\n          \\\"!doc\\\": \\\"Returns the node immediately preceding the specified one in its parent's childNodes list, null if the specified node is the first in that list.\\\"\\n        },\\n        \\\"lastChild\\\": {\\n          \\\"!type\\\": \\\"+Node\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.lastChild\\\",\\n          \\\"!doc\\\": \\\"Returns the last child of a node.\\\"\\n        },\\n        \\\"firstChild\\\": {\\n          \\\"!type\\\": \\\"+Node\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.firstChild\\\",\\n          \\\"!doc\\\": \\\"Returns the node's first child in the tree, or null if the node is childless. If the node is a Document, it returns the first node in the list of its direct children.\\\"\\n        },\\n        \\\"childNodes\\\": {\\n          \\\"!type\\\": \\\"+NodeList\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.childNodes\\\",\\n          \\\"!doc\\\": \\\"Returns a collection of child nodes of the given element.\\\"\\n        },\\n        \\\"parentNode\\\": {\\n          \\\"!type\\\": \\\"+Node\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.parentNode\\\",\\n          \\\"!doc\\\": \\\"Returns the parent of the specified node in the DOM tree.\\\"\\n        },\\n        \\\"nodeType\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.nodeType\\\",\\n          \\\"!doc\\\": \\\"Returns an integer code representing the type of the node.\\\"\\n        },\\n        \\\"nodeValue\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.nodeValue\\\",\\n          \\\"!doc\\\": \\\"Returns or sets the value of the current node.\\\"\\n        },\\n        \\\"nodeName\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.nodeName\\\",\\n          \\\"!doc\\\": \\\"Returns the name of the current node as a string.\\\"\\n        },\\n        \\\"tagName\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.nodeName\\\",\\n          \\\"!doc\\\": \\\"Returns the name of the current node as a string.\\\"\\n        },\\n        \\\"insertBefore\\\": {\\n          \\\"!type\\\": \\\"fn(newElt: +Element, before: +Element) -> +Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.insertBefore\\\",\\n          \\\"!doc\\\": \\\"Inserts the specified node before a reference element as a child of the current node.\\\"\\n        },\\n        \\\"replaceChild\\\": {\\n          \\\"!type\\\": \\\"fn(newChild: +Node, oldChild: +Node) -> +Node\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.replaceChild\\\",\\n          \\\"!doc\\\": \\\"Replaces one child node of the specified element with another.\\\"\\n        },\\n        \\\"removeChild\\\": {\\n          \\\"!type\\\": \\\"fn(oldNode: +Node) -> +Node\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.removeChild\\\",\\n          \\\"!doc\\\": \\\"Removes a child node from the DOM. Returns removed node.\\\"\\n        },\\n        \\\"appendChild\\\": {\\n          \\\"!type\\\": \\\"fn(newNode: +Node) -> +Node\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.appendChild\\\",\\n          \\\"!doc\\\": \\\"Adds a node to the end of the list of children of a specified parent node. If the node already exists it is removed from current parent node, then added to new parent node.\\\"\\n        },\\n        \\\"hasChildNodes\\\": {\\n          \\\"!type\\\": \\\"fn() -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.hasChildNodes\\\",\\n          \\\"!doc\\\": \\\"Returns a Boolean value indicating whether the current Node has child nodes or not.\\\"\\n        },\\n        \\\"cloneNode\\\": {\\n          \\\"!type\\\": \\\"fn(deep: bool) -> +Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.cloneNode\\\",\\n          \\\"!doc\\\": \\\"Returns a duplicate of the node on which this method was called.\\\"\\n        },\\n        \\\"normalize\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.normalize\\\",\\n          \\\"!doc\\\": \\\"Puts the specified node and all of its subtree into a \\\\\\\"normalized\\\\\\\" form. In a normalized subtree, no text nodes in the subtree are empty and there are no adjacent text nodes.\\\"\\n        },\\n        \\\"isSupported\\\": {\\n          \\\"!type\\\": \\\"fn(features: string, version: number) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.isSupported\\\",\\n          \\\"!doc\\\": \\\"Tests whether the DOM implementation implements a specific feature and that feature is supported by this node.\\\"\\n        },\\n        \\\"hasAttributes\\\": {\\n          \\\"!type\\\": \\\"fn() -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.hasAttributes\\\",\\n          \\\"!doc\\\": \\\"Returns a boolean value of true or false, indicating if the current element has any attributes or not.\\\"\\n        },\\n        \\\"lookupPrefix\\\": {\\n          \\\"!type\\\": \\\"fn(uri: string) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.lookupPrefix\\\",\\n          \\\"!doc\\\": \\\"Returns the prefix for a given namespaceURI if present, and null if not. When multiple prefixes are possible, the result is implementation-dependent.\\\"\\n        },\\n        \\\"isDefaultNamespace\\\": {\\n          \\\"!type\\\": \\\"fn(uri: string) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.isDefaultNamespace\\\",\\n          \\\"!doc\\\": \\\"Accepts a namespace URI as an argument and returns true if the namespace is the default namespace on the given node or false if not.\\\"\\n        },\\n        \\\"lookupNamespaceURI\\\": {\\n          \\\"!type\\\": \\\"fn(uri: string) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.lookupNamespaceURI\\\",\\n          \\\"!doc\\\": \\\"Takes a prefix and returns the namespaceURI associated with it on the given node if found (and null if not). Supplying null for the prefix will return the default namespace.\\\"\\n        },\\n        \\\"addEventListener\\\": {\\n          \\\"!type\\\": \\\"fn(type: string, listener: fn(e: +Event), capture: bool)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/EventTarget.addEventListener\\\",\\n          \\\"!doc\\\": \\\"Registers a single event listener on a single target. The event target may be a single element in a document, the document itself, a window, or an XMLHttpRequest.\\\"\\n        },\\n        \\\"removeEventListener\\\": {\\n          \\\"!type\\\": \\\"fn(type: string, listener: fn(), capture: bool)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/EventTarget.removeEventListener\\\",\\n          \\\"!doc\\\": \\\"Allows the removal of event listeners from the event target.\\\"\\n        },\\n        \\\"isSameNode\\\": {\\n          \\\"!type\\\": \\\"fn(other: +Node) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.isSameNode\\\",\\n          \\\"!doc\\\": \\\"Tests whether two nodes are the same, that is they reference the same object.\\\"\\n        },\\n        \\\"isEqualNode\\\": {\\n          \\\"!type\\\": \\\"fn(other: +Node) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.isEqualNode\\\",\\n          \\\"!doc\\\": \\\"Tests whether two nodes are equal.\\\"\\n        },\\n        \\\"compareDocumentPosition\\\": {\\n          \\\"!type\\\": \\\"fn(other: +Node) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.compareDocumentPosition\\\",\\n          \\\"!doc\\\": \\\"Compares the position of the current node against another node in any other document.\\\"\\n        },\\n        \\\"contains\\\": {\\n          \\\"!type\\\": \\\"fn(other: +Node) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node.contains\\\",\\n          \\\"!doc\\\": \\\"Indicates whether a node is a descendent of a given node.\\\"\\n        },\\n        \\\"dispatchEvent\\\": {\\n          \\\"!type\\\": \\\"fn(event: +Event) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/EventTarget.dispatchEvent\\\",\\n          \\\"!doc\\\": \\\"Dispatches an event into the event system. The event is subject to the same capturing and bubbling behavior as directly dispatched events.\\\"\\n        },\\n        \\\"innerText\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText\\\",\\n          \\\"!doc\\\": \\\"Gets or sets the text content of a node and its descendants.\\\"\\n        },\\n        \\\"ELEMENT_NODE\\\": \\\"number\\\",\\n        \\\"ATTRIBUTE_NODE\\\": \\\"number\\\",\\n        \\\"TEXT_NODE\\\": \\\"number\\\",\\n        \\\"CDATA_SECTION_NODE\\\": \\\"number\\\",\\n        \\\"ENTITY_REFERENCE_NODE\\\": \\\"number\\\",\\n        \\\"ENTITY_NODE\\\": \\\"number\\\",\\n        \\\"PROCESSING_INSTRUCTION_NODE\\\": \\\"number\\\",\\n        \\\"COMMENT_NODE\\\": \\\"number\\\",\\n        \\\"DOCUMENT_NODE\\\": \\\"number\\\",\\n        \\\"DOCUMENT_TYPE_NODE\\\": \\\"number\\\",\\n        \\\"DOCUMENT_FRAGMENT_NODE\\\": \\\"number\\\",\\n        \\\"NOTATION_NODE\\\": \\\"number\\\",\\n        \\\"DOCUMENT_POSITION_DISCONNECTED\\\": \\\"number\\\",\\n        \\\"DOCUMENT_POSITION_PRECEDING\\\": \\\"number\\\",\\n        \\\"DOCUMENT_POSITION_FOLLOWING\\\": \\\"number\\\",\\n        \\\"DOCUMENT_POSITION_CONTAINS\\\": \\\"number\\\",\\n        \\\"DOCUMENT_POSITION_CONTAINED_BY\\\": \\\"number\\\",\\n        \\\"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\\\": \\\"number\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Node\\\",\\n      \\\"!doc\\\": \\\"A Node is an interface from which a number of DOM types inherit, and allows these various types to be treated (or tested) similarly.\\\"\\n    },\\n    \\\"Element\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": {\\n        \\\"!proto\\\": \\\"Node.prototype\\\",\\n        \\\"getAttribute\\\": {\\n          \\\"!type\\\": \\\"fn(name: string) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.getAttribute\\\",\\n          \\\"!doc\\\": \\\"Returns the value of the named attribute on the specified element. If the named attribute does not exist, the value returned will either be null or \\\\\\\"\\\\\\\" (the empty string).\\\"\\n        },\\n        \\\"setAttribute\\\": {\\n          \\\"!type\\\": \\\"fn(name: string, value: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.setAttribute\\\",\\n          \\\"!doc\\\": \\\"Adds a new attribute or changes the value of an existing attribute on the specified element.\\\"\\n        },\\n        \\\"removeAttribute\\\": {\\n          \\\"!type\\\": \\\"fn(name: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.removeAttribute\\\",\\n          \\\"!doc\\\": \\\"Removes an attribute from the specified element.\\\"\\n        },\\n        \\\"getAttributeNode\\\": {\\n          \\\"!type\\\": \\\"fn(name: string) -> +Attr\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.getAttributeNode\\\",\\n          \\\"!doc\\\": \\\"Returns the specified attribute of the specified element, as an Attr node.\\\"\\n        },\\n        \\\"getElementsByTagName\\\": {\\n          \\\"!type\\\": \\\"fn(tagName: string) -> +NodeList\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.getElementsByTagName\\\",\\n          \\\"!doc\\\": \\\"Returns a list of elements with the given tag name. The subtree underneath the specified element is searched, excluding the element itself. The returned list is live, meaning that it updates itself with the DOM tree automatically. Consequently, there is no need to call several times element.getElementsByTagName with the same element and arguments.\\\"\\n        },\\n        \\\"getElementsByTagNameNS\\\": {\\n          \\\"!type\\\": \\\"fn(ns: string, tagName: string) -> +NodeList\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.getElementsByTagNameNS\\\",\\n          \\\"!doc\\\": \\\"Returns a list of elements with the given tag name belonging to the given namespace.\\\"\\n        },\\n        \\\"getAttributeNS\\\": {\\n          \\\"!type\\\": \\\"fn(ns: string, name: string) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.getAttributeNS\\\",\\n          \\\"!doc\\\": \\\"Returns the string value of the attribute with the specified namespace and name. If the named attribute does not exist, the value returned will either be null or \\\\\\\"\\\\\\\" (the empty string).\\\"\\n        },\\n        \\\"setAttributeNS\\\": {\\n          \\\"!type\\\": \\\"fn(ns: string, name: string, value: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.setAttributeNS\\\",\\n          \\\"!doc\\\": \\\"Adds a new attribute or changes the value of an attribute with the given namespace and name.\\\"\\n        },\\n        \\\"removeAttributeNS\\\": {\\n          \\\"!type\\\": \\\"fn(ns: string, name: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.removeAttributeNS\\\",\\n          \\\"!doc\\\": \\\"removeAttributeNS removes the specified attribute from an element.\\\"\\n        },\\n        \\\"getAttributeNodeNS\\\": {\\n          \\\"!type\\\": \\\"fn(ns: string, name: string) -> +Attr\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.getAttributeNodeNS\\\",\\n          \\\"!doc\\\": \\\"Returns the Attr node for the attribute with the given namespace and name.\\\"\\n        },\\n        \\\"hasAttribute\\\": {\\n          \\\"!type\\\": \\\"fn(name: string) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.hasAttribute\\\",\\n          \\\"!doc\\\": \\\"hasAttribute returns a boolean value indicating whether the specified element has the specified attribute or not.\\\"\\n        },\\n        \\\"hasAttributeNS\\\": {\\n          \\\"!type\\\": \\\"fn(ns: string, name: string) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.hasAttributeNS\\\",\\n          \\\"!doc\\\": \\\"hasAttributeNS returns a boolean value indicating whether the current element has the specified attribute.\\\"\\n        },\\n        \\\"matches\\\": {\\n          \\\"!type\\\": \\\"fn(selectorString: string) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\\\",\\n          \\\"!doc\\\": \\\"The Element.matches() method returns true if the element would be selected by the specified selector string; otherwise, returns false.\\\"\\n        },\\n        \\\"append\\\": {\\n          \\\"!type\\\": \\\"fn(...nodes: [string|Node])\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/append\\\",\\n          \\\"!doc\\\": \\\"This is an experimental technology\\\\n\\\\nThe Element.append method inserts a set of Node objects or DOMString objects after the last child of the ParentNode. DOMString objects are inserted as equivalent Text nodes.\\\"\\n        },\\n        \\\"prepend\\\": {\\n          \\\"!type\\\": \\\"fn(...nodes: [string|Node])\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/prepend\\\",\\n          \\\"!doc\\\": \\\"This is an experimental technology.\\\\n\\\\nThe Element.prepend method inserts a set of Node objects or DOMString objects before the first child of the ParentNode. DOMString objects are inserted as equivalent Text nodes.\\\"\\n        },\\n        \\\"before\\\": {\\n          \\\"!type\\\": \\\"fn(...nodes: [string|Node])\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/before\\\",\\n          \\\"!doc\\\": \\\"This is an experimental technology.\\\\n\\\\nThe Element.before method inserts a set of Node or DOMString objects in the children list of this ChildNode's parent, just before this ChildNode. DOMString objects are inserted as equivalent Text nodes.\\\"\\n        },\\n        \\\"after\\\": {\\n          \\\"!type\\\": \\\"fn(...nodes: [string|Node])\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/after\\\",\\n          \\\"!doc\\\": \\\"This is an experimental technology.\\\\n\\\\nThe Element.after() method inserts a set of Node or DOMString objects in the children list of this ChildNode's parent, just after this ChildNode. DOMString objects are inserted as equivalent Text nodes.\\\"\\n        },\\n        \\\"closest\\\": {\\n          \\\"!type\\\": \\\"fn(selectors?: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/Web/API/Element/closest\\\",\\n          \\\"!doc\\\": \\\"This is an experimental technology.\\\\n\\\\nThe Element.closest() method returns the closest ancestor of the current element (or the current element itself) which matches the selectors given in parameter. If there isn't such an ancestor, it returns null.\\\"\\n        },\\n        \\\"focus\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.focus\\\",\\n          \\\"!doc\\\": \\\"Sets focus on the specified element, if it can be focused.\\\"\\n        },\\n        \\\"blur\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.blur\\\",\\n          \\\"!doc\\\": \\\"The blur method removes keyboard focus from the current element.\\\"\\n        },\\n        \\\"scrollIntoView\\\": {\\n          \\\"!type\\\": \\\"fn(top: bool)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.scrollIntoView\\\",\\n          \\\"!doc\\\": \\\"The scrollIntoView() method scrolls the element into view.\\\"\\n        },\\n        \\\"scrollByLines\\\": {\\n          \\\"!type\\\": \\\"fn(lines: number)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.scrollByLines\\\",\\n          \\\"!doc\\\": \\\"Scrolls the document by the given number of lines.\\\"\\n        },\\n        \\\"scrollByPages\\\": {\\n          \\\"!type\\\": \\\"fn(pages: number)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.scrollByPages\\\",\\n          \\\"!doc\\\": \\\"Scrolls the current document by the specified number of pages.\\\"\\n        },\\n        \\\"getElementsByClassName\\\": {\\n          \\\"!type\\\": \\\"fn(name: string) -> +NodeList\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.getElementsByClassName\\\",\\n          \\\"!doc\\\": \\\"Returns a set of elements which have all the given class names. When called on the document object, the complete document is searched, including the root node. You may also call getElementsByClassName on any element; it will return only elements which are descendants of the specified root element with the given class names.\\\"\\n        },\\n        \\\"querySelector\\\": {\\n          \\\"!type\\\": \\\"fn(selectors: string) -> +Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Element.querySelector\\\",\\n          \\\"!doc\\\": \\\"Returns the first element that is a descendent of the element on which it is invoked that matches the specified group of selectors.\\\"\\n        },\\n        \\\"querySelectorAll\\\": {\\n          \\\"!type\\\": \\\"fn(selectors: string) -> +NodeList\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Element.querySelectorAll\\\",\\n          \\\"!doc\\\": \\\"Returns a non-live NodeList of all elements descended from the element on which it is invoked that match the specified group of CSS selectors.\\\"\\n        },\\n        \\\"getClientRects\\\": {\\n          \\\"!type\\\": \\\"fn() -> [+ClientRect]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.getClientRects\\\",\\n          \\\"!doc\\\": \\\"Returns a collection of rectangles that indicate the bounding rectangles for each box in a client.\\\"\\n        },\\n        \\\"getBoundingClientRect\\\": {\\n          \\\"!type\\\": \\\"fn() -> +ClientRect\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.getBoundingClientRect\\\",\\n          \\\"!doc\\\": \\\"Returns a text rectangle object that encloses a group of text rectangles.\\\"\\n        },\\n        \\\"setAttributeNode\\\": {\\n          \\\"!type\\\": \\\"fn(attr: +Attr) -> +Attr\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.setAttributeNode\\\",\\n          \\\"!doc\\\": \\\"Adds a new Attr node to the specified element.\\\"\\n        },\\n        \\\"removeAttributeNode\\\": {\\n          \\\"!type\\\": \\\"fn(attr: +Attr) -> +Attr\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.removeAttributeNode\\\",\\n          \\\"!doc\\\": \\\"Removes the specified attribute from the current element.\\\"\\n        },\\n        \\\"setAttributeNodeNS\\\": {\\n          \\\"!type\\\": \\\"fn(attr: +Attr) -> +Attr\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.setAttributeNodeNS\\\",\\n          \\\"!doc\\\": \\\"Adds a new namespaced attribute node to an element.\\\"\\n        },\\n        \\\"insertAdjacentHTML\\\": {\\n          \\\"!type\\\": \\\"fn(position: string, text: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.insertAdjacentHTML\\\",\\n          \\\"!doc\\\": \\\"Parses the specified text as HTML or XML and inserts the resulting nodes into the DOM tree at a specified position. It does not reparse the element it is being used on and thus it does not corrupt the existing elements inside the element. This, and avoiding the extra step of serialization make it much faster than direct innerHTML manipulation.\\\"\\n        },\\n        \\\"children\\\": {\\n          \\\"!type\\\": \\\"+HTMLCollection\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Element.children\\\",\\n          \\\"!doc\\\": \\\"Returns a collection of child elements of the given element.\\\"\\n        },\\n        \\\"childElementCount\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Element.childElementCount\\\",\\n          \\\"!doc\\\": \\\"Returns the number of child elements of the given element.\\\"\\n        },\\n        \\\"className\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.className\\\",\\n          \\\"!doc\\\": \\\"Gets and sets the value of the class attribute of the specified element.\\\"\\n        },\\n        \\\"style\\\": {\\n          \\\"cssText\\\": \\\"string\\\",\\n          \\\"alignmentBaseline\\\": \\\"string\\\",\\n          \\\"background\\\": \\\"string\\\",\\n          \\\"backgroundAttachment\\\": \\\"string\\\",\\n          \\\"backgroundClip\\\": \\\"string\\\",\\n          \\\"backgroundColor\\\": \\\"string\\\",\\n          \\\"backgroundImage\\\": \\\"string\\\",\\n          \\\"backgroundOrigin\\\": \\\"string\\\",\\n          \\\"backgroundPosition\\\": \\\"string\\\",\\n          \\\"backgroundPositionX\\\": \\\"string\\\",\\n          \\\"backgroundPositionY\\\": \\\"string\\\",\\n          \\\"backgroundRepeat\\\": \\\"string\\\",\\n          \\\"backgroundRepeatX\\\": \\\"string\\\",\\n          \\\"backgroundRepeatY\\\": \\\"string\\\",\\n          \\\"backgroundSize\\\": \\\"string\\\",\\n          \\\"baselineShift\\\": \\\"string\\\",\\n          \\\"border\\\": \\\"string\\\",\\n          \\\"borderBottom\\\": \\\"string\\\",\\n          \\\"borderBottomColor\\\": \\\"string\\\",\\n          \\\"borderBottomLeftRadius\\\": \\\"string\\\",\\n          \\\"borderBottomRightRadius\\\": \\\"string\\\",\\n          \\\"borderBottomStyle\\\": \\\"string\\\",\\n          \\\"borderBottomWidth\\\": \\\"string\\\",\\n          \\\"borderCollapse\\\": \\\"string\\\",\\n          \\\"borderColor\\\": \\\"string\\\",\\n          \\\"borderImage\\\": \\\"string\\\",\\n          \\\"borderImageOutset\\\": \\\"string\\\",\\n          \\\"borderImageRepeat\\\": \\\"string\\\",\\n          \\\"borderImageSlice\\\": \\\"string\\\",\\n          \\\"borderImageSource\\\": \\\"string\\\",\\n          \\\"borderImageWidth\\\": \\\"string\\\",\\n          \\\"borderLeft\\\": \\\"string\\\",\\n          \\\"borderLeftColor\\\": \\\"string\\\",\\n          \\\"borderLeftStyle\\\": \\\"string\\\",\\n          \\\"borderLeftWidth\\\": \\\"string\\\",\\n          \\\"borderRadius\\\": \\\"string\\\",\\n          \\\"borderRight\\\": \\\"string\\\",\\n          \\\"borderRightColor\\\": \\\"string\\\",\\n          \\\"borderRightStyle\\\": \\\"string\\\",\\n          \\\"borderRightWidth\\\": \\\"string\\\",\\n          \\\"borderSpacing\\\": \\\"string\\\",\\n          \\\"borderStyle\\\": \\\"string\\\",\\n          \\\"borderTop\\\": \\\"string\\\",\\n          \\\"borderTopColor\\\": \\\"string\\\",\\n          \\\"borderTopLeftRadius\\\": \\\"string\\\",\\n          \\\"borderTopRightRadius\\\": \\\"string\\\",\\n          \\\"borderTopStyle\\\": \\\"string\\\",\\n          \\\"borderTopWidth\\\": \\\"string\\\",\\n          \\\"borderWidth\\\": \\\"string\\\",\\n          \\\"bottom\\\": \\\"string\\\",\\n          \\\"boxShadow\\\": \\\"string\\\",\\n          \\\"boxSizing\\\": \\\"string\\\",\\n          \\\"captionSide\\\": \\\"string\\\",\\n          \\\"clear\\\": \\\"string\\\",\\n          \\\"clip\\\": \\\"string\\\",\\n          \\\"clipPath\\\": \\\"string\\\",\\n          \\\"clipRule\\\": \\\"string\\\",\\n          \\\"color\\\": \\\"string\\\",\\n          \\\"colorInterpolation\\\": \\\"string\\\",\\n          \\\"colorInterpolationFilters\\\": \\\"string\\\",\\n          \\\"colorProfile\\\": \\\"string\\\",\\n          \\\"colorRendering\\\": \\\"string\\\",\\n          \\\"content\\\": \\\"string\\\",\\n          \\\"counterIncrement\\\": \\\"string\\\",\\n          \\\"counterReset\\\": \\\"string\\\",\\n          \\\"cursor\\\": \\\"string\\\",\\n          \\\"direction\\\": \\\"string\\\",\\n          \\\"display\\\": \\\"string\\\",\\n          \\\"dominantBaseline\\\": \\\"string\\\",\\n          \\\"emptyCells\\\": \\\"string\\\",\\n          \\\"enableBackground\\\": \\\"string\\\",\\n          \\\"fill\\\": \\\"string\\\",\\n          \\\"fillOpacity\\\": \\\"string\\\",\\n          \\\"fillRule\\\": \\\"string\\\",\\n          \\\"filter\\\": \\\"string\\\",\\n          \\\"float\\\": \\\"string\\\",\\n          \\\"floodColor\\\": \\\"string\\\",\\n          \\\"floodOpacity\\\": \\\"string\\\",\\n          \\\"font\\\": \\\"string\\\",\\n          \\\"fontFamily\\\": \\\"string\\\",\\n          \\\"fontSize\\\": \\\"string\\\",\\n          \\\"fontStretch\\\": \\\"string\\\",\\n          \\\"fontStyle\\\": \\\"string\\\",\\n          \\\"fontVariant\\\": \\\"string\\\",\\n          \\\"fontWeight\\\": \\\"string\\\",\\n          \\\"glyphOrientationHorizontal\\\": \\\"string\\\",\\n          \\\"glyphOrientationVertical\\\": \\\"string\\\",\\n          \\\"height\\\": \\\"string\\\",\\n          \\\"imageRendering\\\": \\\"string\\\",\\n          \\\"kerning\\\": \\\"string\\\",\\n          \\\"left\\\": \\\"string\\\",\\n          \\\"letterSpacing\\\": \\\"string\\\",\\n          \\\"lightingColor\\\": \\\"string\\\",\\n          \\\"lineHeight\\\": \\\"string\\\",\\n          \\\"listStyle\\\": \\\"string\\\",\\n          \\\"listStyleImage\\\": \\\"string\\\",\\n          \\\"listStylePosition\\\": \\\"string\\\",\\n          \\\"listStyleType\\\": \\\"string\\\",\\n          \\\"margin\\\": \\\"string\\\",\\n          \\\"marginBottom\\\": \\\"string\\\",\\n          \\\"marginLeft\\\": \\\"string\\\",\\n          \\\"marginRight\\\": \\\"string\\\",\\n          \\\"marginTop\\\": \\\"string\\\",\\n          \\\"marker\\\": \\\"string\\\",\\n          \\\"markerEnd\\\": \\\"string\\\",\\n          \\\"markerMid\\\": \\\"string\\\",\\n          \\\"markerStart\\\": \\\"string\\\",\\n          \\\"mask\\\": \\\"string\\\",\\n          \\\"maxHeight\\\": \\\"string\\\",\\n          \\\"maxWidth\\\": \\\"string\\\",\\n          \\\"minHeight\\\": \\\"string\\\",\\n          \\\"minWidth\\\": \\\"string\\\",\\n          \\\"opacity\\\": \\\"string\\\",\\n          \\\"orphans\\\": \\\"string\\\",\\n          \\\"outline\\\": \\\"string\\\",\\n          \\\"outlineColor\\\": \\\"string\\\",\\n          \\\"outlineOffset\\\": \\\"string\\\",\\n          \\\"outlineStyle\\\": \\\"string\\\",\\n          \\\"outlineWidth\\\": \\\"string\\\",\\n          \\\"overflow\\\": \\\"string\\\",\\n          \\\"overflowWrap\\\": \\\"string\\\",\\n          \\\"overflowX\\\": \\\"string\\\",\\n          \\\"overflowY\\\": \\\"string\\\",\\n          \\\"padding\\\": \\\"string\\\",\\n          \\\"paddingBottom\\\": \\\"string\\\",\\n          \\\"paddingLeft\\\": \\\"string\\\",\\n          \\\"paddingRight\\\": \\\"string\\\",\\n          \\\"paddingTop\\\": \\\"string\\\",\\n          \\\"page\\\": \\\"string\\\",\\n          \\\"pageBreakAfter\\\": \\\"string\\\",\\n          \\\"pageBreakBefore\\\": \\\"string\\\",\\n          \\\"pageBreakInside\\\": \\\"string\\\",\\n          \\\"pointerEvents\\\": \\\"string\\\",\\n          \\\"position\\\": \\\"string\\\",\\n          \\\"quotes\\\": \\\"string\\\",\\n          \\\"resize\\\": \\\"string\\\",\\n          \\\"right\\\": \\\"string\\\",\\n          \\\"shapeRendering\\\": \\\"string\\\",\\n          \\\"size\\\": \\\"string\\\",\\n          \\\"speak\\\": \\\"string\\\",\\n          \\\"src\\\": \\\"string\\\",\\n          \\\"stopColor\\\": \\\"string\\\",\\n          \\\"stopOpacity\\\": \\\"string\\\",\\n          \\\"stroke\\\": \\\"string\\\",\\n          \\\"strokeDasharray\\\": \\\"string\\\",\\n          \\\"strokeDashoffset\\\": \\\"string\\\",\\n          \\\"strokeLinecap\\\": \\\"string\\\",\\n          \\\"strokeLinejoin\\\": \\\"string\\\",\\n          \\\"strokeMiterlimit\\\": \\\"string\\\",\\n          \\\"strokeOpacity\\\": \\\"string\\\",\\n          \\\"strokeWidth\\\": \\\"string\\\",\\n          \\\"tabSize\\\": \\\"string\\\",\\n          \\\"tableLayout\\\": \\\"string\\\",\\n          \\\"textAlign\\\": \\\"string\\\",\\n          \\\"textAnchor\\\": \\\"string\\\",\\n          \\\"textDecoration\\\": \\\"string\\\",\\n          \\\"textIndent\\\": \\\"string\\\",\\n          \\\"textLineThrough\\\": \\\"string\\\",\\n          \\\"textLineThroughColor\\\": \\\"string\\\",\\n          \\\"textLineThroughMode\\\": \\\"string\\\",\\n          \\\"textLineThroughStyle\\\": \\\"string\\\",\\n          \\\"textLineThroughWidth\\\": \\\"string\\\",\\n          \\\"textOverflow\\\": \\\"string\\\",\\n          \\\"textOverline\\\": \\\"string\\\",\\n          \\\"textOverlineColor\\\": \\\"string\\\",\\n          \\\"textOverlineMode\\\": \\\"string\\\",\\n          \\\"textOverlineStyle\\\": \\\"string\\\",\\n          \\\"textOverlineWidth\\\": \\\"string\\\",\\n          \\\"textRendering\\\": \\\"string\\\",\\n          \\\"textShadow\\\": \\\"string\\\",\\n          \\\"textTransform\\\": \\\"string\\\",\\n          \\\"textUnderline\\\": \\\"string\\\",\\n          \\\"textUnderlineColor\\\": \\\"string\\\",\\n          \\\"textUnderlineMode\\\": \\\"string\\\",\\n          \\\"textUnderlineStyle\\\": \\\"string\\\",\\n          \\\"textUnderlineWidth\\\": \\\"string\\\",\\n          \\\"top\\\": \\\"string\\\",\\n          \\\"unicodeBidi\\\": \\\"string\\\",\\n          \\\"unicodeRange\\\": \\\"string\\\",\\n          \\\"vectorEffect\\\": \\\"string\\\",\\n          \\\"verticalAlign\\\": \\\"string\\\",\\n          \\\"visibility\\\": \\\"string\\\",\\n          \\\"whiteSpace\\\": \\\"string\\\",\\n          \\\"width\\\": \\\"string\\\",\\n          \\\"wordBreak\\\": \\\"string\\\",\\n          \\\"wordSpacing\\\": \\\"string\\\",\\n          \\\"wordWrap\\\": \\\"string\\\",\\n          \\\"writingMode\\\": \\\"string\\\",\\n          \\\"zIndex\\\": \\\"string\\\",\\n          \\\"zoom\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.style\\\",\\n          \\\"!doc\\\": \\\"Returns an object that represents the element's style attribute.\\\"\\n        },\\n        \\\"classList\\\": {\\n          \\\"!type\\\": \\\"+DOMTokenList\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.classList\\\",\\n          \\\"!doc\\\": \\\"Returns a token list of the class attribute of the element.\\\"\\n        },\\n        \\\"contentEditable\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Element.contentEditable\\\",\\n          \\\"!doc\\\": \\\"Indicates whether or not the element is editable.\\\"\\n        },\\n        \\\"firstElementChild\\\": {\\n          \\\"!type\\\": \\\"+Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Element.firstElementChild\\\",\\n          \\\"!doc\\\": \\\"Returns the element's first child element or null if there are no child elements.\\\"\\n        },\\n        \\\"lastElementChild\\\": {\\n          \\\"!type\\\": \\\"+Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Element.lastElementChild\\\",\\n          \\\"!doc\\\": \\\"Returns the element's last child element or null if there are no child elements.\\\"\\n        },\\n        \\\"nextElementSibling\\\": {\\n          \\\"!type\\\": \\\"+Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Element.nextElementSibling\\\",\\n          \\\"!doc\\\": \\\"Returns the element immediately following the specified one in its parent's children list, or null if the specified element is the last one in the list.\\\"\\n        },\\n        \\\"previousElementSibling\\\": {\\n          \\\"!type\\\": \\\"+Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Element.previousElementSibling\\\",\\n          \\\"!doc\\\": \\\"Returns the element immediately prior to the specified one in its parent's children list, or null if the specified element is the first one in the list.\\\"\\n        },\\n        \\\"tabIndex\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.tabIndex\\\",\\n          \\\"!doc\\\": \\\"Gets/sets the tab order of the current element.\\\"\\n        },\\n        \\\"title\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.title\\\",\\n          \\\"!doc\\\": \\\"Establishes the text to be displayed in a 'tool tip' popup when the mouse is over the displayed node.\\\"\\n        },\\n        \\\"width\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.offsetWidth\\\",\\n          \\\"!doc\\\": \\\"Returns the layout width of an element.\\\"\\n        },\\n        \\\"height\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.offsetHeight\\\",\\n          \\\"!doc\\\": \\\"Height of an element relative to the element's offsetParent.\\\"\\n        },\\n        \\\"getContext\\\": {\\n          \\\"!type\\\": \\\"fn(id: string) -> CanvasRenderingContext2D\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/HTMLCanvasElement\\\",\\n          \\\"!doc\\\": \\\"DOM canvas elements expose the HTMLCanvasElement interface, which provides properties and methods for manipulating the layout and presentation of canvas elements. The HTMLCanvasElement interface inherits the properties and methods of the element object interface.\\\"\\n        },\\n        \\\"supportsContext\\\": \\\"fn(id: string) -> bool\\\",\\n        \\\"oncopy\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.oncopy\\\",\\n          \\\"!doc\\\": \\\"The oncopy property returns the onCopy event handler code on the current element.\\\"\\n        },\\n        \\\"oncut\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.oncut\\\",\\n          \\\"!doc\\\": \\\"The oncut property returns the onCut event handler code on the current element.\\\"\\n        },\\n        \\\"onpaste\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onpaste\\\",\\n          \\\"!doc\\\": \\\"The onpaste property returns the onPaste event handler code on the current element.\\\"\\n        },\\n        \\\"onbeforeunload\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/HTML/Element/body\\\",\\n          \\\"!doc\\\": \\\"The HTML <body> element represents the main content of an HTML document. There is only one <body> element in a document.\\\"\\n        },\\n        \\\"onfocus\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onfocus\\\",\\n          \\\"!doc\\\": \\\"The onfocus property returns the onFocus event handler code on the current element.\\\"\\n        },\\n        \\\"onblur\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onblur\\\",\\n          \\\"!doc\\\": \\\"The onblur property returns the onBlur event handler code, if any, that exists on the current element.\\\"\\n        },\\n        \\\"onchange\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onchange\\\",\\n          \\\"!doc\\\": \\\"The onchange property sets and returns the onChange event handler code for the current element.\\\"\\n        },\\n        \\\"onclick\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onclick\\\",\\n          \\\"!doc\\\": \\\"The onclick property returns the onClick event handler code on the current element.\\\"\\n        },\\n        \\\"ondblclick\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.ondblclick\\\",\\n          \\\"!doc\\\": \\\"The ondblclick property returns the onDblClick event handler code on the current element.\\\"\\n        },\\n        \\\"onmousedown\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onmousedown\\\",\\n          \\\"!doc\\\": \\\"The onmousedown property returns the onMouseDown event handler code on the current element.\\\"\\n        },\\n        \\\"onmouseup\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onmouseup\\\",\\n          \\\"!doc\\\": \\\"The onmouseup property returns the onMouseUp event handler code on the current element.\\\"\\n        },\\n        \\\"onmousewheel\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Mozilla_event_reference/wheel\\\",\\n          \\\"!doc\\\": \\\"The wheel event is fired when a wheel button of a pointing device (usually a mouse) is rotated. This event deprecates the legacy mousewheel event.\\\"\\n        },\\n        \\\"onmouseover\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onmouseover\\\",\\n          \\\"!doc\\\": \\\"The onmouseover property returns the onMouseOver event handler code on the current element.\\\"\\n        },\\n        \\\"onmouseout\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onmouseout\\\",\\n          \\\"!doc\\\": \\\"The onmouseout property returns the onMouseOut event handler code on the current element.\\\"\\n        },\\n        \\\"onmousemove\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onmousemove\\\",\\n          \\\"!doc\\\": \\\"The onmousemove property returns the mousemove event handler code on the current element.\\\"\\n        },\\n        \\\"oncontextmenu\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.oncontextmenu\\\",\\n          \\\"!doc\\\": \\\"An event handler property for right-click events on the window. Unless the default behavior is prevented, the browser context menu will activate. Note that this event will occur with any non-disabled right-click event and does not depend on an element possessing the \\\\\\\"contextmenu\\\\\\\" attribute.\\\"\\n        },\\n        \\\"onkeydown\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onkeydown\\\",\\n          \\\"!doc\\\": \\\"The onkeydown property returns the onKeyDown event handler code on the current element.\\\"\\n        },\\n        \\\"onkeyup\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onkeyup\\\",\\n          \\\"!doc\\\": \\\"The onkeyup property returns the onKeyUp event handler code for the current element.\\\"\\n        },\\n        \\\"onkeypress\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onkeypress\\\",\\n          \\\"!doc\\\": \\\"The onkeypress property sets and returns the onKeyPress event handler code for the current element.\\\"\\n        },\\n        \\\"onresize\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onresize\\\",\\n          \\\"!doc\\\": \\\"onresize returns the element's onresize event handler code. It can also be used to set the code to be executed when the resize event occurs.\\\"\\n        },\\n        \\\"onscroll\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onscroll\\\",\\n          \\\"!doc\\\": \\\"The onscroll property returns the onScroll event handler code on the current element.\\\"\\n        },\\n        \\\"ondragstart\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DragDrop/Drag_Operations\\\",\\n          \\\"!doc\\\": \\\"The following describes the steps that occur during a drag and drop operation.\\\"\\n        },\\n        \\\"ondragover\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Mozilla_event_reference/dragover\\\",\\n          \\\"!doc\\\": \\\"The dragover event is fired when an element or text selection is being dragged over a valid drop target (every few hundred milliseconds).\\\"\\n        },\\n        \\\"ondragleave\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Mozilla_event_reference/dragleave\\\",\\n          \\\"!doc\\\": \\\"The dragleave event is fired when a dragged element or text selection leaves a valid drop target.\\\"\\n        },\\n        \\\"ondragenter\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Mozilla_event_reference/dragenter\\\",\\n          \\\"!doc\\\": \\\"The dragenter event is fired when a dragged element or text selection enters a valid drop target.\\\"\\n        },\\n        \\\"ondragend\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Mozilla_event_reference/dragend\\\",\\n          \\\"!doc\\\": \\\"The dragend event is fired when a drag operation is being ended (by releasing a mouse button or hitting the escape key).\\\"\\n        },\\n        \\\"ondrag\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Mozilla_event_reference/drag\\\",\\n          \\\"!doc\\\": \\\"The drag event is fired when an element or text selection is being dragged (every few hundred milliseconds).\\\"\\n        },\\n        \\\"offsetTop\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.offsetTop\\\",\\n          \\\"!doc\\\": \\\"Returns the distance of the current element relative to the top of the offsetParent node.\\\"\\n        },\\n        \\\"offsetLeft\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.offsetLeft\\\",\\n          \\\"!doc\\\": \\\"Returns the number of pixels that the upper left corner of the current element is offset to the left within the offsetParent node.\\\"\\n        },\\n        \\\"offsetHeight\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.offsetHeight\\\",\\n          \\\"!doc\\\": \\\"Height of an element relative to the element's offsetParent.\\\"\\n        },\\n        \\\"offsetWidth\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.offsetWidth\\\",\\n          \\\"!doc\\\": \\\"Returns the layout width of an element.\\\"\\n        },\\n        \\\"scrollTop\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.scrollTop\\\",\\n          \\\"!doc\\\": \\\"Gets or sets the number of pixels that the content of an element is scrolled upward.\\\"\\n        },\\n        \\\"scrollLeft\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.scrollLeft\\\",\\n          \\\"!doc\\\": \\\"Gets or sets the number of pixels that an element's content is scrolled to the left.\\\"\\n        },\\n        \\\"scrollHeight\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.scrollHeight\\\",\\n          \\\"!doc\\\": \\\"Height of the scroll view of an element; it includes the element padding but not its margin.\\\"\\n        },\\n        \\\"scrollWidth\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.scrollWidth\\\",\\n          \\\"!doc\\\": \\\"Read-only property that returns either the width in pixels of the content of an element or the width of the element itself, whichever is greater.\\\"\\n        },\\n        \\\"clientTop\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.clientTop\\\",\\n          \\\"!doc\\\": \\\"The width of the top border of an element in pixels. It does not include the top margin or padding. clientTop is read-only.\\\"\\n        },\\n        \\\"clientLeft\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.clientLeft\\\",\\n          \\\"!doc\\\": \\\"The width of the left border of an element in pixels. It includes the width of the vertical scrollbar if the text direction of the element is right-to-left and if there is an overflow causing a left vertical scrollbar to be rendered. clientLeft does not include the left margin or the left padding. clientLeft is read-only.\\\"\\n        },\\n        \\\"clientHeight\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.clientHeight\\\",\\n          \\\"!doc\\\": \\\"Returns the inner height of an element in pixels, including padding but not the horizontal scrollbar height, border, or margin.\\\"\\n        },\\n        \\\"clientWidth\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.clientWidth\\\",\\n          \\\"!doc\\\": \\\"The inner width of an element in pixels. It includes padding but not the vertical scrollbar (if present, if rendered), border or margin.\\\"\\n        },\\n        \\\"innerHTML\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.innerHTML\\\",\\n          \\\"!doc\\\": \\\"Sets or gets the HTML syntax describing the element's descendants.\\\"\\n        },\\n        \\\"createdCallback\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"http://w3c.github.io/webcomponents/spec/custom/index.html#dfn-created-callback\\\",\\n          \\\"!doc\\\": \\\"This callback is invoked after custom element instance is created and its definition is registered. The actual timing of this callback is defined further in this specification.\\\"\\n        },\\n        \\\"attachedCallback\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"http://w3c.github.io/webcomponents/spec/custom/index.html#dfn-entered-view-callback\\\",\\n          \\\"!doc\\\": \\\"Unless specified otherwise, this callback must be enqueued whenever custom element is inserted into a document and this document has a browsing context.\\\"\\n        },\\n        \\\"detachedCallback\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"http://w3c.github.io/webcomponents/spec/custom/index.html#dfn-left-view-callback\\\",\\n          \\\"!doc\\\": \\\"Unless specified otherwise, this callback must be enqueued whenever custom element is removed from the document and this document has a browsing context.\\\"\\n        },\\n        \\\"attributeChangedCallback\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"http://w3c.github.io/webcomponents/spec/custom/index.html#dfn-attribute-changed-callback\\\",\\n          \\\"!doc\\\": \\\"Unless specified otherwise, this callback must be enqueued whenever custom element's attribute is added, changed or removed.\\\"\\n        }\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Element\\\",\\n      \\\"!doc\\\": \\\"Represents an element in an HTML or XML document.\\\"\\n    },\\n    \\\"Text\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": {\\n        \\\"!proto\\\": \\\"Node.prototype\\\",\\n        \\\"wholeText\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Text.wholeText\\\",\\n          \\\"!doc\\\": \\\"Returns all text of all Text nodes logically adjacent to the node.  The text is concatenated in document order.  This allows you to specify any text node and obtain all adjacent text as a single string.\\\"\\n        },\\n        \\\"splitText\\\": {\\n          \\\"!type\\\": \\\"fn(offset: number) -> +Text\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Text.splitText\\\",\\n          \\\"!doc\\\": \\\"Breaks the Text node into two nodes at the specified offset, keeping both nodes in the tree as siblings.\\\"\\n        }\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Text\\\",\\n      \\\"!doc\\\": \\\"In the DOM, the Text interface represents the textual content of an Element or Attr.  If an element has no markup within its content, it has a single child implementing Text that contains the element's text.  However, if the element contains markup, it is parsed into information items and Text nodes that form its children.\\\"\\n    },\\n    \\\"Document\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": {\\n        \\\"!proto\\\": \\\"Node.prototype\\\",\\n        \\\"activeElement\\\": {\\n          \\\"!type\\\": \\\"+Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.activeElement\\\",\\n          \\\"!doc\\\": \\\"Returns the currently focused element, that is, the element that will get keystroke events if the user types any. This attribute is read only.\\\"\\n        },\\n        \\\"compatMode\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.compatMode\\\",\\n          \\\"!doc\\\": \\\"Indicates whether the document is rendered in Quirks mode or Strict mode.\\\"\\n        },\\n        \\\"designMode\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.designMode\\\",\\n          \\\"!doc\\\": \\\"Can be used to make any document editable, for example in a <iframe />:\\\"\\n        },\\n        \\\"dir\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Document.dir\\\",\\n          \\\"!doc\\\": \\\"This property should indicate and allow the setting of the directionality of the text of the document, whether left to right (default) or right to left.\\\"\\n        },\\n        \\\"height\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.height\\\",\\n          \\\"!doc\\\": \\\"Returns the height of the <body> element of the current document.\\\"\\n        },\\n        \\\"width\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.width\\\",\\n          \\\"!doc\\\": \\\"Returns the width of the <body> element of the current document in pixels.\\\"\\n        },\\n        \\\"characterSet\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.characterSet\\\",\\n          \\\"!doc\\\": \\\"Returns the character encoding of the current document.\\\"\\n        },\\n        \\\"readyState\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.readyState\\\",\\n          \\\"!doc\\\": \\\"Returns \\\\\\\"loading\\\\\\\" while the document is loading, \\\\\\\"interactive\\\\\\\" once it is finished parsing but still loading sub-resources, and \\\\\\\"complete\\\\\\\" once it has loaded.\\\"\\n        },\\n        \\\"location\\\": {\\n          \\\"!type\\\": \\\"location\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.location\\\",\\n          \\\"!doc\\\": \\\"Returns a Location object, which contains information about the URL of the document and provides methods for changing that URL.\\\"\\n        },\\n        \\\"lastModified\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.lastModified\\\",\\n          \\\"!doc\\\": \\\"Returns a string containing the date and time on which the current document was last modified.\\\"\\n        },\\n        \\\"head\\\": {\\n          \\\"!type\\\": \\\"+Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.head\\\",\\n          \\\"!doc\\\": \\\"Returns the <head> element of the current document. If there are more than one <head> elements, the first one is returned.\\\"\\n        },\\n        \\\"body\\\": {\\n          \\\"!type\\\": \\\"+Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.body\\\",\\n          \\\"!doc\\\": \\\"Returns the <body> or <frameset> node of the current document.\\\"\\n        },\\n        \\\"cookie\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.cookie\\\",\\n          \\\"!doc\\\": \\\"Get and set the cookies associated with the current document.\\\"\\n        },\\n        \\\"URL\\\": \\\"string\\\",\\n        \\\"domain\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.domain\\\",\\n          \\\"!doc\\\": \\\"Gets/sets the domain portion of the origin of the current document, as used by the same origin policy.\\\"\\n        },\\n        \\\"referrer\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.referrer\\\",\\n          \\\"!doc\\\": \\\"Returns the URI of the page that linked to this page.\\\"\\n        },\\n        \\\"title\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.title\\\",\\n          \\\"!doc\\\": \\\"Gets or sets the title of the document.\\\"\\n        },\\n        \\\"defaultView\\\": {\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.defaultView\\\",\\n          \\\"!doc\\\": \\\"In browsers returns the window object associated with the document or null if none available.\\\"\\n        },\\n        \\\"documentURI\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.documentURI\\\",\\n          \\\"!doc\\\": \\\"Returns the document location as string. It is read-only per DOM4 specification.\\\"\\n        },\\n        \\\"xmlStandalone\\\": \\\"bool\\\",\\n        \\\"xmlVersion\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.xmlVersion\\\",\\n          \\\"!doc\\\": \\\"Returns the version number as specified in the XML declaration (e.g., <?xml version=\\\\\\\"1.0\\\\\\\"?>) or \\\\\\\"1.0\\\\\\\" if the declaration is absent.\\\"\\n        },\\n        \\\"xmlEncoding\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Document.xmlEncoding\\\",\\n          \\\"!doc\\\": \\\"Returns the encoding as determined by the XML declaration. Should be null if unspecified or unknown.\\\"\\n        },\\n        \\\"inputEncoding\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.inputEncoding\\\",\\n          \\\"!doc\\\": \\\"Returns a string representing the encoding under which the document was parsed (e.g. ISO-8859-1).\\\"\\n        },\\n        \\\"documentElement\\\": {\\n          \\\"!type\\\": \\\"+Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.documentElement\\\",\\n          \\\"!doc\\\": \\\"Read-only\\\"\\n        },\\n        \\\"implementation\\\": {\\n          \\\"hasFeature\\\": \\\"fn(feature: string, version: number) -> bool\\\",\\n          \\\"createDocumentType\\\": {\\n            \\\"!type\\\": \\\"fn(qualifiedName: string, publicId: string, systemId: string) -> +Node\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/DOMImplementation.createDocumentType\\\",\\n            \\\"!doc\\\": \\\"Returns a DocumentType object which can either be used with DOMImplementation.createDocument upon document creation or they can be put into the document via Node.insertBefore() or Node.replaceChild(): http://www.w3.org/TR/DOM-Level-3-Cor...l#ID-B63ED1A31 (less ideal due to features not likely being as accessible: http://www.w3.org/TR/DOM-Level-3-Cor...createDocument ). In any case, entity declarations and notations will not be available: http://www.w3.org/TR/DOM-Level-3-Cor...-createDocType   \\\"\\n          },\\n          \\\"createHTMLDocument\\\": {\\n            \\\"!type\\\": \\\"fn(title: string) -> +Document\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/DOMImplementation.createHTMLDocument\\\",\\n            \\\"!doc\\\": \\\"This method (available from document.implementation) creates a new HTML document.\\\"\\n          },\\n          \\\"createDocument\\\": {\\n            \\\"!type\\\": \\\"fn(namespaceURI: string, qualifiedName: string, type: +Node) -> +Document\\\",\\n            \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/DOM/DOMImplementation.createHTMLDocument\\\",\\n            \\\"!doc\\\": \\\"This method creates a new HTML document.\\\"\\n          },\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.implementation\\\",\\n          \\\"!doc\\\": \\\"Returns a DOMImplementation object associated with the current document.\\\"\\n        },\\n        \\\"doctype\\\": {\\n          \\\"!type\\\": \\\"+Node\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.doctype\\\",\\n          \\\"!doc\\\": \\\"Returns the Document Type Declaration (DTD) associated with current document. The returned object implements the DocumentType interface. Use DOMImplementation.createDocumentType() to create a DocumentType.\\\"\\n        },\\n        \\\"open\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.open\\\",\\n          \\\"!doc\\\": \\\"The document.open() method opens a document for writing.\\\"\\n        },\\n        \\\"close\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.close\\\",\\n          \\\"!doc\\\": \\\"The document.close() method finishes writing to a document, opened with document.open().\\\"\\n        },\\n        \\\"write\\\": {\\n          \\\"!type\\\": \\\"fn(html: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.write\\\",\\n          \\\"!doc\\\": \\\"Writes a string of text to a document stream opened by document.open().\\\"\\n        },\\n        \\\"writeln\\\": {\\n          \\\"!type\\\": \\\"fn(html: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.writeln\\\",\\n          \\\"!doc\\\": \\\"Writes a string of text followed by a newline character to a document.\\\"\\n        },\\n        \\\"clear\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.clear\\\",\\n          \\\"!doc\\\": \\\"In recent versions of Mozilla-based applications as well as in Internet Explorer and Netscape 4 this method does nothing.\\\"\\n        },\\n        \\\"hasFocus\\\": {\\n          \\\"!type\\\": \\\"fn() -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.hasFocus\\\",\\n          \\\"!doc\\\": \\\"Returns a Boolean value indicating whether the document or any element inside the document has focus. This method can be used to determine whether the active element in a document has focus.\\\"\\n        },\\n        \\\"createElement\\\": {\\n          \\\"!type\\\": \\\"fn(tagName: string) -> +Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.createElement\\\",\\n          \\\"!doc\\\": \\\"Creates the specified element.\\\"\\n        },\\n        \\\"createElementNS\\\": {\\n          \\\"!type\\\": \\\"fn(ns: string, tagName: string) -> +Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.createElementNS\\\",\\n          \\\"!doc\\\": \\\"Creates an element with the specified namespace URI and qualified name.\\\"\\n        },\\n        \\\"createDocumentFragment\\\": {\\n          \\\"!type\\\": \\\"fn() -> +DocumentFragment\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.createDocumentFragment\\\",\\n          \\\"!doc\\\": \\\"Creates a new empty DocumentFragment.\\\"\\n        },\\n        \\\"createTextNode\\\": {\\n          \\\"!type\\\": \\\"fn(content: string) -> +Text\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.createTextNode\\\",\\n          \\\"!doc\\\": \\\"Creates a new Text node.\\\"\\n        },\\n        \\\"createComment\\\": {\\n          \\\"!type\\\": \\\"fn(content: string) -> +Node\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.createComment\\\",\\n          \\\"!doc\\\": \\\"Creates a new comment node, and returns it.\\\"\\n        },\\n        \\\"createCDATASection\\\": {\\n          \\\"!type\\\": \\\"fn(content: string) -> +Node\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.createCDATASection\\\",\\n          \\\"!doc\\\": \\\"Creates a new CDATA section node, and returns it. \\\"\\n        },\\n        \\\"createProcessingInstruction\\\": {\\n          \\\"!type\\\": \\\"fn(content: string) -> +Node\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.createProcessingInstruction\\\",\\n          \\\"!doc\\\": \\\"Creates a new processing instruction node, and returns it.\\\"\\n        },\\n        \\\"createAttribute\\\": {\\n          \\\"!type\\\": \\\"fn(name: string) -> +Attr\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.createAttribute\\\",\\n          \\\"!doc\\\": \\\"Creates a new attribute node, and returns it.\\\"\\n        },\\n        \\\"createAttributeNS\\\": {\\n          \\\"!type\\\": \\\"fn(ns: string, name: string) -> +Attr\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Attr\\\",\\n          \\\"!doc\\\": \\\"This type represents a DOM element's attribute as an object. In most DOM methods, you will probably directly retrieve the attribute as a string (e.g., Element.getAttribute(), but certain functions (e.g., Element.getAttributeNode()) or means of iterating give Attr types.\\\"\\n        },\\n        \\\"importNode\\\": {\\n          \\\"!type\\\": \\\"fn(node: +Node, deep: bool) -> +Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.importNode\\\",\\n          \\\"!doc\\\": \\\"Creates a copy of a node from an external document that can be inserted into the current document.\\\"\\n        },\\n        \\\"getElementById\\\": {\\n          \\\"!type\\\": \\\"fn(id: string) -> +Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.getElementById\\\",\\n          \\\"!doc\\\": \\\"Returns a reference to the element by its ID.\\\"\\n        },\\n        \\\"getElementsByTagName\\\": {\\n          \\\"!type\\\": \\\"fn(tagName: string) -> +NodeList\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.getElementsByTagName\\\",\\n          \\\"!doc\\\": \\\"Returns a NodeList of elements with the given tag name. The complete document is searched, including the root node. The returned NodeList is live, meaning that it updates itself automatically to stay in sync with the DOM tree without having to call document.getElementsByTagName again.\\\"\\n        },\\n        \\\"getElementsByTagNameNS\\\": {\\n          \\\"!type\\\": \\\"fn(ns: string, tagName: string) -> +NodeList\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.getElementsByTagNameNS\\\",\\n          \\\"!doc\\\": \\\"Returns a list of elements with the given tag name belonging to the given namespace. The complete document is searched, including the root node.\\\"\\n        },\\n        \\\"createEvent\\\": {\\n          \\\"!type\\\": \\\"fn(type: string) -> +Event\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.createEvent\\\",\\n          \\\"!doc\\\": \\\"Creates an event of the type specified. The returned object should be first initialized and can then be passed to element.dispatchEvent.\\\"\\n        },\\n        \\\"createRange\\\": {\\n          \\\"!type\\\": \\\"fn() -> +Range\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.createRange\\\",\\n          \\\"!doc\\\": \\\"Returns a new Range object.\\\"\\n        },\\n        \\\"evaluate\\\": {\\n          \\\"!type\\\": \\\"fn(expr: ?) -> +XPathResult\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.evaluate\\\",\\n          \\\"!doc\\\": \\\"Returns an XPathResult based on an XPath expression and other given parameters.\\\"\\n        },\\n        \\\"execCommand\\\": {\\n          \\\"!type\\\": \\\"fn(cmd: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Rich-Text_Editing_in_Mozilla#Executing_Commands\\\",\\n          \\\"!doc\\\": \\\"Run command to manipulate the contents of an editable region.\\\"\\n        },\\n        \\\"queryCommandEnabled\\\": {\\n          \\\"!type\\\": \\\"fn(cmd: string) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document\\\",\\n          \\\"!doc\\\": \\\"Returns true if the Midas command can be executed on the current range.\\\"\\n        },\\n        \\\"queryCommandIndeterm\\\": {\\n          \\\"!type\\\": \\\"fn(cmd: string) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document\\\",\\n          \\\"!doc\\\": \\\"Returns true if the Midas command is in a indeterminate state on the current range.\\\"\\n        },\\n        \\\"queryCommandState\\\": {\\n          \\\"!type\\\": \\\"fn(cmd: string) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document\\\",\\n          \\\"!doc\\\": \\\"Returns true if the Midas command has been executed on the current range.\\\"\\n        },\\n        \\\"queryCommandSupported\\\": {\\n          \\\"!type\\\": \\\"fn(cmd: string) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.queryCommandSupported\\\",\\n          \\\"!doc\\\": \\\"Reports whether or not the specified editor query command is supported by the browser.\\\"\\n        },\\n        \\\"queryCommandValue\\\": {\\n          \\\"!type\\\": \\\"fn(cmd: string) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document\\\",\\n          \\\"!doc\\\": \\\"Returns the current value of the current range for Midas command.\\\"\\n        },\\n        \\\"getElementsByName\\\": {\\n          \\\"!type\\\": \\\"fn(name: string) -> +HTMLCollection\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.getElementsByName\\\",\\n          \\\"!doc\\\": \\\"Returns a list of elements with a given name in the HTML document.\\\"\\n        },\\n        \\\"elementFromPoint\\\": {\\n          \\\"!type\\\": \\\"fn(x: number, y: number) -> +Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.elementFromPoint\\\",\\n          \\\"!doc\\\": \\\"Returns the element from the document whose elementFromPoint method is being called which is the topmost element which lies under the given point.  To get an element, specify the point via coordinates, in CSS pixels, relative to the upper-left-most point in the window or frame containing the document.\\\"\\n        },\\n        \\\"getSelection\\\": {\\n          \\\"!type\\\": \\\"fn() -> +Selection\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.getSelection\\\",\\n          \\\"!doc\\\": \\\"The DOM getSelection() method is available on the Window and Document interfaces.\\\"\\n        },\\n        \\\"adoptNode\\\": {\\n          \\\"!type\\\": \\\"fn(node: +Node) -> +Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.adoptNode\\\",\\n          \\\"!doc\\\": \\\"Adopts a node from an external document. The node and its subtree is removed from the document it's in (if any), and its ownerDocument is changed to the current document. The node can then be inserted into the current document.\\\"\\n        },\\n        \\\"createTreeWalker\\\": {\\n          \\\"!type\\\": \\\"fn(root: +Node, mask: number) -> ?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.createTreeWalker\\\",\\n          \\\"!doc\\\": \\\"Returns a new TreeWalker object.\\\"\\n        },\\n        \\\"createExpression\\\": {\\n          \\\"!type\\\": \\\"fn(text: string) -> ?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.createExpression\\\",\\n          \\\"!doc\\\": \\\"This method compiles an XPathExpression which can then be used for (repeated) evaluations.\\\"\\n        },\\n        \\\"createNSResolver\\\": {\\n          \\\"!type\\\": \\\"fn(node: +Node)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.createNSResolver\\\",\\n          \\\"!doc\\\": \\\"Creates an XPathNSResolver which resolves namespaces with respect to the definitions in scope for a specified node.\\\"\\n        },\\n        \\\"scripts\\\": {\\n          \\\"!type\\\": \\\"+HTMLCollection\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Document.scripts\\\",\\n          \\\"!doc\\\": \\\"Returns a list of the <script> elements in the document. The returned object is an HTMLCollection.\\\"\\n        },\\n        \\\"plugins\\\": {\\n          \\\"!type\\\": \\\"+HTMLCollection\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.plugins\\\",\\n          \\\"!doc\\\": \\\"Returns an HTMLCollection object containing one or more HTMLEmbedElements or null which represent the <embed> elements in the current document.\\\"\\n        },\\n        \\\"embeds\\\": {\\n          \\\"!type\\\": \\\"+HTMLCollection\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.embeds\\\",\\n          \\\"!doc\\\": \\\"Returns a list of the embedded OBJECTS within the current document.\\\"\\n        },\\n        \\\"anchors\\\": {\\n          \\\"!type\\\": \\\"+HTMLCollection\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.anchors\\\",\\n          \\\"!doc\\\": \\\"Returns a list of all of the anchors in the document.\\\"\\n        },\\n        \\\"links\\\": {\\n          \\\"!type\\\": \\\"+HTMLCollection\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.links\\\",\\n          \\\"!doc\\\": \\\"The links property returns a collection of all AREA elements and anchor elements in a document with a value for the href attribute. \\\"\\n        },\\n        \\\"forms\\\": {\\n          \\\"!type\\\": \\\"+HTMLCollection\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.forms\\\",\\n          \\\"!doc\\\": \\\"Returns a collection (an HTMLCollection) of the form elements within the current document.\\\"\\n        },\\n        \\\"styleSheets\\\": {\\n          \\\"!type\\\": \\\"+HTMLCollection\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.styleSheets\\\",\\n          \\\"!doc\\\": \\\"Returns a list of stylesheet objects for stylesheets explicitly linked into or embedded in a document.\\\"\\n        },\\n        \\\"currentScript\\\": {\\n          \\\"!type\\\": \\\"+Node\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/document.currentScript\\\",\\n          \\\"!doc\\\": \\\"Returns the <script> element whose script is currently being processed.\\\"\\n        },\\n        \\\"registerElement\\\": {\\n          \\\"!type\\\": \\\"fn(type: string, options?: ?)\\\",\\n          \\\"!url\\\": \\\"http://w3c.github.io/webcomponents/spec/custom/#extensions-to-document-interface-to-register\\\",\\n          \\\"!doc\\\": \\\"The registerElement method of the Document interface provides a way to register a custom element and returns its custom element constructor.\\\"\\n        },\\n        \\\"getElementsByClassName\\\": \\\"Element.prototype.getElementsByClassName\\\",\\n        \\\"querySelector\\\": \\\"Element.prototype.querySelector\\\",\\n        \\\"querySelectorAll\\\": \\\"Element.prototype.querySelectorAll\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document\\\",\\n      \\\"!doc\\\": \\\"Each web page loaded in the browser has its own document object. This object serves as an entry point to the web page's content (the DOM tree, including elements such as <body> and <table>) and provides functionality global to the document (such as obtaining the page's URL and creating new elements in the document).\\\"\\n    },\\n    \\\"document\\\": {\\n      \\\"!type\\\": \\\"+Document\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document\\\",\\n      \\\"!doc\\\": \\\"Each web page loaded in the browser has its own document object. This object serves as an entry point to the web page's content (the DOM tree, including elements such as <body> and <table>) and provides functionality global to the document (such as obtaining the page's URL and creating new elements in the document).\\\"\\n    },\\n    \\\"XMLDocument\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": \\\"Document.prototype\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/Parsing_and_serializing_XML\\\",\\n      \\\"!doc\\\": \\\"The Web platform provides the following objects for parsing and serializing XML:\\\"\\n    },\\n    \\\"HTMLElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement\\\"\\n    },\\n    \\\"HTMLAnchorElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\\\"\\n    },\\n    \\\"HTMLAreaElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLAreaElement\\\"\\n    },\\n    \\\"HTMLAudioElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement\\\"\\n    },\\n    \\\"HTMLBaseElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLBaseElement\\\"\\n    },\\n    \\\"HTMLBodyElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLBodyElement\\\"\\n    },\\n    \\\"HTMLBRElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLBRElement\\\"\\n    },\\n    \\\"HTMLButtonElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLButtonElement\\\"\\n    },\\n    \\\"HTMLCanvasElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement\\\"\\n    },\\n    \\\"HTMLDataElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataElement\\\"\\n    },\\n    \\\"HTMLDataListElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataListElement\\\"\\n    },\\n    \\\"HTMLDivElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLDivElement\\\"\\n    },\\n    \\\"HTMLDListElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLDListElement\\\"\\n    },\\n    \\\"HTMLDocument\\\": {\\n      \\\"!type\\\": \\\"Document\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLDocument\\\"\\n    },\\n    \\\"HTMLEmbedElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLEmbedElement\\\"\\n    },\\n    \\\"HTMLFieldSetElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\\\"\\n    },\\n    \\\"HTMLFormControlsCollection\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormControlsCollection\\\"\\n    },\\n    \\\"HTMLFormElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement\\\"\\n    },\\n    \\\"HTMLHeadElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLHeadElement\\\"\\n    },\\n    \\\"HTMLHeadingElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLHeadingElement\\\"\\n    },\\n    \\\"HTMLHRElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLHRElement\\\"\\n    },\\n    \\\"HTMLHtmlElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLHtmlElement\\\"\\n    },\\n    \\\"HTMLIFrameElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement\\\"\\n    },\\n    \\\"HTMLImageElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement\\\"\\n    },\\n    \\\"HTMLInputElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement\\\"\\n    },\\n    \\\"HTMLKeygenElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLKeygenElement\\\"\\n    },\\n    \\\"HTMLLabelElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement\\\"\\n    },\\n    \\\"HTMLLegendElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLLegendElement\\\"\\n    },\\n    \\\"HTMLLIElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLLIElement\\\"\\n    },\\n    \\\"HTMLLinkElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLLinkElement\\\"\\n    },\\n    \\\"HTMLMapElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMapElement\\\"\\n    },\\n    \\\"HTMLMediaElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement\\\"\\n    },\\n    \\\"HTMLMetaElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMetaElement\\\"\\n    },\\n    \\\"HTMLMeterElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMeterElement\\\"\\n    },\\n    \\\"HTMLModElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLModElement\\\"\\n    },\\n    \\\"HTMLObjectElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement\\\"\\n    },\\n    \\\"HTMLOListElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLOListElement\\\"\\n    },\\n    \\\"HTMLOptGroupElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptGroupElement\\\"\\n    },\\n    \\\"HTMLOptionElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\\\"\\n    },\\n    \\\"HTMLOptionsCollection\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionsCollection\\\"\\n    },\\n    \\\"HTMLOutputElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLOutputElement\\\"\\n    },\\n    \\\"HTMLParagraphElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLParagraphElement\\\"\\n    },\\n    \\\"HTMLParamElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLParamElement\\\"\\n    },\\n    \\\"HTMLPreElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLPreElement\\\"\\n    },\\n    \\\"HTMLProgressElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLProgressElement\\\"\\n    },\\n    \\\"HTMLQuoteElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLQuoteElement\\\"\\n    },\\n    \\\"HTMLScriptElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\\\"\\n    },\\n    \\\"HTMLSelectElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\\\"\\n    },\\n    \\\"HTMLSourceElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLSourceElement\\\"\\n    },\\n    \\\"HTMLSpanElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLSpanElement\\\"\\n    },\\n    \\\"HTMLStyleElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLStyleElement\\\"\\n    },\\n    \\\"HTMLTableCaptionElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCaptionElement\\\"\\n    },\\n    \\\"HTMLTableCellElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement\\\"\\n    },\\n    \\\"HTMLTableColElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableColElement\\\"\\n    },\\n    \\\"HTMLTableDataCellElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableDataCellElement\\\"\\n    },\\n    \\\"HTMLTableElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\\\"\\n    },\\n    \\\"HTMLTableHeaderCellElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableHeaderCellElement\\\"\\n    },\\n    \\\"HTMLTableRowElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\\\"\\n    },\\n    \\\"HTMLTableSectionElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\\\"\\n    },\\n    \\\"HTMLTextAreaElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLTextAreaElement\\\"\\n    },\\n    \\\"HTMLTimeElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLTimeElement\\\"\\n    },\\n    \\\"HTMLTitleElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLTitleElement\\\"\\n    },\\n    \\\"HTMLTrackElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLTrackElement\\\"\\n    },\\n    \\\"HTMLUListElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLUListElement\\\"\\n    },\\n    \\\"HTMLUnknownElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLUnknownElement\\\"\\n    },\\n    \\\"HTMLVideoElement\\\": {\\n      \\\"!type\\\": \\\"Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement\\\"\\n    },\\n    \\\"Attr\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": {\\n        \\\"isId\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Attr\\\",\\n          \\\"!doc\\\": \\\"This type represents a DOM element's attribute as an object. In most DOM methods, you will probably directly retrieve the attribute as a string (e.g., Element.getAttribute(), but certain functions (e.g., Element.getAttributeNode()) or means of iterating give Attr types.\\\"\\n        },\\n        \\\"name\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Attr\\\",\\n          \\\"!doc\\\": \\\"This type represents a DOM element's attribute as an object. In most DOM methods, you will probably directly retrieve the attribute as a string (e.g., Element.getAttribute(), but certain functions (e.g., Element.getAttributeNode()) or means of iterating give Attr types.\\\"\\n        },\\n        \\\"value\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Attr\\\",\\n          \\\"!doc\\\": \\\"This type represents a DOM element's attribute as an object. In most DOM methods, you will probably directly retrieve the attribute as a string (e.g., Element.getAttribute(), but certain functions (e.g., Element.getAttributeNode()) or means of iterating give Attr types.\\\"\\n        }\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Attr\\\",\\n      \\\"!doc\\\": \\\"This type represents a DOM element's attribute as an object. In most DOM methods, you will probably directly retrieve the attribute as a string (e.g., Element.getAttribute(), but certain functions (e.g., Element.getAttributeNode()) or means of iterating give Attr types.\\\"\\n    },\\n    \\\"NodeList\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": {\\n        \\\"length\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.length\\\",\\n          \\\"!doc\\\": \\\"Returns the number of items in a NodeList.\\\"\\n        },\\n        \\\"item\\\": {\\n          \\\"!type\\\": \\\"fn(i: number) -> +Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/NodeList.item\\\",\\n          \\\"!doc\\\": \\\"Returns a node from a NodeList by index.\\\"\\n        },\\n        \\\"<i>\\\": \\\"+Element\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/NodeList\\\",\\n      \\\"!doc\\\": \\\"NodeList objects are collections of nodes returned by getElementsByTagName, getElementsByTagNameNS, Node.childNodes, querySelectorAll, getElementsByClassName, etc.\\\"\\n    },\\n    \\\"HTMLCollection\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": {\\n        \\\"length\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/HTMLCollection\\\",\\n          \\\"!doc\\\": \\\"The number of items in the collection.\\\"\\n        },\\n        \\\"item\\\": {\\n          \\\"!type\\\": \\\"fn(i: number) -> +Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/HTMLCollection\\\",\\n          \\\"!doc\\\": \\\"Returns the specific node at the given zero-based index into the list. Returns null if the index is out of range.\\\"\\n        },\\n        \\\"namedItem\\\": {\\n          \\\"!type\\\": \\\"fn(name: string) -> +Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/HTMLCollection\\\",\\n          \\\"!doc\\\": \\\"Returns the specific node whose ID or, as a fallback, name matches the string specified by name. Matching by name is only done as a last resort, only in HTML, and only if the referenced element supports the name attribute. Returns null if no node exists by the given name.\\\"\\n        },\\n        \\\"<i>\\\": \\\"+Element\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/HTMLCollection\\\",\\n      \\\"!doc\\\": \\\"HTMLCollection is an interface representing a generic collection of elements (in document order) and offers methods and properties for traversing the list.\\\"\\n    },\\n    \\\"NamedNodeMap\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": {\\n        \\\"length\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/NamedNodeMap\\\",\\n          \\\"!doc\\\": \\\"The number of items in the map.\\\"\\n        },\\n        \\\"getNamedItem\\\": {\\n          \\\"!type\\\": \\\"fn(name: string) -> +Node\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/NamedNodeMap\\\",\\n          \\\"!doc\\\": \\\"Gets a node by name.\\\"\\n        },\\n        \\\"setNamedItem\\\": {\\n          \\\"!type\\\": \\\"fn(node: +Node) -> +Node\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/NamedNodeMap\\\",\\n          \\\"!doc\\\": \\\"Adds (or replaces) a node by its nodeName.\\\"\\n        },\\n        \\\"removeNamedItem\\\": {\\n          \\\"!type\\\": \\\"fn(name: string) -> +Node\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/NamedNodeMap\\\",\\n          \\\"!doc\\\": \\\"Removes a node (or if an attribute, may reveal a default if present).\\\"\\n        },\\n        \\\"item\\\": {\\n          \\\"!type\\\": \\\"fn(i: number) -> +Node\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/NamedNodeMap\\\",\\n          \\\"!doc\\\": \\\"Returns the item at the given index (or null if the index is higher or equal to the number of nodes).\\\"\\n        },\\n        \\\"getNamedItemNS\\\": {\\n          \\\"!type\\\": \\\"fn(ns: string, name: string) -> +Node\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/NamedNodeMap\\\",\\n          \\\"!doc\\\": \\\"Gets a node by namespace and localName.\\\"\\n        },\\n        \\\"setNamedItemNS\\\": {\\n          \\\"!type\\\": \\\"fn(node: +Node) -> +Node\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/NamedNodeMap\\\",\\n          \\\"!doc\\\": \\\"Adds (or replaces) a node by its localName and namespaceURI.\\\"\\n        },\\n        \\\"removeNamedItemNS\\\": {\\n          \\\"!type\\\": \\\"fn(ns: string, name: string) -> +Node\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/NamedNodeMap\\\",\\n          \\\"!doc\\\": \\\"Removes a node (or if an attribute, may reveal a default if present).\\\"\\n        },\\n        \\\"<i>\\\": \\\"+Node\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/NamedNodeMap\\\",\\n      \\\"!doc\\\": \\\"A collection of nodes returned by Element.attributes (also potentially for DocumentType.entities, DocumentType.notations). NamedNodeMaps are not in any particular order (unlike NodeList), although they may be accessed by an index as in an array (they may also be accessed with the item() method). A NamedNodeMap object are live and will thus be auto-updated if changes are made to their contents internally or elsewhere.\\\"\\n    },\\n    \\\"DocumentFragment\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": {\\n        \\\"!proto\\\": \\\"Node.prototype\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.createDocumentFragment\\\",\\n      \\\"!doc\\\": \\\"Creates a new empty DocumentFragment.\\\"\\n    },\\n    \\\"DOMTokenList\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": {\\n        \\\"length\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/DOMTokenList\\\",\\n          \\\"!doc\\\": \\\"The amount of items in the list.\\\"\\n        },\\n        \\\"item\\\": {\\n          \\\"!type\\\": \\\"fn(i: number) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/DOMTokenList\\\",\\n          \\\"!doc\\\": \\\"Returns an item in the list by its index.\\\"\\n        },\\n        \\\"contains\\\": {\\n          \\\"!type\\\": \\\"fn(token: string) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/DOMTokenList\\\",\\n          \\\"!doc\\\": \\\"Return true if the underlying string contains token, otherwise false.\\\"\\n        },\\n        \\\"add\\\": {\\n          \\\"!type\\\": \\\"fn(token: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/DOMTokenList\\\",\\n          \\\"!doc\\\": \\\"Adds token to the underlying string.\\\"\\n        },\\n        \\\"remove\\\": {\\n          \\\"!type\\\": \\\"fn(token: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/DOMTokenList\\\",\\n          \\\"!doc\\\": \\\"Remove token from the underlying string.\\\"\\n        },\\n        \\\"toggle\\\": {\\n          \\\"!type\\\": \\\"fn(token: string) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/DOMTokenList\\\",\\n          \\\"!doc\\\": \\\"Removes token from string and returns false. If token doesn't exist it's added and the function returns true.\\\"\\n        },\\n        \\\"<i>\\\": \\\"string\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/DOMTokenList\\\",\\n      \\\"!doc\\\": \\\"This type represents a set of space-separated tokens. Commonly returned by HTMLElement.classList, HTMLLinkElement.relList, HTMLAnchorElement.relList or HTMLAreaElement.relList. It is indexed beginning with 0 as with JavaScript arrays. DOMTokenList is always case-sensitive.\\\"\\n    },\\n    \\\"XPathResult\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": {\\n        \\\"boolValue\\\": \\\"bool\\\",\\n        \\\"invalidIteratorState\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/Introduction_to_using_XPath_in_JavaScript\\\",\\n          \\\"!doc\\\": \\\"This document describes the interface for using XPath in JavaScript internally, in extensions, and from websites. Mozilla implements a fair amount of the DOM 3 XPath. Which means that XPath expressions can be run against both HTML and XML documents.\\\"\\n        },\\n        \\\"numberValue\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/XPathResult\\\",\\n          \\\"!doc\\\": \\\"Refer to nsIDOMXPathResult for more detail.\\\"\\n        },\\n        \\\"resultType\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.evaluate\\\",\\n          \\\"!doc\\\": \\\"Returns an XPathResult based on an XPath expression and other given parameters.\\\"\\n        },\\n        \\\"singleNodeValue\\\": {\\n          \\\"!type\\\": \\\"+Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/Introduction_to_using_XPath_in_JavaScript\\\",\\n          \\\"!doc\\\": \\\"This document describes the interface for using XPath in JavaScript internally, in extensions, and from websites. Mozilla implements a fair amount of the DOM 3 XPath. Which means that XPath expressions can be run against both HTML and XML documents.\\\"\\n        },\\n        \\\"snapshotLength\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/XPathResult\\\",\\n          \\\"!doc\\\": \\\"Refer to nsIDOMXPathResult for more detail.\\\"\\n        },\\n        \\\"stringValue\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/Introduction_to_using_XPath_in_JavaScript\\\",\\n          \\\"!doc\\\": \\\"This document describes the interface for using XPath in JavaScript internally, in extensions, and from websites. Mozilla implements a fair amount of the DOM 3 XPath. Which means that XPath expressions can be run against both HTML and XML documents.\\\"\\n        },\\n        \\\"iterateNext\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/Introduction_to_using_XPath_in_JavaScript\\\",\\n          \\\"!doc\\\": \\\"This document describes the interface for using XPath in JavaScript internally, in extensions, and from websites. Mozilla implements a fair amount of the DOM 3 XPath. Which means that XPath expressions can be run against both HTML and XML documents.\\\"\\n        },\\n        \\\"snapshotItem\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/XPathResult#snapshotItem()\\\"\\n        },\\n        \\\"ANY_TYPE\\\": \\\"number\\\",\\n        \\\"NUMBER_TYPE\\\": \\\"number\\\",\\n        \\\"STRING_TYPE\\\": \\\"number\\\",\\n        \\\"BOOL_TYPE\\\": \\\"number\\\",\\n        \\\"UNORDERED_NODE_ITERATOR_TYPE\\\": \\\"number\\\",\\n        \\\"ORDERED_NODE_ITERATOR_TYPE\\\": \\\"number\\\",\\n        \\\"UNORDERED_NODE_SNAPSHOT_TYPE\\\": \\\"number\\\",\\n        \\\"ORDERED_NODE_SNAPSHOT_TYPE\\\": \\\"number\\\",\\n        \\\"ANY_UNORDERED_NODE_TYPE\\\": \\\"number\\\",\\n        \\\"FIRST_ORDERED_NODE_TYPE\\\": \\\"number\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/XPathResult\\\",\\n      \\\"!doc\\\": \\\"Refer to nsIDOMXPathResult for more detail.\\\"\\n    },\\n    \\\"ClientRect\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": {\\n        \\\"top\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.getClientRects\\\",\\n          \\\"!doc\\\": \\\"Top of the box, in pixels, relative to the viewport.\\\"\\n        },\\n        \\\"left\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.getClientRects\\\",\\n          \\\"!doc\\\": \\\"Left of the box, in pixels, relative to the viewport.\\\"\\n        },\\n        \\\"bottom\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.getClientRects\\\",\\n          \\\"!doc\\\": \\\"Bottom of the box, in pixels, relative to the viewport.\\\"\\n        },\\n        \\\"right\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.getClientRects\\\",\\n          \\\"!doc\\\": \\\"Right of the box, in pixels, relative to the viewport.\\\"\\n        }\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.getClientRects\\\",\\n      \\\"!doc\\\": \\\"Returns a collection of rectangles that indicate the bounding rectangles for each box in a client.\\\"\\n    },\\n    \\\"DataTransfer\\\": {\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\\\",\\n      \\\"!doc\\\": \\\"This object is available from the dataTransfer property of all drag events. It cannot be created separately.\\\",\\n      \\\"prototype\\\": {\\n        \\\"dropEffect\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/dropEffect\\\",\\n          \\\"!doc\\\": \\\"The actual effect that will be used, and should always be one of the possible values of effectAllowed.\\\"\\n        },\\n        \\\"effectAllowed\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/effectAllowed\\\",\\n          \\\"!doc\\\": \\\"Specifies the effects that are allowed for this drag.\\\"\\n        },\\n        \\\"files\\\": {\\n          \\\"!type\\\": \\\"+FileList\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/files\\\",\\n          \\\"!doc\\\": \\\"Contains a list of all the local files available on the data transfer.\\\"\\n        },\\n        \\\"items\\\": {\\n          \\\"!type\\\": \\\"[?]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/items\\\",\\n          \\\"!doc\\\": \\\"The read-only DataTransfer property items property is a list of the data transfer items in a drag operation.\\\"\\n        },\\n        \\\"types\\\": {\\n          \\\"!type\\\": \\\"[string]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/types\\\",\\n          \\\"!doc\\\": \\\"Holds a list of the format types of the data that is stored for the first item, in the same order the data was added. An empty list will be returned if no data was added.\\\"\\n        },\\n        \\\"clearData\\\": {\\n          \\\"!type\\\": \\\"fn(type?: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/clearData\\\",\\n          \\\"!doc\\\": \\\"Remove the data associated with a given type.\\\"\\n        },\\n        \\\"getData\\\": {\\n          \\\"!type\\\": \\\"fn(type: string) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/getData\\\",\\n          \\\"!doc\\\": \\\"Retrieves the data for a given type, or an empty string if data for that type does not exist or the data transfer contains no data.\\\"\\n        },\\n        \\\"setData\\\": {\\n          \\\"!type\\\": \\\"fn(type: string, data: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/setData\\\",\\n          \\\"!doc\\\": \\\"Set the data for a given type.\\\"\\n        },\\n        \\\"setDragImage\\\": {\\n          \\\"!type\\\": \\\"fn(image: +Element)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/setDragImage\\\",\\n          \\\"!doc\\\": \\\"Set the image to be used for dragging if a custom one is desired.\\\"\\n        }\\n      }\\n    },\\n    \\\"Event\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": {\\n        \\\"stopPropagation\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/event.stopPropagation\\\",\\n          \\\"!doc\\\": \\\"Prevents further propagation of the current event.\\\"\\n        },\\n        \\\"preventDefault\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/event.preventDefault\\\",\\n          \\\"!doc\\\": \\\"Cancels the event if it is cancelable, without stopping further propagation of the event.\\\"\\n        },\\n        \\\"initEvent\\\": {\\n          \\\"!type\\\": \\\"fn(type: string, bubbles: bool, cancelable: bool)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/event.initEvent\\\",\\n          \\\"!doc\\\": \\\"The initEvent method is used to initialize the value of an event created using document.createEvent.\\\"\\n        },\\n        \\\"stopImmediatePropagation\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/event.stopImmediatePropagation\\\",\\n          \\\"!doc\\\": \\\"Prevents other listeners of the same event to be called.\\\"\\n        },\\n        \\\"type\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/event.type\\\",\\n          \\\"!doc\\\": \\\"Returns a string containing the type of event.\\\"\\n        },\\n        \\\"NONE\\\": \\\"number\\\",\\n        \\\"CAPTURING_PHASE\\\": \\\"number\\\",\\n        \\\"AT_TARGET\\\": \\\"number\\\",\\n        \\\"BUBBLING_PHASE\\\": \\\"number\\\",\\n        \\\"MOUSEDOWN\\\": \\\"number\\\",\\n        \\\"MOUSEUP\\\": \\\"number\\\",\\n        \\\"MOUSEOVER\\\": \\\"number\\\",\\n        \\\"MOUSEOUT\\\": \\\"number\\\",\\n        \\\"MOUSEMOVE\\\": \\\"number\\\",\\n        \\\"MOUSEDRAG\\\": \\\"number\\\",\\n        \\\"CLICK\\\": \\\"number\\\",\\n        \\\"DBLCLICK\\\": \\\"number\\\",\\n        \\\"KEYDOWN\\\": \\\"number\\\",\\n        \\\"KEYUP\\\": \\\"number\\\",\\n        \\\"KEYPRESS\\\": \\\"number\\\",\\n        \\\"DRAGDROP\\\": \\\"number\\\",\\n        \\\"FOCUS\\\": \\\"number\\\",\\n        \\\"BLUR\\\": \\\"number\\\",\\n        \\\"SELECT\\\": \\\"number\\\",\\n        \\\"CHANGE\\\": \\\"number\\\",\\n        \\\"target\\\": {\\n          \\\"!type\\\": \\\"+Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/EventTarget\\\",\\n          \\\"!doc\\\": \\\"An EventTarget is a DOM interface implemented by objects that can receive DOM events and have listeners for them. The most common EventTargets are DOM elements, although other objects can be EventTargets too, for example document, window, XMLHttpRequest, and others.\\\"\\n        },\\n        \\\"relatedTarget\\\": {\\n          \\\"!type\\\": \\\"+Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/event.relatedTarget\\\",\\n          \\\"!doc\\\": \\\"Identifies a secondary target for the event.\\\"\\n        },\\n        \\\"pageX\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/event.pageX\\\",\\n          \\\"!doc\\\": \\\"Returns the horizontal coordinate of the event relative to whole document.\\\"\\n        },\\n        \\\"pageY\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/event.pageY\\\",\\n          \\\"!doc\\\": \\\"Returns the vertical coordinate of the event relative to the whole document.\\\"\\n        },\\n        \\\"clientX\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/event.clientX\\\",\\n          \\\"!doc\\\": \\\"Returns the horizontal coordinate within the application's client area at which the event occurred (as opposed to the coordinates within the page). For example, clicking in the top-left corner of the client area will always result in a mouse event with a clientX value of 0, regardless of whether the page is scrolled horizontally.\\\"\\n        },\\n        \\\"clientY\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/event.clientY\\\",\\n          \\\"!doc\\\": \\\"Returns the vertical coordinate within the application's client area at which the event occurred (as opposed to the coordinates within the page). For example, clicking in the top-left corner of the client area will always result in a mouse event with a clientY value of 0, regardless of whether the page is scrolled vertically.\\\"\\n        },\\n        \\\"keyCode\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/event.keyCode\\\",\\n          \\\"!doc\\\": \\\"Returns the Unicode value of a non-character key in a keypress event or any key in any other type of keyboard event.\\\"\\n        },\\n        \\\"charCode\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/event.charCode\\\",\\n          \\\"!doc\\\": \\\"Returns the Unicode value of a character key pressed during a keypress event.\\\"\\n        },\\n        \\\"which\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/event.which\\\",\\n          \\\"!doc\\\": \\\"Returns the numeric keyCode of the key pressed, or the character code (charCode) for an alphanumeric key pressed.\\\"\\n        },\\n        \\\"button\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/event.button\\\",\\n          \\\"!doc\\\": \\\"Indicates which mouse button caused the event.\\\"\\n        },\\n        \\\"shiftKey\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/event.shiftKey\\\",\\n          \\\"!doc\\\": \\\"Indicates whether the SHIFT key was pressed when the event fired.\\\"\\n        },\\n        \\\"ctrlKey\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/event.ctrlKey\\\",\\n          \\\"!doc\\\": \\\"Indicates whether the CTRL key was pressed when the event fired.\\\"\\n        },\\n        \\\"altKey\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/event.altKey\\\",\\n          \\\"!doc\\\": \\\"Indicates whether the ALT key was pressed when the event fired.\\\"\\n        },\\n        \\\"metaKey\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/event.metaKey\\\",\\n          \\\"!doc\\\": \\\"Indicates whether the META key was pressed when the event fired.\\\"\\n        },\\n        \\\"returnValue\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.onbeforeunload\\\",\\n          \\\"!doc\\\": \\\"An event that fires when a window is about to unload its resources. The document is still visible and the event is still cancelable.\\\"\\n        },\\n        \\\"cancelBubble\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/event.cancelBubble\\\",\\n          \\\"!doc\\\": \\\"bool is the boolean value of true or false.\\\"\\n        },\\n        \\\"dataTransfer\\\": \\\"+DataTransfer\\\"\\n      }\\n    },\\n    \\\"TouchEvent\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": \\\"Event.prototype\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Touch_events\\\",\\n      \\\"!doc\\\": \\\"In order to provide quality support for touch-based user interfaces, touch events offer the ability to interpret finger activity on touch screens or trackpads.\\\"\\n    },\\n    \\\"WheelEvent\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": \\\"Event.prototype\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/WheelEvent\\\",\\n      \\\"!doc\\\": \\\"The DOM WheelEvent represents events that occur due to the user moving a mouse wheel or similar input device.\\\"\\n    },\\n    \\\"MouseEvent\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": \\\"Event.prototype\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/MouseEvent\\\",\\n      \\\"!doc\\\": \\\"The DOM MouseEvent represents events that occur due to the user interacting with a pointing device (such as a mouse). It's represented by the nsINSDOMMouseEvent interface, which extends the nsIDOMMouseEvent interface.\\\"\\n    },\\n    \\\"KeyboardEvent\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": \\\"Event.prototype\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/KeyboardEvent\\\",\\n      \\\"!doc\\\": \\\"KeyboardEvent objects describe a user interaction with the keyboard. Each event describes a key; the event type (keydown, keypress, or keyup) identifies what kind of activity was performed.\\\"\\n    },\\n    \\\"HashChangeEvent\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": \\\"Event.prototype\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.onhashchange\\\",\\n      \\\"!doc\\\": \\\"The hashchange event fires when a window's hash changes.\\\"\\n    },\\n    \\\"ErrorEvent\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": \\\"Event.prototype\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/DOM_event_reference/error\\\",\\n      \\\"!doc\\\": \\\"The error event is fired whenever a resource fails to load.\\\"\\n    },\\n    \\\"CustomEvent\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": \\\"Event.prototype\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Event/CustomEvent\\\",\\n      \\\"!doc\\\": \\\"The DOM CustomEvent are events initialized by an application for any purpose.\\\"\\n    },\\n    \\\"BeforeLoadEvent\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": \\\"Event.prototype\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window\\\",\\n      \\\"!doc\\\": \\\"This section provides a brief reference for all of the methods, properties, and events available through the DOM window object. The window object implements the Window interface, which in turn inherits from the AbstractView interface. Some additional global functions, namespaces objects, and constructors, not typically associated with the window, but available on it, are listed in the JavaScript Reference.\\\"\\n    },\\n    \\\"WebSocket\\\": {\\n      \\\"!type\\\": \\\"fn(url: string)\\\",\\n      \\\"prototype\\\": {\\n        \\\"close\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/WebSockets/WebSockets_reference/CloseEvent\\\",\\n          \\\"!doc\\\": \\\"A CloseEvent is sent to clients using WebSockets when the connection is closed. This is delivered to the listener indicated by the WebSocket object's onclose attribute.\\\"\\n        },\\n        \\\"send\\\": {\\n          \\\"!type\\\": \\\"fn(data: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/WebSockets/WebSockets_reference/WebSocket\\\",\\n          \\\"!doc\\\": \\\"The WebSocket object provides the API for creating and managing a WebSocket connection to a server, as well as for sending and receiving data on the connection.\\\"\\n        },\\n        \\\"binaryType\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/WebSockets/WebSockets_reference/WebSocket\\\",\\n          \\\"!doc\\\": \\\"The WebSocket object provides the API for creating and managing a WebSocket connection to a server, as well as for sending and receiving data on the connection.\\\"\\n        },\\n        \\\"bufferedAmount\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/WebSockets/Writing_WebSocket_client_applications\\\",\\n          \\\"!doc\\\": \\\"WebSockets is a technology that makes it possible to open an interactive communication session between the user's browser and a server. Using a WebSocket connection, Web applications can perform real-time communication instead of having to poll for changes back and forth.\\\"\\n        },\\n        \\\"extensions\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/WebSockets/WebSockets_reference/WebSocket\\\",\\n          \\\"!doc\\\": \\\"The WebSocket object provides the API for creating and managing a WebSocket connection to a server, as well as for sending and receiving data on the connection.\\\"\\n        },\\n        \\\"onclose\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/WebSockets/WebSockets_reference/CloseEvent\\\",\\n          \\\"!doc\\\": \\\"A CloseEvent is sent to clients using WebSockets when the connection is closed. This is delivered to the listener indicated by the WebSocket object's onclose attribute.\\\"\\n        },\\n        \\\"onerror\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/WebSockets/Writing_WebSocket_client_applications\\\",\\n          \\\"!doc\\\": \\\"WebSockets is a technology that makes it possible to open an interactive communication session between the user's browser and a server. Using a WebSocket connection, Web applications can perform real-time communication instead of having to poll for changes back and forth.\\\"\\n        },\\n        \\\"onmessage\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/WebSockets/WebSockets_reference/WebSocket\\\",\\n          \\\"!doc\\\": \\\"The WebSocket object provides the API for creating and managing a WebSocket connection to a server, as well as for sending and receiving data on the connection.\\\"\\n        },\\n        \\\"onopen\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/WebSockets/WebSockets_reference/WebSocket\\\",\\n          \\\"!doc\\\": \\\"The WebSocket object provides the API for creating and managing a WebSocket connection to a server, as well as for sending and receiving data on the connection.\\\"\\n        },\\n        \\\"protocol\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/WebSockets\\\",\\n          \\\"!doc\\\": \\\"WebSockets is an advanced technology that makes it possible to open an interactive communication session between the user's browser and a server. With this API, you can send messages to a server and receive event-driven responses without having to poll the server for a reply.\\\"\\n        },\\n        \\\"url\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/WebSockets/Writing_WebSocket_client_applications\\\",\\n          \\\"!doc\\\": \\\"WebSockets is a technology that makes it possible to open an interactive communication session between the user's browser and a server. Using a WebSocket connection, Web applications can perform real-time communication instead of having to poll for changes back and forth.\\\"\\n        },\\n        \\\"CONNECTING\\\": \\\"number\\\",\\n        \\\"OPEN\\\": \\\"number\\\",\\n        \\\"CLOSING\\\": \\\"number\\\",\\n        \\\"CLOSED\\\": \\\"number\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/WebSockets\\\",\\n      \\\"!doc\\\": \\\"WebSockets is an advanced technology that makes it possible to open an interactive communication session between the user's browser and a server. With this API, you can send messages to a server and receive event-driven responses without having to poll the server for a reply.\\\"\\n    },\\n    \\\"Worker\\\": {\\n      \\\"!type\\\": \\\"fn(scriptURL: string)\\\",\\n      \\\"prototype\\\": {\\n        \\\"postMessage\\\": {\\n          \\\"!type\\\": \\\"fn(message: ?)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Worker\\\",\\n          \\\"!doc\\\": \\\"Sends a message to the worker's inner scope. This accepts a single parameter, which is the data to send to the worker. The data may be any value or JavaScript object handled by the structured clone algorithm, which includes cyclical references.\\\"\\n        },\\n        \\\"terminate\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Worker\\\",\\n          \\\"!doc\\\": \\\"Immediately terminates the worker. This does not offer the worker an opportunity to finish its operations; it is simply stopped at once.\\\"\\n        },\\n        \\\"onmessage\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Worker\\\",\\n          \\\"!doc\\\": \\\"An event listener that is called whenever a MessageEvent with type message bubbles through the worker. The message is stored in the event's data member.\\\"\\n        },\\n        \\\"onerror\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Worker\\\",\\n          \\\"!doc\\\": \\\"An event listener that is called whenever an ErrorEvent with type error bubbles through the worker.\\\"\\n        }\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Worker\\\",\\n      \\\"!doc\\\": \\\"Workers are background tasks that can be easily created and can send messages back to their creators. Creating a worker is as simple as calling the Worker() constructor, specifying a script to be run in the worker thread.\\\"\\n    },\\n    \\\"Storage\\\": {\\n      \\\"length\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Storage/length\\\",\\n        \\\"!doc\\\": \\\"The length read-only property of the Storage interface returns an integer representing the number of data items stored in the Storage object.\\\"\\n      },\\n      \\\"setItem\\\": {\\n        \\\"!type\\\": \\\"fn(name: string, value: string)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem\\\",\\n        \\\"!doc\\\": \\\"The setItem() method of the Storage interface, when passed a key name and value, will add that key to the storage, or update that key's value if it already exists.\\\"\\n      },\\n      \\\"getItem\\\": {\\n        \\\"!type\\\": \\\"fn(name: string) -> string\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Storage/getItem\\\",\\n        \\\"!doc\\\": \\\"The getItem() method of the Storage interface, when passed a key name, will return that key's value.\\\"\\n      },\\n      \\\"key\\\": {\\n        \\\"!type\\\": \\\"fn(index: number) -> string\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Storage/key\\\",\\n        \\\"!doc\\\": \\\"The key() method of the Storage interface, when passed a number n, returns the name of the nth key in the storage. The order of keys is user-agent defined, so you should not rely on it.\\\"\\n      },\\n      \\\"removeItem\\\": {\\n        \\\"!type\\\": \\\"fn(key: string)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Storage/removeItem\\\",\\n        \\\"!doc\\\": \\\"The removeItem() method of the Storage interface, when passed a key name, will remove that key from the storage.\\\"\\n      },\\n      \\\"clear\\\": {\\n        \\\"!type\\\": \\\"fn()\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Storage/clear\\\",\\n        \\\"!doc\\\": \\\"The clear() method of the Storage interface, when invoked, will empty all keys out of the storage\\\"\\n      }\\n    },\\n    \\\"localStorage\\\": {\\n      \\\"!type\\\": \\\"Storage\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/Web/API/Window/localStorage\\\",\\n      \\\"!doc\\\": \\\"The localStorage property allows you to access a local Storage object. localStorage is similar to sessionStorage. The only difference is that, while data stored in localStorage has no expiration time, data stored in sessionStorage gets cleared when the browsing session ends - that is, when the browser is closed.\\\\n\\\\nIt should be noted that data stored in either localStorage or sessionStorage is specific to the protocol of the page.\\\"\\n    },\\n    \\\"sessionStorage\\\": {\\n      \\\"!type\\\": \\\"Storage\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage\\\",\\n      \\\"!doc\\\": \\\"The sessionStorage property allows you to access a session Storage object for the current origin. sessionStorage is similar to Window.localStorage, the only difference is while data stored in localStorage has no expiration set, data stored in sessionStorage gets cleared when the page session ends. A page session lasts for as long as the browser is open and survives over page reloads and restores. Opening a page in a new tab or window will cause a new session to be initiated, which differs from how session cookies work.\\\\n\\\\nIt should be noted that data stored in either sessionStorage or localStorage is specific to the protocol of the page.\\\"\\n    },\\n    \\\"FileList\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": {\\n        \\\"length\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/FileList\\\",\\n          \\\"!doc\\\": \\\"A read-only value indicating the number of files in the list.\\\"\\n        },\\n        \\\"item\\\": {\\n          \\\"!type\\\": \\\"fn(i: number) -> +File\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/FileList\\\",\\n          \\\"!doc\\\": \\\"Returns a File object representing the file at the specified index in the file list.\\\"\\n        },\\n        \\\"<i>\\\": \\\"+File\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/FileList\\\",\\n      \\\"!doc\\\": \\\"An object of this type is returned by the files property of the HTML input element; this lets you access the list of files selected with the <input type=\\\\\\\"file\\\\\\\"> element. It's also used for a list of files dropped into web content when using the drag and drop API.\\\"\\n    },\\n    \\\"File\\\": {\\n      \\\"!type\\\": \\\"fn(bits: []|string|ArrayBuffer|Blob, name: string, options?: ?)\\\",\\n      \\\"prototype\\\": {\\n        \\\"!proto\\\": \\\"Blob.prototype\\\",\\n        \\\"lastModified\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/File/lastModified\\\",\\n          \\\"!doc\\\": \\\"Returns the last modified time of the file, in millisecond since the UNIX epoch (January 1st, 1970 at Midnight).\\\"\\n        },\\n        \\\"name\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/File.name\\\",\\n          \\\"!doc\\\": \\\"Returns the name of the file. For security reasons, the path is excluded from this property.\\\"\\n        },\\n        \\\"size\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/File.fileSize\\\",\\n          \\\"!doc\\\": \\\"Returns the size of a file in bytes.\\\"\\n        },\\n        \\\"type\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/File/type\\\",\\n          \\\"!doc\\\": \\\"Returns the MIME type of the file.\\\"\\n        }\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/File\\\",\\n      \\\"!doc\\\": \\\"The File object provides information about -- and access to the contents of -- files. These are generally retrieved from a FileList object returned as a result of a user selecting files using the input element, or from a drag and drop operation's DataTransfer object.\\\"\\n    },\\n    \\\"Blob\\\": {\\n      \\\"!type\\\": \\\"fn(parts: [?], options?: ?)\\\",\\n      \\\"prototype\\\": {\\n        \\\"size\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Blob/size\\\",\\n          \\\"!doc\\\": \\\"The size, in bytes, of the data contained in the Blob object. Read only.\\\"\\n        },\\n        \\\"type\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Blob/type\\\",\\n          \\\"!doc\\\": \\\"An ASCII-encoded string, in all lower case, indicating the MIME type of the data contained in the Blob. If the type is unknown, this string is empty. Read only.\\\"\\n        },\\n        \\\"slice\\\": {\\n          \\\"!type\\\": \\\"fn(start: number, end?: number, type?: string) -> +Blob\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Blob\\\",\\n          \\\"!doc\\\": \\\"Returns a new Blob object containing the data in the specified range of bytes of the source Blob.\\\"\\n        }\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Blob\\\",\\n      \\\"!doc\\\": \\\"A Blob object represents a file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user's system.\\\"\\n    },\\n    \\\"FileReader\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": {\\n        \\\"abort\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/FileReader\\\",\\n          \\\"!doc\\\": \\\"Aborts the read operation. Upon return, the readyState will be DONE.\\\"\\n        },\\n        \\\"readAsArrayBuffer\\\": {\\n          \\\"!type\\\": \\\"fn(blob: +Blob)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/FileReader\\\",\\n          \\\"!doc\\\": \\\"Starts reading the contents of the specified Blob, producing an ArrayBuffer.\\\"\\n        },\\n        \\\"readAsBinaryString\\\": {\\n          \\\"!type\\\": \\\"fn(blob: +Blob)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/FileReader\\\",\\n          \\\"!doc\\\": \\\"Starts reading the contents of the specified Blob, producing raw binary data.\\\"\\n        },\\n        \\\"readAsDataURL\\\": {\\n          \\\"!type\\\": \\\"fn(blob: +Blob)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/FileReader\\\",\\n          \\\"!doc\\\": \\\"Starts reading the contents of the specified Blob, producing a data: url.\\\"\\n        },\\n        \\\"readAsText\\\": {\\n          \\\"!type\\\": \\\"fn(blob: +Blob, encoding?: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/FileReader\\\",\\n          \\\"!doc\\\": \\\"Starts reading the contents of the specified Blob, producing a string.\\\"\\n        },\\n        \\\"EMPTY\\\": \\\"number\\\",\\n        \\\"LOADING\\\": \\\"number\\\",\\n        \\\"DONE\\\": \\\"number\\\",\\n        \\\"error\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/FileReader\\\",\\n          \\\"!doc\\\": \\\"The error that occurred while reading the file. Read only.\\\"\\n        },\\n        \\\"readyState\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/FileReader\\\",\\n          \\\"!doc\\\": \\\"Indicates the state of the FileReader. This will be one of the State constants. Read only.\\\"\\n        },\\n        \\\"result\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/FileReader\\\",\\n          \\\"!doc\\\": \\\"The file's contents. This property is only valid after the read operation is complete, and the format of the data depends on which of the methods was used to initiate the read operation. Read only.\\\"\\n        },\\n        \\\"onabort\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/FileReader\\\",\\n          \\\"!doc\\\": \\\"Called when the read operation is aborted.\\\"\\n        },\\n        \\\"onerror\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/FileReader\\\",\\n          \\\"!doc\\\": \\\"Called when an error occurs.\\\"\\n        },\\n        \\\"onload\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/FileReader\\\",\\n          \\\"!doc\\\": \\\"Called when the read operation is successfully completed.\\\"\\n        },\\n        \\\"onloadend\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/FileReader\\\",\\n          \\\"!doc\\\": \\\"Called when the read is completed, whether successful or not. This is called after either onload or onerror.\\\"\\n        },\\n        \\\"onloadstart\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/FileReader\\\",\\n          \\\"!doc\\\": \\\"Called when reading the data is about to begin.\\\"\\n        },\\n        \\\"onprogress\\\": {\\n          \\\"!type\\\": \\\"?\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/FileReader\\\",\\n          \\\"!doc\\\": \\\"Called periodically while the data is being read.\\\"\\n        }\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/FileReader\\\",\\n      \\\"!doc\\\": \\\"The FileReader object lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user's computer, using File or Blob objects to specify the file or data to read. File objects may be obtained from a FileList object returned as a result of a user selecting files using the <input> element, from a drag and drop operation's DataTransfer object, or from the mozGetAsFile() API on an HTMLCanvasElement.\\\"\\n    },\\n    \\\"URL\\\": {\\n      \\\"!type\\\": \\\"fn(url: string, base?: string)\\\",\\n      \\\"prototype\\\": {\\n        \\\"hash\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URL/hash\\\",\\n          \\\"!doc\\\": \\\"Is a DOMString containing a '#' followed by the fragment identifier of the URL.\\\"\\n        },\\n        \\\"host\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URL/host\\\",\\n          \\\"!doc\\\": \\\"Is a DOMString containing the domain (that is the hostname) followed by (if a port was specified) a ':' and the port of the URL.\\\"\\n        },\\n        \\\"hostname\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URL/hostname\\\",\\n          \\\"!doc\\\": \\\"Is a DOMString containing the domain of the URL.\\\"\\n        },\\n        \\\"href\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URL/href\\\",\\n          \\\"!doc\\\": \\\"Is a DOMString containing the whole URL.\\\"\\n        },\\n        \\\"origin\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URL/origin\\\",\\n          \\\"!doc\\\": \\\"Returns a DOMString containing the origin of the URL, that is its scheme, its domain and its port.\\\"\\n        },\\n        \\\"password\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URL/password\\\",\\n          \\\"!doc\\\": \\\"Is a DOMString containing the password specified before the domain name.\\\"\\n        },\\n        \\\"pathname\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URL/pathname\\\",\\n          \\\"!doc\\\": \\\"Is a DOMString containing an initial '/' followed by the path of the URL.\\\"\\n        },\\n        \\\"port\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URL/port\\\",\\n          \\\"!doc\\\": \\\"Is a DOMString containing the port number of the URL.\\\"\\n        },\\n        \\\"protocol\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URL/protocol\\\",\\n          \\\"!doc\\\": \\\"Is a DOMString containing the protocol scheme of the URL, including the final ':'.\\\"\\n        },\\n        \\\"search\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URL/search\\\",\\n          \\\"!doc\\\": \\\"Is a DOMString containing a '?' followed by the parameters of the URL.\\\"\\n        },\\n        \\\"searchParams\\\": {\\n          \\\"!type\\\": \\\"+URLSearchParams\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URL/searchParams\\\",\\n          \\\"!doc\\\": \\\"Returns a URLSearchParams object allowing to access the GET query arguments contained in the URL.\\\"\\n        },\\n        \\\"username\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URL/username\\\",\\n          \\\"!doc\\\": \\\"Is a DOMString containing the username specified before the domain name.\\\"\\n        }\\n      },\\n      \\\"createObjectURL\\\": {\\n        \\\"!type\\\": \\\"fn(blob: +Blob) -> string\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URL.createObjectURL\\\",\\n        \\\"!doc\\\": \\\"The URL.createObjectURL() static method creates a DOMString containing an URL representing the object given in parameter.\\\"\\n\\n      },\\n      \\\"revokeObjectURL\\\": {\\n        \\\"!type\\\": \\\"fn(objectURL: string)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URL.revokeObjectURL\\\",\\n        \\\"!doc\\\": \\\"The URL.revokeObjectURL() static method releases an existing object URL which was previously created by calling window.URL.createObjectURL().\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URL\\\",\\n      \\\"!doc\\\": \\\"The URL interface represents an object providing static methods used for creating object URLs.\\\"\\n    },\\n    \\\"URLSearchParams\\\": {\\n      \\\"!type\\\": \\\"fn(init?: string)\\\",\\n      \\\"prototype\\\": {\\n        \\\"append\\\": {\\n          \\\"!type\\\": \\\"fn(name: string, value: ?)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/append\\\",\\n          \\\"!doc\\\": \\\"Appends a specified key/value pair as a new search parameter.\\\"\\n        },\\n        \\\"delete\\\": {\\n          \\\"!type\\\": \\\"fn(name: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/delete\\\",\\n          \\\"!doc\\\": \\\"Deletes the given search parameter, and its associated value, from the list of all search parameters.\\\"\\n        },\\n        \\\"entries\\\": {\\n          \\\"!type\\\": \\\"fn() -> +iter[:t=[string]]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/entries\\\",\\n          \\\"!doc\\\": \\\"Returns an iterator allowing to go through all key/value pairs contained in this object.\\\"\\n        },\\n        \\\"get\\\": {\\n          \\\"!type\\\": \\\"fn(name: string) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/get\\\",\\n          \\\"!doc\\\": \\\"Returns the first value associated to the given search parameter.\\\"\\n        },\\n        \\\"getAll\\\": {\\n          \\\"!type\\\": \\\"fn(name: string) -> [string]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/getAll\\\",\\n          \\\"!doc\\\": \\\"Returns all the values associated with a given search parameter.\\\"\\n        },\\n        \\\"has\\\": {\\n          \\\"!type\\\": \\\"fn(name: string) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/has\\\",\\n          \\\"!doc\\\": \\\"Returns a Boolean indicating if such a search parameter exists.\\\"\\n        },\\n        \\\"keys\\\": {\\n          \\\"!type\\\": \\\"fn() -> +iter[:t=string]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/keys\\\",\\n          \\\"!doc\\\": \\\"Returns an iterator allowing to go through all keys of the key/value pairs contained in this object.\\\"\\n        },\\n        \\\"set\\\": {\\n          \\\"!type\\\": \\\"fn(name: string, value: ?)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/set\\\",\\n          \\\"!doc\\\": \\\"Sets the value associated to a given search parameter to the given value. If there were several values, delete the others.\\\"\\n        },\\n        \\\"sort\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/sort\\\",\\n          \\\"!doc\\\": \\\"Sorts all key/value pairs, if any, by their keys.\\\"\\n        },\\n        \\\"toString\\\": {\\n          \\\"!type\\\": \\\"fn() -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/toString\\\",\\n          \\\"!doc\\\": \\\"Returns a string containing a query string suitable for use in a URL.\\\"\\n        },\\n        \\\"values\\\": {\\n          \\\"!type\\\": \\\"fn() -> +iter[:t=?]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/values\\\",\\n          \\\"!doc\\\": \\\"Returns an iterator allowing to go through all values of the key/value pairs contained in this object.\\\"\\n        }\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams\\\",\\n      \\\"!doc\\\": \\\"The URLSearchParams interface defines utility methods to work with the query string of a URL.\\\"\\n    },\\n    \\\"Range\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": {\\n        \\\"collapsed\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.collapsed\\\",\\n          \\\"!doc\\\": \\\"Returns a boolean indicating whether the range's start and end points are at the same position.\\\"\\n        },\\n        \\\"commonAncestorContainer\\\": {\\n          \\\"!type\\\": \\\"+Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.commonAncestorContainer\\\",\\n          \\\"!doc\\\": \\\"Returns the deepest Node that contains the  startContainer and  endContainer Nodes.\\\"\\n        },\\n        \\\"endContainer\\\": {\\n          \\\"!type\\\": \\\"+Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.endContainer\\\",\\n          \\\"!doc\\\": \\\"Returns the Node within which the Range ends.\\\"\\n        },\\n        \\\"endOffset\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.endOffset\\\",\\n          \\\"!doc\\\": \\\"Returns a number representing where in the  endContainer the Range ends.\\\"\\n        },\\n        \\\"startContainer\\\": {\\n          \\\"!type\\\": \\\"+Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.startContainer\\\",\\n          \\\"!doc\\\": \\\"Returns the Node within which the Range starts.\\\"\\n        },\\n        \\\"startOffset\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.startOffset\\\",\\n          \\\"!doc\\\": \\\"Returns a number representing where in the startContainer the Range starts.\\\"\\n        },\\n        \\\"setStart\\\": {\\n          \\\"!type\\\": \\\"fn(node: +Element, offset: number)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.setStart\\\",\\n          \\\"!doc\\\": \\\"Sets the start position of a Range.\\\"\\n        },\\n        \\\"setEnd\\\": {\\n          \\\"!type\\\": \\\"fn(node: +Element, offset: number)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.setEnd\\\",\\n          \\\"!doc\\\": \\\"Sets the end position of a Range.\\\"\\n        },\\n        \\\"setStartBefore\\\": {\\n          \\\"!type\\\": \\\"fn(node: +Element)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.setStartBefore\\\",\\n          \\\"!doc\\\": \\\"Sets the start position of a Range relative to another Node.\\\"\\n        },\\n        \\\"setStartAfter\\\": {\\n          \\\"!type\\\": \\\"fn(node: +Element)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.setStartAfter\\\",\\n          \\\"!doc\\\": \\\"Sets the start position of a Range relative to a Node.\\\"\\n        },\\n        \\\"setEndBefore\\\": {\\n          \\\"!type\\\": \\\"fn(node: +Element)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.setEndBefore\\\",\\n          \\\"!doc\\\": \\\"Sets the end position of a Range relative to another Node.\\\"\\n        },\\n        \\\"setEndAfter\\\": {\\n          \\\"!type\\\": \\\"fn(node: +Element)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.setEndAfter\\\",\\n          \\\"!doc\\\": \\\"Sets the end position of a Range relative to another Node.\\\"\\n        },\\n        \\\"selectNode\\\": {\\n          \\\"!type\\\": \\\"fn(node: +Element)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.selectNode\\\",\\n          \\\"!doc\\\": \\\"Sets the Range to contain the Node and its contents.\\\"\\n        },\\n        \\\"selectNodeContents\\\": {\\n          \\\"!type\\\": \\\"fn(node: +Element)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.selectNodeContents\\\",\\n          \\\"!doc\\\": \\\"Sets the Range to contain the contents of a Node.\\\"\\n        },\\n        \\\"collapse\\\": {\\n          \\\"!type\\\": \\\"fn(toStart: bool)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.collapse\\\",\\n          \\\"!doc\\\": \\\"Collapses the Range to one of its boundary points.\\\"\\n        },\\n        \\\"cloneContents\\\": {\\n          \\\"!type\\\": \\\"fn() -> +DocumentFragment\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.cloneContents\\\",\\n          \\\"!doc\\\": \\\"Returns a DocumentFragment copying the Nodes of a Range.\\\"\\n        },\\n        \\\"deleteContents\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.deleteContents\\\",\\n          \\\"!doc\\\": \\\"Removes the contents of a Range from the Document.\\\"\\n        },\\n        \\\"extractContents\\\": {\\n          \\\"!type\\\": \\\"fn() -> +DocumentFragment\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.extractContents\\\",\\n          \\\"!doc\\\": \\\"Moves contents of a Range from the document tree into a DocumentFragment.\\\"\\n        },\\n        \\\"insertNode\\\": {\\n          \\\"!type\\\": \\\"fn(node: +Element)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.insertNode\\\",\\n          \\\"!doc\\\": \\\"Insert a node at the start of a Range.\\\"\\n        },\\n        \\\"surroundContents\\\": {\\n          \\\"!type\\\": \\\"fn(node: +Element)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.surroundContents\\\",\\n          \\\"!doc\\\": \\\"Moves content of a Range into a new node, placing the new node at the start of the specified range.\\\"\\n        },\\n        \\\"compareBoundaryPoints\\\": {\\n          \\\"!type\\\": \\\"fn(how: number, other: +Range) -> number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.compareBoundaryPoints\\\",\\n          \\\"!doc\\\": \\\"Compares the boundary points of two Ranges.\\\"\\n        },\\n        \\\"cloneRange\\\": {\\n          \\\"!type\\\": \\\"fn() -> +Range\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.cloneRange\\\",\\n          \\\"!doc\\\": \\\"Returns a Range object with boundary points identical to the cloned Range.\\\"\\n        },\\n        \\\"detach\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.detach\\\",\\n          \\\"!doc\\\": \\\"Releases a Range from use to improve performance. This lets the browser choose to release resources associated with this Range. Subsequent attempts to use the detached range will result in a DOMException being thrown with an error code of INVALID_STATE_ERR.\\\"\\n        },\\n        \\\"END_TO_END\\\": \\\"number\\\",\\n        \\\"END_TO_START\\\": \\\"number\\\",\\n        \\\"START_TO_END\\\": \\\"number\\\",\\n        \\\"START_TO_START\\\": \\\"number\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/range.detach\\\",\\n      \\\"!doc\\\": \\\"Releases a Range from use to improve performance. This lets the browser choose to release resources associated with this Range. Subsequent attempts to use the detached range will result in a DOMException being thrown with an error code of INVALID_STATE_ERR.\\\"\\n    },\\n    \\\"XMLHttpRequest\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": {\\n        \\\"abort\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/XMLHttpRequest\\\",\\n          \\\"!doc\\\": \\\"Aborts the request if it has already been sent.\\\"\\n        },\\n        \\\"getAllResponseHeaders\\\": {\\n          \\\"!type\\\": \\\"fn() -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/XMLHttpRequest\\\",\\n          \\\"!doc\\\": \\\"Returns all the response headers as a string, or null if no response has been received. Note: For multipart requests, this returns the headers from the current part of the request, not from the original channel.\\\"\\n        },\\n        \\\"getResponseHeader\\\": {\\n          \\\"!type\\\": \\\"fn(header: string) -> string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/XMLHttpRequest\\\",\\n          \\\"!doc\\\": \\\"Returns the string containing the text of the specified header, or null if either the response has not yet been received or the header doesn't exist in the response.\\\"\\n        },\\n        \\\"open\\\": {\\n          \\\"!type\\\": \\\"fn(method: string, url: string, async?: bool, user?: string, password?: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/XMLHttpRequest\\\",\\n          \\\"!doc\\\": \\\"Initializes a request.\\\"\\n        },\\n        \\\"overrideMimeType\\\": {\\n          \\\"!type\\\": \\\"fn(type: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/XMLHttpRequest\\\",\\n          \\\"!doc\\\": \\\"Overrides the MIME type returned by the server.\\\"\\n        },\\n        \\\"send\\\": {\\n          \\\"!type\\\": \\\"fn(data?: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/XMLHttpRequest\\\",\\n          \\\"!doc\\\": \\\"Sends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent. If the request is synchronous, this method doesn't return until the response has arrived.\\\"\\n        },\\n        \\\"setRequestHeader\\\": {\\n          \\\"!type\\\": \\\"fn(header: string, value: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/XMLHttpRequest\\\",\\n          \\\"!doc\\\": \\\"Sets the value of an HTTP request header.You must call setRequestHeader() after open(), but before send().\\\"\\n        },\\n        \\\"onabort\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\" : \\\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onabort\\\",\\n          \\\"!doc\\\": \\\"The XMLHttpRequestEventTarget.onabort is the function called when an XMLHttpRequest transaction is aborted, such as when the XMLHttpRequest.abort() function is called.\\\"\\n        },\\n        \\\"onerror\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\" : \\\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onerror\\\",\\n          \\\"!doc\\\": \\\"The XMLHttpRequestEventTarget.onerror is the function called when an XMLHttpRequest transaction fails due to an error.\\\"\\n        },\\n        \\\"onload\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\" : \\\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onload\\\",\\n          \\\"!doc\\\": \\\"The XMLHttpRequestEventTarget.onload is the function called when an XMLHttpRequest transaction completes successfully.\\\"\\n        },\\n        \\\"onloadstart\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\" : \\\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onloadstart\\\",\\n          \\\"!doc\\\": \\\"The XMLHttpRequestEventTarget.onloadstart is the function called when an XMLHttpRequest transaction starts transferring data.\\\"\\n        },\\n        \\\"onloadend\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\" : \\\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onloadend\\\",\\n          \\\"!doc\\\": \\\"The XMLHttpRequestEventTarget.onloadend is the function called when an XMLHttpRequest transaction completes transferring data.\\\"\\n        },\\n        \\\"onprogress\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\" : \\\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onprogress\\\",\\n          \\\"!doc\\\": \\\"The XMLHttpRequestEventTarget.onprogress is the function called periodically with information when an XMLHttpRequest before success completely.\\\"\\n        },\\n        \\\"ontimeout\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\" : \\\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/ontimeout\\\",\\n          \\\"!doc\\\": \\\"The XMLHttpRequestEventTarget.ontimeout is the function called when the XMLHttpRequest times out.\\\"\\n        },\\n        \\\"addEventListener\\\": {\\n          \\\"!type\\\": \\\"fn(type: string, listener: fn(), options?: ?, useCapture?: bool)\\\",\\n          \\\"!url\\\" : \\\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\\\",\\n          \\\"!doc\\\": \\\"The EventTarget.addEventListener() method registers the specified listener on the EventTarget it's called on. The event target may be an Element in a document, the Document itself, a Window, or any other object that supports events (such as XMLHttpRequest).\\\"\\n        },\\n        \\\"removeEventListener\\\": {\\n          \\\"!type\\\": \\\"fn(type: string, listener: fn(), options?: ?, useCapture?: bool)\\\",\\n          \\\"!url\\\" : \\\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\\\",\\n          \\\"!doc\\\": \\\"Removes the event listener previously registered with EventTarget.addEventListener().\\\"\\n        },\\n        \\\"dispatchEvent\\\": {\\n          \\\"!type\\\": \\\"fn(event: ?)\\\",\\n          \\\"!url\\\" : \\\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\\\",\\n          \\\"!doc\\\": \\\"Dispatches an Event at the specified EventTarget, invoking the affected EventListeners in the appropriate order. The normal event processing rules (including the capturing and optional bubbling phase) apply to events dispatched manually with dispatchEvent().\\\"\\n        },\\n        \\\"onreadystatechange\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/XMLHttpRequest\\\",\\n          \\\"!doc\\\": \\\"A JavaScript function object that is called whenever the readyState attribute changes.\\\"\\n        },\\n        \\\"readyState\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/XMLHttpRequest\\\",\\n          \\\"!doc\\\": \\\"The state of the request. (0=unsent, 1=opened, 2=headers_received, 3=loading, 4=done)\\\"\\n        },\\n        \\\"response\\\": {\\n          \\\"!type\\\": \\\"+Document\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/XMLHttpRequest\\\",\\n          \\\"!doc\\\": \\\"The response entity body according to responseType, as an ArrayBuffer, Blob, Document, JavaScript object (for \\\\\\\"json\\\\\\\"), or string. This is null if the request is not complete or was not successful.\\\"\\n        },\\n        \\\"responseText\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/XMLHttpRequest\\\",\\n          \\\"!doc\\\": \\\"The response to the request as text, or null if the request was unsuccessful or has not yet been sent.\\\"\\n        },\\n        \\\"responseType\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/XMLHttpRequest\\\",\\n          \\\"!doc\\\": \\\"Can be set to change the response type.\\\"\\n        },\\n        \\\"responseXML\\\": {\\n          \\\"!type\\\": \\\"+Document\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/XMLHttpRequest\\\",\\n          \\\"!doc\\\": \\\"The response to the request as a DOM Document object, or null if the request was unsuccessful, has not yet been sent, or cannot be parsed as XML or HTML.\\\"\\n        },\\n        \\\"status\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/XMLHttpRequest\\\",\\n          \\\"!doc\\\": \\\"The status of the response to the request. This is the HTTP result code\\\"\\n        },\\n        \\\"statusText\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/XMLHttpRequest\\\",\\n          \\\"!doc\\\": \\\"The response string returned by the HTTP server. Unlike status, this includes the entire text of the response message (\\\\\\\"200 OK\\\\\\\", for example).\\\"\\n        },\\n        \\\"timeout\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/XMLHttpRequest/Synchronous_and_Asynchronous_Requests\\\",\\n          \\\"!doc\\\": \\\"The number of milliseconds a request can take before automatically being terminated. A value of 0 (which is the default) means there is no timeout.\\\"\\n        },\\n        \\\"UNSENT\\\": \\\"number\\\",\\n        \\\"OPENED\\\": \\\"number\\\",\\n        \\\"HEADERS_RECEIVED\\\": \\\"number\\\",\\n        \\\"LOADING\\\": \\\"number\\\",\\n        \\\"DONE\\\": \\\"number\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/XMLHttpRequest\\\",\\n      \\\"!doc\\\": \\\"XMLHttpRequest is a JavaScript object that was designed by Microsoft and adopted by Mozilla, Apple, and Google. It's now being standardized in the W3C. It provides an easy way to retrieve data at a URL. Despite its name, XMLHttpRequest can be used to retrieve any type of data, not just XML, and it supports protocols other than HTTP (including file and ftp).\\\"\\n    },\\n    \\\"DOMParser\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": {\\n        \\\"parseFromString\\\": {\\n          \\\"!type\\\": \\\"fn(data: string, mime: string) -> +Document\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/DOMParser\\\",\\n          \\\"!doc\\\": \\\"DOMParser can parse XML or HTML source stored in a string into a DOM Document. DOMParser is specified in DOM Parsing and Serialization.\\\"\\n        }\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/DOMParser\\\",\\n      \\\"!doc\\\": \\\"DOMParser can parse XML or HTML source stored in a string into a DOM Document. DOMParser is specified in DOM Parsing and Serialization.\\\"\\n    },\\n    \\\"FormData\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/FormData\\\",\\n      \\\"prototype\\\": {\\n        \\\"append\\\": {\\n          \\\"!type\\\": \\\"fn(name: string, value: string|+Blob, filename?: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/FormData/append\\\",\\n          \\\"!doc\\\": \\\"Appends a new value onto an existing key inside a FormData object, or adds the key if it does not already exist.\\\"\\n        },\\n        \\\"delete\\\": {\\n          \\\"!type\\\": \\\"fn(name: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/FormData/delete\\\",\\n          \\\"!doc\\\": \\\"Deletes a key/value pair from a FormData object.\\\"\\n        },\\n        \\\"entries\\\": {\\n          \\\"!type\\\": \\\"fn() -> +iter[:t=[number, string|+Blob]]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/FormData/entries\\\",\\n          \\\"!doc\\\": \\\"Returns an iterator allowing to go through all key/value pairs contained in this object.\\\"\\n        },\\n        \\\"get\\\": {\\n          \\\"!type\\\": \\\"fn(name: string) -> string|+Blob\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/FormData/get\\\",\\n          \\\"!doc\\\": \\\"Returns the first value associated with a given key from within a FormData object.\\\"\\n        },\\n        \\\"getAll\\\": {\\n          \\\"!type\\\": \\\"fn(name: string) -> [string|+Blob]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/FormData/getAll\\\",\\n          \\\"!doc\\\": \\\"Returns an array of all the values associated with a given key from within a FormData.\\\"\\n        },\\n        \\\"has\\\": {\\n          \\\"!type\\\": \\\"fn(name: string) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/FormData/has\\\",\\n          \\\"!doc\\\": \\\"Returns a boolean stating whether a FormData object contains a certain key/value pair.\\\"\\n        },\\n        \\\"set\\\": {\\n          \\\"!type\\\": \\\"fn(name: string, value: string|+Blob, filename?: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/FormData/set\\\",\\n          \\\"!doc\\\": \\\"Sets a new value for an existing key inside a FormData object, or adds the key/value if it does not already exist.\\\"\\n        },\\n        \\\"keys\\\": {\\n          \\\"!type\\\": \\\"fn() -> +iter[:t=number]\\\",\\n          \\\"!doc\\\": \\\"Returns an iterator allowing to go through all keys of the key/value pairs contained in this object.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/FormData/keys\\\"\\n        },\\n        \\\"values\\\": {\\n          \\\"!type\\\": \\\"fn() -> +iter[:t=string|blob]\\\",\\n          \\\"!doc\\\": \\\"Returns an iterator allowing to go through all values of the key/value pairs contained in this object.\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/FormData/values\\\"\\n        }\\n      }\\n    },\\n    \\\"Selection\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"prototype\\\": {\\n        \\\"anchorNode\\\": {\\n          \\\"!type\\\": \\\"+Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Selection/anchorNode\\\",\\n          \\\"!doc\\\": \\\"Returns the node in which the selection begins.\\\"\\n        },\\n        \\\"anchorOffset\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Selection/anchorOffset\\\",\\n          \\\"!doc\\\": \\\"Returns the number of characters that the selection's anchor is offset within the anchorNode.\\\"\\n        },\\n        \\\"focusNode\\\": {\\n          \\\"!type\\\": \\\"+Element\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Selection/focusNode\\\",\\n          \\\"!doc\\\": \\\"Returns the node in which the selection ends.\\\"\\n        },\\n        \\\"focusOffset\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Selection/focusOffset\\\",\\n          \\\"!doc\\\": \\\"Returns the number of characters that the selection's focus is offset within the focusNode. \\\"\\n        },\\n        \\\"isCollapsed\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Selection/isCollapsed\\\",\\n          \\\"!doc\\\": \\\"Returns a boolean indicating whether the selection's start and end points are at the same position.\\\"\\n        },\\n        \\\"rangeCount\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Selection/rangeCount\\\",\\n          \\\"!doc\\\": \\\"Returns the number of ranges in the selection.\\\"\\n        },\\n        \\\"getRangeAt\\\": {\\n          \\\"!type\\\": \\\"fn(i: number) -> +Range\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Selection/getRangeAt\\\",\\n          \\\"!doc\\\": \\\"Returns a range object representing one of the ranges currently selected.\\\"\\n        },\\n        \\\"collapse\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Selection/collapse\\\",\\n          \\\"!doc\\\": \\\"Collapses the current selection to a single point. The document is not modified. If the content is focused and editable, the caret will blink there.\\\"\\n        },\\n        \\\"extend\\\": {\\n          \\\"!type\\\": \\\"fn(node: +Element, offset: number)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Selection/extend\\\",\\n          \\\"!doc\\\": \\\"Moves the focus of the selection to a specified point. The anchor of the selection does not move. The selection will be from the anchor to the new focus regardless of direction.\\\"\\n        },\\n        \\\"collapseToStart\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Selection/collapseToStart\\\",\\n          \\\"!doc\\\": \\\"Collapses the selection to the start of the first range in the selection.  If the content of the selection is focused and editable, the caret will blink there.\\\"\\n        },\\n        \\\"collapseToEnd\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Selection/collapseToEnd\\\",\\n          \\\"!doc\\\": \\\"Collapses the selection to the end of the last range in the selection.  If the content the selection is in is focused and editable, the caret will blink there.\\\"\\n        },\\n        \\\"selectAllChildren\\\": {\\n          \\\"!type\\\": \\\"fn(node: +Element)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Selection/selectAllChildren\\\",\\n          \\\"!doc\\\": \\\"Adds all the children of the specified node to the selection. Previous selection is lost.\\\"\\n        },\\n        \\\"addRange\\\": {\\n          \\\"!type\\\": \\\"fn(range: +Range)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Selection/addRange\\\",\\n          \\\"!doc\\\": \\\"Adds a Range to a Selection.\\\"\\n        },\\n        \\\"removeRange\\\": {\\n          \\\"!type\\\": \\\"fn(range: +Range)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Selection/removeRange\\\",\\n          \\\"!doc\\\": \\\"Removes a range from the selection.\\\"\\n        },\\n        \\\"removeAllRanges\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Selection/removeAllRanges\\\",\\n          \\\"!doc\\\": \\\"Removes all ranges from the selection, leaving the anchorNode and focusNode properties equal to null and leaving nothing selected. \\\"\\n        },\\n        \\\"deleteFromDocument\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Selection/deleteFromDocument\\\",\\n          \\\"!doc\\\": \\\"Deletes the actual text being represented by a selection object from the document's DOM.\\\"\\n        },\\n        \\\"containsNode\\\": {\\n          \\\"!type\\\": \\\"fn(node: +Element) -> bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Selection/containsNode\\\",\\n          \\\"!doc\\\": \\\"Indicates if the node is part of the selection.\\\"\\n        }\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Selection\\\",\\n      \\\"!doc\\\": \\\"Selection is the class of the object returned by window.getSelection() and other methods. It represents the text selection in the greater page, possibly spanning multiple elements, when the user drags over static text and other parts of the page. For information about text selection in an individual text editing element.\\\"\\n    },\\n    \\\"console\\\": {\\n      \\\"assert\\\": {\\n        \\\"!type\\\": \\\"fn(assertion: bool, text: string)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/Web/API/Console.assert\\\",\\n        \\\"!doc\\\": \\\"Writes an error message to the console if the assertion is false.\\\"\\n      },\\n      \\\"clear\\\": {\\n        \\\"!type\\\": \\\"fn()\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Console/clear\\\",\\n        \\\"!doc\\\": \\\"    Clear the console.\\\"\\n      },\\n      \\\"count\\\": {\\n        \\\"!type\\\": \\\"fn(label?: string)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/Web/API/Console.count\\\",\\n        \\\"!doc\\\": \\\"Logs the number of times that this particular call to count() has been called.\\\"\\n      },\\n      \\\"debug\\\": \\\"console.log\\\",\\n      \\\"dir\\\": {\\n        \\\"!type\\\": \\\"fn(object: ?)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/Web/API/Console.dir\\\",\\n        \\\"!doc\\\": \\\"Displays an interactive list of the properties of the specified JavaScript object.\\\"\\n      },\\n      \\\"error\\\": {\\n        \\\"!type\\\": \\\"fn(...msg: ?)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/console.error\\\",\\n        \\\"!doc\\\": \\\"Outputs an error message to the Web Console.\\\"\\n      },\\n      \\\"group\\\": {\\n        \\\"!type\\\": \\\"fn(label?: string)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/Web/API/Console.group\\\",\\n        \\\"!doc\\\": \\\"Creates a new inline group in the Web Console log.\\\"\\n      },\\n      \\\"groupCollapsed\\\": {\\n        \\\"!type\\\": \\\"fn(label?: string)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/Web/API/Console.groupCollapsed\\\",\\n        \\\"!doc\\\": \\\"Creates a new inline group in the Web Console log.\\\"\\n      },\\n      \\\"groupEnd\\\": {\\n        \\\"!type\\\": \\\"fn()\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/Web/API/Console.groupEnd\\\",\\n        \\\"!doc\\\": \\\"Exits the current inline group in the Web Console.\\\"\\n      },\\n      \\\"info\\\": {\\n        \\\"!type\\\": \\\"fn(...msg: ?)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/console.info\\\",\\n        \\\"!doc\\\": \\\"Outputs an informational message to the Web Console.\\\"\\n      },\\n      \\\"log\\\": {\\n        \\\"!type\\\": \\\"fn(...msg: ?)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/console.log\\\",\\n        \\\"!doc\\\": \\\"Outputs a message to the Web Console.\\\"\\n      },\\n      \\\"table\\\": {\\n        \\\"!type\\\": \\\"fn(data: []|?, columns?: [])\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Console/table\\\",\\n        \\\"!doc\\\": \\\"    Displays tabular data as a table.\\\"\\n      },\\n      \\\"time\\\": {\\n        \\\"!type\\\": \\\"fn(label: string)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/Web/API/Console.time\\\",\\n        \\\"!doc\\\": \\\"Starts a timer you can use to track how long an operation takes.\\\"\\n      },\\n      \\\"timeEnd\\\": {\\n        \\\"!type\\\": \\\"fn(label: string)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/Web/API/Console.timeEnd\\\",\\n        \\\"!doc\\\": \\\"Stops a timer that was previously started by calling console.time().\\\"\\n      },\\n      \\\"trace\\\": {\\n        \\\"!type\\\": \\\"fn()\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/Web/API/Console.trace\\\",\\n        \\\"!doc\\\": \\\"Outputs a stack trace to the Web Console.\\\"\\n      },\\n      \\\"warn\\\": {\\n        \\\"!type\\\": \\\"fn(...msg: ?)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/console.warn\\\",\\n        \\\"!doc\\\": \\\"Outputs a warning message to the Web Console.\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/Web/API/Console\\\",\\n      \\\"!doc\\\": \\\"The console object provides access to the browser's debugging console. The specifics of how it works vary from browser to browser, but there is a de facto set of features that are typically provided.\\\"\\n    },\\n    \\\"top\\\": {\\n      \\\"!type\\\": \\\"<top>\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.top\\\",\\n      \\\"!doc\\\": \\\"Returns a reference to the topmost window in the window hierarchy.\\\"\\n    },\\n    \\\"parent\\\": {\\n      \\\"!type\\\": \\\"<top>\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.parent\\\",\\n      \\\"!doc\\\": \\\"A reference to the parent of the current window or subframe.\\\"\\n    },\\n    \\\"window\\\": {\\n      \\\"!type\\\": \\\"<top>\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window\\\",\\n      \\\"!doc\\\": \\\"The window object represents a window containing a DOM document.\\\"\\n    },\\n    \\\"opener\\\": {\\n      \\\"!type\\\": \\\"<top>\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.opener\\\",\\n      \\\"!doc\\\": \\\"Returns a reference to the window that opened this current window.\\\"\\n    },\\n    \\\"self\\\": {\\n      \\\"!type\\\": \\\"<top>\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.self\\\",\\n      \\\"!doc\\\": \\\"Returns an object reference to the window object. \\\"\\n    },\\n    \\\"devicePixelRatio\\\": \\\"number\\\",\\n    \\\"name\\\": {\\n      \\\"!type\\\": \\\"string\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/JavaScript/Reference/Global_Objects/Function/name\\\",\\n      \\\"!doc\\\": \\\"The name of the function.\\\"\\n    },\\n    \\\"closed\\\": {\\n      \\\"!type\\\": \\\"bool\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.closed\\\",\\n      \\\"!doc\\\": \\\"This property indicates whether the referenced window is closed or not.\\\"\\n    },\\n    \\\"pageYOffset\\\": {\\n      \\\"!type\\\": \\\"number\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.scrollY\\\",\\n      \\\"!doc\\\": \\\"Returns the number of pixels that the document has already been scrolled vertically.\\\"\\n    },\\n    \\\"pageXOffset\\\": {\\n      \\\"!type\\\": \\\"number\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.scrollX\\\",\\n      \\\"!doc\\\": \\\"Returns the number of pixels that the document has already been scrolled vertically.\\\"\\n    },\\n    \\\"scrollY\\\": {\\n      \\\"!type\\\": \\\"number\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.scrollY\\\",\\n      \\\"!doc\\\": \\\"Returns the number of pixels that the document has already been scrolled vertically.\\\"\\n    },\\n    \\\"scrollX\\\": {\\n      \\\"!type\\\": \\\"number\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.scrollX\\\",\\n      \\\"!doc\\\": \\\"Returns the number of pixels that the document has already been scrolled vertically.\\\"\\n    },\\n    \\\"screenTop\\\": {\\n      \\\"!type\\\": \\\"number\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.screen.top\\\",\\n      \\\"!doc\\\": \\\"Returns the distance in pixels from the top side of the current screen.\\\"\\n    },\\n    \\\"screenLeft\\\": {\\n      \\\"!type\\\": \\\"number\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.screen.left\\\",\\n      \\\"!doc\\\": \\\"Returns the distance in pixels from the left side of the main screen to the left side of the current screen.\\\"\\n    },\\n    \\\"screenY\\\": {\\n      \\\"!type\\\": \\\"number\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/event.screenY\\\",\\n      \\\"!doc\\\": \\\"Returns the vertical coordinate of the event within the screen as a whole.\\\"\\n    },\\n    \\\"screenX\\\": {\\n      \\\"!type\\\": \\\"number\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/event.screenX\\\",\\n      \\\"!doc\\\": \\\"Returns the horizontal coordinate of the event within the screen as a whole.\\\"\\n    },\\n    \\\"innerWidth\\\": {\\n      \\\"!type\\\": \\\"number\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.innerWidth\\\",\\n      \\\"!doc\\\": \\\"Width (in pixels) of the browser window viewport including, if rendered, the vertical scrollbar.\\\"\\n    },\\n    \\\"innerHeight\\\": {\\n      \\\"!type\\\": \\\"number\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.innerHeight\\\",\\n      \\\"!doc\\\": \\\"Height (in pixels) of the browser window viewport including, if rendered, the horizontal scrollbar.\\\"\\n    },\\n    \\\"outerWidth\\\": {\\n      \\\"!type\\\": \\\"number\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.outerWidth\\\",\\n      \\\"!doc\\\": \\\"window.outerWidth gets the width of the outside of the browser window. It represents the width of the whole browser window including sidebar (if expanded), window chrome and window resizing borders/handles.\\\"\\n    },\\n    \\\"outerHeight\\\": {\\n      \\\"!type\\\": \\\"number\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.outerHeight\\\",\\n      \\\"!doc\\\": \\\"window.outerHeight gets the height in pixels of the whole browser window.\\\"\\n    },\\n    \\\"frameElement\\\": {\\n      \\\"!type\\\": \\\"+Element\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.frameElement\\\",\\n      \\\"!doc\\\": \\\"Returns the element (such as <iframe> or <object>) in which the window is embedded, or null if the window is top-level.\\\"\\n    },\\n    \\\"crypto\\\": {\\n      \\\"getRandomValues\\\": {\\n        \\\"!type\\\": \\\"fn([number])\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.crypto.getRandomValues\\\",\\n        \\\"!doc\\\": \\\"This methods lets you get cryptographically random values.\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.crypto.getRandomValues\\\",\\n      \\\"!doc\\\": \\\"This methods lets you get cryptographically random values.\\\"\\n    },\\n    \\\"navigator\\\": {\\n      \\\"geolocation\\\": {\\n        \\\"!type\\\": \\\"+Geolocation\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Navigator/geolocation\\\",\\n        \\\"!doc\\\": \\\"The Navigator.geolocation read-only property returns a Geolocation object that gives Web content access to the location of the device. This allows a Web site or app to offer customized results based on the user's location.\\\"\\n      },\\n      \\\"appName\\\": {\\n        \\\"!type\\\": \\\"string\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.navigator.appName\\\",\\n        \\\"!doc\\\": \\\"Returns the name of the browser. The HTML5 specification also allows any browser to return \\\\\\\"Netscape\\\\\\\" here, for compatibility reasons.\\\"\\n      },\\n      \\\"appVersion\\\": {\\n        \\\"!type\\\": \\\"string\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.navigator.appVersion\\\",\\n        \\\"!doc\\\": \\\"Returns the version of the browser as a string. It may be either a plain version number, like \\\\\\\"5.0\\\\\\\", or a version number followed by more detailed information. The HTML5 specification also allows any browser to return \\\\\\\"4.0\\\\\\\" here, for compatibility reasons.\\\"\\n      },\\n      \\\"language\\\": {\\n        \\\"!type\\\": \\\"string\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/NavigatorLanguage/language\\\",\\n        \\\"!doc\\\": \\\"Returns a string representing the language version of the browser.\\\"\\n      },\\n      \\\"languages\\\": {\\n        \\\"!type\\\": \\\"[string]\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/NavigatorLanguage/languages\\\",\\n        \\\"!doc\\\": \\\"Returns a string representing the language version of the browser.\\\"\\n      },\\n      \\\"onLine\\\": {\\n        \\\"!type\\\": \\\"bool\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/NavigatorOnLine/onLine\\\",\\n        \\\"!doc\\\": \\\"Returns a Boolean indicating whether the browser is working online.\\\"\\n      },\\n      \\\"oscpu\\\": {\\n        \\\"!type\\\": \\\"string\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Navigator/oscpu\\\",\\n        \\\"!doc\\\": \\\"Returns a string that represents the current operating system.\\\"\\n      },\\n      \\\"permissions\\\": {\\n        \\\"!type\\\": \\\"Permissions\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Navigator/permissions\\\",\\n        \\\"!doc\\\": \\\"Returns a Permissions object that can be used to query and update permission status of APIs covered by the Permissions API.\\\"\\n      },\\n      \\\"platform\\\": {\\n        \\\"!type\\\": \\\"string\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/NavigatorID/platform\\\",\\n        \\\"!doc\\\": \\\"Returns a string representing the platform of the browser.\\\"\\n      },\\n      \\\"plugins\\\": {\\n        \\\"!type\\\": \\\"[?]\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.navigator.plugins\\\",\\n        \\\"!doc\\\": \\\"Returns a PluginArray object, listing the plugins installed in the application.\\\"\\n      },\\n      \\\"sendBeacon\\\": {\\n        \\\"!type\\\": \\\"fn(url: string, data?: ?)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Navigator/sendBeacon\\\",\\n        \\\"!doc\\\": \\\"Used to asynchronously transfer a small amount of data using HTTP from the User Agent to a web server.\\\"\\n      },\\n      \\\"userAgent\\\": {\\n        \\\"!type\\\": \\\"string\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.navigator.userAgent\\\",\\n        \\\"!doc\\\": \\\"Returns the user agent string for the current browser.\\\"\\n      },\\n      \\\"vendor\\\": {\\n        \\\"!type\\\": \\\"string\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.navigator.vendor\\\",\\n        \\\"!doc\\\": \\\"Returns the name of the browser vendor for the current browser.\\\"\\n      },\\n      \\\"vibrate\\\": {\\n        \\\"!type\\\": \\\"fn(pattern: number|[number])\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Navigator/vibrate\\\",\\n        \\\"!doc\\\": \\\"Causes vibration on devices with support for it. Does nothing if vibration support isn't available.\\\"\\n      },\\n      \\\"cookieEnabled\\\": {\\n        \\\"!type\\\": \\\"bool\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Navigator/cookieEnabled\\\",\\n        \\\"!doc\\\": \\\"Returns false if setting a cookie will be ignored and true otherwise.\\\"\\n      },\\n      \\\"javaEnabled\\\": {\\n        \\\"!type\\\": \\\"fn() -> bool\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/NavigatorPlugins/javaEnabled\\\",\\n        \\\"!doc\\\": \\\"Returns a Boolean flag indicating whether the host browser is Java-enabled or not.\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.navigator\\\",\\n      \\\"!doc\\\": \\\"Returns a reference to the navigator object, which can be queried for information about the application running the script.\\\"\\n    },\\n    \\\"history\\\": {\\n      \\\"state\\\": {\\n        \\\"!type\\\": \\\"?\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Manipulating_the_browser_history\\\",\\n        \\\"!doc\\\": \\\"The DOM window object provides access to the browser's history through the history object. It exposes useful methods and properties that let you move back and forth through the user's history, as well as -- starting with HTML5 -- manipulate the contents of the history stack.\\\"\\n      },\\n      \\\"length\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Manipulating_the_browser_history\\\",\\n        \\\"!doc\\\": \\\"The DOM window object provides access to the browser's history through the history object. It exposes useful methods and properties that let you move back and forth through the user's history, as well as -- starting with HTML5 -- manipulate the contents of the history stack.\\\"\\n      },\\n      \\\"go\\\": {\\n        \\\"!type\\\": \\\"fn(delta: number)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.history\\\",\\n        \\\"!doc\\\": \\\"Returns a reference to the History object, which provides an interface for manipulating the browser session history (pages visited in the tab or frame that the current page is loaded in).\\\"\\n      },\\n      \\\"forward\\\": {\\n        \\\"!type\\\": \\\"fn()\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Manipulating_the_browser_history\\\",\\n        \\\"!doc\\\": \\\"The DOM window object provides access to the browser's history through the history object. It exposes useful methods and properties that let you move back and forth through the user's history, as well as -- starting with HTML5 -- manipulate the contents of the history stack.\\\"\\n      },\\n      \\\"back\\\": {\\n        \\\"!type\\\": \\\"fn()\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Manipulating_the_browser_history\\\",\\n        \\\"!doc\\\": \\\"The DOM window object provides access to the browser's history through the history object. It exposes useful methods and properties that let you move back and forth through the user's history, as well as -- starting with HTML5 -- manipulate the contents of the history stack.\\\"\\n      },\\n      \\\"pushState\\\": {\\n        \\\"!type\\\": \\\"fn(data: ?, title: string, url?: string)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Manipulating_the_browser_history\\\",\\n        \\\"!doc\\\": \\\"The DOM window object provides access to the browser's history through the history object. It exposes useful methods and properties that let you move back and forth through the user's history, as well as -- starting with HTML5 -- manipulate the contents of the history stack.\\\"\\n      },\\n      \\\"replaceState\\\": {\\n        \\\"!type\\\": \\\"fn(data: ?, title: string, url?: string)\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Manipulating_the_browser_history\\\",\\n        \\\"!doc\\\": \\\"The DOM window object provides access to the browser's history through the history object. It exposes useful methods and properties that let you move back and forth through the user's history, as well as -- starting with HTML5 -- manipulate the contents of the history stack.\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Manipulating_the_browser_history\\\",\\n      \\\"!doc\\\": \\\"The DOM window object provides access to the browser's history through the history object. It exposes useful methods and properties that let you move back and forth through the user's history, as well as -- starting with HTML5 -- manipulate the contents of the history stack.\\\"\\n    },\\n    \\\"requestAnimationFrame\\\": {\\n      \\\"!type\\\": \\\"fn(callback: fn(timestamp: number)) -> number\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.requestAnimationFrame\\\",\\n      \\\"!doc\\\": \\\"The Window.requestAnimationFrame() method tells the browser that you wish to perform an animation and requests that the browser call a specified function to update an animation before the next repaint. The method takes as an argument a callback to be invoked before the repaint.\\\"\\n    },\\n    \\\"cancelAnimationFrame\\\": {\\n      \\\"!type\\\": \\\"fn(number)n\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.cancelAnimationFrame\\\",\\n      \\\"!doc\\\": \\\"Cancels a previously scheduled animation frame request.\\\"\\n    },\\n    \\\"screen\\\": {\\n      \\\"availWidth\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.screen.availWidth\\\",\\n        \\\"!doc\\\": \\\"Returns the amount of horizontal space in pixels available to the window.\\\"\\n      },\\n      \\\"availHeight\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.screen.availHeight\\\",\\n        \\\"!doc\\\": \\\"Returns the amount of vertical space available to the window on the screen.\\\"\\n      },\\n      \\\"availTop\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.screen.availTop\\\",\\n        \\\"!doc\\\": \\\"Specifies the y-coordinate of the first pixel that is not allocated to permanent or semipermanent user interface features.\\\"\\n      },\\n      \\\"availLeft\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.screen.availLeft\\\",\\n        \\\"!doc\\\": \\\"Returns the first available pixel available from the left side of the screen.\\\"\\n      },\\n      \\\"pixelDepth\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.screen.pixelDepth\\\",\\n        \\\"!doc\\\": \\\"Returns the bit depth of the screen.\\\"\\n      },\\n      \\\"colorDepth\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.screen.colorDepth\\\",\\n        \\\"!doc\\\": \\\"Returns the color depth of the screen.\\\"\\n      },\\n      \\\"width\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.screen.width\\\",\\n        \\\"!doc\\\": \\\"Returns the width of the screen.\\\"\\n      },\\n      \\\"height\\\": {\\n        \\\"!type\\\": \\\"number\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.screen.height\\\",\\n        \\\"!doc\\\": \\\"Returns the height of the screen in pixels.\\\"\\n      },\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.screen\\\",\\n      \\\"!doc\\\": \\\"Returns a reference to the screen object associated with the window.\\\"\\n    },\\n    \\\"postMessage\\\": {\\n      \\\"!type\\\": \\\"fn(message: string, targetOrigin: string)\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.postMessage\\\",\\n      \\\"!doc\\\": \\\"window.postMessage, when called, causes a MessageEvent to be dispatched at the target window when any pending script that must be executed completes (e.g. remaining event handlers if window.postMessage is called from an event handler, previously-set pending timeouts, etc.). The MessageEvent has the type message, a data property which is set to the value of the first argument provided to window.postMessage, an origin property corresponding to the origin of the main document in the window calling window.postMessage at the time window.postMessage was called, and a source property which is the window from which window.postMessage is called. (Other standard properties of events are present with their expected values.)\\\"\\n    },\\n    \\\"close\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.close\\\",\\n      \\\"!doc\\\": \\\"Closes the current window, or a referenced window.\\\"\\n    },\\n    \\\"blur\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.blur\\\",\\n      \\\"!doc\\\": \\\"The blur method removes keyboard focus from the current element.\\\"\\n    },\\n    \\\"focus\\\": {\\n      \\\"!type\\\": \\\"fn()\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.focus\\\",\\n      \\\"!doc\\\": \\\"Sets focus on the specified element, if it can be focused.\\\"\\n    },\\n    \\\"onload\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.onload\\\",\\n      \\\"!doc\\\": \\\"An event handler for the load event of a window.\\\"\\n    },\\n    \\\"onunload\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.onunload\\\",\\n      \\\"!doc\\\": \\\"The unload event is raised when the window is unloading its content and resources. The resources removal is processed after the unload event occurs.\\\"\\n    },\\n    \\\"onscroll\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.onscroll\\\",\\n      \\\"!doc\\\": \\\"Specifies the function to be called when the window is scrolled.\\\"\\n    },\\n    \\\"onresize\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.onresize\\\",\\n      \\\"!doc\\\": \\\"An event handler for the resize event on the window.\\\"\\n    },\\n    \\\"ononline\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/document.ononline\\\",\\n      \\\"!doc\\\": \\\"\\\\\\\"online\\\\\\\" event is fired when the browser switches between online and offline mode.\\\"\\n    },\\n    \\\"onoffline\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/Online_and_offline_events\\\",\\n      \\\"!doc\\\": \\\"Some browsers implement Online/Offline events from the WHATWG Web Applications 1.0 specification.\\\"\\n    },\\n    \\\"onmousewheel\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/DOM_event_reference/mousewheel\\\",\\n      \\\"!doc\\\": \\\"The DOM mousewheel event is fired asynchronously when mouse wheel or similar device is operated. It's represented by the MouseWheelEvent interface.\\\"\\n    },\\n    \\\"onmouseup\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.onmouseup\\\",\\n      \\\"!doc\\\": \\\"An event handler for the mouseup event on the window.\\\"\\n    },\\n    \\\"onmouseover\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onmouseover\\\",\\n      \\\"!doc\\\": \\\"The onmouseover property returns the onMouseOver event handler code on the current element.\\\"\\n    },\\n    \\\"onmouseout\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onmouseout\\\",\\n      \\\"!doc\\\": \\\"The onmouseout property returns the onMouseOut event handler code on the current element.\\\"\\n    },\\n    \\\"onmousemove\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onmousemove\\\",\\n      \\\"!doc\\\": \\\"The onmousemove property returns the mousemove event handler code on the current element.\\\"\\n    },\\n    \\\"onmousedown\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.onmousedown\\\",\\n      \\\"!doc\\\": \\\"An event handler for the mousedown event on the window.\\\"\\n    },\\n    \\\"onclick\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onclick\\\",\\n      \\\"!doc\\\": \\\"The onclick property returns the onClick event handler code on the current element.\\\"\\n    },\\n    \\\"ondblclick\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.ondblclick\\\",\\n      \\\"!doc\\\": \\\"The ondblclick property returns the onDblClick event handler code on the current element.\\\"\\n    },\\n    \\\"onmessage\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/Worker\\\",\\n      \\\"!doc\\\": \\\"Dedicated Web Workers provide a simple means for web content to run scripts in background threads.  Once created, a worker can send messages to the spawning task by posting messages to an event handler specified by the creator.\\\"\\n    },\\n    \\\"onkeyup\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onkeyup\\\",\\n      \\\"!doc\\\": \\\"The onkeyup property returns the onKeyUp event handler code for the current element.\\\"\\n    },\\n    \\\"onkeypress\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onkeypress\\\",\\n      \\\"!doc\\\": \\\"The onkeypress property sets and returns the onKeyPress event handler code for the current element.\\\"\\n    },\\n    \\\"onkeydown\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.onkeydown\\\",\\n      \\\"!doc\\\": \\\"An event handler for the keydown event on the window.\\\"\\n    },\\n    \\\"oninput\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/DOM_event_reference/input\\\",\\n      \\\"!doc\\\": \\\"The DOM input event is fired synchronously when the value of an <input> or <textarea> element is changed. Additionally, it's also fired on contenteditable editors when its contents are changed. In this case, the event target is the editing host element. If there are two or more elements which have contenteditable as true, \\\\\\\"editing host\\\\\\\" is the nearest ancestor element whose parent isn't editable. Similarly, it's also fired on root element of designMode editors.\\\"\\n    },\\n    \\\"onpopstate\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.onpopstate\\\",\\n      \\\"!doc\\\": \\\"An event handler for the popstate event on the window.\\\"\\n    },\\n    \\\"onhashchange\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.onhashchange\\\",\\n      \\\"!doc\\\": \\\"The hashchange event fires when a window's hash changes.\\\"\\n    },\\n    \\\"onfocus\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onfocus\\\",\\n      \\\"!doc\\\": \\\"The onfocus property returns the onFocus event handler code on the current element.\\\"\\n    },\\n    \\\"onblur\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onblur\\\",\\n      \\\"!doc\\\": \\\"The onblur property returns the onBlur event handler code, if any, that exists on the current element.\\\"\\n    },\\n    \\\"onerror\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.onerror\\\",\\n      \\\"!doc\\\": \\\"An event handler for runtime script errors.\\\"\\n    },\\n    \\\"ondrop\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/DOM/Mozilla_event_reference/drop\\\",\\n      \\\"!doc\\\": \\\"The drop event is fired when an element or text selection is dropped on a valid drop target.\\\"\\n    },\\n    \\\"ondragstart\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/DOM/Mozilla_event_reference/dragstart\\\",\\n      \\\"!doc\\\": \\\"The dragstart event is fired when the user starts dragging an element or text selection.\\\"\\n    },\\n    \\\"ondragover\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/DOM/Mozilla_event_reference/dragover\\\",\\n      \\\"!doc\\\": \\\"The dragover event is fired when an element or text selection is being dragged over a valid drop target (every few hundred milliseconds).\\\"\\n    },\\n    \\\"ondragleave\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/DOM/Mozilla_event_reference/dragleave\\\",\\n      \\\"!doc\\\": \\\"The dragleave event is fired when a dragged element or text selection leaves a valid drop target.\\\"\\n    },\\n    \\\"ondragenter\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/DOM/Mozilla_event_reference/dragenter\\\",\\n      \\\"!doc\\\": \\\"The dragenter event is fired when a dragged element or text selection enters a valid drop target.\\\"\\n    },\\n    \\\"ondragend\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/DOM/Mozilla_event_reference/dragend\\\",\\n      \\\"!doc\\\": \\\"The dragend event is fired when a drag operation is being ended (by releasing a mouse button or hitting the escape key).\\\"\\n    },\\n    \\\"ondrag\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/DOM/Mozilla_event_reference/drag\\\",\\n      \\\"!doc\\\": \\\"The drag event is fired when an element or text selection is being dragged (every few hundred milliseconds).\\\"\\n    },\\n    \\\"oncontextmenu\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.oncontextmenu\\\",\\n      \\\"!doc\\\": \\\"An event handler property for right-click events on the window. Unless the default behavior is prevented, the browser context menu will activate (though IE8 has a bug with this and will not activate the context menu if a contextmenu event handler is defined). Note that this event will occur with any non-disabled right-click event and does not depend on an element possessing the \\\\\\\"contextmenu\\\\\\\" attribute.\\\"\\n    },\\n    \\\"onchange\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/element.onchange\\\",\\n      \\\"!doc\\\": \\\"The onchange property sets and returns the onChange event handler code for the current element.\\\"\\n    },\\n    \\\"onbeforeunload\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.onbeforeunload\\\",\\n      \\\"!doc\\\": \\\"An event that fires when a window is about to unload its resources. The document is still visible and the event is still cancelable.\\\"\\n    },\\n    \\\"onabort\\\": {\\n      \\\"!type\\\": \\\"?\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.onabort\\\",\\n      \\\"!doc\\\": \\\"An event handler for abort events sent to the window.\\\"\\n    },\\n    \\\"getSelection\\\": {\\n      \\\"!type\\\": \\\"fn() -> +Selection\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.getSelection\\\",\\n      \\\"!doc\\\": \\\"Returns a selection object representing the range of text selected by the user. \\\"\\n    },\\n    \\\"alert\\\": {\\n      \\\"!type\\\": \\\"fn(message: string)\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.alert\\\",\\n      \\\"!doc\\\": \\\"Display an alert dialog with the specified content and an OK button.\\\"\\n    },\\n    \\\"confirm\\\": {\\n      \\\"!type\\\": \\\"fn(message: string) -> bool\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.confirm\\\",\\n      \\\"!doc\\\": \\\"Displays a modal dialog with a message and two buttons, OK and Cancel.\\\"\\n    },\\n    \\\"prompt\\\": {\\n      \\\"!type\\\": \\\"fn(message: string, value: string) -> string\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.prompt\\\",\\n      \\\"!doc\\\": \\\"Displays a dialog with a message prompting the user to input some text.\\\"\\n    },\\n    \\\"scrollBy\\\": {\\n      \\\"!type\\\": \\\"fn(x: number, y: number)\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.scrollBy\\\",\\n      \\\"!doc\\\": \\\"Scrolls the document in the window by the given amount.\\\"\\n    },\\n    \\\"scrollTo\\\": {\\n      \\\"!type\\\": \\\"fn(x: number, y: number)\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.scrollTo\\\",\\n      \\\"!doc\\\": \\\"Scrolls to a particular set of coordinates in the document.\\\"\\n    },\\n    \\\"scroll\\\": {\\n      \\\"!type\\\": \\\"fn(x: number, y: number)\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.scroll\\\",\\n      \\\"!doc\\\": \\\"Scrolls the window to a particular place in the document.\\\"\\n    },\\n    \\\"setTimeout\\\": {\\n      \\\"!type\\\": \\\"fn(f: fn(), ms: number) -> number\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.setTimeout\\\",\\n      \\\"!doc\\\": \\\"Calls a function or executes a code snippet after specified delay.\\\"\\n    },\\n    \\\"clearTimeout\\\": {\\n      \\\"!type\\\": \\\"fn(timeout: number)\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.clearTimeout\\\",\\n      \\\"!doc\\\": \\\"Clears the delay set by window.setTimeout().\\\"\\n    },\\n    \\\"setInterval\\\": {\\n      \\\"!type\\\": \\\"fn(f: fn(), ms: number) -> number\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.setInterval\\\",\\n      \\\"!doc\\\": \\\"Calls a function or executes a code snippet repeatedly, with a fixed time delay between each call to that function.\\\"\\n    },\\n    \\\"clearInterval\\\": {\\n      \\\"!type\\\": \\\"fn(interval: number)\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.clearInterval\\\",\\n      \\\"!doc\\\": \\\"Cancels repeated action which was set up using setInterval.\\\"\\n    },\\n    \\\"atob\\\": {\\n      \\\"!type\\\": \\\"fn(encoded: string) -> string\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.atob\\\",\\n      \\\"!doc\\\": \\\"Decodes a string of data which has been encoded using base-64 encoding.\\\"\\n    },\\n    \\\"btoa\\\": {\\n      \\\"!type\\\": \\\"fn(data: string) -> string\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.btoa\\\",\\n      \\\"!doc\\\": \\\"Creates a base-64 encoded ASCII string from a string of binary data.\\\"\\n    },\\n    \\\"addEventListener\\\": {\\n      \\\"!type\\\": \\\"fn(type: string, listener: fn(e: +Event), capture: bool)\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/EventTarget.addEventListener\\\",\\n      \\\"!doc\\\": \\\"Registers a single event listener on a single target. The event target may be a single element in a document, the document itself, a window, or an XMLHttpRequest.\\\"\\n    },\\n    \\\"removeEventListener\\\": {\\n      \\\"!type\\\": \\\"fn(type: string, listener: fn(), capture: bool)\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/EventTarget.removeEventListener\\\",\\n      \\\"!doc\\\": \\\"Allows the removal of event listeners from the event target.\\\"\\n    },\\n    \\\"dispatchEvent\\\": {\\n      \\\"!type\\\": \\\"fn(event: +Event) -> bool\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/EventTarget.dispatchEvent\\\",\\n      \\\"!doc\\\": \\\"Dispatches an event into the event system. The event is subject to the same capturing and bubbling behavior as directly dispatched events.\\\"\\n    },\\n    \\\"getComputedStyle\\\": {\\n      \\\"!type\\\": \\\"fn(node: +Element, pseudo?: string) -> Element.prototype.style\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en/docs/DOM/window.getComputedStyle\\\",\\n      \\\"!doc\\\": \\\"Gives the final used values of all the CSS properties of an element.\\\"\\n    },\\n    \\\"CanvasRenderingContext2D\\\": {\\n      \\\"canvas\\\": \\\"+Element\\\",\\n      \\\"width\\\": \\\"number\\\",\\n      \\\"height\\\": \\\"number\\\",\\n      \\\"commit\\\": \\\"fn()\\\",\\n      \\\"save\\\": \\\"fn()\\\",\\n      \\\"restore\\\": \\\"fn()\\\",\\n      \\\"currentTransform\\\": \\\"?\\\",\\n      \\\"scale\\\": \\\"fn(x: number, y: number)\\\",\\n      \\\"rotate\\\": \\\"fn(angle: number)\\\",\\n      \\\"translate\\\": \\\"fn(x: number, y: number)\\\",\\n      \\\"transform\\\": \\\"fn(a: number, b: number, c: number, d: number, e: number, f: number)\\\",\\n      \\\"setTransform\\\": \\\"fn(a: number, b: number, c: number, d: number, e: number, f: number)\\\",\\n      \\\"resetTransform\\\": \\\"fn()\\\",\\n      \\\"globalAlpha\\\": \\\"number\\\",\\n      \\\"globalCompositeOperation\\\": \\\"string\\\",\\n      \\\"imageSmoothingEnabled\\\": \\\"bool\\\",\\n      \\\"strokeStyle\\\": \\\"string\\\",\\n      \\\"fillStyle\\\": \\\"string\\\",\\n      \\\"createLinearGradient\\\": \\\"fn(x0: number, y0: number, x1: number, y1: number) -> ?\\\",\\n      \\\"createPattern\\\": \\\"fn(image: ?, repetition: string) -> ?\\\",\\n      \\\"shadowOffsetX\\\": \\\"number\\\",\\n      \\\"shadowOffsetY\\\": \\\"number\\\",\\n      \\\"shadowBlur\\\": \\\"number\\\",\\n      \\\"shadowColor\\\": \\\"string\\\",\\n      \\\"clearRect\\\": \\\"fn(x: number, y: number, w: number, h: number)\\\",\\n      \\\"fillRect\\\": \\\"fn(x: number, y: number, w: number, h: number)\\\",\\n      \\\"strokeRect\\\": \\\"fn(x: number, y: number, w: number, h: number)\\\",\\n      \\\"fillRule\\\": \\\"string\\\",\\n      \\\"fill\\\": \\\"fn()\\\",\\n      \\\"beginPath\\\": \\\"fn()\\\",\\n      \\\"stroke\\\": \\\"fn()\\\",\\n      \\\"clip\\\": \\\"fn()\\\",\\n      \\\"resetClip\\\": \\\"fn()\\\",\\n      \\\"fillText\\\": \\\"fn(text: string, x: number, y: number, maxWidth: number)\\\",\\n      \\\"strokeText\\\": \\\"fn(text: string, x: number, y: number, maxWidth: number)\\\",\\n      \\\"measureText\\\": \\\"fn(text: string) -> ?\\\",\\n      \\\"drawImage\\\": \\\"fn(image: ?, dx: number, dy: number)\\\",\\n      \\\"createImageData\\\": \\\"fn(sw: number, sh: number) -> ?\\\",\\n      \\\"getImageData\\\": \\\"fn(sx: number, sy: number, sw: number, sh: number) -> ?\\\",\\n      \\\"putImageData\\\": \\\"fn(imagedata: ?, dx: number, dy: number)\\\",\\n      \\\"lineWidth\\\": \\\"number\\\",\\n      \\\"lineCap\\\": \\\"string\\\",\\n      \\\"lineJoin\\\": \\\"string\\\",\\n      \\\"miterLimit\\\": \\\"number\\\",\\n      \\\"setLineDash\\\": \\\"fn(segments: [number])\\\",\\n      \\\"getLineDash\\\": \\\"fn() -> [number]\\\",\\n      \\\"lineDashOffset\\\": \\\"number\\\",\\n      \\\"font\\\": \\\"string\\\",\\n      \\\"textAlign\\\": \\\"string\\\",\\n      \\\"textBaseline\\\": \\\"string\\\",\\n      \\\"direction\\\": \\\"string\\\",\\n      \\\"closePath\\\": \\\"fn()\\\",\\n      \\\"moveTo\\\": \\\"fn(x: number, y: number)\\\",\\n      \\\"lineTo\\\": \\\"fn(x: number, y: number)\\\",\\n      \\\"quadraticCurveTo\\\": \\\"fn(cpx: number, cpy: number, x: number, y: number)\\\",\\n      \\\"bezierCurveTo\\\": \\\"fn(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number)\\\",\\n      \\\"arcTo\\\": \\\"fn(x1: number, y1: number, x2: number, y2: number, radius: number)\\\",\\n      \\\"rect\\\": \\\"fn(x: number, y: number, w: number, h: number)\\\",\\n      \\\"arc\\\": \\\"fn(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: bool)\\\",\\n      \\\"ellipse\\\": \\\"fn(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, anticlockwise: bool)\\\"\\n    },\\n    \\\"Image\\\": {\\n      \\\"!type\\\": \\\"fn(width?: number, height?: number) -> +HTMLImageElement\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/Image\\\",\\n      \\\"!doc\\\": \\\"Image Element constructor. Accepts two optional parameters: Image([unsigned long width, unsigned long height]). Returns an HTMLImageElement instance just as document.createElement('img') would.\\\"\\n    },\\n    \\\"MutationObserver\\\": {\\n      \\\"!type\\\": \\\"fn(callback: fn([+MutationRecord]))\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\\\",\\n      \\\"!doc\\\": \\\"MutationObserver provides developers a way to react to changes in a DOM.\\\",\\n      \\\"prototype\\\": {\\n        \\\"observe\\\": {\\n          \\\"!type\\\": \\\"fn(target: Node, options: MutationObserverInit)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver#observe()\\\",\\n          \\\"!doc\\\": \\\"Registers the MutationObserver instance to receive notifications of DOM mutations on the specified node.\\\"\\n        },\\n        \\\"disconnect\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver#disconnect()\\\",\\n          \\\"!doc\\\": \\\"Stops the MutationObserver instance from receiving notifications of DOM mutations.\\\"\\n        },\\n        \\\"takeRecords\\\": {\\n          \\\"!type\\\": \\\"fn() -> [+MutationRecord]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver#takeRecords()\\\",\\n          \\\"!doc\\\": \\\"mpties the MutationObserver instance's record queue and returns what was in there.\\\"\\n        }\\n      }\\n    },\\n    \\\"MutationRecord\\\": {\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord\\\",\\n      \\\"!doc\\\": \\\"A MutationRecord represents an individual DOM mutation.\\\",\\n      \\\"prototype\\\": {\\n        \\\"type\\\": \\\"string\\\",\\n        \\\"target\\\": \\\"Node\\\",\\n        \\\"addedNodes\\\": \\\"NodeList\\\",\\n        \\\"removedNodes\\\": \\\"NodeList\\\",\\n        \\\"previousSibling\\\": \\\"Node\\\",\\n        \\\"nextSibling\\\": \\\"Node\\\",\\n        \\\"attributeName\\\": \\\"string\\\",\\n        \\\"attributeNamespace\\\": \\\"string\\\",\\n        \\\"oldValue\\\": \\\"string\\\"\\n      }\\n    },\\n    \\\"Headers\\\": {\\n      \\\"!type\\\": \\\"fn(init?: object)\\\",\\n      \\\"!doc\\\": \\\"Represents response/request headers, allowing you to query them and take different actions depending on the results.\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Headers\\\",\\n      \\\"prototype\\\": {\\n        \\\"append\\\": {\\n          \\\"!type\\\": \\\"fn(name: string, value: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Headers/append\\\",\\n          \\\"!doc\\\": \\\"Appends a new value onto an existing header inside a Headers object, or adds the header if it does not already exist.\\\"\\n        },\\n        \\\"delete\\\": {\\n          \\\"!type\\\": \\\"fn(name: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Headers/delete\\\",\\n          \\\"!doc\\\": \\\"Deletes a header from a Headers object.\\\"\\n        },\\n        \\\"get\\\": {\\n          \\\"!type\\\": \\\"fn(name: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\\\",\\n          \\\"!doc\\\": \\\"Returns the first value of a given header from within a Headers object.\\\"\\n        },\\n        \\\"getAll\\\": {\\n          \\\"!type\\\": \\\"fn(name: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Headers/getAll\\\",\\n          \\\"!doc\\\": \\\"Returns an array of all the values of a header within a Headers object with a given name.\\\"\\n        },\\n        \\\"has\\\": {\\n          \\\"!type\\\": \\\"fn(name: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Headers/has\\\",\\n          \\\"!doc\\\": \\\"Returns a boolean stating whether a Headers object contains a certain header.\\\"\\n        },\\n        \\\"set\\\": {\\n          \\\"!type\\\": \\\"fn(name: string, value: string)\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Headers/set\\\",\\n          \\\"!doc\\\": \\\"Sets a new value for an existing header inside a Headers object, or adds the header if it does not already exist.\\\"\\n        }\\n      }\\n    },\\n    \\\"Request\\\": {\\n      \\\"!type\\\": \\\"fn(input: string, init?: object)\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Request\\\",\\n      \\\"!doc\\\": \\\"The Request interface of the Fetch API represents a resource request.\\\",\\n      \\\"prototype\\\": {\\n        \\\"bodyUsed\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Body/bodyUsed\\\",\\n          \\\"!doc\\\": \\\"Stores a Boolean that declares whether the body has been used in a response yet.\\\"\\n        },\\n        \\\"cache\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Request/cache\\\",\\n          \\\"!doc\\\": \\\"Contains the cache mode of the request (e.g., default, reload, no-cache).\\\"\\n        },\\n        \\\"context\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Request/context\\\",\\n          \\\"!doc\\\": \\\"Contains the context of the request (e.g., audio, image, iframe, etc.)\\\"\\n        },\\n        \\\"credentials\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials\\\",\\n          \\\"!doc\\\": \\\"Contains the credentials of the request (e.g., omit, same-origin).\\\"\\n        },\\n        \\\"headers\\\": {\\n          \\\"!type\\\": \\\"+Headers\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Request/headers\\\",\\n          \\\"!doc\\\": \\\"Contains the associated Headers object of the request.\\\"\\n        },\\n        \\\"integrity\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Request/integrity\\\",\\n          \\\"!doc\\\": \\\"Contains the subresource integrity value of the request.\\\"\\n        },\\n        \\\"method\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Request/method\\\",\\n          \\\"!doc\\\": \\\"Contains the request's method (GET, POST, etc.)\\\"\\n        },\\n        \\\"mode\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Request/mode\\\",\\n          \\\"!doc\\\": \\\"Contains the mode of the request (e.g., cors, no-cors, same-origin).\\\"\\n        },\\n        \\\"redirect\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Request/redirect\\\",\\n          \\\"!doc\\\": \\\"Contains the mode for how redirects are handled.\\\"\\n        },\\n        \\\"referrer\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Request/referrer\\\",\\n          \\\"!doc\\\": \\\"Contains the referrer of the request (e.g., client).\\\"\\n        },\\n        \\\"referrerPolicy\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Request/referrerPolicy\\\",\\n          \\\"!doc\\\": \\\"Returns the referrer policy, which governs what referrer information, sent in the Referer header, should be included with the request.\\\"\\n        },\\n        \\\"url\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Request/url\\\",\\n          \\\"!doc\\\": \\\"Contains the URL of the request.\\\"\\n        },\\n        \\\"clone\\\": {\\n          \\\"!type\\\": \\\"fn()\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Request/clone\\\",\\n          \\\"!doc\\\": \\\"Creates a copy of the current Request object.\\\"\\n        },\\n        \\\"arrayBuffer\\\": {\\n          \\\"!type\\\": \\\"fn() -> +Promise[:t=+ArrayBuffer]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Body/arrayBuffer\\\",\\n          \\\"!doc\\\": \\\"Takes a Response stream and reads it to completion. It returns a promise that resolves with an ArrayBuffer.\\\"\\n        },\\n        \\\"blob\\\": {\\n          \\\"!type\\\": \\\"fn() -> +Promise[:t=+Blob]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Body/blob\\\",\\n          \\\"!doc\\\": \\\"Takes a Response stream and reads it to completion. It returns a promise that resolves with a Blob.\\\"\\n        },\\n        \\\"formData\\\": {\\n          \\\"!type\\\": \\\"fn() -> +Promise[:t=+FormData]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Body/formData\\\",\\n          \\\"!doc\\\": \\\"Takes a Response stream and reads it to completion. It returns a promise that resolves with a FormData object.\\\"\\n        },\\n        \\\"json\\\": {\\n          \\\"!type\\\": \\\"fn() -> +Promise[:t=?]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Body/json\\\",\\n          \\\"!doc\\\": \\\"Takes a Response stream and reads it to completion. It returns a promise that resolves with a JSON object.\\\"\\n        },\\n        \\\"text\\\": {\\n          \\\"!type\\\": \\\"fn() -> +Promise[:t=string]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Body/text\\\",\\n          \\\"!doc\\\": \\\"Takes a Response stream and reads it to completion. It returns a promise that resolves with a USVString (text).\\\"\\n        }\\n      }\\n    },\\n    \\\"Response\\\": {\\n      \\\"!type\\\": \\\"fn(body: object, init?: object)\\\",\\n      \\\"!doc\\\": \\\"Represents the response to a request.\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Response\\\",\\n      \\\"prototype\\\": {\\n        \\\"type\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Response/type\\\",\\n          \\\"!doc\\\": \\\"Contains the type of the response (e.g., basic, cors).\\\"\\n        },\\n        \\\"url\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Response/url\\\",\\n          \\\"!doc\\\": \\\"Contains the URL of the response.\\\"\\n        },\\n        \\\"status\\\": {\\n          \\\"!type\\\": \\\"number\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Response/status\\\",\\n          \\\"!doc\\\": \\\"Contains the status code of the response (e.g., 200 for a success).\\\"\\n        },\\n        \\\"ok\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Response/ok\\\",\\n          \\\"!doc\\\": \\\"Contains a boolean stating whether the response was successful (status in the range 200-299) or not.\\\"\\n        },\\n        \\\"statusText\\\": {\\n          \\\"!type\\\": \\\"string\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Response/statusText\\\",\\n          \\\"!doc\\\": \\\"Contains the status message corresponding to the status code (e.g., OK for 200).\\\"\\n        },\\n        \\\"headers\\\": {\\n          \\\"!type\\\": \\\"+Headers\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Response/headers\\\",\\n          \\\"!doc\\\": \\\"Contains the Headers object associated with the response.\\\"\\n        },\\n        \\\"bodyUsed\\\": {\\n          \\\"!type\\\": \\\"bool\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Body/bodyUsed\\\",\\n          \\\"!doc\\\": \\\"Stores a Boolean that declares whether the body has been used in a response yet.\\\"\\n        },\\n        \\\"clone\\\": {\\n          \\\"!type\\\": \\\"fn() -> +Response\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Response/clone\\\",\\n          \\\"!doc\\\": \\\"Creates a clone of a Response object.\\\"\\n        },\\n        \\\"error\\\": {\\n          \\\"!type\\\": \\\"fn() -> +Response\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Response/error\\\",\\n          \\\"!doc\\\": \\\"Returns a new Response object associated with a network error.\\\"\\n        },\\n        \\\"redirect\\\": {\\n          \\\"!type\\\": \\\"fn(url: string, status?: number) -> +Response\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Response/redirect\\\",\\n          \\\"!doc\\\": \\\"Creates a new response with a different URL.\\\"\\n        },\\n        \\\"arrayBuffer\\\": {\\n          \\\"!type\\\": \\\"fn() -> +Promise[:t=+ArrayBuffer]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Body/arrayBuffer\\\",\\n          \\\"!doc\\\": \\\"Takes a Response stream and reads it to completion. It returns a promise that resolves with an ArrayBuffer.\\\"\\n        },\\n        \\\"blob\\\": {\\n          \\\"!type\\\": \\\"fn() -> +Promise[:t=+Blob]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Body/blob\\\",\\n          \\\"!doc\\\": \\\"Takes a Response stream and reads it to completion. It returns a promise that resolves with a Blob.\\\"\\n        },\\n        \\\"formData\\\": {\\n          \\\"!type\\\": \\\"fn() -> +Promise[:t=+FormData]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Body/formData\\\",\\n          \\\"!doc\\\": \\\"Takes a Response stream and reads it to completion. It returns a promise that resolves with a FormData object.\\\"\\n        },\\n        \\\"json\\\": {\\n          \\\"!type\\\": \\\"fn() -> +Promise[:t=?]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Body/json\\\",\\n          \\\"!doc\\\": \\\"Takes a Response stream and reads it to completion. It returns a promise that resolves with a JSON object.\\\"\\n        },\\n        \\\"text\\\": {\\n          \\\"!type\\\": \\\"fn() -> +Promise[:t=string]\\\",\\n          \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Body/text\\\",\\n          \\\"!doc\\\": \\\"Takes a Response stream and reads it to completion. It returns a promise that resolves with a USVString (text).\\\"\\n        }\\n      }\\n    },\\n    \\\"fetch\\\": {\\n      \\\"!type\\\": \\\"fn(url: string|+Request, init?: object) -> +Promise[:t=+Response]\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\\\",\\n      \\\"!doc\\\": \\\"The fetch() method of the WindowOrWorkerGlobalScope mixin starts the process of fetching a resource from the network.\\\"\\n    },\\n    \\\"Clipboard\\\": {\\n      \\\"!doc\\\": \\\"The Clipboard interface implements the Clipboard API, providing both read and write access to the contents of the system clipboard.\\\",\\n      \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Clipboard\\\",\\n      \\\"read\\\": {\\n        \\\"!type\\\": \\\"fn() -> +Promise[:t=+DataTransfer]\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/read\\\",\\n        \\\"!doc\\\": \\\"The read() method of the Clipboard interface requests a copy of the clipboard's contents\\\"\\n      },\\n      \\\"readText\\\": {\\n        \\\"!type\\\": \\\"fn() -> +Promise[:t=string]\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/readText\\\",\\n        \\\"!doc\\\": \\\"Requests text from the system clipboard; returns a Promise which is resolved with a DOMString containing the clipboard's text once it's available.\\\"\\n      },\\n      \\\"write\\\": {\\n        \\\"!type\\\": \\\"fn(data: +DataTransfer) -> +Promise[]\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/write\\\",\\n        \\\"!doc\\\": \\\"The Clipboard method write() writes arbitrary data, such as images, to the clipboard. This can be used to implement cut and copy functionality.\\\"\\n      },\\n      \\\"writeText\\\": {\\n        \\\"!type\\\": \\\"fn(newClipText: string) -> +Promise[:t=string]\\\",\\n        \\\"!url\\\": \\\"https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/writeText\\\",\\n        \\\"!doc\\\": \\\"The Clipboard interface's writeText() property writes the specified text string to the system clipboard.\\\"\\n      }\\n    }\\n  },\\n  \\\"jinja\\\": {\\n    \\\"!name\\\": \\\"AppSpeed\\\",\\n    \\\"Jinja\\\": {\\n\\n      \\\"ajax\\\": {\\n        \\\"launcherCache\\\": {\\n          \\\"api\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"board\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"calendar\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"color\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"component\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"css\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"deploy\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"diagram\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"erd\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"formapp\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"hmi\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"html\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"image\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"javascript\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"json\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"less\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"menu\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"package\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"page\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"sql\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"text\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"theme\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"vhtml\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"well\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"word\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"workspace\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"yaml\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          }\\n        },\\n        \\\"options\\\": {\\n          \\\"ajaxOption\\\": {\\n            \\\"credentials\\\": \\\"string\\\",\\n            \\\"headers\\\": {},\\n            \\\"method\\\": \\\"string\\\"\\n          },\\n          \\\"moduleName\\\": \\\"string\\\"\\n        },\\n        \\\"pathCache\\\": {},\\n        \\\"resourceCache\\\": {\\n          \\\"app630.api.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.board.runtime\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.board.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.calendar.runtime\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.calendar.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.color.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.component.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.css.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.deploy.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.diagram.runtime\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.diagram.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.erd.runtime\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.erd.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.formapp.runtime\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.formapp.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.hmi.runtime\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.hmi.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.html.runtime\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.html.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.image.runtime\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.javascript.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.json.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.less.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.menu.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.package.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.page.runtime\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.page.studio\\\": {\\n            \\\"BODY\\\": {},\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.sql.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.text.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.theme.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.vhtml.runtime\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.vhtml.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.well.runtime\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.well.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.word.runtime\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.word.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.workspace.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app630.yaml.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"app631.image.studio\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\"\\n          },\\n          \\\"launcher.630.api.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.board.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.calendar.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.color.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.component.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.css.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.deploy.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.diagram.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.erd.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.formapp.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.hmi.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.html.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.image.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.javascript.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.json.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.less.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.menu.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.package.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.page.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.sql.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.text.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.theme.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.vhtml.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.well.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.word.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.workspace.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          },\\n          \\\"launcher.630.yaml.info\\\": {\\n            \\\"BODY\\\": \\\"string\\\",\\n            \\\"DELETED\\\": \\\"string\\\",\\n            \\\"DESCRIPTION\\\": \\\"string\\\",\\n            \\\"EDT_DATETIME\\\": \\\"string\\\",\\n            \\\"EDT_USER_ID\\\": \\\"string\\\",\\n            \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n            \\\"ID\\\": \\\"string\\\",\\n            \\\"NAME\\\": \\\"string\\\",\\n            \\\"OWNER_ID\\\": \\\"string\\\",\\n            \\\"OWNER_NAME\\\": \\\"string\\\",\\n            \\\"PARENT_ID\\\": \\\"string\\\",\\n            \\\"REG_DATETIME\\\": \\\"string\\\",\\n            \\\"REG_USER_ID\\\": \\\"string\\\",\\n            \\\"REG_USER_NAME\\\": \\\"string\\\",\\n            \\\"SORT\\\": \\\"number\\\",\\n            \\\"SOURCE_ID\\\": \\\"string\\\",\\n            \\\"STATUS\\\": \\\"string\\\",\\n            \\\"TYPE\\\": \\\"string\\\",\\n            \\\"URI\\\": \\\"string\\\",\\n            \\\"VERSION\\\": \\\"number\\\",\\n            \\\"_body\\\": {}\\n          }\\n        },\\n        \\\"_defaultOption\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_fetch\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"clearFunction\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"delete\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"excelUpload\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"excute\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"fetchJsonp\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"generateCallbackFunction\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"get\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getJson\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getLinkInfo\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getResources\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"imageUpload\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"init\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"myImageUpload\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"patch\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"post\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"proxyGet\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"proxyPost\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"removeScript\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"who\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_clearEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_onAopException\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_render\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_setEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"destroy\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setOptions\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        }\\n      },\\n      \\\"auth\\\": {\\n        \\\"VERSION\\\": \\\"string\\\",\\n        \\\"auth20Provider\\\": {},\\n        \\\"options\\\": {\\n          \\\"loginUri\\\": \\\"string\\\",\\n          \\\"moduleName\\\": \\\"string\\\",\\n          \\\"useGuest\\\": \\\"boolean\\\"\\n        },\\n        \\\"_cookieLogin\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_logOut\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_md5pass\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_offLineLogin\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_setEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"destroy\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"init\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        }\\n      },\\n      \\\"code\\\": {\\n        \\\"codes\\\": {\\n          \\\"DATE_TYPE_YMD\\\": \\\"TypedArray\\\",\\n          \\\"DATE_TYPE_YMDT\\\": \\\"TypedArray\\\",\\n          \\\"DAY_NAME\\\": \\\"TypedArray\\\",\\n          \\\"HLDY_FG\\\": \\\"TypedArray\\\",\\n          \\\"MONTH\\\": \\\"TypedArray\\\",\\n          \\\"SEX\\\": \\\"TypedArray\\\",\\n          \\\"TIME_B1H\\\": \\\"TypedArray\\\",\\n          \\\"USE_VALUE_TYPE\\\": \\\"TypedArray\\\"\\n        },\\n        \\\"colors\\\": {\\n          \\\"area4\\\": \\\"TypedArray\\\",\\n          \\\"blue5\\\": \\\"TypedArray\\\",\\n          \\\"cat5\\\": \\\"TypedArray\\\",\\n          \\\"green5\\\": \\\"TypedArray\\\",\\n          \\\"green5s\\\": \\\"TypedArray\\\",\\n          \\\"pie5\\\": \\\"TypedArray\\\",\\n          \\\"plan2\\\": \\\"TypedArray\\\",\\n          \\\"red5\\\": \\\"TypedArray\\\",\\n          \\\"red5s\\\": \\\"TypedArray\\\",\\n          \\\"sky5\\\": \\\"TypedArray\\\",\\n          \\\"yellow5\\\": \\\"TypedArray\\\"\\n        },\\n        \\\"options\\\": {\\n          \\\"activeAop\\\": \\\"boolean\\\",\\n          \\\"moduleName\\\": \\\"string\\\",\\n          \\\"version\\\": \\\"string\\\"\\n        },\\n        \\\"addCode\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"bindSelectEl\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getCodeName\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getCodeSet\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getGroup\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"init\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setGroup\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"who\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_clearEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_defaultOption\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_onAopException\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_render\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_setEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"destroy\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setOptions\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        }\\n      },\\n      \\\"confirm\\\": {\\n        \\\"oldAlert\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"oldConfirm\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"oldPrompt\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"options\\\": {\\n          \\\"danger\\\": \\\"string\\\",\\n          \\\"info\\\": \\\"string\\\",\\n          \\\"moduleName\\\": \\\"string\\\",\\n          \\\"success\\\": \\\"string\\\",\\n          \\\"version\\\": \\\"string\\\",\\n          \\\"warning\\\": \\\"string\\\"\\n        },\\n        \\\"_alert\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_confirm\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_defaultOption\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_prompt\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_setEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_showMessage\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"alert\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"delete\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"info\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"new\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"save\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"saveYesNo\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"toastMessage\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"topMessage\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"update\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_clearEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_onAopException\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_render\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"destroy\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"init\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setOptions\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        }\\n      },\\n      \\\"context\\\": {\\n        \\\"menuEl\\\": {},\\n        \\\"options\\\": {\\n          \\\"activeAop\\\": \\\"boolean\\\",\\n          \\\"moduleName\\\": \\\"string\\\",\\n          \\\"version\\\": \\\"string\\\"\\n        },\\n        \\\"_render\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_setEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"render\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_clearEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_defaultOption\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_onAopException\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"destroy\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"init\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setOptions\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        }\\n      },\\n      \\\"dom\\\": {\\n        \\\"options\\\": {\\n          \\\"activeAop\\\": \\\"boolean\\\",\\n          \\\"moduleName\\\": \\\"string\\\",\\n          \\\"version\\\": \\\"string\\\"\\n        },\\n        \\\"_lessRender\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"after\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"append\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"before\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"changeBackImage\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"changeIcon\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"changeImage\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"changeTag\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"changeYouTube\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"classAdd\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"classRemove\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"classRemoveAdd\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"closest\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"closestAll\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"cmdParaApply\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"contextMenu\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"createScriptNode\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"createStyleNode\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"ctrlParaApply\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"dropPosition\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"empty\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"exportCleaning\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"findIndex\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getEventPoint\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"htmlCompress\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"insertIcon\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"insertLink\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"insertText\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"isVisible\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"less2css\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"lessFileIdCss\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"lessJJcss\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"lessNoFramework\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"lessThemeCss\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"lessUUIDcss\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"pageBefore\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"parents\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"position\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"prepend\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"remove\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setColorSheme\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setStyle\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"tabAddTab\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"tabHiddenIcon\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"tabRemoveTab\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"tabShowIcon\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"tableInsertCol\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"tableInsertRow\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"tableMeargeCancel\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"tableMeargeCol\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"tableMeargeRow\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"tableRemoveCol\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"tableRemoveRow\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"unLink\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"uuid\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"verifyCss\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"visibleFilter\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"visibleList\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"visibleScroll\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"who\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_clearEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_defaultOption\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_onAopException\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_render\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_setEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"destroy\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"init\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setOptions\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        }\\n      },\\n      \\\"driverApi\\\": {\\n        \\\"options\\\": {\\n          \\\"accountSite\\\": \\\"string\\\",\\n          \\\"moduleName\\\": \\\"string\\\",\\n          \\\"routeType\\\": \\\"string\\\"\\n        },\\n        \\\"_defaultOption\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_row2tree\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_setEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_typeIcon\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"backupFile\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"changeFile\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"closeFile\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"copyFile\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"createDeploy\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"createFile\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"destroy\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"findFile\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"folderShare\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"formBackupInfo\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"formInfoFile\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"formNewFile\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"formNewFolder\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"formNewWorkspace\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"formRenameFile\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getFileBackupBody\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getFileBackupHistory\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getFilePath\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getMyHostUseCount\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getMyResource\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getTreeByFolderId\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getUri\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"lockResource\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"locksResource\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"moveFile\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"myHistory\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"myShareFolder\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"myShareUpdate\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"myWorkspaces\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"readFile\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"readResourceAll\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"readResourceRoot\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"readResourceSearch\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"selectFolderSearch\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"selectResourcePathInfo\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"sendMessageSsePeer\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setFileBackup\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"storeNewFile\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"trashFile\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"unlockReqPeer\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"unlockReqResource\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"unlockResource\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"updateDeploy\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"updateFile\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"updateFileBody\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"updateFileInfo\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_clearEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_onAopException\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_render\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"init\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setOptions\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        }\\n      },\\n      \\\"event\\\": {\\n        \\\"_events\\\": {\\n          \\\"JJLockLogin\\\": {},\\n          \\\"JJLogin\\\": {},\\n          \\\"JJLogout\\\": {},\\n          \\\"click\\\": {},\\n          \\\"jjAppStart\\\": {},\\n          \\\"popstate\\\": {},\\n          \\\"studio.activeTree\\\": {},\\n          \\\"studio.updateFileInfo\\\": {}\\n        },\\n        \\\"options\\\": {\\n          \\\"activeAop\\\": \\\"boolean\\\",\\n          \\\"moduleName\\\": \\\"string\\\",\\n          \\\"version\\\": \\\"string\\\"\\n        },\\n        \\\"_setEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"add\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"dispatch\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"get\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getEventTarget\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"remove\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"who\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_clearEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_defaultOption\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_onAopException\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_render\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"destroy\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"init\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setOptions\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        }\\n      },\\n      \\\"exception\\\": {\\n        \\\"options\\\": {\\n          \\\"activeAop\\\": \\\"boolean\\\",\\n          \\\"moduleName\\\": \\\"string\\\",\\n          \\\"version\\\": \\\"string\\\"\\n        },\\n        \\\"_actionDo\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_setEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"errorCase1\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"errorCase2\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"errorCase3\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"who\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_clearEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_defaultOption\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_onAopException\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_render\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"destroy\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"init\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setOptions\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        }\\n      },\\n      \\\"global\\\": {\\n        \\\"options\\\": {\\n          \\\"activeAop\\\": \\\"boolean\\\",\\n          \\\"moduleName\\\": \\\"string\\\",\\n          \\\"version\\\": \\\"string\\\"\\n        },\\n        \\\"addCRUDCol\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"addCRUDrow\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"arrMove\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"attributeToCamelCase\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"camelCase\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"camelCaseToAttribute\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"camelCaseToColumn\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"camelCaseToHyphen\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"changeShortcutIcon\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"clearCRUD\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"clearObj\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"columnToCamelCase\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"dataClean\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"dataRowsClean\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"datetime2string\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"decodeURI\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"deleteCRUD\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"deleteCRUDrow\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"deleteCRUDrowID\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"dom2Json\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"domTreeLabel\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"encodeAce\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"encodeHtml\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"encodeURI\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"exportCSV\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"exportHtmlTable\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"float\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getAllMethods\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getCategoriesDay\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getCategoriesMonth\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getCategoriesYear\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getChangeCRUD\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getChangeData\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getEventKeyMap\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getHeadDay\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getHeadMonth\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"hyphenToCamelCase\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"int\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"isDate\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"isInt\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"json\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"json2Grid\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"json2csv\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"json2html\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"jsonPivot\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"map2getPara\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"mergeTableCell\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"nullSpace\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"object2Json\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setCRUD\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"sortRows\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"string\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"string2date\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"type\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"uuid\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"who\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_clearEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_defaultOption\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_onAopException\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_render\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_setEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"destroy\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"init\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setOptions\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        }\\n      },\\n      \\\"i18n\\\": {\\n        \\\"currencyFormat\\\": {},\\n        \\\"floatFormat\\\": {},\\n        \\\"intFormat\\\": {},\\n        \\\"numberFormat\\\": {},\\n        \\\"options\\\": {\\n          \\\"ampm\\\": \\\"TypedArray\\\",\\n          \\\"beforeAfter\\\": \\\"TypedArray\\\",\\n          \\\"currency\\\": \\\"string\\\",\\n          \\\"locale\\\": \\\"string\\\",\\n          \\\"moduleName\\\": \\\"string\\\",\\n          \\\"timeUnit\\\": \\\"TypedArray\\\",\\n          \\\"timeZone\\\": \\\"string\\\",\\n          \\\"weekName\\\": \\\"TypedArray\\\"\\n        },\\n        \\\"percentFormat\\\": {},\\n        \\\"_defaultOption\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_setEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"dateDiff\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"dateFormat\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getBrowseCode\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getCountry\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getDateTimeOptions\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getLocaleCode\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getTimezone\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getTimezoneCode\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getTimezoneName\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"isDate\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setDateTimeOptions\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"timezoneClock\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"timezoneFormat\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"who\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_clearEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_onAopException\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_render\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"destroy\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"init\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setOptions\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        }\\n      },\\n      \\\"launcher\\\": {\\n        \\\"launchers\\\": {\\n          \\\"api\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"board\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"calendar\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"color\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"component\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"css\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"deploy\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"diagram\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"erd\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"formapp\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"hmi\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"html\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"image\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"javascript\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"json\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"less\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"menu\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"package\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"page\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"sql\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"text\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"theme\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"vhtml\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"well\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"word\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"workspace\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          },\\n          \\\"yaml\\\": {\\n            \\\"format\\\": \\\"string\\\",\\n            \\\"icon\\\": \\\"string\\\",\\n            \\\"label\\\": \\\"string\\\",\\n            \\\"name\\\": \\\"string\\\",\\n            \\\"runtime\\\": \\\"string\\\",\\n            \\\"studio\\\": \\\"string\\\",\\n            \\\"template\\\": \\\"TypedArray\\\"\\n          }\\n        },\\n        \\\"options\\\": {\\n          \\\"moduleName\\\": \\\"string\\\",\\n          \\\"version\\\": \\\"string\\\"\\n        },\\n        \\\"_defaultOption\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_getLauncher\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_render\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getLauncherIcon\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getRuntimeUri\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getStudioUri\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"init\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_clearEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_onAopException\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_setEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"destroy\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setOptions\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        }\\n      },\\n      \\\"log\\\": {\\n        \\\"oldDebug\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"oldError\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"oldInfo\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"oldLog\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"oldWarn\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"options\\\": {\\n          \\\"activeAop\\\": \\\"boolean\\\",\\n          \\\"isActive\\\": \\\"boolean\\\",\\n          \\\"moduleName\\\": \\\"string\\\",\\n          \\\"version\\\": \\\"string\\\"\\n        },\\n        \\\"_alert\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_consolLogwarn\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_debug\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_error\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_info\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_log\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_logHead\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_setEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_todo\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_warn\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setActive\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"who\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_clearEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_defaultOption\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_onAopException\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_render\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"destroy\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"init\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setOptions\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        }\\n      },\\n      \\\"modulePromise\\\": {},\\n      \\\"modulePromiseResolv\\\": {},\\n      \\\"notification\\\": {\\n        \\\"VERSION\\\": \\\"string\\\",\\n        \\\"options\\\": {\\n          \\\"moduleName\\\": \\\"string\\\"\\n        },\\n        \\\"desktopShow\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"init\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"serviceWorkNotification\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"show\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"topMessageNotification\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        }\\n      },\\n      \\\"options\\\": {\\n        \\\"activeAop\\\": \\\"boolean\\\",\\n        \\\"appDomain\\\": \\\"string\\\",\\n        \\\"moduleOption\\\": {},\\n        \\\"objClass\\\": \\\"string\\\",\\n        \\\"version\\\": \\\"string\\\"\\n      },\\n      \\\"require\\\": {\\n        \\\"metadb\\\": {\\n          \\\"libs\\\": {\\n            \\\"XXinputMask\\\": {},\\n            \\\"ace\\\": {},\\n            \\\"apexchart\\\": {},\\n            \\\"autoNumeric\\\": {},\\n            \\\"billboard\\\": {},\\n            \\\"billboardBak\\\": {},\\n            \\\"bootstrap.337\\\": {},\\n            \\\"bootstrap.337.css\\\": {},\\n            \\\"bootstrap.431\\\": {},\\n            \\\"bootstrap.431.css\\\": {},\\n            \\\"c3\\\": {},\\n            \\\"c3bad\\\": {},\\n            \\\"c3v2\\\": {},\\n            \\\"chartist\\\": {},\\n            \\\"chartjs\\\": {},\\n            \\\"chartjs.280\\\": {},\\n            \\\"circles\\\": {},\\n            \\\"countUp\\\": {},\\n            \\\"d3\\\": {},\\n            \\\"d3v3\\\": {},\\n            \\\"d3v4\\\": {},\\n            \\\"dataTable\\\": {},\\n            \\\"dataTableBS4\\\": {},\\n            \\\"datetimepicker\\\": {},\\n            \\\"daum.post\\\": {},\\n            \\\"diagram\\\": {},\\n            \\\"firebase\\\": {},\\n            \\\"flot\\\": {},\\n            \\\"font-awesome\\\": {},\\n            \\\"fullcalendar\\\": {},\\n            \\\"fullcalendar2016\\\": {},\\n            \\\"gauge\\\": {},\\n            \\\"googleChart\\\": {},\\n            \\\"googleMap\\\": {},\\n            \\\"hammer\\\": {},\\n            \\\"handsontable\\\": {},\\n            \\\"highLight\\\": {},\\n            \\\"highLight-Dark\\\": {},\\n            \\\"html2canvas\\\": {},\\n            \\\"i18next\\\": {},\\n            \\\"imask\\\": {},\\n            \\\"inputMask\\\": {},\\n            \\\"inputmask2\\\": {},\\n            \\\"jjAppForm\\\": {},\\n            \\\"jjCodeMirror\\\": {},\\n            \\\"jjCodeMirrorBak\\\": {},\\n            \\\"jjDataTable\\\": {},\\n            \\\"jjDataTree\\\": {},\\n            \\\"jqGrid\\\": {},\\n            \\\"jquery.331\\\": {},\\n            \\\"jqueryUi.1.12.1\\\": {},\\n            \\\"jsplumb\\\": {},\\n            \\\"jsplumb.2.12.5\\\": {},\\n            \\\"jwt\\\": {},\\n            \\\"keditor\\\": {},\\n            \\\"less\\\": {},\\n            \\\"moment\\\": {},\\n            \\\"pie-chart\\\": {},\\n            \\\"pivot\\\": {},\\n            \\\"pivot2\\\": {},\\n            \\\"plyr\\\": {},\\n            \\\"qrprint\\\": {},\\n            \\\"qrread\\\": {},\\n            \\\"react\\\": {},\\n            \\\"resize\\\": {},\\n            \\\"sankey.d3\\\": {},\\n            \\\"smarteditor\\\": {},\\n            \\\"sparkline\\\": {},\\n            \\\"summernote\\\": {},\\n            \\\"summernote-bs4\\\": {},\\n            \\\"summernote-lite\\\": {},\\n            \\\"svgIcon\\\": {},\\n            \\\"toast\\\": {},\\n            \\\"toast-polyfill\\\": {},\\n            \\\"toast.map\\\": {},\\n            \\\"tuieditor\\\": {},\\n            \\\"tuieditor-full\\\": {},\\n            \\\"vis\\\": {},\\n            \\\"vue\\\": {},\\n            \\\"waves\\\": {},\\n            \\\"weather-icons\\\": {}\\n          },\\n          \\\"loadQueue\\\": {\\n            \\\"bootstrap.431.css\\\": {},\\n            \\\"font-awesome\\\": {},\\n            \\\"jjCodeMirror\\\": {\\n              \\\"catch\\\": {\\n                \\\"!type\\\": \\\"fn()\\\"\\n              },\\n              \\\"done\\\": {\\n                \\\"!type\\\": \\\"fn()\\\"\\n              },\\n              \\\"finally\\\": {\\n                \\\"!type\\\": \\\"fn()\\\"\\n              },\\n              \\\"then\\\": {\\n                \\\"!type\\\": \\\"fn()\\\"\\n              }\\n            },\\n            \\\"less\\\": {}\\n          },\\n          \\\"loadStatus\\\": \\\"boolean\\\"\\n        },\\n        \\\"options\\\": {\\n          \\\"activeAop\\\": \\\"boolean\\\",\\n          \\\"moduleName\\\": \\\"string\\\",\\n          \\\"version\\\": \\\"string\\\"\\n        },\\n        \\\"_autoLoad\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_setEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"appendChildComponent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"appendChildScript\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"appendChildStyle\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"load\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"who\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_clearEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_defaultOption\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_onAopException\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_render\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"destroy\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"init\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setOptions\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        }\\n      },\\n      \\\"requirePromise\\\": {\\n        \\\"catch\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"done\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"finally\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"then\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        }\\n      },\\n      \\\"requireResolv\\\": {\\n        \\\"!type\\\": \\\"fn()\\\"\\n      },\\n      \\\"route\\\": {\\n        \\\"options\\\": {\\n          \\\"moduleName\\\": \\\"string\\\",\\n          \\\"routeType\\\": \\\"string\\\"\\n        },\\n        \\\"_defaultOption\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_filePath2URI\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_setEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"href\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_clearEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_onAopException\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_render\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"destroy\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"init\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setOptions\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        }\\n      },\\n      \\\"sse\\\": {\\n        \\\"VERSION\\\": \\\"string\\\",\\n        \\\"messageRoute\\\": {\\n          \\\"201\\\": \\\"TypedArray\\\",\\n          \\\"202\\\": \\\"TypedArray\\\",\\n          \\\"203\\\": \\\"TypedArray\\\",\\n          \\\"301\\\": \\\"TypedArray\\\"\\n        },\\n        \\\"options\\\": {\\n          \\\"moduleName\\\": \\\"string\\\"\\n        },\\n        \\\"addMessageRoute\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"destroy\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"init\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        }\\n      },\\n      \\\"sseWellComm\\\": {},\\n      \\\"store\\\": {\\n        \\\"_dataMap\\\": {},\\n        \\\"options\\\": {\\n          \\\"activeAop\\\": \\\"boolean\\\",\\n          \\\"moduleName\\\": \\\"string\\\",\\n          \\\"version\\\": \\\"string\\\"\\n        },\\n        \\\"_render\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"clipBoard\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"cookie\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"cookieClear\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"dataMap\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"dataMapClear\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"getAuthCookie\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"localStorage\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"localStorageClear\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setCookie\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"who\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_clearEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_defaultOption\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_onAopException\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"_setEvent\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"destroy\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"init\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        },\\n        \\\"setOptions\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        }\\n      },\\n      \\\"theme\\\": {\\n        \\\"mdiContainer\\\": {},\\n        \\\"options\\\": {\\n          \\\"homeIsEmpty\\\": \\\"boolean\\\",\\n          \\\"startUri\\\": \\\"string\\\",\\n          \\\"themeMdiUri\\\": \\\"string\\\",\\n          \\\"version\\\": \\\"string\\\"\\n        },\\n        \\\"requirePromise\\\": {\\n          \\\"catch\\\": {\\n            \\\"!type\\\": \\\"fn()\\\"\\n          },\\n          \\\"done\\\": {\\n            \\\"!type\\\": \\\"fn()\\\"\\n          },\\n          \\\"finally\\\": {\\n            \\\"!type\\\": \\\"fn()\\\"\\n          },\\n          \\\"then\\\": {\\n            \\\"!type\\\": \\\"fn()\\\"\\n          }\\n        },\\n        \\\"requireResolv\\\": {\\n          \\\"!type\\\": \\\"fn()\\\"\\n        }\\n      },\\n      \\\"uo\\\": {\\n        \\\"COM_CD\\\": \\\"string\\\",\\n        \\\"DELETED\\\": \\\"string\\\",\\n        \\\"DEV_CD\\\": \\\"string\\\",\\n        \\\"EDT_DATETIME\\\": \\\"string\\\",\\n        \\\"EDT_USER_ID\\\": \\\"string\\\",\\n        \\\"EDT_USER_NAME\\\": \\\"string\\\",\\n        \\\"EMAIL\\\": \\\"string\\\",\\n        \\\"IMAGE\\\": \\\"string\\\",\\n        \\\"LAN\\\": \\\"string\\\",\\n        \\\"LOGIN_ID\\\": \\\"string\\\",\\n        \\\"MAX_HOST_COUNT\\\": \\\"string\\\",\\n        \\\"MAX_IBATIS_COUNT\\\": \\\"string\\\",\\n        \\\"MENU_URI\\\": \\\"string\\\",\\n        \\\"PASSWORD\\\": \\\"string\\\",\\n        \\\"REG_DATETIME\\\": \\\"string\\\",\\n        \\\"REG_USER_ID\\\": \\\"string\\\",\\n        \\\"REG_USER_NAME\\\": \\\"string\\\",\\n        \\\"SIGN\\\": \\\"string\\\",\\n        \\\"THEME\\\": \\\"string\\\",\\n        \\\"TIMEZONE\\\": \\\"string\\\",\\n        \\\"USER_ID\\\": \\\"string\\\",\\n        \\\"USER_NAME\\\": \\\"string\\\",\\n        \\\"UUID\\\": \\\"string\\\",\\n        \\\"VERSION\\\": \\\"string\\\",\\n        \\\"exp\\\": \\\"number\\\",\\n        \\\"iat\\\": \\\"number\\\",\\n        \\\"ip\\\": \\\"string\\\"\\n      }\\n    }\\n  }\\n\\n}\\n\\n/* ==JJHighlight.640.class================ */\\n\\n/**\\n * @classdesc 하이라이트 컴포넌트관리를 위한 클래스\\n */\\nclass JJHighlight extends HTMLElement {\\n  /**\\n   * @desc 생성자\\n   * @example -\\n   */\\n  constructor() {\\n    super();\\n    \\n    this.innerHTML = this.innerHTML + \\\"\\\\r\\\\n\\\";\\n\\n    this.requirePromise = new Promise((resolv, reject) => {\\n      this.requireResolv = resolv;\\n    });\\n  }\\n\\n  /**\\n   * @desc 돔연결 이벤트 콜백을 처리한다.\\n   * @example -\\n   */\\n  connectedCallback() {\\n    Jinja.require.load('highLight').then(() => {\\n      this.requireResolv();\\n    });\\n\\n    this.requirePromise.then(() => {\\n      this.innerHTML = Jinja.global.encodeAce(this.innerHTML);\\n      hljs.configure({\\n         tabReplace: '  ',\\n \\t\\t\\t\\tlanguages: ['javascript','html'],\\n \\t\\t\\t\\tlanguageDetectRe: 'html'\\n      });      \\n      hljs.highlightBlock(this);\\n      if(this.dataset.lineNumber){\\n      \\thljs.lineNumbersBlock(this);\\n      }\\n      \\n    });\\n  }\\n\\n  /**\\n   * @desc 돔연결 해제 이벤트 콜백을 처리한다.\\n   * @example -\\n   */\\n  disconnectedCallback() {}\\n\\n  /**\\n   * @desc 엘리먼트 속성변경 이벤트 콜백을 처리한다.\\n   * @param {String} - 속성명\\n   * @param {*} - 이전값\\n   * @param {*} - 신규값\\n   * @example -\\n   */\\n  attributeChangedCallback(attrName, oldVal, newVal) {}\\n\\n  /**\\n   * @desc 엘리먼트 위치이동 이벤트 콜백을 처리한다.\\n   * @param {Document} - 이전문서\\n   * @param {Document} - 대상문서\\n   * @example -\\n   */\\n  adoptedCallback(oldDoc, newDoc) {}\\n}\\n\\ncustomElements.define('jj-highlight', JJHighlight);\\n/* ==JJSummernote.640.class================ */\\n\\n/**\\n * @classdesc 써머노트 컴포넌트관리를 위한 클래스\\n */\\nclass JJSummernote extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      require: ['summernote-lite'],\\n    };\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this._isUserChange = true;\\n    this.requirePromise.then(() => {\\n      $(this).summernote({\\n        maxHeight: 700,\\n        minHeight: 500,\\n        focus: false\\n      });\\n\\n      $(this).on('summernote.change', e => {\\n        if (this._isUserChange) {\\n          this.dispatchEvent(\\n            new CustomEvent('changeedit', {\\n              detail: {\\n                mode: 'word'\\n              },\\n              bubbles: true\\n            })\\n          );\\n        }\\n      });\\n    });\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 삭제한다.\\n   * @example -\\n   */\\n  _destroy() {\\n    $(this).summernote('destroy');\\n  }\\n\\n  /**\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  getValue() {\\n    return $(this).summernote('code');\\n  }\\n\\n  /**\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  setValue(val) {\\n    this.requirePromise.then(() => {\\n      this._isUserChange = false;\\n\\n      $(this).summernote('code', val);\\n\\n      this._isUserChange = true;\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 name, value로 옵션을 설정한다.\\n   * @param {String} - 옵션명\\n   * @param {*} - 옵션\\n   * @example -\\n   */\\n  option(name, value) {\\n    switch (name) {\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-summernote', JJSummernote);\\n/* ==JJFrameViewer.640.class================ */\\n\\n/**\\n * @classdesc 페레임뷰어 컴포넌트관리를 위한 클래스<br><br>\\n * 페레임뷰는 반응형의 시험환경을 제공한다.\\n * page에서 생성된 코드를 시험대상환경에 맞춤식 실행을 제어한다.\\n * 시험환경은 iframe으로 구성하여 독립성을 보장하고 프레임과의 연결은 채널을 구성한다.\\n */\\nclass JJFrameViewer extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    let result = {\\n      \\\"apiVersion\\\": workspaceMeta.options.appInfo.apiVersion||\\\"v61\\\",\\n      \\\"default\\\":  \\\"studio\\\",\\n      \\\"workspaces\\\":[\\\"studio\\\"],\\n      \\\"formSize\\\": \\\"ws-full\\\",\\n      \\\"useRefreshHtml\\\": true,\\n      \\\"mode\\\": \\\"view\\\", // vhtml\\n      \\\"version\\\": \\\"640\\\"\\n    };\\n\\n    if(workspaceMeta.options.studio && workspaceMeta.options.studio.workspaces){\\n      result.default = workspaceMeta.options.studio.default || result.default;\\n      result.workspaces = workspaceMeta.options.studio.workspaces || result.workspace;\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    let host = location.origin;\\n    let html =\\n        `<div class=\\\"jj-view-toolbar\\\">` +\\n        `<div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"screen size\\\">` +\\n        `<button class=\\\"btn btn-dark btn-sm\\\" data-form-size=\\\"ws-full\\\" title=\\\"full(full: 100%)\\\">` +\\n        `<i class=\\\"fa fa-window-maximize\\\"></i>` +\\n        `</button>` +\\n        `<button class=\\\"btn btn-dark btn-sm\\\" data-form-size=\\\"ws-television\\\" title=\\\"full(col-xl-: >=1200)\\\">` +\\n        `<i class=\\\"fa fa-television\\\"></i>` +\\n        `</button>` +\\n        `<button class=\\\"btn btn-dark btn-sm\\\" data-form-size=\\\"ws-desktop\\\" title=\\\"desktop(col-lg-: >=992px)\\\">` +\\n        `<i class=\\\"fa fa-desktop\\\"></i>` +\\n        `</button>` +\\n        `<button class=\\\"btn btn-dark btn-sm\\\" data-form-size=\\\"ws-laptop\\\" title=\\\"laptop(col-md-: >=768px)\\\">` +\\n        `<i class=\\\"fa fa-laptop\\\"></i>` +\\n        `</button>` +\\n        `<button class=\\\"btn btn-dark btn-sm\\\" data-form-size=\\\"ws-tablet\\\" title=\\\"tablet(col-sm-: >=576px)\\\">` +\\n        `<i class=\\\"fa fa-tablet\\\"></i>` +\\n        `</button>` +\\n        `<button class=\\\"btn btn-dark btn-sm\\\" data-form-size=\\\"ws-phone\\\" title=\\\"phone(col-:  375px)\\\">` +\\n        `<i class=\\\"fa fa-phone\\\"></i>` +\\n        `</button>` +\\n        `</div>` +\\n        `<label class=\\\"check-toggle\\\">` +\\n        `<input type=\\\"checkbox\\\"  jj-role=\\\"refreshMode\\\"><t>Code Sync</t>` +\\n        `</label>` +\\n        `<div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"screenCapture\\\">` +\\n        `<button hidden class=\\\"btn btn-info btn-sm\\\" method=\\\"capture\\\" title=\\\"화면캡쳐\\\">` +\\n        `<i class=\\\"fa fa-camera\\\"></i> Capture` +\\n        `</button>` +\\n        `<button class=\\\"btn btn-primary btn-sm\\\" method=\\\"excute\\\" title=\\\"실행\\\">` +\\n        `<i class=\\\"fa fa-play\\\"></i> Run` +\\n        `</button>` +\\n        `<select class=\\\"sel-workspace form-control\\\"></select>`+\\n        `</div>` +\\n        `</div>` +\\n        `<div class=\\\"frameView mt-1\\\"></div>`;\\n\\n    this.innerHTML = html;\\n\\n    this.toolbar = this.querySelector('.jj-view-toolbar');\\n    this.frameView = this.querySelector('.frameView');\\n    this.workspace\\t\\t\\t= this.querySelector('select.sel-workspace');\\n    this.codeSync = this.querySelector(`[jj-role=\\\"refreshMode\\\"]`);\\n\\n    this.options.workspaces.forEach(item=>{\\n      let option = document.createElement(\\\"option\\\");\\n      option.appendChild(document.createTextNode(item));\\n      this.workspace.appendChild(option);\\n    })\\n    this.workspace.value = this.options.default;\\n\\n    this._siteRender();\\n  }\\n\\n  /**\\n   * @desc SITE 엘리먼트를 생성한다.\\n   * @param {String} - 호스트명\\n   * @example -\\n   */\\n  _siteRender(host) {\\n    debugger;\\n    host = host||this.workspace.value;\\n    this.frameView.innerHTML = `<iframe class='iframe-view ${this.options.formSize}'></iframe>`;\\n    this.frame\\t\\t\\t\\t\\t     = this.querySelector('iframe');\\n\\n    var doc = this.frame.contentWindow.document;\\n\\n    doc.open();\\n\\n    let Html = \\n        `<html lang=\\\"ko\\\">` +\\n        `<head>` +\\n        `<meta charset=\\\"utf-8\\\">` +\\n        `<meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\">` +\\n        `<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">` +\\n        `<link type=\\\"text/css\\\" rel=\\\"stylesheet\\\" href=\\\"${host}/extCss\\\">` +\\n        `<link type=\\\"text/css\\\" rel=\\\"stylesheet\\\" href=\\\"${host}/appCss\\\">` +\\n        `<style id=\\\"appColor\\\">${workspaceMeta.appColor || ''}</style>` +\\n        `</head>` +\\n        `<body>` +\\n        `<jj-application class=\\\"jj\\\" testable=\\\"true\\\">` +\\n        `<jj-form-excute>TestForm</jj-form-excute>` +\\n        `<script>var APP_MODE = 'edit';</script>` +\\n        `<script src=\\\"${host}/extScript\\\"></script>` +\\n        `<script src=\\\"${host}/appScript\\\"></script>` +\\n        `</jj-application>` +\\n        `</body>` +\\n        `</html>`;\\n    \\n    if(this.options.apiVersion == \\\"v7\\\"){\\n      Html = \\n        `<html lang=\\\"ko\\\">` +\\n        `<head>` +\\n        `<meta charset=\\\"utf-8\\\">` +\\n        `<meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\">` +\\n        `<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">` +\\n        `<link type=\\\"text/css\\\" rel=\\\"stylesheet\\\" href=\\\"/extCss\\\">` +\\n        `<link type=\\\"text/css\\\" rel=\\\"stylesheet\\\" href=\\\"/appCss\\\">` +\\n        `<style id=\\\"appColor\\\">${workspaceMeta.appColor || ''}</style>` +\\n        `</head>` +\\n        `<body>` +\\n        `<jj-application class=\\\"jj\\\" testable=\\\"true\\\">` +\\n        `<jj-form-excute>TestForm</jj-form-excute>` +\\n        `<script>var APP_MODE = 'edit';</script>` +\\n        `<script src=\\\"/extScript\\\"></script>` +\\n        `<script src=\\\"/appScript\\\"></script>` +\\n        `</jj-application>` +\\n        `</body>` +\\n        `</html>`;\\n    }\\n    doc.write(Html);\\n    doc.close();\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.addEventListener('click', e => {\\n      if (e.target.matches('[data-form-size]')) {\\n        this.frame.$classRemoveAdd(\\n          ['ws-full', 'ws-television', 'ws-desktop', 'ws-laptop', 'ws-tablet', 'ws-phone'],\\n          e.target.dataset.formSize\\n        );\\n      }\\n      if (e.target.matches('[method=\\\"excute\\\"]')) {\\n        this.dispatchEvent(new CustomEvent('excute', { bubbles: true }));\\n      }\\n      if (e.target.matches('[method=\\\"capture\\\"]')) {\\n        debugger;\\n        Jinja.global.uiCapture(this.frameView, \\\"APPSPEED.640\\\");\\n      }\\n    });\\n\\n    this.workspace.addEventListener(\\\"input\\\", e=>{\\n      this._siteRender();\\n      if(this._last){\\n        setTimeout(e=>{\\n          this.excuteLoad(this._last.fileBody, this._last.isTheme);  \\n        },500)\\n      }\\n    })\\n  }\\n\\n\\n  /**\\n   * @desc 페이지정보를 뷰어에 반영한다.\\n   * @param {String} - 페이지정보\\n   * @return {String} - 테바여부\\n   * @example -\\n   */\\n  excuteLoad(fileBody, isTheme, viewId) {\\n    this._last = {\\n      \\\"fileBody\\\": fileBody,\\n      \\\"isTheme\\\": isTheme\\n    };\\n    this.frame.contentWindow.postMessage({\\n      \\\"method\\\": \\\"excuteLoad\\\",\\n      \\\"fileBody\\\": fileBody,\\n      \\\"isTheme\\\": isTheme,\\n      \\\"viewId\\\": viewId\\n    });\\n  }\\n\\n  /**\\n   * @desc 페이지정보와 뷰어를 동기화한다.\\n   * @param {String} - 페이지정보\\n   * @example -\\n   */\\n  syncLoad(fileBody) {\\n    if (this.codeSync.checked) {\\n      this.excuteLoad(fileBody);\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-frame-viewer', JJFrameViewer);\\n/* ==JJDynamicGrid.640.class================ */\\n\\n/**\\n * @classdesc 다이나믹그리드 컴포넌트관리를 위한 클래스\\n */\\nclass JJDynamicGrid extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    \\n    return {\\n      \\\"mergeTableCell\\\": -1\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @param {String} - 챠트유형\\n   * @example -\\n   */\\n  _render() {\\n    this.tableHeadWarp = document.createElement('div');\\n    this.tableHeadWarp.setAttribute('class', 'table-head-warp');\\n    this.appendChild(this.tableHeadWarp);\\n    this.tableBodyWarp = document.createElement('div');\\n    this.tableBodyWarp.setAttribute('class', 'table-body-warp');\\n    this.appendChild(this.tableBodyWarp);\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.tableBodyWarp.addEventListener('scroll', e => {\\n      this.tableHeadWarp.scrollLeft = this.tableBodyWarp.scrollLeft;\\n\\n      if (this.bodyFixTable) {\\n        this.bodyFixTable.style.left = this.tableBodyWarp.scrollLeft + 'px';\\n        this.headFixTable.style.left = this.tableBodyWarp.scrollLeft + 'px';\\n      }\\n    });\\n\\n    this.tableBodyWarp.addEventListener('click', e => {\\n      if (e.target.matches('tr[group][level=\\\"0\\\"] *')) {\\n        let tr = e.target.closest('tr');\\n\\n        tr.classList.toggle('on');\\n      } else if (e.target.matches('tr *')) {\\n        let tr = e.target.closest('tr');\\n        let curRowIndex = Jinja.dom.findIndex(tr.parentElement, tr);\\n\\n        if (!e.ctrlKey) {\\n          if (this.bodyTable.querySelectorAll(`tbody tr.selected`).length) {\\n            this.bodyTable\\n              .querySelectorAll(`tbody tr.selected`)\\n              .forEach(tr => tr.classList.remove('selected'));\\n          }\\n\\n          if (\\n            this.bodyFixTable &&\\n            this.bodyFixTable.querySelectorAll(`tbody tr.selected`).length\\n          ) {\\n            this.bodyFixTable\\n              .querySelectorAll(`tbody tr.selected`)\\n              .forEach(tr => tr.classList.remove('selected'));\\n          }\\n        }\\n\\n        if (\\n          this.bodyTable &&\\n          this.bodyTable.querySelector(`tbody tr:nth-child(${curRowIndex + 1})`)\\n        ) {\\n          this.bodyTable\\n            .querySelector(`tbody tr:nth-child(${curRowIndex + 1})`)\\n            .classList.add('selected');\\n        }\\n\\n        if (\\n          this.bodyFixTable &&\\n          this.bodyFixTable.querySelector(\\n            `tbody tr:nth-child(${curRowIndex + 1})`\\n          )\\n        ) {\\n          this.bodyFixTable\\n            .querySelector(`tbody tr:nth-child(${curRowIndex + 1})`)\\n            .classList.add('selected');\\n        }\\n\\n        this.dispatchEvent(\\n          new CustomEvent('trClick', {\\n            detail: {\\n              tr: e.target.closest('tr'),\\n              data: this.options.dataSet,\\n              row: this.options.dataSet[curRowIndex],\\n              rowIndex: curRowIndex\\n            },\\n            bubbles: true\\n          })\\n        );\\n      }\\n    });\\n\\n    this.tableBodyWarp.addEventListener('mouseover', e => {\\n      if (e.target.matches('tr *')) {\\n        let tr = e.target.closest('tr');\\n        let curRowIndex = Jinja.dom.findIndex(tr.parentElement, tr);\\n\\n        if (this.bodyTable && this.bodyTable.querySelector(`tbody tr.hover`)) {\\n          this.bodyTable\\n            .querySelector(`tbody tr.hover`)\\n            .classList.remove('hover');\\n        }\\n\\n        if (\\n          this.bodyFixTable &&\\n          this.bodyFixTable.querySelector(`tbody tr.hover`)\\n        ) {\\n          this.bodyFixTable\\n            .querySelector(`tbody tr.hover`)\\n            .classList.remove('hover');\\n        }\\n\\n        if (\\n          this.bodyTable &&\\n          this.bodyTable.querySelector(`tbody tr:nth-child(${curRowIndex + 1})`)\\n        ) {\\n          this.bodyTable\\n            .querySelector(`tbody tr:nth-child(${curRowIndex + 1})`)\\n            .classList.add('hover');\\n        }\\n\\n        if (\\n          this.bodyFixTable &&\\n          this.bodyFixTable.querySelector(\\n            `tbody tr:nth-child(${curRowIndex + 1})`\\n          )\\n        ) {\\n          this.bodyFixTable\\n            .querySelector(`tbody tr:nth-child(${curRowIndex + 1})`)\\n            .classList.add('hover');\\n        }\\n      }\\n    });\\n\\n    this.tableBodyWarp.addEventListener('mouseout', e => {\\n      if (this.bodyTable && this.bodyTable.querySelector(`tbody tr.hover`)) {\\n        this.bodyTable\\n          .querySelector(`tbody tr.hover`)\\n          .classList.remove('hover');\\n      }\\n\\n      if (\\n        this.bodyFixTable &&\\n        this.bodyFixTable.querySelector(`tbody tr.hover`)\\n      ) {\\n        this.bodyFixTable\\n          .querySelector(`tbody tr.hover`)\\n          .classList.remove('hover');\\n      }\\n    });\\n    \\n       \\n  }\\n\\n  /**\\n   * @desc 이벤트를 삭제한다.\\n   * @example -\\n   */\\n  _clearEvent() {}\\n\\n  /**\\n   * @desc 선택된 행의 데이터를 반환한다.\\n   * @return {Array} - 행데이터\\n   * @example -\\n   */\\n  getSelectRow() {\\n    let result = [];\\n\\n    if (this.bodyTable.querySelectorAll(`tbody tr.selected`).length) {\\n      this.bodyTable.querySelectorAll(`tbody tr.selected`).forEach(tr => {\\n        let curRowIndex = Jinja.dom.findIndex(tr.parentElement, tr);\\n\\n        result.push(this.options.dataSet[curRowIndex]);\\n      });\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 지정한 옵션으로 그리드를 재생성한다.\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  render(options) {\\n    Object.assign(this.options, options);\\n\\n    let html = Jinja.global.json2Grid(\\n      options.dataSet,\\n      options.categories,\\n      options.tableHeades,\\n      options.format\\n    );\\n\\n    this.tableHeadWarp.$empty();\\n    this.tableBodyWarp.$empty();\\n\\n    this.tableBodyWarp.innerHTML = html;\\n\\n    this.bodyTable = this.tableBodyWarp.querySelector('table');\\n    this.headTable = this.bodyTable.cloneNode(true);\\n    this.headTable.querySelector('tbody').remove();\\n\\n    this.bodyTable.querySelectorAll('thead').forEach(el => el.remove());\\n    this.tableHeadWarp.appendChild(this.headTable);\\n    this.tableBodyWarp.appendChild(this.bodyTable);\\n\\n    this.tableHeadWarp.style.height = this.headTable.offsetHeight + 'px';\\n\\n    if (options.fixedCol) {\\n      this.fixed(options.fixedCol);\\n    }\\n\\t\\t\\n    if(options.mergeTableCell >= 0){\\n      this.querySelectorAll('table').forEach(table=>{\\n      Jinja.global.mergeTableCell(table, options.mergeTableCell);\\n      });\\n    }\\n\\n  }\\n\\n  /**\\n   * @desc 지정한 컬럼를 고정컬럼으로 설정한다.\\n   * @param {String} - 대상컬럼순번\\n   * @example -\\n   */\\n  fixed(fixColIndex) {\\n    this.headFixTable = this.tableHeadWarp\\n      .querySelector('table')\\n      .cloneNode(true);\\n    this.bodyFixTable = this.tableBodyWarp\\n      .querySelector('table')\\n      .cloneNode(true);\\n\\n    this.headFixTable.classList.add('fix-table');\\n    this.bodyFixTable.classList.add('fix-table');\\n    this.tableHeadWarp.appendChild(this.headFixTable);\\n    this.tableBodyWarp.appendChild(this.bodyFixTable);\\n\\n    this.headFixTable\\n      .querySelectorAll(`colgroup >*:nth-child(${fixColIndex}) ~ *`)\\n      .forEach(el => el.remove());\\n\\n    this.headFixTable.querySelectorAll('thead tr').forEach(tr => {\\n      tr.querySelectorAll(\\n        `:scope >*:nth-child(${fixColIndex}) ~ *`\\n      ).forEach(el => el.remove());\\n    });\\n\\n    this.bodyFixTable\\n      .querySelectorAll(`colgroup >*:nth-child(${fixColIndex}) ~ *`)\\n      .forEach(el => el.remove());\\n\\n    this.bodyFixTable.querySelectorAll('tbody tr').forEach(tr => {\\n      tr.querySelectorAll(\\n        `:scope >*:nth-child(${fixColIndex}) ~ *`\\n      ).forEach(el => el.remove());\\n    });\\n\\n    this.bodyFixTable.querySelectorAll('tfoot tr').forEach(tr => {\\n      tr.querySelectorAll(\\n        `:scope >*:nth-child(${fixColIndex}) ~ *`\\n      ).forEach(el => el.remove());\\n    });\\n  }\\n\\n  /**\\n   * @desc 그룹을 설정한다.\\n   * @example -\\n   */\\n  group() {\\n    let curGroupName = '';\\n\\n    this.bodyTable.querySelectorAll(`tbody tr`).forEach((tr, index) => {\\n      let groupName = tr.querySelector('td').innerText;\\n\\n      if (curGroupName != groupName) {\\n        let groupTr = tr.cloneNode(true);\\n\\n        tr.before(groupTr);\\n\\n        groupTr.classList.add('bg-primary');\\n        groupTr.setAttribute('group', groupName);\\n        groupTr.setAttribute('level', 0);\\n        groupTr\\n          .querySelectorAll(`td:nth-child(1) ~ *`)\\n          .forEach(td => (td.hidden = true));\\n        groupTr\\n          .querySelector(`td`)\\n          .setAttribute('colspan', groupTr.querySelectorAll(`td`).length);\\n\\n        curGroupName = groupName;\\n      }\\n\\n      tr.setAttribute('group', groupName);\\n      tr.setAttribute('level', 1);\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 컬럼의 그룹을 설정한다.\\n   * @param {String} - 컬럼목록\\n   * @example -\\n   */\\n  xgroup(colIndex) {\\n    let curGroupName = '';\\n\\n    this.options.dataSet.forEach((row, index) => {\\n      let groupName = row[colIndex];\\n\\n      if (curGroupName != groupName) {\\n        let curTr = this.bodyTable.querySelector(\\n          `tbody tr:nth-child(${index + 1})`\\n        );\\n\\n        let groupTr = curTr.cloneNode(true);\\n\\n        curTr.before(groupTr);\\n\\n        groupTr.classList.add('bg-primary');\\n\\n        curGroupName = groupName;\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 그리드 데이터를 엑셀파일로 내보내기한다.\\n   * @param {String} - 파일제목\\n   * @example -\\n   */\\n  exportexcel(title) {}\\n}\\n\\ncustomElements.define('jj-dynamic-grid', JJDynamicGrid);\\n/* ==JJGrid.640.class================ */\\n\\n/**\\n * @classdesc 그리드 컴포넌트관리를 위한 클래스\\n */\\nclass JJGrid extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this.curRowIndex;\\n    return {\\n      \\\"apiVersion\\\": workspaceMeta.options.appInfo.apiVersion||\\\"v61\\\",\\n      \\\"gridClass\\\": \\\"jjGrid\\\",\\n      \\\"title\\\": { \\\"text\\\": \\\"\\\" },\\n      \\\"workspace\\\": workspaceMeta.options.appInfo.jbatisId,\\n      \\\"table\\\": \\\"\\\",\\n      \\\"keyField\\\": \\\"\\\",\\n      \\\"data\\\": [],\\n      \\\"colModel\\\": [\\n        { \\\"label\\\": 'Column1' },\\n        { \\\"label\\\": 'Column2' },\\n        { \\\"label\\\": 'Column3' },\\n        { \\\"label\\\": 'Column4' },\\n        { \\\"label\\\": 'Column5' },\\n        { \\\"label\\\": 'Column6' },\\n        { \\\"label\\\": 'Column7' },\\n        { \\\"label\\\": 'Column8' },\\n        { \\\"label\\\": 'Column9' },\\n        { \\\"label\\\": 'Column10' }\\n      ],\\n      \\\"pageSize\\\": 10,\\n      \\\"fixColIndex\\\": 0,\\n      \\\"addInTool\\\": [],\\n      \\\"uploadField\\\": [],\\n      \\\"addIn\\\": {},\\n      \\\"headContent\\\": '',\\n      \\\"autoFind\\\": false,\\n      \\\"isCellMearge\\\": false,\\n      \\\"isFoot\\\": false,\\n      \\\"isScroll\\\": true,\\n      \\\"isLayoutFixed\\\": false,\\n      \\\"isSort\\\": true,\\n      \\\"isCheck\\\": true\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @param {String} - 챠트유형\\n   * @example -\\n   */\\n  _render() {\\n    let html = \\n        `<div class=\\\"grid-warp\\\" >` +\\n        `<table tabindex=-1>` +\\n        `<colgroup></colgroup>` +\\n        `<thead></thead>` +\\n        `<tbody></tbody>` +\\n        `<tfoot></tfoot>` +\\n        `</table>` +\\n        `</div>` +\\n        `<div class='sArea'><div class='uScrCur'></div></div>` +\\n        `<div class=\\\"fix-grid-warp\\\"></div>` +\\n        `<div class=\\\"size-bar\\\"></div>`;\\n\\n    this.innerHTML = html;\\n    this.table = this.querySelector('.grid-warp >table');\\n    this.tableHead = this.querySelector('.grid-warp >table > thead');\\n    this.tableBody = this.querySelector('.grid-warp >table > tbody');\\n    this.fixTableWarp = this.querySelector('.fix-grid-warp');\\n    this.sizeBar = this.querySelector('.size-bar');\\n    this.scrollCur = this.querySelector('.uScrCur');\\n    this.sysColumnCount = 2;\\n\\n    if (!this.options.isScroll) {\\n      this.querySelector('.sArea').hidden = true;\\n    }\\n\\n    this.querySelector('tfoot').setAttribute('class', 'hidden');\\n    this.querySelector('tfoot').hidden = true;\\n\\n    if(this.options.isLayoutFixed){\\n      this.classList.add('fixed');\\n    }\\n\\n    this.setColModel();\\n    this.oJJSortable = new JJSortable([this.tableHead.lastElementChild], {\\n      handles: 'e,w'\\n    });\\n    this.oJJMoveable = new JJMoveable(this.scrollCur, {\\n      handles: 's'\\n    });\\n  }\\n\\n  /**\\n   * @desc 컬럼그룹을 생성한다.\\n   * @example -\\n   */\\n  _renderColGroup() {\\n    this.table.querySelector(`colgroup`).innerHTML = '';\\n\\n    let colGroup = `<col style=\\\"width:50px;\\\"><col style=\\\"width:50px;\\\">`;\\n\\n    if (!this.options.isCheck) {\\n      colGroup = `<col style=\\\"width:50px;\\\"><col style=\\\"width:0px;\\\">`;\\n    }\\n\\n    this.options.colModel.forEach((col, index) => {\\n      let newCol = Object.assign(\\n        {},\\n        {\\n          width: '100px'\\n        },\\n        col\\n      );\\n\\n      colGroup += `<col style=\\\"width:${newCol.width};\\\" class=\\\"text-center\\\">`;\\n    });\\n\\n    colGroup += `<col class=\\\"sizeEmpty\\\">`;\\n\\n    this.table.querySelector(`colgroup`).innerHTML = colGroup;\\n  }\\n\\n  /**\\n   * @desc 행순번에 해당하는 행정보로 그리드 행을 생성한다.\\n   * @param {Number} - 행순번\\n   * @return {String} - 그리드 행 HTML\\n   * @example -\\n   */\\n  _renderRow(rowIndex) {\\n    let html = '';\\n    let row = this.options.data[rowIndex];\\n    let statusClass = '';\\n    let crudClass = '';\\n\\n    if (row) {\\n      if (row._checked) statusClass += ' checked';\\n      if (this.curRowIndex == rowIndex ) statusClass += ' selected';\\n      \\n      html = `<tr row-index=${rowIndex} class=\\\"${statusClass}\\\" _crud_=\\\"${row._crud_}\\\">`;\\n      html += `<td class=\\\"num\\\">${rowIndex + 1}</td>`;\\n      html += `<td class=\\\"trCheck\\\"><i class=\\\"fa\\\"></i></td>`;\\n\\n      this.options.colModel.forEach((col, index) => {\\n        if(col.isHiddenColumn) return;\\n        let newCol = Object.assign(\\n          {},\\n          {\\n            label: '',\\n            field: '',\\n            width: '100px',\\n            align: '',\\n            type: 'text',\\n            used: true,\\n            visible: true,\\n            editable: false,\\n            required: false,\\n            tdClass: '',\\n            btnClass: 'btn btn-primary',\\n            btnLabel: '',\\n            btnEvent: ''\\n          },\\n          col\\n        );\\n\\n        let dispValue = row[newCol.field];\\n\\n        switch (newCol.type) {\\n          case 'money':\\n            if (dispValue == null || dispValue == undefined) {\\n              dispValue = '';\\n            } else {\\n              dispValue = dispValue.$toCurrencyFormat();\\n            }\\n\\n            if (!newCol.align) newCol.align = 'text-right';\\n\\n            break;\\n          case 'percent':\\n            if (dispValue == null || dispValue == undefined) {\\n              dispValue = '';\\n            } else {\\n              dispValue = dispValue.$toPercentFormat();\\n            }\\n\\n            if (!newCol.align) newCol.align = 'text-right';\\n\\n            break;\\n          case 'number':\\n            if (dispValue == null || dispValue == undefined) {\\n              dispValue = '';\\n            } else {\\n              dispValue = dispValue.toLocaleString();\\n            }\\n\\n            if (!newCol.align) newCol.align = 'text-right';\\n\\n            break;\\n          case 'float':\\n            if (dispValue == null || dispValue == undefined) {\\n              dispValue = '';\\n            } else {\\n              dispValue = dispValue.$toFloatFormat();\\n            }\\n\\n            if (!newCol.align) newCol.align = 'text-right';\\n\\n            break;\\n          case 'int':\\n            if (dispValue == null || dispValue == undefined) {\\n              dispValue = '';\\n            } else {\\n              dispValue = dispValue.$toIntFormat();\\n            }\\n\\n            if (!newCol.align) newCol.align = 'text-right';\\n\\n            break;\\n          case 'date':\\n            if (dispValue) {\\n              dispValue = dispValue.$toFormat('yyyy-MM-dd');\\n            }\\n\\n            if (!newCol.align) newCol.align = 'text-center';\\n\\n            break;\\n          case 'datetime':\\n            if (dispValue) {\\n              dispValue = dispValue.$toFormat('yyyy-MM-dd HH:mm');\\n            }\\n\\n            if (!newCol.align) newCol.align = 'text-center';\\n\\n            break;\\n          default:\\n            if (!newCol.align) newCol.align = 'text-left';\\n\\n            break;\\n        }\\n\\n        switch (newCol.type) {\\n          case 'money':\\n          case 'percent':\\n          case 'number':\\n          case 'float':\\n          case 'int':\\n            if (newCol.editable) {\\n              html += `<td><input type=\\\"number\\\" class=\\\"form-control text-right\\\" value=\\\"${row[newCol.field]}\\\" bind=\\\"${newCol.field}\\\"></td>`;\\n            } else {\\n              html += `<td class=\\\"${newCol.align}\\\">${dispValue}</td>`;\\n            }\\n\\n            break;\\n          case 'date':\\n            if (newCol.editable) {\\n              html += `<td><input type=\\\"date\\\" class=\\\"form-control\\\" value=\\\"${row[newCol.field]}\\\" bind=\\\"${newCol.field}\\\"></td>`;\\n            } else {\\n              html += `<td class=\\\"${newCol.align}\\\">${dispValue}</td>`;\\n            }\\n\\n            break;\\n          case 'datetime':\\n            if (newCol.editable) {\\n              html += `<td><input type=\\\"datetime-local\\\" class=\\\"form-control\\\" value=\\\"${row[newCol.field]}\\\" bind=\\\"${newCol.field}\\\"></td>`;\\n            } else {\\n              html += `<td class=\\\"${newCol.align}\\\">${dispValue}</td>`;\\n            }\\n\\n            break;\\n          case 'select':\\n            if (newCol.editable) {\\n              html += `<td><select class=\\\"form-control\\\" bind=\\\"${newCol.field}\\\" >`;\\n\\n              if (!newCol.required) {\\n                html += `<option value=\\\"\\\">-select-</option>`;\\n              }\\n\\n              Jinja.code.codes[newCol.code].forEach(item => {\\n                if (row[newCol.field] == item.CODE) {\\n                  html += `<option value=\\\"${item.CODE}\\\" selected>${item.NAME}</option>`;\\n                } else {\\n                  html += `<option value=\\\"${item.CODE}\\\">${item.NAME}</option>`;\\n                }\\n              });\\n\\n              html += `</select></td>`;\\n            } else {\\n              dispValue = Jinja.code.getCodeName(\\n                newCol.code,\\n                row[newCol.field]\\n              );\\n\\n              html += `<td class=\\\"${newCol.align}\\\">${dispValue || ''}</td>`;\\n            }\\n\\n            break;\\n          case 'button':\\n            html += `<td><button type=\\\"button\\\" role=\\\"${newCol.btnEvent}\\\" class=\\\"${newCol.btnClass}\\\">${newCol.btnLabel || newCol.label}</button></td>`;\\n\\n            break;\\n          case 'check':\\n            if (newCol.editable) {\\n              if (!row[newCol.field] || row[newCol.field] == '0') {\\n                html += `<td><input type=\\\"checkbox\\\" bind=\\\"${newCol.field}\\\"></td>`;\\n              } else {\\n                html += `<td><input type=\\\"checkbox\\\" checked bind=\\\"${newCol.field}\\\"></td>`;\\n              }\\n            } else {\\n              html += `<td>${dispValue}</td>`;\\n            }\\n\\n            break;\\n          default:\\n            if (newCol.editable) {\\n              html += `<td class=\\\"${\\n              newCol.align\\n            }\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"${\\n              row[newCol.field] || ''\\n            }\\\" bind=\\\"${newCol.field}\\\"></td>`;\\n            } else {\\n              html += `<td class=\\\"${newCol.align}\\\">${dispValue}</td>`;\\n            }\\n\\n            break;\\n        }\\n      });\\n\\n      html += `<td class=\\\"sizeEmpty\\\"</td></tr>`;\\n    }\\n\\n    return html;\\n  }\\n\\n  /**\\n   * @desc 행순번 기준으로 그리드 현재페이지를 생성한다.\\n   * @param {Number} - 행순번\\n   * @example -\\n   */\\n  _renderPage(rowIndex) {\\n    rowIndex = parseInt(rowIndex);\\n\\n    let firstRowIndex = this.tableBody.firstElementChild.getAttribute(\\n      'row-index'\\n    );\\n    let bodyHtml = '';\\n\\n    for (let i = 0; i < this.options.pageSize; i++) {\\n      if (this.options.data && this.options.data[rowIndex]) {\\n        bodyHtml += this._renderRow(rowIndex);\\n      } else {\\n        bodyHtml += this._blankRowHtml;\\n      }\\n\\n      rowIndex++;\\n    }\\n\\n    this.tableBody.innerHTML = bodyHtml;\\n    this.scrollTopSync();\\n    this._renderFixCol();\\n  }\\n\\n  /**\\n   * @desc 고정컬럼을 생성한다.\\n   * @example -\\n   */\\n  _renderFixCol() {\\n    this._meargeTableCell();\\n\\n    if (this.options.fixColIndex) {\\n      let cloneTable = this.table.cloneNode(true);\\n\\n      cloneTable\\n        .querySelectorAll(\\n        `colgroup >*:nth-child(${this.options.fixColIndex}) ~ *`\\n      )\\n        .forEach(el => el.remove());\\n\\n      cloneTable.querySelectorAll('thead tr').forEach(tr => {\\n        tr.querySelectorAll(\\n          `:scope >*:nth-child(${this.options.fixColIndex}) ~ *`\\n        ).forEach(el => el.remove());\\n      });\\n\\n      cloneTable.querySelectorAll('tbody tr').forEach(tr => {\\n        tr.querySelectorAll(\\n          `:scope >*:nth-child(${this.options.fixColIndex}) ~ *`\\n        ).forEach(el => el.remove());\\n      });\\n\\n      cloneTable.querySelectorAll('tfoot tr').forEach(tr => {\\n        tr.querySelectorAll(\\n          `:scope >*:nth-child(${this.options.fixColIndex}) ~ *`\\n        ).forEach(el => el.remove());\\n      });\\n\\n      this.fixTableWarp.$empty();\\n      this.fixTableWarp.appendChild(cloneTable);\\n      this.fixTableWarp.style.width = cloneTable.offsetWidth + '.px';\\n      this.fixTableWarp.hidden = false;\\n    } else {\\n      this.fixTableWarp.hidden = true;\\n    }\\n\\n    this._meargeTableCell();\\n  }\\n\\n  /**\\n   * @desc 지정된 table의 cell들을 병합한다.\\n   * @param {Object} - 테이블\\n   * @param {Number} - 셀번호\\n   * @example -\\n   */\\n  _meargeTableCell(table, cellIndex) {\\n    if (!this.options.isCellMearge) return;\\n\\n    if (!table) table = this.table;\\n    if (!cellIndex) cellIndex = 2;\\n\\n    let spanTr = null;\\n    let spanTd = null;\\n    let spanCount = 1;\\n    let spanText = null;\\n\\n    table.querySelectorAll(`[rowspan], [hidden]`).forEach(el => {\\n      el.removeAttribute('rowspan');\\n      el.removeAttribute('hidden');\\n    });\\n\\n    table.querySelectorAll(`tbody tr`).forEach(tr => {\\n      if (tr.getAttribute('row-index')) {\\n        if (!spanTr) {\\n          spanTr = tr;\\n          spanTd = spanTr.childNodes[cellIndex];\\n          spanText = spanTd.innerText;\\n          spanCount = 1;\\n        } else {\\n          if (spanText == tr.childNodes[cellIndex].innerText) {\\n            spanCount++;\\n            spanTd.setAttribute('rowspan', spanCount);\\n            tr.childNodes[cellIndex].hidden = true;\\n          } else {\\n            spanTr = tr;\\n            spanTd = spanTr.childNodes[cellIndex];\\n            spanText = spanTd.innerText;\\n            spanCount = 1;\\n          }\\n        }\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.addEventListener('wheel', e => {\\n      if (\\n        !['INPUT', 'SELECT'].includes(e.target.tagName) &&\\n        e.target.matches('tbody *')\\n      ) {\\n        this.onWheel(e);\\n      }\\n    });\\n\\n    this.addEventListener('keydown', e => {\\n      if (!['INPUT', 'SELECT'].includes(e.target.tagName)) {\\n        this.onKeyDown(e);\\n      }\\n    });\\n\\n    this.addEventListener('click', e => {\\n      if (e.target.matches('tbody td.trCheck')) {\\n        this.onTrChkSelect(e);\\n        return;\\n      }\\n      if (e.target.matches('tbody button[role]')) {\\n        this.onRoleButtonClick(e);\\n      }\\n      if (e.target.matches('tr *')) {\\n        this.onTrClick(e);\\n      }\\n    });\\n    \\n    this.addEventListener('dblclick', e => {\\n      if (e.target.matches('tbody td.trCheck')) {\\n        return;\\n      }\\n      if (e.target.matches('tbody button[role]')) {\\n        return;\\n      }\\n      if (e.target.matches('tr *')) {\\n        this.onTrDblClick(e);\\n      }\\n    });\\n\\n    \\n    \\n    this.addEventListener('mousedown', e => {\\n      if (e.target.matches('thead th')) {\\n        this.onThSelect(e);\\n      }\\n\\n      if (e.target.matches('.sortIcon')) {\\n        this.onSort(e);\\n      }\\n\\n      if (e.target.matches('.size-bar')) {\\n        this.onResizeStart(e);\\n      }\\n    });\\n\\n    this.addEventListener('mousemove', e => {\\n      this.onMouseOver(e);\\n    });\\n\\n    this.addEventListener('mouseup', e => {\\n      if (e.target.matches('thead th')) {\\n        this.onThUnSelect(e);\\n      }\\n    });\\n\\n    this.addEventListener('scroll', e => {\\n      this.onScrollHorizontal(e);\\n    });\\n\\n    this.addEventListener('input', e => {\\n      if (e.target.matches('tbody tr *')) {\\n        this.onInput(e);\\n      }\\n    });\\n\\n    this.addEventListener('JJSortableEnd', e => {\\n      this.onColSorted(e);\\n    });\\n\\n    this.addEventListener('JJMoveable.move', e => {\\n      if (e.target.matches('.uScrCur')) {\\n        this.onScrollMove(e);\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 이벤트를 삭제한다.\\n   * @example -\\n   */\\n  _clearEvent() {\\n    this.oJJSortable.destroy();\\n    this.oJJMoveable.destroy();\\n  }\\n\\n  /**\\n   * @desc 그리드 데이터에서 변경된 데이터를 저장한다.\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  _uploadCrudData() {\\n    let sendData = [];\\n\\n    this.getCrudChangeData().forEach(item => {\\n      let row = {\\n        table: this.options.table,\\n        keyField: this.options.keyField,\\n        keyValue: item[this.options.keyField],\\n        crud: item._crud_,\\n        field: {}\\n      };\\n\\n      switch (item._crud_) {\\n        case 'U':\\n          Object.keys(item._changeData_).forEach(col => {\\n            row.field[col] = item._changeData_[col].val;\\n          });\\n\\n          break;\\n        case 'C':\\n          Object.keys(item).forEach(col => {\\n            if (!col.startsWith('_')) {\\n              row.field[col] = item[col];\\n            }\\n          });\\n\\n          break;\\n        case 'D':\\n          break;\\n      }\\n\\n      sendData.push(row);\\n    });\\n\\n    return Jinja.ajax.post(`/${this.options.apiVersion}/jbatis/ds201/restComcd/multirows`, {\\n      rows: sendData\\n    });\\n  }\\n\\n  /**\\n   * @static\\n   * @memberof JJGrid\\n   * @method get observedAttributes\\n   * @desc 모니터링 할 속성 목록을 반환한다.\\n   * @return {Array} - 모니터링 할 속성 목록\\n   * @example -\\n   */\\n  static get observedAttributes() {\\n    return ['data-type'];\\n  }\\n\\n  /**\\n   * @desc 지정한 옵션으로 그리드를 초기화한다.\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  init(options) {\\n    Object.assign(this.options, options);\\n\\n    this._render();\\n  }\\n\\n  /**\\n   * @desc 컬럼모델 정보로 그리드 컬럼을 생성한다.\\n   * @example -\\n   */\\n  setColModel() {\\n    let colGroup = `<col style=\\\"width:50px;\\\"><col style=\\\"width:50px;\\\">`;\\n\\n    if (!this.options.isCheck) {\\n      colGroup = `<col style=\\\"width:50px;\\\"><col style=\\\"width:0px;\\\">`;\\n    }\\n\\n    let thHtml = `<tr class=\\\"\\\"><th>no</th><th>!</th>`;\\n    let brHtml = `<tr class=\\\"\\\"><td>&nbsp</td><td>&nbsp</td>`;\\n    let tfHtml = `<tr class=\\\"\\\"><td>&nbsp</td><td>&nbsp</td>`;\\n\\n    this.options.colModel.forEach((col, index) => {\\n      if(col.isHiddenColumn) return;\\n      let newCol = Object.assign(\\n        {},\\n        {\\n          label: '',\\n          field: '',\\n          width: '100px',\\n          align: '',\\n          type: 'text',\\n          used: true,\\n          visible: true,\\n          editable: false,\\n          tdClass: '',\\n          btnClass: 'btn btn-primary',\\n          btnLabel: ''\\n        },\\n        col\\n      );\\n\\n      colGroup += `<col style=\\\"width:${newCol.width};\\\" class=\\\"text-center\\\">`;\\n      thHtml += `<th><label>${newCol.label.replaceAll('\\\\n', '<br />')}</label>`;\\n\\n      if (this.options.isSort) {\\n        thHtml += `<span class=\\\"sortIcon\\\"><i class=\\\"fa\\\"></i></span>`;\\n      }\\n\\n      thHtml += `</th>`;\\n      brHtml += `<td>&nbsp</td>`;\\n      tfHtml += `<td></td>`;\\n    });\\n\\n    colGroup += `<col class=\\\"sizeEmpty\\\">`;\\n    thHtml += `<th class=\\\"sizeEmpty\\\"></th></tr>`;\\n    brHtml += `<td class=\\\"sizeEmpty\\\"></td></tr>`;\\n    tfHtml += `<td class=\\\"sizeEmpty\\\"></td></tr>`;\\n\\n    let bodyHtml = '';\\n\\n    for (let i = 0; i < this.options.pageSize; i++) {\\n      if (this.options.data && this.options.data[i]) {\\n        bodyHtml += this._renderRow(i);\\n      } else {\\n        bodyHtml += brHtml;\\n      }\\n    }\\n\\n    this._blankRowHtml = brHtml;\\n    this.table.querySelector(`colgroup`).innerHTML = colGroup;\\n    this.table.querySelector(`thead`).innerHTML = thHtml;\\n    this.table.querySelector(`tbody`).innerHTML = bodyHtml;\\n    this.table.querySelector(`tfoot`).innerHTML = tfHtml;\\n\\n    this._renderFixCol();\\n  }\\n\\n  /**\\n   * @desc 이전 행에 데이터를 바인딩한다.\\n   * @example -\\n   */\\n  prevRowBind() {\\n    let firstRowIndex = this.tableBody.firstElementChild.getAttribute(\\n      'row-index'\\n    );\\n\\n    if (parseInt(firstRowIndex) > 0) {\\n      let next = parseInt(firstRowIndex) - 1;\\n\\n      if (this.options.data[next]) {\\n        this.tableBody.lastElementChild.remove();\\n\\n        Jinja.dom.prepend(this.tableBody, this._renderRow(next));\\n\\n        this.scrollTopSync();\\n      }\\n\\n      this._renderFixCol();\\n    }\\n  }\\n\\n  /**\\n   * @desc 다음 행에 데이터를 바인딩한다.\\n   * @example -\\n   */\\n  nextRowBind() {\\n    let lastRowIndex = this.tableBody.lastElementChild.getAttribute(\\n      'row-index'\\n    );\\n\\n    if (lastRowIndex) {\\n      let next = parseInt(lastRowIndex) + 1;\\n\\n      if (this.options.data[next]) {\\n        this.tableBody.firstElementChild.remove();\\n\\n        Jinja.dom.append(this.tableBody, this._renderRow(next));\\n\\n        this.scrollTopSync();\\n      }\\n\\n      this._renderFixCol();\\n    }\\n  }\\n\\n  /**\\n   * @desc 이전 페이지에 데이터를 바인딩한다.\\n   * @example -\\n   */\\n  prevPageBind() {\\n    let firstRowIndex = this.tableBody.firstElementChild.getAttribute(\\n      'row-index'\\n    );\\n\\n    if (parseInt(firstRowIndex) > 0) {\\n      let next = Math.max(parseInt(firstRowIndex) - this.options.pageSize, 0);\\n\\n      this._renderPage(next);\\n      this.scrollTopSync();\\n    }\\n  }\\n\\n  /**\\n   * @desc 다음 페이지에 데이터를 바인딩한다.\\n   * @example -\\n   */\\n  nextPageBind() {\\n    let lastRowIndex = this.tableBody.lastElementChild.getAttribute(\\n      'row-index'\\n    );\\n\\n    if (lastRowIndex) {\\n      let next = parseInt(lastRowIndex) + 1;\\n\\n      if (this.options.data[next]) {\\n        this._renderPage(next);\\n        this.scrollTopSync();\\n      }\\n    }\\n  }\\n\\n  firstPageBind(){\\n    this._renderPage(0);\\n  }\\n  \\n  // 마지막 페이지로 이동하여 표시\\n  lastPageBind(){\\n    let moveIndex = Math.max(this.options.data.length - this.options.pageSize, 0)\\n    this._renderPage(moveIndex);\\n  }\\n  \\n  // 지정된 레코드 번호로 이동\\n  rowIndexSelect(rowIndex){\\n//     if(this.tableBody.querySelector(\\\"tr.selected\\\")){\\n//       this.tableBody.querySelector(\\\"tr.selected\\\").classList.remove(\\\"selected\\\");\\n//     }\\n\\n    let tr = this.tableBody.querySelector(`tr[row-index=\\\"${rowIndex}\\\"]`);\\n    \\n    if(tr){\\n      tr.querySelector('td').click();\\n    }\\n    return tr;\\n  }\\n    \\n  \\n  \\n  /**\\n   * @desc 그리드 데이터에서 변경된 데이터를 반환한다.\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  getCrudChangeData() {\\n    return Jinja.global.getChangeCRUD(this.options.data);\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터를 그리드에 반영한다.\\n   * @param {Array} - 그리드 데이터\\n   * @example -\\n   */\\n  updateData(rows) {\\n    this.options.data = rows;\\n    this._renderPage(0);\\n    \\n    if(this.options.autoFind){\\n      this.rowIndexSelect(0);\\n    }\\n    \\n  }\\n\\n  /**\\n   * @desc 지정한 데이터 그리드 데이터로 변환하고 그리드에 반영한다.\\n   * @param {Array} - 대상 데이터\\n   * @return {Array} - 변경된 데이터\\n   * @example -\\n   */\\n  updateCrudData(rows) {\\n    Jinja.global.setCRUD(rows);\\n\\n    this.updateData(rows);\\n\\n    return rows;\\n  }\\n\\n  /**\\n   * @desc 그리드 데이터에서 변경된 데이터를 저장한다.\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  uploadCrudData() {\\n    return new Promise((resolve, reject) => {\\n      if (this.options.table && this.options.keyField) {\\n        this._uploadCrudData()\\n          .then(resule => {\\n          return resolve(true);\\n        })\\n          .catch(resule => {\\n          return reject(false);\\n        });\\n      } else {\\n        let message = '테이블, 키필드 속성이 지정되지 않았습니다.';\\n\\n        alert(message);\\n\\n        reject(false);\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 새 데이터를 추가합니다\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  appendRow(newRow) {\\n    let systemColumns = [\\n      \\\"REG_DATE\\\",\\n      \\\"REG_DATETIME\\\",\\n      \\\"REG_USER\\\",\\n      \\\"REG_USER_ID\\\",\\n      \\\"REG_USER_NAME\\\",\\n      \\\"EDT_DATE\\\",\\n      \\\"EDT_DATETIME\\\",\\n      \\\"EDT_USER\\\",\\n      \\\"EDT_USER_ID\\\",\\n      \\\"EDT_USER_NAME\\\",\\n    ];\\n    \\n    newRow = newRow || {};\\n\\t\\t\\n \\t\\tthis.options.colModel.forEach((col, index) => {\\n      if(!systemColumns.includes(col.field)){\\n      \\tnewRow[col.field] = newRow[col.field]||col.default||\\\"\\\";\\n      }\\n    });    \\n\\n    Jinja.global.addCRUDrow(this.options.data, newRow);\\n\\n    // 추가후 마지막 페이지로 이동시킴\\n    this.lastPageBind();\\n    // 지정된 레코드인덱스 번호로 선택활성화\\n    this.rowIndexSelect(this.options.data.length-1);\\n\\n  }\\n\\n\\n  /**\\n   * @desc 행클릭 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onTrClick(event) {\\n    let curTr = event.target.$closest(`tr`);\\n    this.querySelectorAll(\\\"tr.selected\\\").forEach(el=> el.classList.remove(\\\"selected\\\"));\\n    \\n\\n    this.curRowIndex = parseInt(curTr.getAttribute('row-index'));\\n\\n\\t\\tthis.querySelectorAll(`tr[row-index=\\\"${this.curRowIndex}\\\"]`).forEach(el=> el.classList.add(\\\"selected\\\"));\\n    \\n    if (this.curRowIndex >= 0) {\\n      this.dispatchEvent(\\n        new CustomEvent('trClick', {\\n          detail: {\\n            tr: curTr,\\n            data: this.options.data,\\n            row: this.options.data[this.curRowIndex],\\n            rowIndex: this.curRowIndex\\n          },\\n          bubbles: true\\n        })\\n      );\\n    }\\n  }\\n  \\n /**\\n   * @desc 행클릭 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onTrDblClick(event) {\\n    let curTr = event.target.$closest(`tr`);\\n    this.querySelectorAll(\\\"tr.selected\\\").forEach(el=> el.classList.remove(\\\"selected\\\"));\\n    \\n\\n    this.curRowIndex = parseInt(curTr.getAttribute('row-index'));\\n\\n\\t\\tthis.querySelectorAll(`tr[row-index=\\\"${this.curRowIndex}\\\"]`).forEach(el=> el.classList.add(\\\"selected\\\"));\\n    \\n    if (this.curRowIndex >= 0) {\\n      this.dispatchEvent(\\n        new CustomEvent('trDblClick', {\\n          detail: {\\n            tr: curTr,\\n            data: this.options.data,\\n            row: this.options.data[this.curRowIndex],\\n            rowIndex: this.curRowIndex\\n          },\\n          bubbles: true\\n        })\\n      );\\n    }\\n  }\\n  \\n\\n  /**\\n   * @desc 룰버튼 클릭 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onRoleButtonClick(event) {\\n    let curTr = event.target.$closest(`tr`);\\n    let curRowIndex = parseInt(curTr.getAttribute('row-index'));\\n    let role = event.target.getAttribute('role');\\n\\n    if (curRowIndex >= 0) {\\n      this.dispatchEvent(\\n        new CustomEvent(role + '.click', {\\n          detail: {\\n            data: this.options.data,\\n            row: this.options.data[curRowIndex],\\n            rowIndex: curRowIndex,\\n            role: role\\n          },\\n          bubbles: true\\n        })\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @desc 스크롤 최상단을 동기화한다.\\n   * @example -\\n   */\\n  scrollTopSync() {\\n    let curRowIndex = this.tableBody.firstElementChild.getAttribute(\\n      'row-index'\\n    );\\n    let maxRow = this.options.data.length - this.options.pageSize;\\n\\n    this.oJJMoveable.moveTop(curRowIndex / maxRow);\\n  }\\n\\n  /**\\n   * @desc 스크롤 이동 이벤트를 실행한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onScrollMove(event) {\\n    let curRowIndex = this.tableBody.firstElementChild.getAttribute(\\n      'row-index'\\n    );\\n    let maxRow = this.options.data.length - this.options.pageSize;\\n\\n    if (curRowIndex && maxRow > 0) {\\n      let rowIndex = parseInt((event.detail.top / event.detail.maxTop) * maxRow);\\n\\n      this._renderPage(rowIndex);\\n    }\\n  }\\n\\n  /**\\n   * @desc 컬럼정렬 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onColSorted(event) {\\n    Jinja.global.arrMove(\\n      this.options.colModel,\\n      event.detail.startIndex - this.sysColumnCount,\\n      event.detail.endIndex - this.sysColumnCount\\n    );\\n\\n    let firstRowIndex = this.tableBody.firstElementChild.getAttribute(\\n      'row-index'\\n    );\\n\\n    this._renderColGroup();\\n    this._renderPage(firstRowIndex);\\n  }\\n\\n  /**\\n   * @desc 행선택 채크박스 클릭 이벤트를 처리한다.\\n   * @param {Object} - 이벤트\\n   * @example -\\n   */\\n  onTrChkSelect(event) {\\n    let tr = event.target.parentElement;\\n    let trIndex = tr.getAttribute('row-index');\\n\\n    if (trIndex) {\\n  \\t\\tthis.querySelectorAll(`tr[row-index=\\\"${trIndex}\\\"]`).forEach(el=> el.classList.toggle('checked'));\\n      this.options.data[trIndex]._checked = !this.options.data[trIndex]._checked;\\n    }\\n  }\\n\\n  /**\\n   * @desc 그리드 헤더 선택 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onThSelect(event) {\\n    this.classList.add('col-sorting');\\n\\n    event.target.classList.add('select');\\n\\n    Jinja.addEventListener('mouseup', e2 => {\\n        this.classList.remove('col-sorting');\\n\\n        event.target.classList.remove('select');\\n      },\\n      { once: true }\\n    );\\n  }\\n\\n  /**\\n   * @desc 그리드 헤더 선택해제 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onThUnSelect(event) {}\\n\\n  /**\\n   * @desc 마우스 휠동작 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onWheel(event) {\\n    event.preventDefault();\\n\\n    if (event.deltaY > 0) this.nextRowBind();\\n    if (event.deltaY < 0) this.prevRowBind();\\n  }\\n\\n  /**\\n   * @desc 키다운 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onKeyDown(event) {\\n    let keyMap = Jinja.global.getEventKeyMap(event);\\n\\n    if (['Up', 'Down', 'PgUp', 'PgDn', 'Hhome', 'End'].includes(keyMap)) {\\n      event.preventDefault();\\n      event.stopPropagation();\\n    }\\n\\n    switch (keyMap) {\\n      case 'Up':\\n        this.prevRowBind();\\n\\n        break;\\n      case 'Down':\\n        this.nextRowBind();\\n\\n        break;\\n      case 'PgUp':\\n        this.prevPageBind();\\n\\n        break;\\n      case 'PgDn':\\n        this.nextPageBind();\\n\\n        break;\\n      case 'Home':\\n        this._renderPage(0);\\n\\n        break;\\n      case 'End':\\n        let moveIndex = Math.max(\\n          this.options.data.length - this.options.pageSize,\\n          0\\n        );\\n\\n        this._renderPage(moveIndex);\\n\\n        break;\\n    }\\n  }\\n\\n  /**\\n   * @desc 정렬 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onSort(event) {\\n    if (event.target.matches('.sortIcon')) {\\n      let th = event.target.parentElement;\\n      let thIndex =\\n          Jinja.dom.findIndex(th.parentElement, th) - this.sysColumnCount;\\n      let field = this.options.colModel[thIndex].field;\\n      let orderType = th.getAttribute('order');\\n\\n      if (event.ctrlKey) {\\n      } else {\\n        this.options.sort = [];\\n        this.tableHead\\n          .querySelectorAll('th')\\n          .forEach(el => (el != th ? el.removeAttribute('order') : ''));\\n      }\\n\\n      if (!orderType) {\\n        th.setAttribute('order', 'asc');\\n      } else if (orderType == 'asc') {\\n        th.setAttribute('order', 'desc');\\n      } else {\\n        th.removeAttribute('order');\\n        field = 'index';\\n      }\\n\\n      this.options.sort.push({ field: field, type: th.getAttribute('order') });\\n\\n      let sortKey = {};\\n\\n      this.options.sort.forEach(sort => (sortKey[sort.field] = sort.type));\\n      this.options.data = this.sortRows(this.options.data, sortKey);\\n      this._renderPage(0);\\n    }\\n  }\\n\\n  /**\\n   * @desc 마우스 포커스인 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onMouseOver(event) {\\n    if (this.matches('.resizing')) return;\\n\\n    if (event.target.matches('th, td')) {\\n      this.sizeBar.classList.add('on');\\n      this.sizeBar.thIndex = Jinja.dom.findIndex(\\n        event.target.parentElement,\\n        event.target\\n      );\\n      this.sizeBar.thWidth = event.target.offsetWidth;\\n\\n      let x =\\n          event.target.getBoundingClientRect().x -\\n          this.getBoundingClientRect().x +\\n          this.scrollLeft;\\n      let y =\\n          this.table.getBoundingClientRect().y - this.getBoundingClientRect().y;\\n      let w = event.target.offsetWidth;\\n      let h = this.table.offsetHeight;\\n\\n      this.sizeBar.style.top = y + 'px';\\n      this.sizeBar.style.left = x + w - 4 + 'px';\\n      this.sizeBar.style.height = h + 'px';\\n\\n      this.sizeBar.hidden = this.sizeBar.thIndex < 2;\\n    }\\n  }\\n\\n  /**\\n   * @desc 마우스 포커스아웃 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onMouseOut(event) {}\\n\\n  /**\\n   * @desc 데이터 입력 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onInput(event) {\\n    let value = event.target.value;\\n    let field = event.target.getAttribute('bind');\\n    let tr = event.target.$closest('tr');\\n    let target, oldValue;\\n\\n    if (field && tr) {\\n      let rowindex = tr.getAttribute('row-index');\\n\\n      if (rowindex) {\\n        target = this.options.data[rowindex];\\n        oldValue = target[field];\\n        target[field] = value;\\n\\n        if (\\n          target.hasOwnProperty('_crud_') &&\\n          ['R', 'U'].includes(target['_crud_']) &&\\n          field.substr(0, 1) != '_'\\n        ) {\\n          if (target['_changeData_'][field]) {\\n            target['_changeData_'][field]['val'] = value;\\n          } else {\\n            target['_changeData_'][field] = {\\n              old: oldValue,\\n              val: value\\n            };\\n          }\\n\\n          if (\\n            target['_changeData_'][field].old ==\\n            target['_changeData_'][field].val\\n          ) {\\n            delete target['_changeData_'][key];\\n          }\\n\\n          target['_crud_'] = Object.keys(target['_changeData_']).length\\n            ? 'U'\\n          : 'R';\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 리사이즈 시작 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onResizeStart(event) {\\n    if (this.sizeBar.thIndex < 2) return;\\n\\n    event.preventDefault();\\n\\n    let _this = this;\\n\\n    this.classList.add('resizing');\\n\\n    if (event.type === 'touchstart') {\\n      this.startX = event.touches[0].clientX;\\n      this.startY = event.touches[0].clientY;\\n\\n      window.addEventListener('touchend', end);\\n      window.addEventListener('touchmove', move);\\n    } else {\\n      if (event.button == 0) {\\n        this.startX = event.clientX;\\n        this.startY = event.clientY;\\n\\n        window.addEventListener('mouseup', end);\\n        window.addEventListener('mousemove', move);\\n      }\\n    }\\n\\n    function move(e) {\\n      if (!_this.classList.contains('resizing')) return;\\n\\n      e.preventDefault();\\n\\n      let offset;\\n\\n      if (e.type === 'touchmove') {\\n        offset =\\n          e.touches[0].clientX -\\n          _this.table.getBoundingClientRect().x -\\n          _this.table.parentElement.scrollLeft;\\n      } else {\\n        offset =\\n          e.clientX -\\n          _this.table.getBoundingClientRect().x -\\n          _this.table.parentElement.scrollLeft;\\n      }\\n\\n      _this.sizeBar.style.left = offset + 'px';\\n    }\\n\\n    function end(e) {\\n      if (!_this.classList.contains('resizing')) return;\\n\\n      _this.classList.remove('resizing');\\n\\n      let offset;\\n\\n      if (e.type === 'touchmove') {\\n        offset = e.touches[0].clientX - _this.startX;\\n      } else {\\n        offset = e.clientX - _this.startX;\\n      }\\n\\n      let sizeWidth = _this.sizeBar.thWidth + offset;\\n\\n      _this.table.querySelector('colgroup').children[\\n        _this.sizeBar.thIndex\\n      ].style.width = sizeWidth + 'px';\\n      _this.options.colModel[\\n        _this.sizeBar.thIndex - _this.sysColumnCount\\n      ].width = sizeWidth + 'px';\\n\\n      _this.sizeBar.ref = null;\\n      _this.sizeBar.columnIndex = null;\\n      _this.sizeBar.classList.remove('on');\\n\\n      window.removeEventListener('mouseup', end);\\n      window.removeEventListener('mousemove', move);\\n      window.removeEventListener('touchend', end);\\n      window.removeEventListener('touchmove', move);\\n\\n      if (\\n        _this.options.fixColIndex &&\\n        _this.sizeBar.thIndex < _this.options.fixColIndex\\n      ) {\\n        let firstRowIndex = _this.tableBody.firstElementChild.getAttribute(\\n          'row-index'\\n        );\\n\\n        _this._renderPage(firstRowIndex);\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 세로 스크롤 이벤트를 처리한다.\\n   * @param {event} - 이벤트\\n   * @example -\\n   */\\n  onScrollHorizontal(event) {\\n    if (this.options.isBidDataSpeed) {\\n      this.dataBind();\\n    }\\n  }\\n\\n  updateCell (row, field, value){\\n    let rowindex = this.options.data.indexOf(row);\\n    if(rowindex >= 0){\\n      let target = this.options.data[rowindex];\\n      let oldValue = target[field];\\n      target[field] = value;\\n\\n      if(target.hasOwnProperty(\\\"_crud_\\\") && [\\\"R\\\",\\\"U\\\"].includes(target[\\\"_crud_\\\"]) && field.substr(0,1) != \\\"_\\\" ){\\n\\n        if(target[\\\"_changeData_\\\"][field]){\\n          target[\\\"_changeData_\\\"][field][\\\"val\\\"] = value; \\n        }\\n        else {\\n          target[\\\"_changeData_\\\"][field] = {\\n            \\\"old\\\": oldValue,\\n            \\\"val\\\": value\\n          };\\n        }\\n\\n\\n        if(target[\\\"_changeData_\\\"][field].old == target[\\\"_changeData_\\\"][field].val){\\n          delete target[\\\"_changeData_\\\"][key];\\n        }\\n\\n        target[\\\"_crud_\\\"] = Object.keys(target[\\\"_changeData_\\\"]).length ? \\\"U\\\" : \\\"R\\\";\\n      }\\n\\n    }\\n\\n  }  \\n  /**\\n   * 체크표시된 row를 삭제한다 \\n   */\\n  checkedDelete(isUncheck){\\n    for(let i=this.options.data.length-1; i>=0; i--){\\n      let row = this.options.data[i];\\n      if(row._checked){\\n        // 처리후 체크표시 제거여부 판단\\n        if(isUncheck) row._checked = false;\\n        switch(row._crud_){\\n          case \\\"C\\\":\\n            this.options.data.splice(i,1);\\n            break;\\n          case \\\"D\\\":\\n            if(Object.keys(row._changeData_).length){\\n              row._crud_ = \\\"U\\\";  \\n            } else {\\n              row._crud_ = \\\"R\\\";  \\n            }\\n            break;\\n          default:\\n            row._crud_ = \\\"D\\\";\\n            break;\\n        }\\n      }\\n\\n    }\\n    this.refresh();\\n\\n  }  \\n\\n  refresh(){\\n    let firstRowIndex = this.tableBody.firstElementChild.getAttribute(\\\"row-index\\\");\\n    this._renderPage(firstRowIndex);\\n  }\\n\\n  activeIndex(index){\\n    let tr = this.tableBody.querySelector(`tr[row-index=\\\"${index}\\\"]`);\\n    if(!tr){\\n      this._renderPage(index);\\n      tr = this.tableBody.firstElementChild;\\n    }\\n    tr.querySelector(`td`).click();\\n\\n    return tr;\\n  }\\n  activeRow(row){\\n    let index = this.options.data.indexOf(row);\\n    return this.activeIndex(index);\\n  }\\n\\n  /**\\n   * @desc 지정한 rows 데이터를 지정한 정렬기준으로 정렬하여 반환한다.\\n   * @param {Array} - rows 데이터\\n   * @param {Object} - 정렬기준정보\\n   * @return {Array} - 변경된 rows 데이터\\n   * @example -\\n   */\\n  sortRows(rows, keys) {\\n    keys = keys || {};\\n\\n    let obLen = function (obj) {\\n      let size = 0, key;\\n\\n      for (key in obj) {\\n        if (obj.hasOwnProperty(key)) size++;\\n      }\\n\\n      return size;\\n    };\\n\\n    let obIx = function (obj, ix) {\\n      let size = 0, key;\\n\\n      for (key in obj) {\\n        if (obj.hasOwnProperty(key)) {\\n          if (size == ix) return key;\\n\\n          size++;\\n        }\\n      }\\n\\n      return false;\\n    };\\n\\n    let multiSort = function (a, b, d) {\\n      d = d !== null ? d : 1;\\n\\n      if (a == b) return 0;\\n\\n      return a > b ? 1 * d : -1 * d;\\n    };\\n\\n    let KL = obLen(keys);\\n    let newarr = rows.slice(0);\\n\\n    if (!KL) {\\n      return newarr.sort(multiSort);\\n    }\\n\\n    for (let k in keys) {\\n      if (keys[k]) keys[k] = keys[k].toLowerCase();\\n\\n      keys[k] =\\n        keys[k] == 'desc' || keys[k] == -1\\n        ? -1\\n      : keys[k] == 'skip' || keys[k] === 0\\n        ? 0\\n      : 1;\\n    }\\n\\n    newarr.sort(function (a, b) {\\n      let sorted = 0, ix = 0;\\n\\n      while (sorted === 0 && ix < KL) {\\n        let k = obIx(keys, ix);\\n\\n        if (k) {\\n          let dir = keys[k];\\n\\n          sorted = multiSort(a[k], b[k], dir);\\n          ix++;\\n        }\\n      }\\n\\n      return sorted;\\n    });\\n\\n    return newarr;\\n  }\\n\\n  /**\\n   * @desc 그리드 데이터를 CSV파일로 내보내기한다.\\n   * @example -\\n   */\\n  exportcsv() {\\n    Jinja.global.csv(this.options.data, 'export');\\n  }\\n\\n  /**\\n   * @desc 그리드 데이터를 엑셀파일로 내보내기한다.\\n   * @param {String} - 파일제목\\n   * @example -\\n   */\\n  exportexcel(title) {\\n    let exportDiv = document.createElement('div');\\n\\n    exportDiv.classList.add('hidden');\\n\\n    let caption = document.createElement('h2');\\n\\n    caption.appendChild(document.createTextNode(title || '리포트'));\\n    exportDiv.appendChild(caption);\\n    exportDiv.appendChild(this.table.cloneNode(true));\\n\\n    exportDiv.querySelectorAll('thead th').forEach(el => {\\n      el.style.backgroundColor = '#e1eaf8';\\n      el.style.color = 'black';\\n    });\\n\\n    exportDiv.querySelectorAll('table').forEach(el => {\\n      el.setAttribute('border', '1');\\n    });\\n\\n    exportDiv.querySelector('tbody').innerHTML = this.json2html();\\n\\n    let htmltable = exportDiv.innerHTML;\\n    let excelFile =\\n        \\\"<html xml:lang='en-US' xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:x='urn:schemas-microsoft-com:office:excel' xmlns='http://www.w3.org/TR/REC-html40'>\\\";\\n    excelFile += '<head>';\\n    excelFile +=\\n      '<meta http-equiv=\\\"Content-type\\\" content=\\\"text/html;charset=UTF-8\\\" />';\\n    excelFile += '<!--[if gte mso 9]>';\\n    excelFile += '<xml>';\\n    excelFile += '<x:ExcelWorkbook>';\\n    excelFile += '<x:ExcelWorksheets>';\\n    excelFile += '<x:ExcelWorksheet>';\\n    excelFile += '<x:Name>';\\n    excelFile += '{worksheet}';\\n    excelFile += '</x:Name>';\\n    excelFile += '<x:WorksheetOptions>';\\n    excelFile += '<x:DisplayGridlines/>';\\n    excelFile += '</x:WorksheetOptions>';\\n    excelFile += '</x:ExcelWorksheet>';\\n    excelFile += '</x:ExcelWorksheets>';\\n    excelFile += '</x:ExcelWorkbook>';\\n    excelFile += '</xml>';\\n    excelFile += '<![endif]-->';\\n    excelFile += '</head>';\\n    excelFile += '<body>';\\n    excelFile += htmltable.replace(/\\\"/g, \\\"'\\\");\\n    excelFile += '</body>';\\n    excelFile += '</html>';\\n    let uri = 'data:application/vnd.ms-excel;base64,';\\n    let ctx = { worksheet: '출력', table: htmltable };\\n\\n    uri = uri + this.base64(this.format(excelFile, ctx));\\n    uri = uri.replace('data:application/vnd.ms-excel;base64,', '');\\n    uri = decodeURIComponent(escape(window.atob(uri)));\\n\\n    let blob = new Blob([uri], { type: 'application/vnd.ms-excel' });\\n\\n    uri = window.URL.createObjectURL(blob);\\n\\n    let link = document.createElement('a');\\n\\n    link.href = uri;\\n    link.style = 'visibility:hidden';\\n    link.download = 'download.xls';\\n\\n    document.body.appendChild(link);\\n\\n    link.click();\\n\\n    document.body.removeChild(link);\\n\\n    exportDiv.remove();\\n  }\\n\\n  /**\\n   * @desc 그리드 데이터를 HTML로 변환하여 반환한다.\\n   * @param {} -\\n   * @return {String} - html\\n   * @example -\\n   */\\n  json2html() {\\n    let bodyHtml = '';\\n\\n    this.options.data.forEach(row => {\\n      let tr = '<tr>';\\n\\n      this.options.colModel.forEach(col => {\\n        let txt = row[col.field];\\n\\n        tr += '<td>' + txt + '</td>';\\n      });\\n\\n      tr += '</tr>';\\n      bodyHtml += tr;\\n    });\\n\\n    return bodyHtml;\\n  }\\n\\n  /**\\n   * @desc 지정한 문자열을 지정한 배열로 반환한다.\\n   * @param {String} - 대상 문자열\\n   * @param {Array} - 반환대상 배열\\n   * @return {Array} - 변경된 배열\\n   * @example -\\n   */\\n  format(str, arr) {\\n    return str.replace(/{(\\\\w+)}/g, function (m, p) {\\n      return arr[p];\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 문자열을 base64로 인코딩하여 반환한다.\\n   * @param {String} - 대상 문자열\\n   * @return {String} - base64 문자열\\n   * @example -\\n   */\\n  base64(str) {\\n    return window.btoa(unescape(encodeURIComponent(str)));\\n  }\\n}\\n\\ncustomElements.define('jj-grid', JJGrid);\\n/* ==JJExcel.640.class================ */\\nclass JJExcel extends JJElement {\\n\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    // 엑셀자료\\n    this.dbo; //JJBatisDBA\\n    this.rows = [];\\n    this.keymap = [];\\n    return {\\n      \\\"jBatisId\\\": workspaceMeta.options.appInfo.jbatisId,\\n      \\\"tableName\\\": \\\"\\\",\\n      \\\"keyField\\\": \\\"KEY_ID\\\",\\n      \\\"gridClass\\\": \\\"jjExcel\\\"\\n    };\\n  }\\n\\n  _render() {\\n\\n    this.setJBatis(this.options.jBatisId);\\n\\n    this.file = document.createElement('input');\\n    this.file.type = \\\"file\\\"\\n    this.file.hidden = true;\\n    this.appendChild(this.file);\\n\\n    this.excelBox = document.createElement('div');\\n    this.excelBox.setAttribute(\\\"class\\\", \\\"excelWrap\\\");\\n    this.excelBox.setAttribute(\\\"tabindex\\\", -1);\\n    this.appendChild(this.excelBox);\\n\\n  }\\n\\n  _setEvent() {\\n    this.file.addEventListener(\\\"change\\\", e=>{\\n      this._fileUpload(this.file.files);\\n    })\\n\\n    this.excelBox.addEventListener(\\\"dragover\\\", e => {\\n      e.preventDefault();\\n      this.excelBox.classList.add(\\\"win-drag\\\");\\n    });\\n    this.excelBox.addEventListener(\\\"dragleave\\\", e => this.excelBox.classList.remove(\\\"win-drag\\\"));\\n    this.excelBox.addEventListener(\\\"drop\\\", e => {\\n      e.stopPropagation();\\n      e.preventDefault();\\n      var data = e.dataTransfer;\\n\\n      if (data.types[0] == \\\"Files\\\") {\\n        this._fileUpload(data.files);    \\t\\n      }\\n      this.excelBox.classList.remove(\\\"win-drag\\\");\\n    });\\n\\n    this.excelBox.addEventListener('paste', (event) => {\\n      \\n      if(this.excelBox.childElementCount) return;\\n\\n      let html = event.clipboardData.getData(\\\"text/html\\\");\\n      \\n      if(html){\\n        let box = document.createElement('div');\\n        box.innerHTML = html;\\n        let table = box.querySelector('table');\\n\\n        this.rows = this._table2json(table, true);\\n\\n        this.excelBox.innerHTML = Jinja.global.json2html(this.rows);    \\n        this._makeImportTable();\\n      }\\n    });    \\n  }\\n\\n  _fileUpload(files){\\n    if(!files.length) return;\\n\\n    let wait = new JJWaitLayer(this, {\\\"mwssage\\\": \\\"업데이트 배포중입니다.\\\"});\\n    this.dbo.excelUpload(files).then(result => {\\n      this.rows = result.rows;\\n      this.excelBox.innerHTML = Jinja.global.json2html(this.rows);    \\n      this._makeImportTable();\\n      this.dispatchEvent(new CustomEvent('fileSelect', {\\n        detail: {\\n          \\\"file\\\": files[0]\\n        },\\n        bubbles: true\\n      }));\\n    }).finally(()=>{\\n      wait.destroy();      \\n    })\\n\\n  }\\n  _makeImportTable(){\\n    let txtName = document.createElement(\\\"input\\\");\\n    let selType = document.createElement(\\\"select\\\");\\n\\n    let _html = `<option value=\\\"\\\">제외</option>`\\n    this.dbo.getDBDomain().forEach(item=>{\\n      _html += `<option value=\\\"${item.CODE}\\\">${item.NAME}</option>`\\n    })\\n    selType.innerHTML = _html;\\n\\n    // 컬럼명 만들기\\n    let nameTr = this.excelBox.querySelector('thead tr').cloneNode(true);\\n    this.excelBox.querySelector('thead').appendChild(nameTr);\\n\\n    nameTr.querySelectorAll('th').forEach((th,index)=>{\\n      let typeVal = this.rows[0][th.innerText];\\n      let dType = this.dbo.val2DBDomain(typeVal);\\n\\n      let columnName = 'COL'+index;\\n\\n      th.$empty();\\n      let fname = txtName.cloneNode(true);\\n      fname.value = columnName;\\n\\n      let ftype = selType.cloneNode(true);\\n      ftype.value = dType;\\n\\n      th.appendChild(fname);\\n      th.appendChild(ftype);\\n    });\\n\\n  }\\n\\n  _table2json(table, isHead){\\n    let rows =[];\\n    let keys =[];\\n\\n    if(isHead){\\n      table.querySelectorAll('tr').forEach((tr, _index_)=>{\\n        if(_index_==0){\\n          tr.querySelectorAll('td').forEach((td,index)=>{\\n            if(keys.includes(td.innerText.trim())){\\n              keys.push(td.innerText.trim().replaceAll(/\\\\n/,'').replaceAll(/ /,'')+\\\"_COL\\\"+index);  \\n            } else {\\n              keys.push(td.innerText.trim().replaceAll(/\\\\n/,'').replaceAll(/ /,''));  \\n            }\\n\\n          })\\n        } else {\\n          let row={};\\n          tr.querySelectorAll('td').forEach((td,index)=>{\\n            row[keys[index]] = td.innerText.trim();\\n          })\\n          rows.push(row);\\n        }\\n      })\\n    } else {\\n      table.querySelectorAll('tr').forEach(tr=>{\\n        let row ={}\\n        tr.querySelectorAll('td').forEach((td,index)=>{\\n          row[\\\"COL\\\"+index] = td.innerText;\\n        })\\n        rows.push(row);\\n      })\\n\\n    }\\n\\n    return rows;\\n  }\\n\\n\\n  fileOpen(){\\n    this.file.value=\\\"\\\";\\n    this.file.click();\\n  }                               \\n\\n  createTable(tableName){\\n    let wait = new JJWaitLayer(this, {\\\"mwssage\\\": \\\"자료를 업로드 중입니다.\\\"});\\n    this.options.tableName = tableName;\\n    this.keymap = [\\n      {\\n        \\\"COLUMN_NAME\\\" : \\\"CELL_INDEX\\\", \\n        \\\"COLUMN_LABEL\\\" : \\\"행번호\\\",\\n        \\\"COLUMN_DOMAIN\\\": \\\"INT\\\"\\n      }\\n    ];\\n\\n    let th1 = this.excelBox.querySelectorAll('thead tr:nth-child(1) th');\\n    let th2 = this.excelBox.querySelectorAll('thead tr:nth-child(2) th');\\n\\n    th2.forEach((th,index)=>{\\n      let ftype = th.querySelector('select').value;\\n      let fname = th.querySelector('input').value;\\n      let ename = th1[index].innerText;\\n\\n      let column ={\\n        \\\"COLUMN_NAME\\\" : fname,\\n        \\\"COLUMN_LABEL\\\" : ename,\\n        \\\"COLUMN_DOMAIN\\\" : ftype\\n      }\\n\\n      if(column.COLUMN_DOMAIN){\\n        this.keymap.push(column);\\n      }\\n    })\\n\\n\\n\\n    let sendData = {\\n      \\\"TABLE_NAME\\\": this.options.tableName,\\n      \\\"KEY_FIELD\\\": this.options.keyField,\\n      \\\"COLUMNS\\\" : this.keymap\\n    };\\n\\n    return this.dbo.createTable(sendData)\\n      .then(()=>{\\n      Jinja.confirm.toastMessage(\\\"테이블생성이 완료되었습니다.<br>업로드중입니다.\\\");\\n\\t\\t\\t\\n      let sendData = [];\\n      this.rows.forEach((item,index)=>{\\n        item[\\\"KEY_ID\\\"] = item[\\\"KEY_ID\\\"]||Jinja.global.uuid();\\n        let row = {\\n          \\\"table\\\": this.options.tableName, \\n          \\\"keyField\\\": this.options.keyField,\\n          \\\"keyValue\\\": item[this.options.keyField],\\n          \\\"crud\\\": \\\"C\\\",\\n          \\\"field\\\": {}\\n        };\\n        row.field[\\\"CELL_INDEX\\\"] = index+1;\\n\\n        this.keymap.forEach(column=>{\\n          if(column.COLUMN_NAME==\\\"CELL_INDEX\\\") return;\\n          switch(column.COLUMN_DOMAIN){\\n            case \\\"INT\\\":\\n              row.field[column.COLUMN_NAME] = parseInt(item[column.COLUMN_LABEL]);\\n              break;\\n            case \\\"FLOAT\\\":\\n              row.field[column.COLUMN_NAME] = item[column.COLUMN_LABEL].toString();\\n              break;\\n            default:\\n              row.field[column.COLUMN_NAME] = item[column.COLUMN_LABEL];\\n              break;\\n          }\\n        })\\n        sendData.push(row);\\n      });\\n\\n      return this.dbo.multirows(sendData)\\n    })\\n      .then(result=>{\\n      // 설정화면에서 시스템 필드에 대해서도 라벨을 설정할수 있도록\\n      // 시스템에서 설정된 고유번호들도 생성해준다\\n      this.keymap = this.keymap\\n        .concat(this.dbo.getSystemColumns())\\n        .concat([\\n        {\\n          \\\"COLUMN_NAME\\\" : this.options.keyField, \\n          \\\"COLUMN_LABEL\\\" : \\\"고유번호\\\",\\n          \\\"COLUMN_DOMAIN\\\": \\\"VARCHAR\\\",\\n        }\\n      ]);\\n\\n      Jinja.confirm.toastMessage(\\\"테이블생성 후 <br>업로드가 완료되었습니다.\\\");\\n\\n      return this.getOptionMap()\\n    })\\n      .finally(()=>{\\n        wait.destroy();      \\n      });    \\n\\n\\n  }\\n\\n  setJBatis(jbatisId){\\n    this.dbo = new JJBatisDBA({\\n      \\\"workspace\\\": jbatisId\\n    });   \\n\\n    return this.dbo;\\n  }\\n\\n  getOptionMap(){\\n    return {\\n      \\\"workspace\\\": this.options.jBatisId,\\n      \\\"table\\\": this.options.tableName,\\n      \\\"keyField\\\": this.options.keyField,\\n      \\\"keymap\\\": this.keymap  \\n    }\\n  }\\n\\n\\n}\\n\\ncustomElements.define('jj-excel', JJExcel);\\n/* ==JJAppGrid.640.class================ */\\n\\n/**\\n * @classdesc 그리드 컴포넌트관리를 위한 클래스\\n */\\nclass JJAppGrid extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this.curRowIndex;\\n    this.curKey;\\n    return {\\n      \\\"apiVersion\\\": workspaceMeta.options.appInfo.apiVersion||\\\"v61\\\",\\n      \\\"gridClass\\\": \\\"jjGrid\\\",\\n      \\\"title\\\": { \\\"text\\\": \\\"\\\" },\\n      \\\"dataSource\\\":{\\n        \\\"workspace\\\": workspaceMeta.options.appInfo.jbatisId,\\n        \\\"table\\\": \\\"\\\",\\n        \\\"keyField\\\": \\\"\\\",\\n        \\\"displayField\\\":\\\"\\\",\\n        \\\"sorts\\\":[],\\n        \\\"searchs\\\":[]\\n      },\\n      \\\"data\\\": [],\\n      \\\"colModel\\\": [\\n        { \\\"label\\\": 'Column1' },\\n        { \\\"label\\\": 'Column2' },\\n        { \\\"label\\\": 'Column3' },\\n        { \\\"label\\\": 'Column4' },\\n        { \\\"label\\\": 'Column5' },\\n        { \\\"label\\\": 'Column6' },\\n        { \\\"label\\\": 'Column7' },\\n        { \\\"label\\\": 'Column8' },\\n        { \\\"label\\\": 'Column9' },\\n        { \\\"label\\\": 'Column10' }\\n      ],\\n      \\\"headHtml\\\":\\\"\\\",\\n      \\\"pageSize\\\": 10,\\n      \\\"fixColIndex\\\": 0,\\n      \\\"addInTool\\\": [],\\n      \\\"uploadField\\\": [],\\n      \\\"addIn\\\": {},\\n      \\\"headContent\\\": '',\\n      \\\"autoFind\\\": false,\\n      \\\"isCellMearge\\\": false,\\n      \\\"isFoot\\\": false,\\n      \\\"isScroll\\\": true,\\n      \\\"isLayoutFixed\\\": false,\\n      \\\"isSort\\\": true,\\n      \\\"isCheck\\\": true,\\n      \\\"lookupColumns\\\":{}\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @param {String} - 챠트유형\\n   * @example -\\n   */\\n  _render() {\\n    let html = `\\n<div class=\\\"grid-warp\\\" >\\n<table tabindex=-1>\\n<colgroup></colgroup>\\n<thead></thead>\\n<tbody></tbody>\\n<tfoot></tfoot>\\n</table>\\n</div>\\n<div class='sArea'><div class='uScrCur'></div></div>\\n<div class=\\\"fix-grid-warp\\\"></div>\\n<div class=\\\"size-bar\\\"></div>\\n`;\\n\\n    this.innerHTML = html;\\n    this.table = this.querySelector('.grid-warp >table');\\n    this.tableHead = this.querySelector('.grid-warp >table > thead');\\n    this.tableBody = this.querySelector('.grid-warp >table > tbody');\\n    this.fixTableWarp = this.querySelector('.fix-grid-warp');\\n    this.sizeBar = this.querySelector('.size-bar');\\n    this.scrollCur = this.querySelector('.uScrCur');\\n    this.sysColumnCount = 2;\\n\\n    if (!this.options.isScroll) {\\n      this.querySelector('.sArea').hidden = true;\\n    }\\n\\n    this.querySelector('tfoot').setAttribute('class', 'hidden');\\n    this.querySelector('tfoot').hidden = true;\\n\\n    if(this.options.isLayoutFixed){\\n      this.classList.add('fixed');\\n    }\\n\\n    this.setColModel();\\n\\n    this.oJJSortable = new JJSortable([this.tableHead.lastElementChild], {\\n      handles: 'e,w'\\n    });\\n    this.oJJMoveable = new JJMoveable(this.scrollCur, {\\n      handles: 's'\\n    });\\n\\n    if(this.options.autoFind){\\n      this.list();\\n    }    \\n\\n\\n\\n  }\\n\\n  /**\\n   * @desc 컬럼그룹을 생성한다.\\n   * @example -\\n   */\\n  _renderColGroup() {\\n    this.table.querySelector(`colgroup`).innerHTML = '';\\n\\n    let colGroup = `<col style=\\\"width:50px;\\\"><col style=\\\"width:50px;\\\">`;\\n\\n    if (!this.options.isCheck) {\\n      colGroup = `<col style=\\\"width:50px;\\\"><col style=\\\"width:0px;\\\">`;\\n    }\\n\\n    this.options.colModel.forEach((col, index) => {\\n      let newCol = Object.assign(\\n        {},\\n        {\\n          width: '100px'\\n        },\\n        col\\n      );\\n\\n      colGroup += `<col style=\\\"width:${newCol.width};\\\" class=\\\"text-center\\\">`;\\n    });\\n\\n    colGroup += `<col class=\\\"sizeEmpty\\\">`;\\n\\n    this.table.querySelector(`colgroup`).innerHTML = colGroup;\\n  }\\n\\n  /**\\n   * @desc 행순번에 해당하는 행정보로 그리드 행을 생성한다.\\n   * @param {Number} - 행순번\\n   * @return {String} - 그리드 행 HTML\\n   * @example -\\n   */\\n  _renderRow(rowIndex) {\\n\\n    let html = '';\\n    let row = this.options.data[rowIndex];\\n    let statusClass = '';\\n    let crudClass = '';\\n    let keyValue= row[this.options.dataSource.keyField];\\n    if (row) {\\n      if (row._checked) statusClass += ' checked';\\n      if (this.curRowIndex == rowIndex ) statusClass += ' selected';\\n\\n      html = `<tr key=\\\"${keyValue}\\\" row-index=${rowIndex} class=\\\"${statusClass}\\\" _crud_=\\\"${row._crud_}\\\">`;\\n      html += `<td class=\\\"num\\\">${rowIndex + 1}</td>`;\\n      html += `<td class=\\\"trCheck\\\"><i class=\\\"fa\\\"></i></td>`;\\n\\n      this.options.colModel.forEach((col, index) => {\\n        if(col.isHiddenColumn) return;\\n        let newCol = Object.assign(\\n          {},\\n          {\\n            label: '',\\n            field: '',\\n            width: '100px',\\n            align: '',\\n            type: 'text',\\n            domain: 'VARCHAR',\\n            used: true,\\n            visible: true,\\n            editable: false,\\n            required: false,\\n            tdClass: '',\\n            btnClass: 'btn btn-primary',\\n            btnLabel: '',\\n            btnEvent: ''\\n          },\\n          col\\n        );\\n\\n        let dispValue = row[newCol.field];\\n\\n        if(row[\\\"_\\\"+newCol.field+\\\"_\\\"]){\\n          dispValue = row[\\\"_\\\"+newCol.field+\\\"_\\\"];\\n        }\\n        \\n        switch (newCol.domain) {\\n            //           case 'money':\\n            //             if (dispValue == null || dispValue == undefined) {\\n            //               dispValue = '';\\n            //             } else {\\n            //               dispValue = dispValue.$toCurrencyFormat();\\n            //             }\\n\\n            //             if (!newCol.align) newCol.align = 'text-right';\\n\\n            //             break;\\n            //           case 'percent':\\n            //             if (dispValue == null || dispValue == undefined) {\\n            //               dispValue = '';\\n            //             } else {\\n            //               dispValue = dispValue.$toPercentFormat();\\n            //             }\\n\\n            //             if (!newCol.align) newCol.align = 'text-right';\\n\\n            //             break;\\n          case 'INT':\\n            if (dispValue == null || dispValue == undefined) {\\n              dispValue = '';\\n            } else {\\n              dispValue = parseInt(dispValue).$toIntFormat()\\n            }\\n\\n            if (!newCol.align) newCol.align = 'text-right';\\n\\n            break;\\n          case 'FLOAT':\\n            if (dispValue == null || dispValue == undefined) {\\n              dispValue = '';\\n            } else {\\n              dispValue = parseFloat(dispValue).$toFloatFormat();\\n            }\\n\\n            if (!newCol.align) newCol.align = 'text-right';\\n\\n            break;\\n            //           case 'int':\\n            //             if (dispValue == null || dispValue == undefined) {\\n            //               dispValue = '';\\n            //             } else {\\n            //               dispValue = dispValue.$toIntFormat();\\n            //             }\\n\\n            //             if (!newCol.align) newCol.align = 'text-right';\\n\\n            //             break;\\n          case 'DATE':\\n            if (dispValue == null || dispValue == undefined) {\\n              dispValue = '';\\n            } else {\\n              dispValue = new Date(dispValue).$toFormat('yyyy-MM-dd');\\n            }\\n\\n            if (!newCol.align) newCol.align = 'text-center';\\n\\n            break;\\n          case 'DATETIME':\\n            if (dispValue == null || dispValue == undefined) {\\n              dispValue = '';\\n            } else {\\n              dispValue = new Date(dispValue).$toFormat('yyyy-MM-dd HH:mm');\\n            }\\n\\n            if (!newCol.align) newCol.align = 'text-center';\\n\\n            break;\\n          default:\\n            if (dispValue == null || dispValue == undefined) {\\n              dispValue = '';\\n            }\\n            if (!newCol.align) newCol.align = 'text-left';\\n\\n            break;\\n        }\\n\\n        switch (newCol.type) {\\n          case 'money':\\n          case 'percent':\\n          case 'number':\\n          case 'float':\\n          case 'int':\\n            if (newCol.editable) {\\n              html += `<td><input type=\\\"number\\\" class=\\\"form-control text-right\\\" value=\\\"${row[newCol.field]}\\\" bind=\\\"${newCol.field}\\\"></td>`;\\n            } else {\\n              html += `<td class=\\\"${newCol.align}\\\">${dispValue}</td>`;\\n            }\\n\\n            break;\\n          case 'date':\\n            if (newCol.editable) {\\n              html += `<td><input type=\\\"date\\\" class=\\\"form-control\\\" value=\\\"${row[newCol.field]}\\\" bind=\\\"${newCol.field}\\\"></td>`;\\n            } else {\\n              html += `<td class=\\\"${newCol.align}\\\">${dispValue}</td>`;\\n            }\\n\\n            break;\\n          case 'datetime':\\n            if (newCol.editable) {\\n              html += `<td><input type=\\\"datetime-local\\\" class=\\\"form-control\\\" value=\\\"${row[newCol.field]}\\\" bind=\\\"${newCol.field}\\\"></td>`;\\n            } else {\\n              html += `<td class=\\\"${newCol.align}\\\">${dispValue}</td>`;\\n            }\\n\\n            break;\\n          case 'select':\\n            if (newCol.editable) {\\n              html += `<td><select class=\\\"form-control\\\" bind=\\\"${newCol.field}\\\" >`;\\n\\n              if (!newCol.required) {\\n                html += `<option value=\\\"\\\">-select-</option>`;\\n              }\\n\\n              Jinja.code.codes[newCol.code].forEach(item => {\\n                if (row[newCol.field] == item.CODE) {\\n                  html += `<option value=\\\"${item.CODE}\\\" selected>${item.NAME}</option>`;\\n                } else {\\n                  html += `<option value=\\\"${item.CODE}\\\">${item.NAME}</option>`;\\n                }\\n              });\\n\\n              html += `</select></td>`;\\n            } else {\\n              dispValue = Jinja.code.getCodeName(\\n                newCol.code,\\n                row[newCol.field]\\n              );\\n\\n              html += `<td class=\\\"${newCol.align}\\\">${dispValue || ''}</td>`;\\n            }\\n\\n            break;\\n          case 'button':\\n            html += `<td><button type=\\\"button\\\" role=\\\"${newCol.btnEvent}\\\" class=\\\"${newCol.btnClass}\\\">${newCol.btnLabel || newCol.label}</button></td>`;\\n\\n            break;\\n          case 'check':\\n            if (newCol.editable) {\\n              if (!row[newCol.field] || row[newCol.field] == '0') {\\n                html += `<td><input type=\\\"checkbox\\\" bind=\\\"${newCol.field}\\\"></td>`;\\n              } else {\\n                html += `<td><input type=\\\"checkbox\\\" checked bind=\\\"${newCol.field}\\\"></td>`;\\n              }\\n            } else {\\n              html += `<td>${dispValue}</td>`;\\n            }\\n\\n            break;\\n          default:\\n            if (newCol.editable) {\\n              html += `<td class=\\\"${newCol.align}\\\">\\n<input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"${row[newCol.field] || ''}\\\"\\nbind=\\\"${newCol.field}\\\">\\n</td>`;\\n            } \\n            else if(newCol.code) {\\n\\n              dispValue = Jinja.code.getCodeName(\\n                newCol.code,\\n                row[newCol.field]\\n              );\\n\\n              html += `<td class=\\\"${newCol.align}\\\">${dispValue || ''}</td>`;\\n\\n            } else {  \\n\\n              html += `<td class=\\\"${newCol.align}\\\">${dispValue}</td>`;\\n            }\\n\\n            break;\\n        }\\n      });\\n\\n      html += `<td class=\\\"sizeEmpty\\\"</td></tr>`;\\n    }\\n\\n    return html;\\n  }\\n\\n  /**\\n   * @desc 행순번 기준으로 그리드 현재페이지를 생성한다.\\n   * @param {Number} - 행순번\\n   * @example -\\n   */\\n  _renderPage(rowIndex) {\\n    rowIndex = parseInt(rowIndex);\\n\\n    let firstRowIndex = this.tableBody.firstElementChild.getAttribute(\\n      'row-index'\\n    );\\n    let bodyHtml = '';\\n\\n    for (let i = 0; i < this.options.pageSize; i++) {\\n      if (this.options.data && this.options.data[rowIndex]) {\\n        bodyHtml += this._renderRow(rowIndex);\\n      } else {\\n        bodyHtml += this._blankRowHtml;\\n      }\\n\\n      rowIndex++;\\n    }\\n\\n    this.tableBody.innerHTML = bodyHtml;\\n    this.scrollTopSync();\\n    this._renderFixCol();\\n    this.getCRUDCount();\\n\\n  }\\n\\n  /**\\n   * @desc 고정컬럼을 생성한다.\\n   * @example -\\n   */\\n  _renderFixCol() {\\n    this._meargeTableCell();\\n\\n    if (this.options.fixColIndex) {\\n      let cloneTable = this.table.cloneNode(true);\\n\\n      cloneTable\\n        .querySelectorAll(\\n        `colgroup >*:nth-child(${this.options.fixColIndex}) ~ *`\\n      )\\n        .forEach(el => el.remove());\\n\\n      cloneTable.querySelectorAll('thead tr').forEach(tr => {\\n        tr.querySelectorAll(\\n          `:scope >*:nth-child(${this.options.fixColIndex}) ~ *`\\n        ).forEach(el => el.remove());\\n      });\\n\\n      cloneTable.querySelectorAll('tbody tr').forEach(tr => {\\n        tr.querySelectorAll(\\n          `:scope >*:nth-child(${this.options.fixColIndex}) ~ *`\\n        ).forEach(el => el.remove());\\n      });\\n\\n      cloneTable.querySelectorAll('tfoot tr').forEach(tr => {\\n        tr.querySelectorAll(\\n          `:scope >*:nth-child(${this.options.fixColIndex}) ~ *`\\n        ).forEach(el => el.remove());\\n      });\\n\\n      this.fixTableWarp.$empty();\\n      this.fixTableWarp.appendChild(cloneTable);\\n      this.fixTableWarp.style.width = cloneTable.offsetWidth + '.px';\\n      this.fixTableWarp.hidden = false;\\n    } else {\\n      this.fixTableWarp.hidden = true;\\n    }\\n\\n    this._meargeTableCell();\\n  }\\n\\n  /**\\n   * @desc 지정된 table의 cell들을 병합한다.\\n   * @param {Object} - 테이블\\n   * @param {Number} - 셀번호\\n   * @example -\\n   */\\n  _meargeTableCell(table, cellIndex) {\\n    if (!this.options.isCellMearge) return;\\n\\n    if (!table) table = this.table;\\n    if (!cellIndex) cellIndex = 2;\\n\\n    let spanTr = null;\\n    let spanTd = null;\\n    let spanCount = 1;\\n    let spanText = null;\\n\\n    table.querySelectorAll(`[rowspan], [hidden]`).forEach(el => {\\n      el.removeAttribute('rowspan');\\n      el.removeAttribute('hidden');\\n    });\\n\\n    table.querySelectorAll(`tbody tr`).forEach(tr => {\\n      if (tr.getAttribute('row-index')) {\\n        if (!spanTr) {\\n          spanTr = tr;\\n          spanTd = spanTr.childNodes[cellIndex];\\n          spanText = spanTd.innerText;\\n          spanCount = 1;\\n        } else {\\n          if (spanText == tr.childNodes[cellIndex].innerText) {\\n            spanCount++;\\n            spanTd.setAttribute('rowspan', spanCount);\\n            tr.childNodes[cellIndex].hidden = true;\\n          } else {\\n            spanTr = tr;\\n            spanTd = spanTr.childNodes[cellIndex];\\n            spanText = spanTd.innerText;\\n            spanCount = 1;\\n          }\\n        }\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.addEventListener('wheel', e => {\\n      if (\\n        !['INPUT', 'SELECT'].includes(e.target.tagName) &&\\n        e.target.matches('tbody *')\\n      ) {\\n        this.onWheel(e);\\n      }\\n    });\\n\\n    this.addEventListener('keydown', e => {\\n      if (!['INPUT', 'SELECT'].includes(e.target.tagName)) {\\n        this.onKeyDown(e);\\n      }\\n    });\\n\\n    this.addEventListener('click', e => {\\n      if (e.target.matches('tbody td.trCheck')) {\\n        this.onTrChkSelect(e);\\n        return;\\n      }\\n      if (e.target.matches('tbody button[role]')) {\\n        this.onRoleButtonClick(e);\\n      }\\n      if (e.target.matches('tr *')) {\\n        this.onTrClick(e);\\n      }\\n    });\\n\\n    this.addEventListener('mousedown', e => {\\n      //       if (e.target.matches('thead th')) {\\n      //         this.onThSelect(e);\\n      //       }\\n\\n      //       if (e.target.matches('.sortIcon')) {\\n      //         this.onSort(e);\\n      //       }\\n\\n      if (e.target.matches('.size-bar')) {\\n        this.onResizeStart(e);\\n      }\\n    });\\n\\n    this.addEventListener('mousemove', e => {\\n      this.onMouseOver(e);\\n    });\\n\\n    this.addEventListener('mouseup', e => {\\n      if (e.target.matches('thead th')) {\\n        this.onThUnSelect(e);\\n      }\\n    });\\n\\n    this.addEventListener('scroll', e => {\\n      this.onScrollHorizontal(e);\\n    });\\n\\n    this.addEventListener('input', e => {\\n      if (e.target.matches('tbody tr *')) {\\n        this.onInput(e);\\n      }\\n    });\\n\\n    this.addEventListener('JJSortableEnd', e => {\\n      this.onColSorted(e);\\n    });\\n\\n    this.addEventListener('JJMoveable.move', e => {\\n      if (e.target.matches('.uScrCur')) {\\n        this.onScrollMove(e);\\n      }\\n    });\\n\\n    this.addEventListener('paste', (event) => {\\n\\n      let html = event.clipboardData.getData(\\\"text/html\\\");\\n\\n      if(html){\\n        let box = document.createElement('div');\\n        box.innerHTML = html;\\n        let table = box.querySelector('table');\\n\\n        let rows = this._table2json(table);\\n\\n        this.updateCrudData(rows);\\n      }\\n    });     \\n  }\\n\\n  _table2json(table, isHead){\\n    let rows =[];\\n    let keys =[];\\n\\n    if(isHead){\\n      table.querySelectorAll('tr').forEach((tr, _index_)=>{\\n        if(_index_==0){\\n          tr.querySelectorAll('td').forEach((td,index)=>{\\n            if(keys.includes(td.innerText.trim())){\\n              keys.push(td.innerText.trim().replaceAll(/\\\\n/,'').replaceAll(/ /,'')+\\\"_COL\\\"+index);  \\n            } else {\\n              keys.push(td.innerText.trim().replaceAll(/\\\\n/,'').replaceAll(/ /,''));  \\n            }\\n\\n          })\\n        } else {\\n          let row={};\\n          tr.querySelectorAll('td').forEach((td,index)=>{\\n            row[keys[index]] = td.innerText.trim();\\n          })\\n          rows.push(row);\\n        }\\n      })\\n    } else {\\n      table.querySelectorAll('tr').forEach(tr=>{\\n        let row ={}\\n        tr.querySelectorAll('td').forEach((td,index)=>{\\n          row[\\\"COL\\\"+index] = td.innerText;\\n        })\\n        rows.push(row);\\n      })\\n\\n    }\\n\\n    return rows;\\n  }  \\n  /**\\n   * @desc 이벤트를 삭제한다.\\n   * @example -\\n   */\\n  _clearEvent() {\\n    this.oJJSortable.destroy();\\n    this.oJJMoveable.destroy();\\n  }\\n\\n  /**\\n   * @desc 그리드 데이터에서 변경된 데이터를 저장한다.\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  _uploadCrudData() {\\n    let sendData = [];\\n\\n    this.getCrudChangeData().forEach(item => {\\n      let row = {\\n        table: this.options.table,\\n        keyField: this.options.keyField,\\n        keyValue: item[this.options.keyField],\\n        crud: item._crud_,\\n        field: {}\\n      };\\n\\n      switch (item._crud_) {\\n        case 'U':\\n          Object.keys(item._changeData_).forEach(col => {\\n            row.field[col] = item._changeData_[col].val;\\n          });\\n\\n          break;\\n        case 'C':\\n          Object.keys(item).forEach(col => {\\n            if (!col.startsWith('_')) {\\n              row.field[col] = item[col];\\n            }\\n          });\\n\\n          break;\\n        case 'D':\\n          break;\\n      }\\n\\n      sendData.push(row);\\n    });\\n\\n    return Jinja.ajax.post(`/${this.options.apiVersion}/jbatis/ds201/restComcd/multirows`, {\\n      rows: sendData\\n    });\\n  }\\n\\n  /**\\n   * @static\\n   * @memberof JJGrid\\n   * @method get observedAttributes\\n   * @desc 모니터링 할 속성 목록을 반환한다.\\n   * @return {Array} - 모니터링 할 속성 목록\\n   * @example -\\n   */\\n  static get observedAttributes() {\\n    return ['data-type'];\\n  }\\n\\n  /**\\n   * @desc 지정한 옵션으로 그리드를 초기화한다.\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  init(options) {\\n    debugger;\\n    Object.assign(this.options, options);\\n\\n    this._render();\\n  }\\n\\n  /**\\n   * @desc 컬럼모델 정보로 그리드 컬럼을 생성한다.\\n   * @example -\\n   */\\n  setColModel() {\\n    let colGroup = `<col style=\\\"width:50px;\\\"><col style=\\\"width:50px;\\\">`;\\n\\n    if (!this.options.isCheck) {\\n      colGroup = `<col style=\\\"width:50px;\\\"><col style=\\\"width:0px;\\\">`;\\n    }\\n\\n    let thHtml = `<tr class=\\\"\\\"><th>no</th><th>!</th>`;\\n    let brHtml = `<tr class=\\\"\\\"><td>&nbsp</td><td>&nbsp</td>`;\\n    let tfHtml = `<tr class=\\\"\\\"><td>&nbsp</td><td>&nbsp</td>`;\\n\\n    this.options.colModel.forEach((col, index) => {\\n      if(col.isHiddenColumn) return;\\n      let newCol = Object.assign(\\n        {},\\n        {\\n          label: '',\\n          field: '',\\n          width: '100px',\\n          align: '',\\n          type: 'text',\\n          domain: 'VARCHAR',\\n          used: true,\\n          visible: true,\\n          editable: false,\\n          tdClass: '',\\n          btnClass: 'btn btn-primary',\\n          btnLabel: ''\\n        },\\n        col\\n      );\\n\\n      colGroup += `<col style=\\\"width:${newCol.width};\\\" class=\\\"text-center\\\">`;\\n      thHtml += `<th><label title=\\\"${newCol.label}\\\">${newCol.label.replaceAll('\\\\n', '<br />')}</label>`;\\n\\n      if (this.options.isSort) {\\n        thHtml += `<span class=\\\"sortIcon\\\"><i class=\\\"fa\\\"></i></span>`;\\n      }\\n\\n      thHtml += `</th>`;\\n      brHtml += `<td>&nbsp</td>`;\\n      tfHtml += `<td></td>`;\\n    });\\n\\n    colGroup += `<col class=\\\"sizeEmpty\\\">`;\\n    thHtml += `<th class=\\\"sizeEmpty\\\"></th></tr>`;\\n    brHtml += `<td class=\\\"sizeEmpty\\\"></td></tr>`;\\n    tfHtml += `<td class=\\\"sizeEmpty\\\"></td></tr>`;\\n\\n    let bodyHtml = '';\\n\\n    for (let i = 0; i < this.options.pageSize; i++) {\\n      if (this.options.data && this.options.data[i]) {\\n        bodyHtml += this._renderRow(i);\\n      } else {\\n        bodyHtml += brHtml;\\n      }\\n    }\\n\\n    this._blankRowHtml = brHtml;\\n    this.table.querySelector(`colgroup`).innerHTML = colGroup;\\n    this.table.querySelector(`thead`).innerHTML = thHtml;\\n    this.table.querySelector(`tbody`).innerHTML = bodyHtml;\\n    this.table.querySelector(`tfoot`).innerHTML = tfHtml;\\n\\n\\n    if(this.options.headHtml){\\n      this.table.querySelector(`thead`).innerHTML = this.options.headHtml;\\n      let headTrLength = this.table.querySelectorAll('thead tr').length;\\n      Jinja.dom.prepend(this.table.querySelector('thead tr'), `<td rowspan=\\\"${headTrLength}\\\" >no</td><td rowspan=\\\"${headTrLength}\\\">!</td>`);  \\n\\n    }    \\n\\n\\n\\n    this._renderFixCol();\\n  }\\n\\n  /**\\n   * @desc 이전 행에 데이터를 바인딩한다.\\n   * @example -\\n   */\\n  prevRowBind() {\\n    let firstRowIndex = this.tableBody.firstElementChild.getAttribute(\\n      'row-index'\\n    );\\n\\n    if (parseInt(firstRowIndex) > 0) {\\n      let next = parseInt(firstRowIndex) - 1;\\n\\n      if (this.options.data[next]) {\\n        this.tableBody.lastElementChild.remove();\\n\\n        Jinja.dom.prepend(this.tableBody, this._renderRow(next));\\n\\n        this.scrollTopSync();\\n      }\\n\\n      this._renderFixCol();\\n    }\\n  }\\n\\n  /**\\n   * @desc 다음 행에 데이터를 바인딩한다.\\n   * @example -\\n   */\\n  nextRowBind() {\\n    let lastRowIndex = this.tableBody.lastElementChild.getAttribute(\\n      'row-index'\\n    );\\n\\n    if (lastRowIndex) {\\n      let next = parseInt(lastRowIndex) + 1;\\n\\n      if (this.options.data[next]) {\\n        this.tableBody.firstElementChild.remove();\\n\\n        Jinja.dom.append(this.tableBody, this._renderRow(next));\\n\\n        this.scrollTopSync();\\n      }\\n\\n      this._renderFixCol();\\n    }\\n  }\\n\\n  /**\\n   * @desc 이전 페이지에 데이터를 바인딩한다.\\n   * @example -\\n   */\\n  prevPageBind() {\\n    let firstRowIndex = this.tableBody.firstElementChild.getAttribute(\\n      'row-index'\\n    );\\n\\n    if (parseInt(firstRowIndex) > 0) {\\n      let next = Math.max(parseInt(firstRowIndex) - this.options.pageSize, 0);\\n\\n      this._renderPage(next);\\n      this.scrollTopSync();\\n    }\\n  }\\n\\n  /**\\n   * @desc 다음 페이지에 데이터를 바인딩한다.\\n   * @example -\\n   */\\n  nextPageBind() {\\n    let lastRowIndex = this.tableBody.lastElementChild.getAttribute(\\n      'row-index'\\n    );\\n\\n    if (lastRowIndex) {\\n      let next = parseInt(lastRowIndex) + 1;\\n\\n      if (this.options.data[next]) {\\n        this._renderPage(next);\\n        this.scrollTopSync();\\n      }\\n    }\\n  }\\n\\n  firstPageBind(){\\n    this._renderPage(0);\\n  }\\n\\n  // 마지막 페이지로 이동하여 표시\\n  lastPageBind(){\\n    let moveIndex = Math.max(this.options.data.length - this.options.pageSize, 0)\\n    this._renderPage(moveIndex);\\n  }\\n\\n  // 지정된 레코드 번호로 이동\\n  rowIndexSelect(rowIndex){\\n    //     if(this.tableBody.querySelector(\\\"tr.selected\\\")){\\n    //       this.tableBody.querySelector(\\\"tr.selected\\\").classList.remove(\\\"selected\\\");\\n    //     }\\n\\n    let tr = this.tableBody.querySelector(`tr[row-index=\\\"${rowIndex}\\\"]`);\\n\\n    if(tr){\\n      tr.querySelector('td').click();\\n    }\\n    return tr;\\n  }\\n\\n\\n\\n  /**\\n   * @desc 그리드 데이터에서 변경된 데이터를 반환한다.\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  getCrudChangeData() {\\n    return Jinja.global.getChangeCRUD(this.options.data);\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터를 그리드에 반영한다.\\n   * @param {Array} - 그리드 데이터\\n   * @example -\\n   */\\n  updateData(rows) {\\n    this.options.data = rows;\\n    this._renderPage(0);\\n\\n    if(this.options.autoFind){\\n      this.rowIndexSelect(0);\\n    }\\n\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터 그리드 데이터로 변환하고 그리드에 반영한다.\\n   * @param {Array} - 대상 데이터\\n   * @return {Array} - 변경된 데이터\\n   * @example -\\n   */\\n  updateCrudData(rows) {\\n    Jinja.global.setCRUD(rows);\\n\\n    this.updateData(rows);\\n\\n    return rows;\\n  }\\n\\n  /**\\n   * @desc 그리드 데이터에서 변경된 데이터를 저장한다.\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  uploadCrudData() {\\n    return new Promise((resolve, reject) => {\\n      if (this.options.table && this.options.keyField) {\\n        this._uploadCrudData()\\n          .then(resule => {\\n          return resolve(true);\\n        })\\n          .catch(resule => {\\n          return reject(false);\\n        });\\n      } else {\\n        let message = '테이블, 키필드 속성이 지정되지 않았습니다.';\\n\\n        alert(message);\\n\\n        reject(false);\\n      }\\n    });\\n  }\\n\\n\\n  /**\\n   * @desc 행클릭 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onTrClick(event) {\\n    let curTr = event.target.$closest(`tr`);\\n    this.querySelectorAll(\\\"tr.selected\\\").forEach(el=> el.classList.remove(\\\"selected\\\"));\\n\\n\\n    this.curRowIndex = parseInt(curTr.getAttribute('row-index'));\\n    this.curKey = curTr.getAttribute('key');\\n\\n    this.querySelectorAll(`tr[row-index=\\\"${this.curRowIndex}\\\"]`).forEach(el=> el.classList.add(\\\"selected\\\"));\\n\\n    if (this.curRowIndex >= 0) {\\n      this.dispatchEvent(\\n        new CustomEvent('trClick', {\\n          detail: {\\n            tr: curTr,\\n            data: this.options.data,\\n            row: this.options.data[this.curRowIndex],\\n            rowIndex: this.curRowIndex\\n          },\\n          bubbles: true\\n        })\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @desc 룰버튼 클릭 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onRoleButtonClick(event) {\\n    let curTr = event.target.$closest(`tr`);\\n    let curRowIndex = parseInt(curTr.getAttribute('row-index'));\\n    let role = event.target.getAttribute('role');\\n\\n    if (curRowIndex >= 0) {\\n      this.dispatchEvent(\\n        new CustomEvent(role + '.click', {\\n          detail: {\\n            data: this.options.data,\\n            row: this.options.data[curRowIndex],\\n            rowIndex: curRowIndex,\\n            role: role\\n          },\\n          bubbles: true\\n        })\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @desc 스크롤 최상단을 동기화한다.\\n   * @example -\\n   */\\n  scrollTopSync() {\\n    let curRowIndex = this.tableBody.firstElementChild.getAttribute(\\n      'row-index'\\n    );\\n    let maxRow = this.options.data.length - this.options.pageSize;\\n\\n    this.oJJMoveable.moveTop(curRowIndex / maxRow);\\n  }\\n\\n  /**\\n   * @desc 스크롤 이동 이벤트를 실행한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onScrollMove(event) {\\n    let curRowIndex = this.tableBody.firstElementChild.getAttribute(\\n      'row-index'\\n    );\\n    let maxRow = this.options.data.length - this.options.pageSize;\\n\\n    if (curRowIndex && maxRow > 0) {\\n      let rowIndex = parseInt((event.detail.top / event.detail.maxTop) * maxRow);\\n\\n      this._renderPage(rowIndex);\\n    }\\n  }\\n\\n  /**\\n   * @desc 컬럼정렬 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onColSorted(event) {\\n    Jinja.global.arrMove(\\n      this.options.colModel,\\n      event.detail.startIndex - this.sysColumnCount,\\n      event.detail.endIndex - this.sysColumnCount\\n    );\\n\\n    let firstRowIndex = this.tableBody.firstElementChild.getAttribute(\\n      'row-index'\\n    );\\n\\n    this._renderColGroup();\\n    this._renderPage(firstRowIndex);\\n  }\\n\\n  /**\\n   * @desc 행선택 채크박스 클릭 이벤트를 처리한다.\\n   * @param {Object} - 이벤트\\n   * @example -\\n   */\\n  onTrChkSelect(event) {\\n    let tr = event.target.parentElement;\\n    let trIndex = tr.getAttribute('row-index');\\n\\n    if (trIndex) {\\n      this.querySelectorAll(`tr[row-index=\\\"${trIndex}\\\"]`).forEach(el=> el.classList.toggle('checked'));\\n      this.options.data[trIndex]._checked = !this.options.data[trIndex]._checked;\\n\\n      this.dispatchEvent(\\n        new CustomEvent('trCheck', {\\n          detail: {\\n            \\\"tr\\\": tr,\\n            \\\"data\\\": this.options.data,\\n            \\\"checked\\\": this.options.data[trIndex]._checked,\\n            \\\"rowIndex\\\": trIndex,\\n            \\\"crud\\\": this.getCRUDCount()\\n          },\\n          bubbles: true\\n        })\\n      );\\n\\n    }\\n  }\\n\\n  getCRUDCount(){\\n    let result ={\\n      \\\"length\\\": this.options.data.length,\\n      \\\"check\\\": 0,\\n      \\\"C\\\": 0,\\n      \\\"R\\\": 0,\\n      \\\"U\\\": 0,\\n      \\\"D\\\": 0\\n    };\\n\\n    this.options.data.forEach(row=>{\\n      if (row._checked) result.check++;\\n      if (row._crud_ == \\\"C\\\") result.C++;\\n      if (row._crud_ == \\\"R\\\") result.R++;\\n      if (row._crud_ == \\\"U\\\") result.U++;\\n      if (row._crud_ == \\\"D\\\") result.D++;\\n    })\\n\\n    this.dispatchEvent(\\n      new CustomEvent('tableChange', {\\n        detail: {\\n          \\\"data\\\": this.options.data,\\n          \\\"crud\\\": result\\n        },\\n        bubbles: true\\n      })\\n    );\\n\\n    return result;\\n\\n  }\\n\\n  /**\\n   * @desc 그리드 헤더 선택 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onThSelect(event) {\\n    this.classList.add('col-sorting');\\n\\n    event.target.classList.add('select');\\n\\n    Jinja.addEventListener('mouseup', e2 => {\\n      this.classList.remove('col-sorting');\\n\\n      event.target.classList.remove('select');\\n    },\\n                           { once: true }\\n                          );\\n  }\\n\\n  /**\\n   * @desc 그리드 헤더 선택해제 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onThUnSelect(event) {}\\n\\n  /**\\n   * @desc 마우스 휠동작 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onWheel(event) {\\n    event.preventDefault();\\n\\n    if (event.deltaY > 0) this.nextRowBind();\\n    if (event.deltaY < 0) this.prevRowBind();\\n  }\\n\\n  /**\\n   * @desc 키다운 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onKeyDown(event) {\\n    let keyMap = Jinja.global.getEventKeyMap(event);\\n\\n    if (['Up', 'Down', 'PgUp', 'PgDn', 'Hhome', 'End'].includes(keyMap)) {\\n      event.preventDefault();\\n      event.stopPropagation();\\n    }\\n\\n    switch (keyMap) {\\n      case 'Up':\\n        this.prevRowBind();\\n\\n        break;\\n      case 'Down':\\n        this.nextRowBind();\\n\\n        break;\\n      case 'PgUp':\\n        this.prevPageBind();\\n\\n        break;\\n      case 'PgDn':\\n        this.nextPageBind();\\n\\n        break;\\n      case 'Home':\\n        this._renderPage(0);\\n\\n        break;\\n      case 'End':\\n        let moveIndex = Math.max(\\n          this.options.data.length - this.options.pageSize,\\n          0\\n        );\\n\\n        this._renderPage(moveIndex);\\n\\n        break;\\n    }\\n  }\\n\\n  /**\\n   * @desc 정렬 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onSort(event) {\\n    if (event.target.matches('.sortIcon')) {\\n      let th = event.target.parentElement;\\n      let thIndex =\\n          Jinja.dom.findIndex(th.parentElement, th) - this.sysColumnCount;\\n      let field = this.options.colModel[thIndex].field;\\n      let orderType = th.getAttribute('order');\\n\\n      if (event.ctrlKey) {\\n      } else {\\n        this.options.sort = [];\\n        this.tableHead\\n          .querySelectorAll('th')\\n          .forEach(el => (el != th ? el.removeAttribute('order') : ''));\\n      }\\n\\n      if (!orderType) {\\n        th.setAttribute('order', 'asc');\\n      } else if (orderType == 'asc') {\\n        th.setAttribute('order', 'desc');\\n      } else {\\n        th.removeAttribute('order');\\n        field = 'index';\\n      }\\n\\n      this.options.sort.push({ field: field, type: th.getAttribute('order') });\\n\\n      let sortKey = {};\\n\\n      this.options.sort.forEach(sort => (sortKey[sort.field] = sort.type));\\n      this.options.data = this.sortRows(this.options.data, sortKey);\\n      this._renderPage(0);\\n    }\\n  }\\n\\n  /**\\n   * @desc 마우스 포커스인 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onMouseOver(event) {\\n    if (this.matches('.resizing')) return;\\n\\n    if (event.target.matches('th, td')) {\\n      this.sizeBar.classList.add('on');\\n      this.sizeBar.thIndex = Jinja.dom.findIndex(\\n        event.target.parentElement,\\n        event.target\\n      );\\n      this.sizeBar.thWidth = event.target.offsetWidth;\\n\\n      let x =\\n          event.target.getBoundingClientRect().x -\\n          this.getBoundingClientRect().x +\\n          this.scrollLeft;\\n      let y =\\n          this.table.getBoundingClientRect().y - this.getBoundingClientRect().y;\\n      let w = event.target.offsetWidth;\\n      let h = this.table.offsetHeight;\\n\\n      this.sizeBar.style.top = y + 'px';\\n      this.sizeBar.style.left = x + w - 4 + 'px';\\n      this.sizeBar.style.height = h + 'px';\\n\\n      this.sizeBar.hidden = this.sizeBar.thIndex < 2;\\n    }\\n  }\\n\\n  /**\\n   * @desc 마우스 포커스아웃 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onMouseOut(event) {}\\n\\n  /**\\n   * @desc 데이터 입력 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onInput(event) {\\n    let value = event.target.value;\\n    let field = event.target.getAttribute('bind');\\n    let tr = event.target.$closest('tr');\\n    let target, oldValue;\\n\\n    if (field && tr) {\\n      let rowindex = tr.getAttribute('row-index');\\n\\n      if (rowindex) {\\n        target = this.options.data[rowindex];\\n        oldValue = target[field];\\n        target[field] = value;\\n\\n        if (\\n          target.hasOwnProperty('_crud_') &&\\n          ['R', 'U'].includes(target['_crud_']) &&\\n          field.substr(0, 1) != '_'\\n        ) {\\n          if (target['_changeData_'][field]) {\\n            target['_changeData_'][field]['val'] = value;\\n          } else {\\n            target['_changeData_'][field] = {\\n              old: oldValue,\\n              val: value\\n            };\\n          }\\n\\n          if (\\n            target['_changeData_'][field].old ==\\n            target['_changeData_'][field].val\\n          ) {\\n            delete target['_changeData_'][key];\\n          }\\n\\n          target['_crud_'] = Object.keys(target['_changeData_']).length\\n            ? 'U'\\n          : 'R';\\n        }\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 리사이즈 시작 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  onResizeStart(event) {\\n    if (this.sizeBar.thIndex < 2) return;\\n\\n    event.preventDefault();\\n\\n    let _this = this;\\n\\n    this.classList.add('resizing');\\n\\n    if (event.type === 'touchstart') {\\n      this.startX = event.touches[0].clientX;\\n      this.startY = event.touches[0].clientY;\\n\\n      window.addEventListener('touchend', end);\\n      window.addEventListener('touchmove', move);\\n    } else {\\n      if (event.button == 0) {\\n        this.startX = event.clientX;\\n        this.startY = event.clientY;\\n\\n        window.addEventListener('mouseup', end);\\n        window.addEventListener('mousemove', move);\\n      }\\n    }\\n\\n    function move(e) {\\n      if (!_this.classList.contains('resizing')) return;\\n\\n      e.preventDefault();\\n\\n      let offset;\\n\\n      if (e.type === 'touchmove') {\\n        offset =\\n          e.touches[0].clientX -\\n          _this.table.getBoundingClientRect().x -\\n          _this.table.parentElement.scrollLeft;\\n      } else {\\n        offset =\\n          e.clientX -\\n          _this.table.getBoundingClientRect().x -\\n          _this.table.parentElement.scrollLeft;\\n      }\\n\\n      _this.sizeBar.style.left = offset + 'px';\\n    }\\n\\n    function end(e) {\\n      if (!_this.classList.contains('resizing')) return;\\n\\n      _this.classList.remove('resizing');\\n\\n      let offset;\\n\\n      if (e.type === 'touchmove') {\\n        offset = e.touches[0].clientX - _this.startX;\\n      } else {\\n        offset = e.clientX - _this.startX;\\n      }\\n\\n      let sizeWidth = _this.sizeBar.thWidth + offset;\\n\\n      _this.table.querySelector('colgroup').children[\\n        _this.sizeBar.thIndex\\n      ].style.width = sizeWidth + 'px';\\n      _this.options.colModel[\\n        _this.sizeBar.thIndex - _this.sysColumnCount\\n      ].width = sizeWidth + 'px';\\n\\n      _this.sizeBar.ref = null;\\n      _this.sizeBar.columnIndex = null;\\n      _this.sizeBar.classList.remove('on');\\n\\n      window.removeEventListener('mouseup', end);\\n      window.removeEventListener('mousemove', move);\\n      window.removeEventListener('touchend', end);\\n      window.removeEventListener('touchmove', move);\\n\\n      if (\\n        _this.options.fixColIndex &&\\n        _this.sizeBar.thIndex < _this.options.fixColIndex\\n      ) {\\n        let firstRowIndex = _this.tableBody.firstElementChild.getAttribute(\\n          'row-index'\\n        );\\n\\n        _this._renderPage(firstRowIndex);\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 세로 스크롤 이벤트를 처리한다.\\n   * @param {event} - 이벤트\\n   * @example -\\n   */\\n  onScrollHorizontal(event) {\\n    if (this.options.isBidDataSpeed) {\\n      this.dataBind();\\n    }\\n  }\\n\\n  updateCell (row, field, value){\\n    let rowindex = this.options.data.indexOf(row);\\n    if(rowindex >= 0){\\n      let target = this.options.data[rowindex];\\n      let oldValue = target[field];\\n      target[field] = value;\\n\\n      if(target.hasOwnProperty(\\\"_crud_\\\") && [\\\"R\\\",\\\"U\\\"].includes(target[\\\"_crud_\\\"]) && field.substr(0,1) != \\\"_\\\" ){\\n\\n        if(target[\\\"_changeData_\\\"][field]){\\n          target[\\\"_changeData_\\\"][field][\\\"val\\\"] = value; \\n        }\\n        else {\\n          target[\\\"_changeData_\\\"][field] = {\\n            \\\"old\\\": oldValue,\\n            \\\"val\\\": value\\n          };\\n        }\\n\\n\\n        if(target[\\\"_changeData_\\\"][field].old == target[\\\"_changeData_\\\"][field].val){\\n          delete target[\\\"_changeData_\\\"][key];\\n        }\\n\\n        target[\\\"_crud_\\\"] = Object.keys(target[\\\"_changeData_\\\"]).length ? \\\"U\\\" : \\\"R\\\";\\n      }\\n\\n    }\\n\\n  }  \\n\\n  /**\\n   * 체크표시된 row를 삭제한다 \\n   */\\n  checkedDelete(isUncheck){\\n    for(let i=this.options.data.length-1; i>=0; i--){\\n      let row = this.options.data[i];\\n      if(row._checked){\\n        // 처리후 체크표시 제거여부 판단\\n        if(isUncheck) row._checked = false;\\n        switch(row._crud_){\\n          case \\\"C\\\":\\n            this.options.data.splice(i,1);\\n            break;\\n          case \\\"D\\\":\\n            if(Object.keys(row._changeData_).length){\\n              row._crud_ = \\\"U\\\";  \\n            } else {\\n              row._crud_ = \\\"R\\\";  \\n            }\\n            break;\\n          default:\\n            row._crud_ = \\\"D\\\";\\n            break;\\n        }\\n      }\\n\\n    }\\n    this.refresh();\\n\\n  }  \\n\\n  refresh(){\\n    let firstRowIndex = this.tableBody.firstElementChild.getAttribute(\\\"row-index\\\");\\n    this._renderPage(firstRowIndex);\\n  }\\n\\n  activeIndex(index){\\n    let tr = this.tableBody.querySelector(`tr[row-index=\\\"${index}\\\"]`);\\n    if(!tr){\\n      this._renderPage(index);\\n      tr = this.tableBody.firstElementChild;\\n    }\\n    tr.querySelector(`td`).click();\\n\\n    return tr;\\n  }\\n  activeKey(key){\\n    let tr = this.tableBody.querySelector(`tr[key=\\\"${key}\\\"]`);\\n    if(tr){\\n      tr.querySelector(`td`).click();\\n    }\\n\\n    return tr;\\n  }\\n\\n  activeRow(row){\\n    let index = this.options.data.indexOf(row);\\n    return this.activeIndex(index);\\n  }\\n\\n  getData(){\\n    return this.options.data;\\n  }\\n\\n  list(filter, search){\\n\\n    let searchOption ={\\n      \\\"filter\\\":[]\\n    };\\n\\n    if (typeof(filter) == \\\"string\\\" && filter && this.options.dataSource.searchs.length){\\n      searchOption.filter = [\\n        {\\n          \\\"field\\\": this.options.dataSource.searchs.map(item=>item.COLUMN_NAME).join('+'), \\n          \\\"op\\\": \\\"like\\\",\\n          \\\"val\\\": [\\\"%\\\"+filter+\\\"%\\\"]\\n        }        \\n      ]\\n    } \\n    if (typeof(filter) == \\\"object\\\" && filter){\\n      searchOption.filter = filter;\\n    }\\n    if (typeof(search) == \\\"string\\\" && search && this.options.dataSource.searchs.length){\\n      searchOption.filter.push({\\n        \\\"field\\\": this.options.dataSource.searchs.map(item=>item.COLUMN_NAME).join('+'), \\n        \\\"op\\\": \\\"like\\\",\\n        \\\"val\\\": [\\\"%\\\"+search+\\\"%\\\"]\\n      })        \\n    } \\n\\t\\t\\n    if(this.options.lookupColumns && Object.keys(this.options.lookupColumns)){\\n   \\t\\t searchOption.lookup = this.options.lookupColumns;\\n    }\\n    \\n    let url = `/${this.options.apiVersion}/jbatis/${this.options.dataSource.workspace}/rest/${this.options.dataSource.table}`;\\n    //  form.__config__.data.list = [];\\n    return Jinja.ajax.get(url, searchOption)\\n      .then(data=>{\\n\\n      // 날짜형 변환준비\\n      let dataColumn = [];\\n\\n      this.options.colModel.forEach(col=>{\\n        if([\\\"DATETIME\\\", \\\"DATE\\\"].includes(col.domain)){\\n          dataColumn.push(col.field)\\n        }\\n      })\\n\\n      data.rows = data.rows.map(row=>{\\n        if(this.options.dataSource.keyField) row[\\\"_key\\\"] = row[this.options.dataSource.keyField];\\n        if(this.options.dataSource.displayField) row[\\\"_display\\\"] = row[this.options.dataSource.keyField];\\n        // 날짜형 변환준비\\n        dataColumn.forEach(col=>row[col] = new Date(row[col]));\\n\\n        return row;\\n      });\\n\\n      if(this.options.dataSource.sorts.length){\\n        let sortOption = {};\\n        this.options.dataSource.sorts.forEach(sort=>{\\n          sortOption[sort.COLUMN_NAME] = sort.ORDER_TYPE;\\n        })\\n        data.rows = Jinja.global.sortRows(data.rows, sortOption);\\n      }\\n\\n      // 그리드 새로고침후에 현재 위치고정하기\\n      let oldKey = this.curKey;\\n\\n      this.updateData(Jinja.global.setCRUD(data.rows));\\n      this.activeKey(oldKey);\\n\\n      return data.rows;\\n    });\\n\\n  }\\n\\n  /**\\n   * @desc 새 데이터를 추가합니다\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  appendRow(newRow) {\\n    let systemColumns = [\\n      \\\"REG_DATE\\\",\\n      \\\"REG_DATETIME\\\",\\n      \\\"REG_USER\\\",\\n      \\\"REG_USER_ID\\\",\\n      \\\"REG_USER_NAME\\\",\\n      \\\"EDT_DATE\\\",\\n      \\\"EDT_DATETIME\\\",\\n      \\\"EDT_USER\\\",\\n      \\\"EDT_USER_ID\\\",\\n      \\\"EDT_USER_NAME\\\",\\n    ];\\n\\n    newRow = newRow || {};\\n    if(this.options.dataSource.keyField){\\n      newRow[this.options.dataSource.keyField] = \\n        newRow[this.options.dataSource.keyField]||Jinja.global.uuid();\\n    }\\n\\n    this.options.colModel.forEach((col, index) => {\\n      if(!systemColumns.includes(col.field)){\\n        if([\\\"INT\\\", \\\"FLOAT\\\"].includes(col.domain)){\\n          newRow[col.field] = newRow[col.field]||col.default||null;\\n        } else {\\n          newRow[col.field] = newRow[col.field]||col.default||null;\\n        }\\n      }\\n    });    \\n\\n    Jinja.global.addCRUDrow(this.options.data, newRow);\\n\\n    // 추가후 마지막 페이지로 이동시킴\\n    this.lastPageBind();\\n    // 지정된 레코드인덱스 번호로 선택활성화\\n    this.rowIndexSelect(this.options.data.length-1);\\n    this.getCRUDCount();\\n  }\\n\\n  save(){\\n    let sendData = [];\\n    this.getCrudChangeData().forEach(item=>{\\n      let row = {\\n        \\\"table\\\": this.options.dataSource.table, \\n        \\\"keyField\\\": this.options.dataSource.keyField,\\n        \\\"keyValue\\\": item[this.options.dataSource.keyField],\\n        \\\"crud\\\": item._crud_,\\n        \\\"field\\\": {}\\n      };\\n\\n      switch(item._crud_){\\n        case \\\"U\\\":\\n          Object.keys(item._changeData_).forEach(col=>{\\n            if(typeof(item._changeData_[col].val) == \\\"number\\\"){\\n              row.field[col] = Jinja.global.string(item._changeData_[col].val);\\n            } \\n            else if(Jinja.global.isDate(item._changeData_[col].val)){\\n              if(this.options.colModel.filter(model=>model.field==col)[0].domain == \\\"DATE\\\"){\\n                row.field[col] = item._changeData_[col].val.$toFormat('yyyy-MM-dd');\\n              } else {\\n                row.field[col] = item._changeData_[col].val;\\n              }\\n\\n            }\\n            else {\\n              row.field[col] = item._changeData_[col].val;\\n            }\\n          })    \\n          break;\\n        case \\\"C\\\":\\n          Object.keys(item).forEach(col=>{\\n            if (!col.startsWith(\\\"_\\\")){\\n\\n              if(typeof(item[col]) == \\\"number\\\"){\\n                row.field[col] = Jinja.global.string(item[col]);\\n              } \\n              else if(Jinja.global.isDate(item[col])){\\n                if(this.options.colModel.filter(model=>model.field==col)[0].domain == \\\"DATE\\\"){\\n                  row.field[col] = item[col].$toFormat('yyyy-MM-dd');\\n                } else {\\n                  row.field[col] = item[col];\\n                }\\n              } \\n              else {\\n                row.field[col] = item[col];\\n              }\\n            }\\n          })    \\n          break;\\n        default: break;\\n      }\\n\\n      sendData.push(row);\\n    })\\n\\n    return Jinja.ajax.post(`/${this.options.apiVersion}/jbatis/${this.options.dataSource.workspace}/rest/multirows`, {\\n      \\\"rows\\\": sendData\\n    })\\n      .then(result=>this.list());\\n\\n  }\\n\\n  delete(){\\n    this.checkedDelete(true);\\n\\n    return this.save();\\n\\n  }\\n\\n  /**\\n   * @desc 지정한 rows 데이터를 지정한 정렬기준으로 정렬하여 반환한다.\\n   * @param {Array} - rows 데이터\\n   * @param {Object} - 정렬기준정보\\n   * @return {Array} - 변경된 rows 데이터\\n   * @example -\\n   */\\n  sortRows(rows, keys) {\\n    keys = keys || {};\\n\\n    let obLen = function (obj) {\\n      let size = 0, key;\\n\\n      for (key in obj) {\\n        if (obj.hasOwnProperty(key)) size++;\\n      }\\n\\n      return size;\\n    };\\n\\n    let obIx = function (obj, ix) {\\n      let size = 0, key;\\n\\n      for (key in obj) {\\n        if (obj.hasOwnProperty(key)) {\\n          if (size == ix) return key;\\n\\n          size++;\\n        }\\n      }\\n\\n      return false;\\n    };\\n\\n    let multiSort = function (a, b, d) {\\n      d = d !== null ? d : 1;\\n\\n      if (a == b) return 0;\\n\\n      return a > b ? 1 * d : -1 * d;\\n    };\\n\\n    let KL = obLen(keys);\\n    let newarr = rows.slice(0);\\n\\n    if (!KL) {\\n      return newarr.sort(multiSort);\\n    }\\n\\n    for (let k in keys) {\\n      if (keys[k]) keys[k] = keys[k].toLowerCase();\\n\\n      keys[k] =\\n        keys[k] == 'desc' || keys[k] == -1\\n        ? -1\\n      : keys[k] == 'skip' || keys[k] === 0\\n        ? 0\\n      : 1;\\n    }\\n\\n    newarr.sort(function (a, b) {\\n      let sorted = 0, ix = 0;\\n\\n      while (sorted === 0 && ix < KL) {\\n        let k = obIx(keys, ix);\\n\\n        if (k) {\\n          let dir = keys[k];\\n\\n          sorted = multiSort(a[k], b[k], dir);\\n          ix++;\\n        }\\n      }\\n\\n      return sorted;\\n    });\\n\\n    return newarr;\\n  }\\n\\n  /**\\n   * @desc 그리드 데이터를 CSV파일로 내보내기한다.\\n   * @example -\\n   */\\n  exportcsv() {\\n    Jinja.global.csv(this.options.data, 'export');\\n  }\\n\\n  /**\\n   * @desc 그리드 데이터를 엑셀파일로 내보내기한다.\\n   * @param {String} - 파일제목\\n   * @example -\\n   */\\n  exportexcel(title) {\\n    title = title || 'App Excel Down';\\n    let exportDiv = document.createElement('div');\\n\\n    exportDiv.classList.add('hidden');\\n\\n    let caption = document.createElement('h2');\\n\\n    caption.appendChild(document.createTextNode(title || 'title'));\\n    exportDiv.appendChild(caption);\\n    exportDiv.appendChild(this.table.cloneNode(true));\\n\\n    exportDiv.querySelectorAll('thead th').forEach(el => {\\n      el.style.backgroundColor = '#e1eaf8';\\n      el.style.color = 'black';\\n    });\\n\\n    exportDiv.querySelectorAll('table').forEach(el => {\\n      el.setAttribute('border', '1');\\n    });\\n\\n    exportDiv.querySelector('tbody').innerHTML = this.json2html();\\n\\n    let htmltable = exportDiv.innerHTML;\\n    let excelFile =\\n        \\\"<html xml:lang='en-US' xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:x='urn:schemas-microsoft-com:office:excel' xmlns='http://www.w3.org/TR/REC-html40'>\\\";\\n    excelFile += '<head>';\\n    excelFile +=\\n      '<meta http-equiv=\\\"Content-type\\\" content=\\\"text/html;charset=UTF-8\\\" />';\\n    excelFile += '<!--[if gte mso 9]>';\\n    excelFile += '<xml>';\\n    excelFile += '<x:ExcelWorkbook>';\\n    excelFile += '<x:ExcelWorksheets>';\\n    excelFile += '<x:ExcelWorksheet>';\\n    excelFile += '<x:Name>';\\n    excelFile += '{worksheet}';\\n    excelFile += '</x:Name>';\\n    excelFile += '<x:WorksheetOptions>';\\n    excelFile += '<x:DisplayGridlines/>';\\n    excelFile += '</x:WorksheetOptions>';\\n    excelFile += '</x:ExcelWorksheet>';\\n    excelFile += '</x:ExcelWorksheets>';\\n    excelFile += '</x:ExcelWorkbook>';\\n    excelFile += '</xml>';\\n    excelFile += '<![endif]-->';\\n    excelFile += '</head>';\\n    excelFile += '<body>';\\n    excelFile += htmltable.replace(/\\\"/g, \\\"'\\\");\\n    excelFile += '</body>';\\n    excelFile += '</html>';\\n    let uri = 'data:application/vnd.ms-excel;base64,';\\n    let ctx = { worksheet: '출력', table: htmltable };\\n\\n    uri = uri + this.base64(this.format(excelFile, ctx));\\n    uri = uri.replace('data:application/vnd.ms-excel;base64,', '');\\n    uri = decodeURIComponent(escape(window.atob(uri)));\\n\\n    let blob = new Blob([uri], { type: 'application/vnd.ms-excel' });\\n\\n    uri = window.URL.createObjectURL(blob);\\n\\n    let link = document.createElement('a');\\n\\n    link.href = uri;\\n    link.style = 'visibility:hidden';\\n    link.download = title+'.xls';\\n\\n    document.body.appendChild(link);\\n\\n    link.click();\\n\\n    document.body.removeChild(link);\\n\\n    exportDiv.remove();\\n  }\\n\\n  /**\\n   * @desc 그리드 데이터를 HTML로 변환하여 반환한다.\\n   * @param {} -\\n   * @return {String} - html\\n   * @example -\\n   */\\n  json2html() {\\n\\n    let bodyHtml = '';\\n\\n    this.options.data.forEach((row,index) => {\\n      let tr = `<tr><td>${index+1}</td><td></td>`;\\n\\n      this.options.colModel.forEach(col => {\\n        if(col.isHiddenColumn) return;\\n        let txt = row[col.field];\\n        switch(col.domain){\\n          case 'INT':\\n            if (txt == null || txt == undefined) {\\n              txt = '';\\n            } else {\\n              txt = parseInt(txt).$toIntFormat()\\n            }\\n            break;\\n          case 'FLOAT':\\n            if (txt == null || txt == undefined) {\\n              txt = '';\\n            } else {\\n              txt = parseFloat(txt).$toFloatFormat()\\n            }\\n            break;\\n          case 'DATE':\\n            if (txt == null || txt == undefined) {\\n              txt = '';\\n            } else {\\n              txt = new Date(txt).$toFormat('yyyy-MM-dd');\\n            }\\n            break;\\n          case 'DATETIME':\\n            if (txt == null || txt == undefined) {\\n              txt = '';\\n            } else {\\n              txt = new Date(txt).$toFormat('yyyy-MM-dd HH:mm');\\n            }\\n            break;\\n          default:\\n            if (txt == null || txt == undefined) {\\n              txt = '';\\n            }\\n            break;\\n        }\\n\\n        tr += '<td>' + txt + '</td>';\\n      });\\n\\n      tr += '</tr>';\\n      bodyHtml += tr;\\n    });\\n\\n    return bodyHtml;\\n  }\\n\\n  /**\\n   * @desc 지정한 문자열을 지정한 배열로 반환한다.\\n   * @param {String} - 대상 문자열\\n   * @param {Array} - 반환대상 배열\\n   * @return {Array} - 변경된 배열\\n   * @example -\\n   */\\n  format(str, arr) {\\n    return str.replace(/{(\\\\w+)}/g, function (m, p) {\\n      return arr[p];\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 문자열을 base64로 인코딩하여 반환한다.\\n   * @param {String} - 대상 문자열\\n   * @return {String} - base64 문자열\\n   * @example -\\n   */\\n  base64(str) {\\n    return window.btoa(unescape(encodeURIComponent(str)));\\n  }\\n}\\n\\ncustomElements.define('jj-app-grid', JJAppGrid);\\n/* ==JJFilter.640.class================ */\\n\\n/**\\n * @classdesc 그리드 컴포넌트관리를 위한 클래스\\n */\\nclass JJAppFilter extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      \\\"colModel\\\": [],\\n      \\\"dataGrid\\\":\\\"\\\",\\n      \\\"class\\\": \\\"jj-app-filter\\\"\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @param {String} - 챠트유형\\n   * @example -\\n   */\\n  _render() {\\n    let html =`\\n<ul class=\\\"list-group\\\"></ul>\\n<div class=\\\"filter-box\\\">\\n  <select class=\\\"field\\\">\\n\\t\\t<option></option>\\n\\t\\t<optgroup label=\\\"user\\\"></optgroup>\\n\\t\\t<optgroup label=\\\"system\\\"></optgroup>\\n\\t</select> \\n  <select class=\\\"op\\\"></select> \\n  <div class=\\\"btn-group dropdown\\\">\\n    <input class=\\\"f-value\\\" type=\\\"search\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-info dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"true\\\">\\n    <i class=\\\"mdi mdi-chevron-down\\\"></i></button>\\n    <div class=\\\"dropdown-menu dropdown-menu-right  p-1\\\">\\n      <input class=\\\"itemSearch\\\" type=\\\"search\\\">\\n      <div class=\\\"dropdown-divider\\\"></div>\\n      <div class=\\\"item-box\\\"></div>\\n    </div>\\n\\t</div>\\n\\t<button class=\\\"btn btn-success btn-add\\\">Apply</button>  \\n</div>\\n`;\\n    this.innerHTML = html;\\n\\n    this.filterGroup = this.querySelector(`ul.list-group`);\\n    this.filterBox = this.querySelector(`.filter-box`);\\n    this.field = this.querySelector(`select.field`);\\n    this.op = this.querySelector(`select.op`);\\n    this.fValue = this.querySelector(`input.f-value`);\\n    this.itemSearch = this.querySelector(`input.itemSearch`);\\n    this.itemBox = this.querySelector(`.item-box`);\\n    this.itemBox = this.querySelector(`.item-box`);\\n\\n  }\\n\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n\\n    this.field.addEventListener(\\\"input\\\", e=>this._setDomainOpOption())\\n\\n    this.addEventListener(\\\"click\\\", e=>{\\n      if(e.target.matches(`.btn-add`)) this._filterAdd();\\n      if(e.target.matches(`i.fa-remove`)) this._filterRemove(e.target.parentElement);\\n      if(e.target.matches(`.list-group-item a`)){\\n        this.field.value = e.target.dataset.field;\\n        this._setDomainOpOption();\\n        this.op.value = e.target.dataset.op;\\n        this.fValue.value = e.target.dataset.fvalue;\\n      }\\n      if(e.target.matches(`.dropdown-toggle`)){\\n        this._setDropdownItem();\\n      }\\n      if(e.target.matches(`.item-box *`)){\\n        this._getItemValue();\\n      }\\n\\n    })\\n    \\n    this.fValue.addEventListener(\\\"keyup\\\", e=>{\\n      if(e.keyCode == 13){\\n        this._filterAdd();\\n      }\\n    })\\n\\n    this.itemSearch.addEventListener(\\\"input\\\", e=>{\\n      this.itemBox.querySelectorAll('label').forEach(el=>{\\n        el.hidden = !el.innerText.includes(this.itemSearch.value);\\n      });  \\n    })\\n    \\n  }\\n\\n  _getItemValue(){\\n    let values=[]\\n    this.itemBox.querySelectorAll('input:checked').forEach(el=>values.push(el.value));\\n    this.fValue.value = values.join(\\\",\\\");\\n  }\\n\\n  _filterRemove(el){\\n\\t\\tel.remove();\\n    \\n    this.dispatchEvent(\\n      new CustomEvent('changeFilter', {\\n        detail: {\\n          \\\"filter\\\": this.getFilter(),\\n          \\\"colModel\\\": this.options.colModel\\n        },\\n        bubbles: true\\n      })\\n    );    \\n  }\\n  _filterAdd(){\\n    let html = `\\n<li class=\\\"list-group-item\\\">\\n<a\\ndata-field=\\\"${this.field.value}\\\"\\ndata-op=\\\"${this.op.value}\\\"\\ndata-fvalue=\\\"${this.fValue.value}\\\">\\n${this.field.options[this.field.selectedIndex].text}&nbsp;\\n${this.op.options[this.op.selectedIndex].text}&nbsp; \\n<code>${this.fValue.value}</code></a>\\n<i class=\\\"fa fa-remove\\\" aria-hidden=\\\"true\\\"></i>\\n</li>\\n`;\\n    Jinja.dom.append(this.filterGroup, html)\\n\\n    this.dispatchEvent(\\n      new CustomEvent('changeFilter', {\\n        detail: {\\n          \\\"filter\\\": this.getFilter(),\\n          \\\"colModel\\\": this.options.colModel\\n        },\\n        bubbles: true\\n      })\\n    );\\n    \\n  }\\n\\n  _setDropdownItem(){\\n    let html = \\\"\\\";\\n    \\n    let codes =[];\\n    if(this.findCode){\\n      codes = Jinja.code.getGroup(this.findCode);\\n    } else if(this.options.dataGrid){\\n      this.options.dataGrid.options.data.forEach(row=>{\\n        if(!values.includes(row[this.field.value])){\\n          values.push({\\n            \\\"CODE\\\": row[this.field.value],\\n            \\\"NAME\\\": row[this.field.value]\\n          })\\n        }\\n      })\\n    } \\n\\n    codes.forEach(code=>{\\n      html += `<label><input type=\\\"checkbox\\\" value=\\\"${code.CODE}\\\">${code.NAME}</label>`;\\n    })\\n    this.itemBox.innerHTML = html;\\n  }  \\n\\n  _setDomainOpOption(field){\\n    let col = this.options.colModel.find(item=>item.field == this.field.value);\\n    let html = '';\\n\\n    this.findCode = col.code||\\\"\\\"; \\n    this.fValue.value = \\\"\\\";\\n    if(col){\\n      html += `<option value=\\\"=\\\">같다</option>`;\\n      html += `<option value=\\\"<>\\\">같지않다</option>`;\\n      switch(col.domain){\\n        case \\\"VARCHAR\\\":\\n        case \\\"MEMO\\\":\\n          html += `<option value=\\\"like\\\">포함</option>`;\\n          html += `<option value=\\\"likeFrom\\\">시작함</option>`;\\n          html += `<option value=\\\"likeTo\\\">끝남</option>`;\\n          html += `<option value=\\\"in\\\">여러값</option>`;\\n          break;\\n        case \\\"INT\\\":\\n        case \\\"FLOAT\\\":\\n        case \\\"DATE\\\":\\n        case \\\"DATETIME\\\":\\n          break;\\n      }\\n      html += `<option value=\\\">\\\">크다</option>`;\\n      html += `<option value=\\\"<\\\">작다</option>`;\\n      html += `<option value=\\\">=\\\">크거나 같다</option>`;\\n      html += `<option value=\\\"<=\\\">작거나 같다</option>`;\\n      html += `<option value=\\\"is null\\\">null</option>`;\\n      html += `<option value=\\\"is not null\\\">not null</option>`;\\n    }\\n\\n    this.op.innerHTML = html;\\n\\n  } \\n  \\n  /**\\n   * @desc 이벤트를 삭제한다.\\n   * @example -\\n   */\\n  _clearEvent() {\\n  }\\n\\n  /**\\n   * @static\\n   * @memberof JJGrid\\n   * @method get observedAttributes\\n   * @desc 모니터링 할 속성 목록을 반환한다.\\n   * @return {Array} - 모니터링 할 속성 목록\\n   * @example -\\n   */\\n  static get observedAttributes() {\\n    return [''];\\n  }\\n\\n  /**\\n   * @desc 지정한 옵션으로 그리드를 초기화한다.\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  init(options) {\\n    Object.assign(this.options, options);\\n\\n    let systemColumns = DATA_TYPE.SystemColumnKey;\\n    \\n    let html = '';\\n    let html2 = '';\\n    this.options.colModel.forEach(col=>{\\n      if(systemColumns.includes(col.field)){\\n\\t      html2 += `<option value=\\\"${col.field}\\\">${col.label}</option>`;\\n      } else {\\n\\t      html += `<option value=\\\"${col.field}\\\">${col.label}</option>`;\\n        \\n      }\\n    })\\n\\t\\t\\n    this.field.querySelector(`[label=\\\"user\\\"]`).innerHTML = html;      \\n    this.field.querySelector(`[label=\\\"system\\\"]`).innerHTML = html2;      \\n  }\\n\\n  getFilter(){\\n    let result = [];\\n    this.filterGroup.querySelectorAll(`.list-group-item a`).forEach(el=>{\\n      switch(el.dataset.op){\\n        case \\\"like\\\":\\n          result.push({\\n            \\\"field\\\": el.dataset.field,\\n            \\\"op\\\": el.dataset.op,\\n            \\\"val\\\": [\\\"%\\\"+el.dataset.fvalue+\\\"%\\\"]\\n          });\\n          break;\\n        case \\\"likeFrom\\\":\\n          result.push({\\n            \\\"field\\\": el.dataset.field,\\n            \\\"op\\\": el.dataset.op,\\n            \\\"val\\\": [el.dataset.fvalue+\\\"%\\\"]\\n          });\\n          break;\\n        case \\\"likeTo\\\":\\n          result.push({\\n            \\\"field\\\": el.dataset.field,\\n            \\\"op\\\": el.dataset.op,\\n            \\\"val\\\": [\\\"%\\\"+el.dataset.fvalue]\\n          });\\n          break;\\n        case \\\"in\\\":\\n          result.push({\\n            \\\"field\\\": el.dataset.field,\\n            \\\"op\\\": el.dataset.op,\\n            \\\"val\\\": el.dataset.fvalue.split(\\\",\\\")\\n          });\\n          break;\\n        default:  \\n          result.push({\\n            \\\"field\\\": el.dataset.field,\\n            \\\"op\\\": el.dataset.op,\\n            \\\"val\\\":el.dataset.fvalue.split(\\\",\\\")\\n          });\\n          break;\\n      }\\n    })\\n    return result;\\n  }\\n\\n\\n}\\n\\ncustomElements.define('jj-app-filter', JJAppFilter);\\n/* ==JJExcelLayout.640.class================ */\\nclass JJExcelLayout extends JJElement {\\n\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    // 엑셀자료\\n    this.dbo; //JJBatisDBA\\n    this.rows = [];\\n    this.keymap = [];\\n    return {\\n      \\\"jBatisId\\\": workspaceMeta.options.appInfo.jbatisId,\\n      \\\"tableName\\\": \\\"\\\",\\n      \\\"keyField\\\": \\\"KEY_ID\\\",\\n      \\\"gridClass\\\": \\\"jjExcel\\\"\\n    };\\n  }\\n\\n  _render() {\\n\\n    this.setJBatis(this.options.jBatisId);\\n\\n    this.file = document.createElement('input');\\n    this.file.type = \\\"file\\\"\\n    this.file.hidden = true;\\n    this.appendChild(this.file);\\n\\n    this.excelBox = document.createElement('div');\\n    this.excelBox.setAttribute(\\\"class\\\", \\\"excelWrap\\\");\\n    this.excelBox.setAttribute(\\\"tabindex\\\", -1);\\n    this.appendChild(this.excelBox);\\n\\n  }\\n\\n  _setEvent() {\\n    this.file.addEventListener(\\\"change\\\", e=>{\\n      this._fileUpload(this.file.files);\\n    })\\n\\n    this.excelBox.addEventListener(\\\"dragover\\\", e => {\\n      e.preventDefault();\\n      this.excelBox.classList.add(\\\"win-drag\\\");\\n    });\\n    this.excelBox.addEventListener(\\\"dragleave\\\", e => this.excelBox.classList.remove(\\\"win-drag\\\"));\\n    this.excelBox.addEventListener(\\\"drop\\\", e => {\\n      e.stopPropagation();\\n      e.preventDefault();\\n      var data = e.dataTransfer;\\n\\n      if (data.types[0] == \\\"Files\\\") {\\n        this._fileUpload(data.files);    \\t\\n      }\\n      this.excelBox.classList.remove(\\\"win-drag\\\");\\n    });\\n\\n    this.excelBox.addEventListener('paste', (event) => {\\n      \\n      if(this.excelBox.childElementCount) return;\\n\\n      let html = event.clipboardData.getData(\\\"text/html\\\");\\n      \\n      if(html){\\n        debugger;\\n        let box = document.createElement('div');\\n        box.innerHTML = html;\\n        let table = box.querySelector('table');\\n\\t\\t\\t\\t\\n        let thead = document.createElement('thead');\\n        \\n        table.querySelector('tbody').before(thead);\\n        \\n        this.excelBox.appendChild(table);\\n        debugger;\\n        \\n\\t\\t\\t\\tlet colLength=  table.querySelectorAll('colgroup col').length;\\n        let isHead = false;;\\n        table.querySelectorAll('tbody tr').forEach(tr=>{\\n          if(tr.querySelectorAll('td').length < colLength){\\n            thead.appendChild(tr);\\n            isHead = true;\\n          }\\n        })\\n\\t\\t\\t\\n        // 만일 해드파악이 안되면 첫번째 행을 해드로 정의한다\\n        if(!isHead){\\n          thead.appendChild(table.querySelector('tbody tr'));\\n        }\\n        \\n        thead.querySelectorAll(\\\"*\\\").forEach(el=>{\\n          el.removeAttribute(\\\"height\\\");\\n          el.removeAttribute(\\\"class\\\");\\n          el.removeAttribute(\\\"width\\\");\\n          el.removeAttribute(\\\"style\\\");\\n        })\\n        table.querySelector('tbody').querySelectorAll(\\\"*\\\").forEach(el=>{\\n          el.removeAttribute(\\\"height\\\");\\n          el.removeAttribute(\\\"class\\\");\\n          el.removeAttribute(\\\"width\\\");\\n          el.removeAttribute(\\\"style\\\");\\n        })\\n        \\n      }\\n    });    \\n  }\\n\\n  _fileUpload(files){\\n    if(!files.length) return;\\n\\n    let wait = new JJWaitLayer(this, {\\\"mwssage\\\": \\\"업데이트 배포중입니다.\\\"});\\n    this.dbo.excelUpload(files).then(result => {\\n      this.rows = result.rows;\\n      this.excelBox.innerHTML = Jinja.global.json2html(this.rows);    \\n      this._makeImportTable();\\n      this.dispatchEvent(new CustomEvent('fileSelect', {\\n        detail: {\\n          \\\"file\\\": files[0]\\n        },\\n        bubbles: true\\n      }));\\n    }).finally(()=>{\\n      wait.destroy();      \\n    })\\n\\n  }\\n  _makeImportTable(){\\n    let txtName = document.createElement(\\\"input\\\");\\n    let selType = document.createElement(\\\"select\\\");\\n\\n    let _html = `<option value=\\\"\\\">제외</option>`\\n    this.dbo.getDBDomain().forEach(item=>{\\n      _html += `<option value=\\\"${item.CODE}\\\">${item.NAME}</option>`\\n    })\\n    selType.innerHTML = _html;\\n\\n    // 컬럼명 만들기\\n    let nameTr = this.excelBox.querySelector('thead tr').cloneNode(true);\\n    this.excelBox.querySelector('thead').appendChild(nameTr);\\n\\n    nameTr.querySelectorAll('th').forEach((th,index)=>{\\n      let typeVal = this.rows[0][th.innerText];\\n      let dType = this.dbo.val2DBDomain(typeVal);\\n\\n      let columnName = 'COL'+index;\\n\\n      th.$empty();\\n      let fname = txtName.cloneNode(true);\\n      fname.value = columnName;\\n\\n      let ftype = selType.cloneNode(true);\\n      ftype.value = dType;\\n\\n      th.appendChild(fname);\\n      th.appendChild(ftype);\\n    });\\n\\n  }\\n\\n  _table2json(table, isHead){\\n    let rows =[];\\n    let keys =[];\\n\\n    if(isHead){\\n      table.querySelectorAll('tr').forEach((tr, _index_)=>{\\n        if(_index_==0){\\n          tr.querySelectorAll('td').forEach((td,index)=>{\\n            if(keys.includes(td.innerText.trim())){\\n              keys.push(td.innerText.trim().replaceAll(/\\\\n/,'').replaceAll(/ /,'')+\\\"_COL\\\"+index);  \\n            } else {\\n              keys.push(td.innerText.trim().replaceAll(/\\\\n/,'').replaceAll(/ /,''));  \\n            }\\n\\n          })\\n        } else {\\n          let row={};\\n          tr.querySelectorAll('td').forEach((td,index)=>{\\n            row[keys[index]] = td.innerText.trim();\\n          })\\n          rows.push(row);\\n        }\\n      })\\n    } else {\\n      table.querySelectorAll('tr').forEach(tr=>{\\n        let row ={}\\n        tr.querySelectorAll('td').forEach((td,index)=>{\\n          row[\\\"COL\\\"+index] = td.innerText;\\n        })\\n        rows.push(row);\\n      })\\n\\n    }\\n\\n    return rows;\\n  }\\n\\n\\n  fileOpen(){\\n    this.file.value=\\\"\\\";\\n    this.file.click();\\n  }                               \\n\\n  createTable(tableName){\\n    let wait = new JJWaitLayer(this, {\\\"mwssage\\\": \\\"자료를 업로드 중입니다.\\\"});\\n    this.options.tableName = tableName;\\n    this.keymap = [\\n      {\\n        \\\"COLUMN_NAME\\\" : \\\"CELL_INDEX\\\", \\n        \\\"COLUMN_LABEL\\\" : \\\"행번호\\\",\\n        \\\"COLUMN_DOMAIN\\\": \\\"INT\\\"\\n      }\\n    ];\\n\\n    let th1 = this.excelBox.querySelectorAll('thead tr:nth-child(1) th');\\n    let th2 = this.excelBox.querySelectorAll('thead tr:nth-child(2) th');\\n\\n    th2.forEach((th,index)=>{\\n      let ftype = th.querySelector('select').value;\\n      let fname = th.querySelector('input').value;\\n      let ename = th1[index].innerText;\\n\\n      let column ={\\n        \\\"COLUMN_NAME\\\" : fname,\\n        \\\"COLUMN_LABEL\\\" : ename,\\n        \\\"COLUMN_DOMAIN\\\" : ftype\\n      }\\n\\n      if(column.COLUMN_DOMAIN){\\n        this.keymap.push(column);\\n      }\\n    })\\n\\n\\n\\n    let sendData = {\\n      \\\"TABLE_NAME\\\": this.options.tableName,\\n      \\\"KEY_FIELD\\\": this.options.keyField,\\n      \\\"COLUMNS\\\" : this.keymap\\n    };\\n\\n    return this.dbo.createTable(sendData)\\n      .then(()=>{\\n      Jinja.confirm.toastMessage(\\\"테이블생성이 완료되었습니다.<br>업로드중입니다.\\\");\\n\\t\\t\\t\\n      let sendData = [];\\n      this.rows.forEach((item,index)=>{\\n        item[\\\"KEY_ID\\\"] = item[\\\"KEY_ID\\\"]||Jinja.global.uuid();\\n        let row = {\\n          \\\"table\\\": this.options.tableName, \\n          \\\"keyField\\\": this.options.keyField,\\n          \\\"keyValue\\\": item[this.options.keyField],\\n          \\\"crud\\\": \\\"C\\\",\\n          \\\"field\\\": {}\\n        };\\n        row.field[\\\"CELL_INDEX\\\"] = index+1;\\n\\n        this.keymap.forEach(column=>{\\n          if(column.COLUMN_NAME==\\\"CELL_INDEX\\\") return;\\n          switch(column.COLUMN_DOMAIN){\\n            case \\\"INT\\\":\\n              row.field[column.COLUMN_NAME] = parseInt(item[column.COLUMN_LABEL]);\\n              break;\\n            case \\\"FLOAT\\\":\\n              row.field[column.COLUMN_NAME] = item[column.COLUMN_LABEL].toString();\\n              break;\\n            default:\\n              row.field[column.COLUMN_NAME] = item[column.COLUMN_LABEL];\\n              break;\\n          }\\n        })\\n        sendData.push(row);\\n      });\\n\\n      return this.dbo.multirows(sendData)\\n    })\\n      .then(result=>{\\n      // 설정화면에서 시스템 필드에 대해서도 라벨을 설정할수 있도록\\n      // 시스템에서 설정된 고유번호들도 생성해준다\\n      this.keymap = this.keymap\\n        .concat(this.dbo.getSystemColumns())\\n        .concat([\\n        {\\n          \\\"COLUMN_NAME\\\" : this.options.keyField, \\n          \\\"COLUMN_LABEL\\\" : \\\"고유번호\\\",\\n          \\\"COLUMN_DOMAIN\\\": \\\"VARCHAR\\\",\\n        }\\n      ]);\\n\\n      Jinja.confirm.toastMessage(\\\"테이블생성 후 <br>업로드가 완료되었습니다.\\\");\\n\\n      return this.getOptionMap()\\n    })\\n      .finally(()=>{\\n        wait.destroy();      \\n      });    \\n\\n\\n  }\\n\\n  setJBatis(jbatisId){\\n    this.dbo = new JJBatisDBA({\\n      \\\"workspace\\\": jbatisId\\n    });   \\n\\n    return this.dbo;\\n  }\\n\\n  getOptionMap(){\\n    return {\\n      \\\"workspace\\\": this.options.jBatisId,\\n      \\\"table\\\": this.options.tableName,\\n      \\\"keyField\\\": this.options.keyField,\\n      \\\"keymap\\\": this.keymap  \\n    }\\n  }\\n\\n\\n}\\n\\ncustomElements.define('jj-excel-layout', JJExcelLayout);\\n/* ==JJColor.640.class================ */\\n\\n/**\\n * @classdesc 색상메뉴 컴포넌트관리를 위한 클래스\\n */\\nclass JJColor extends JJElement {\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    this.color = '#ffffff';\\n    this.innerHTML = \\n      `<div style=\\\"margin:auto;width:236px;\\\">` +\\n      `<img style=\\\"margin-right:2px;\\\" src=\\\"/repository/systemImages/icons/img_colormap.gif\\\" alt=\\\"colormap\\\">` +\\n      `<map>` +\\n      `<area shape=\\\"poly\\\" coords=\\\"63,0,72,4,72,15,63,19,54,15,54,4\\\"  data-color=\\\"#003366,-200,54\\\" data-over-color=\\\"#003366\\\" alt=\\\"#003366\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"81,0,90,4,90,15,81,19,72,15,72,4\\\"  data-color=\\\"#336699,-200,72\\\" data-over-color=\\\"#336699\\\" alt=\\\"#336699\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"99,0,108,4,108,15,99,19,90,15,90,4\\\"  data-color=\\\"#3366CC,-200,90\\\" data-over-color=\\\"#3366CC\\\" alt=\\\"#3366CC\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"117,0,126,4,126,15,117,19,108,15,108,4\\\"  data-color=\\\"#003399,-200,108\\\" data-over-color=\\\"#003399\\\" alt=\\\"#003399\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"135,0,144,4,144,15,135,19,126,15,126,4\\\"  data-color=\\\"#000099,-200,126\\\" data-over-color=\\\"#000099\\\" alt=\\\"#000099\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"153,0,162,4,162,15,153,19,144,15,144,4\\\"  data-color=\\\"#0000CC,-200,144\\\" data-over-color=\\\"#0000CC\\\" alt=\\\"#0000CC\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"171,0,180,4,180,15,171,19,162,15,162,4\\\"  data-color=\\\"#000066,-200,162\\\" data-over-color=\\\"#000066\\\" alt=\\\"#000066\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"54,15,63,19,63,30,54,34,45,30,45,19\\\"  data-color=\\\"#006666,-185,45\\\" data-over-color=\\\"#006666\\\" alt=\\\"#006666\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"72,15,81,19,81,30,72,34,63,30,63,19\\\"  data-color=\\\"#006699,-185,63\\\" data-over-color=\\\"#006699\\\" alt=\\\"#006699\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"90,15,99,19,99,30,90,34,81,30,81,19\\\"  data-color=\\\"#0099CC,-185,81\\\" data-over-color=\\\"#0099CC\\\" alt=\\\"#0099CC\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"108,15,117,19,117,30,108,34,99,30,99,19\\\"  data-color=\\\"#0066CC,-185,99\\\" data-over-color=\\\"#0066CC\\\" alt=\\\"#0066CC\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"126,15,135,19,135,30,126,34,117,30,117,19\\\"  data-color=\\\"#0033CC,-185,117\\\" data-over-color=\\\"#0033CC\\\" alt=\\\"#0033CC\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"144,15,153,19,153,30,144,34,135,30,135,19\\\"  data-color=\\\"#0000FF,-185,135\\\" data-over-color=\\\"#0000FF\\\" alt=\\\"#0000FF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"162,15,171,19,171,30,162,34,153,30,153,19\\\"  data-color=\\\"#3333FF,-185,153\\\" data-over-color=\\\"#3333FF\\\" alt=\\\"#3333FF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"180,15,189,19,189,30,180,34,171,30,171,19\\\"  data-color=\\\"#333399,-185,171\\\" data-over-color=\\\"#333399\\\" alt=\\\"#333399\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"45,30,54,34,54,45,45,49,36,45,36,34\\\"  data-color=\\\"#669999,-170,36\\\" data-over-color=\\\"#669999\\\" alt=\\\"#669999\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"63,30,72,34,72,45,63,49,54,45,54,34\\\"  data-color=\\\"#009999,-170,54\\\" data-over-color=\\\"#009999\\\" alt=\\\"#009999\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"81,30,90,34,90,45,81,49,72,45,72,34\\\"  data-color=\\\"#33CCCC,-170,72\\\" data-over-color=\\\"#33CCCC\\\" alt=\\\"#33CCCC\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"99,30,108,34,108,45,99,49,90,45,90,34\\\"  data-color=\\\"#00CCFF,-170,90\\\" data-over-color=\\\"#00CCFF\\\" alt=\\\"#00CCFF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"117,30,126,34,126,45,117,49,108,45,108,34\\\"  data-color=\\\"#0099FF,-170,108\\\" data-over-color=\\\"#0099FF\\\" alt=\\\"#0099FF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"135,30,144,34,144,45,135,49,126,45,126,34\\\"  data-color=\\\"#0066FF,-170,126\\\" data-over-color=\\\"#0066FF\\\" alt=\\\"#0066FF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"153,30,162,34,162,45,153,49,144,45,144,34\\\"  data-color=\\\"#3366FF,-170,144\\\" data-over-color=\\\"#3366FF\\\" alt=\\\"#3366FF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"171,30,180,34,180,45,171,49,162,45,162,34\\\"  data-color=\\\"#3333CC,-170,162\\\" data-over-color=\\\"#3333CC\\\" alt=\\\"#3333CC\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"189,30,198,34,198,45,189,49,180,45,180,34\\\"  data-color=\\\"#666699,-170,180\\\" data-over-color=\\\"#666699\\\" alt=\\\"#666699\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"36,45,45,49,45,60,36,64,27,60,27,49\\\"  data-color=\\\"#339966,-155,27\\\" data-over-color=\\\"#339966\\\" alt=\\\"#339966\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"54,45,63,49,63,60,54,64,45,60,45,49\\\"  data-color=\\\"#00CC99,-155,45\\\" data-over-color=\\\"#00CC99\\\" alt=\\\"#00CC99\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"72,45,81,49,81,60,72,64,63,60,63,49\\\"  data-color=\\\"#00FFCC,-155,63\\\" data-over-color=\\\"#00FFCC\\\" alt=\\\"#00FFCC\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"90,45,99,49,99,60,90,64,81,60,81,49\\\"  data-color=\\\"#00FFFF,-155,81\\\" data-over-color=\\\"#00FFFF\\\" alt=\\\"#00FFFF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"108,45,117,49,117,60,108,64,99,60,99,49\\\"  data-color=\\\"#33CCFF,-155,99\\\" data-over-color=\\\"#33CCFF\\\" alt=\\\"#33CCFF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"126,45,135,49,135,60,126,64,117,60,117,49\\\"  data-color=\\\"#3399FF,-155,117\\\" data-over-color=\\\"#3399FF\\\" alt=\\\"#3399FF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"144,45,153,49,153,60,144,64,135,60,135,49\\\"  data-color=\\\"#6699FF,-155,135\\\" data-over-color=\\\"#6699FF\\\" alt=\\\"#6699FF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"162,45,171,49,171,60,162,64,153,60,153,49\\\"  data-color=\\\"#6666FF,-155,153\\\" data-over-color=\\\"#6666FF\\\" alt=\\\"#6666FF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"180,45,189,49,189,60,180,64,171,60,171,49\\\"  data-color=\\\"#6600FF,-155,171\\\" data-over-color=\\\"#6600FF\\\" alt=\\\"#6600FF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"198,45,207,49,207,60,198,64,189,60,189,49\\\"  data-color=\\\"#6600CC,-155,189\\\" data-over-color=\\\"#6600CC\\\" alt=\\\"#6600CC\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"27,60,36,64,36,75,27,79,18,75,18,64\\\"  data-color=\\\"#339933,-140,18\\\" data-over-color=\\\"#339933\\\" alt=\\\"#339933\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"45,60,54,64,54,75,45,79,36,75,36,64\\\"  data-color=\\\"#00CC66,-140,36\\\" data-over-color=\\\"#00CC66\\\" alt=\\\"#00CC66\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"63,60,72,64,72,75,63,79,54,75,54,64\\\"  data-color=\\\"#00FF99,-140,54\\\" data-over-color=\\\"#00FF99\\\" alt=\\\"#00FF99\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"81,60,90,64,90,75,81,79,72,75,72,64\\\"  data-color=\\\"#66FFCC,-140,72\\\" data-over-color=\\\"#66FFCC\\\" alt=\\\"#66FFCC\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"99,60,108,64,108,75,99,79,90,75,90,64\\\"  data-color=\\\"#66FFFF,-140,90\\\" data-over-color=\\\"#66FFFF\\\" alt=\\\"#66FFFF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"117,60,126,64,126,75,117,79,108,75,108,64\\\"  data-color=\\\"#66CCFF,-140,108\\\" data-over-color=\\\"#66CCFF\\\" alt=\\\"#66CCFF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"135,60,144,64,144,75,135,79,126,75,126,64\\\"  data-color=\\\"#99CCFF,-140,126\\\" data-over-color=\\\"#99CCFF\\\" alt=\\\"#99CCFF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"153,60,162,64,162,75,153,79,144,75,144,64\\\"  data-color=\\\"#9999FF,-140,144\\\" data-over-color=\\\"#9999FF\\\" alt=\\\"#9999FF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"171,60,180,64,180,75,171,79,162,75,162,64\\\"  data-color=\\\"#9966FF,-140,162\\\" data-over-color=\\\"#9966FF\\\" alt=\\\"#9966FF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"189,60,198,64,198,75,189,79,180,75,180,64\\\"  data-color=\\\"#9933FF,-140,180\\\" data-over-color=\\\"#9933FF\\\" alt=\\\"#9933FF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"207,60,216,64,216,75,207,79,198,75,198,64\\\"  data-color=\\\"#9900FF,-140,198\\\" data-over-color=\\\"#9900FF\\\" alt=\\\"#9900FF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"18,75,27,79,27,90,18,94,9,90,9,79\\\"  data-color=\\\"#006600,-125,9\\\" data-over-color=\\\"#006600\\\" alt=\\\"#006600\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"36,75,45,79,45,90,36,94,27,90,27,79\\\"  data-color=\\\"#00CC00,-125,27\\\" data-over-color=\\\"#00CC00\\\" alt=\\\"#00CC00\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"54,75,63,79,63,90,54,94,45,90,45,79\\\"  data-color=\\\"#00FF00,-125,45\\\" data-over-color=\\\"#00FF00\\\" alt=\\\"#00FF00\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"72,75,81,79,81,90,72,94,63,90,63,79\\\"  data-color=\\\"#66FF99,-125,63\\\" data-over-color=\\\"#66FF99\\\" alt=\\\"#66FF99\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"90,75,99,79,99,90,90,94,81,90,81,79\\\"  data-color=\\\"#99FFCC,-125,81\\\" data-over-color=\\\"#99FFCC\\\" alt=\\\"#99FFCC\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"108,75,117,79,117,90,108,94,99,90,99,79\\\"  data-color=\\\"#CCFFFF,-125,99\\\" data-over-color=\\\"#CCFFFF\\\" alt=\\\"#CCFFFF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"126,75,135,79,135,90,126,94,117,90,117,79\\\"  data-color=\\\"#CCCCFF,-125,117\\\" data-over-color=\\\"#CCCCFF\\\" alt=\\\"#CCCCFF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"144,75,153,79,153,90,144,94,135,90,135,79\\\"  data-color=\\\"#CC99FF,-125,135\\\" data-over-color=\\\"#CC99FF\\\" alt=\\\"#CC99FF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"162,75,171,79,171,90,162,94,153,90,153,79\\\"  data-color=\\\"#CC66FF,-125,153\\\" data-over-color=\\\"#CC66FF\\\" alt=\\\"#CC66FF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"180,75,189,79,189,90,180,94,171,90,171,79\\\"  data-color=\\\"#CC33FF,-125,171\\\" data-over-color=\\\"#CC33FF\\\" alt=\\\"#CC33FF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"198,75,207,79,207,90,198,94,189,90,189,79\\\"  data-color=\\\"#CC00FF,-125,189\\\" data-over-color=\\\"#CC00FF\\\" alt=\\\"#CC00FF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"216,75,225,79,225,90,216,94,207,90,207,79\\\"  data-color=\\\"#9900CC,-125,207\\\" data-over-color=\\\"#9900CC\\\" alt=\\\"#9900CC\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"9,90,18,94,18,105,9,109,0,105,0,94\\\"  data-color=\\\"#003300,-110,0\\\" data-over-color=\\\"#003300\\\" alt=\\\"#003300\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"27,90,36,94,36,105,27,109,18,105,18,94\\\"  data-color=\\\"#009933,-110,18\\\" data-over-color=\\\"#009933\\\" alt=\\\"#009933\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"45,90,54,94,54,105,45,109,36,105,36,94\\\"  data-color=\\\"#33CC33,-110,36\\\" data-over-color=\\\"#33CC33\\\" alt=\\\"#33CC33\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"63,90,72,94,72,105,63,109,54,105,54,94\\\"  data-color=\\\"#66FF66,-110,54\\\" data-over-color=\\\"#66FF66\\\" alt=\\\"#66FF66\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"81,90,90,94,90,105,81,109,72,105,72,94\\\"  data-color=\\\"#99FF99,-110,72\\\" data-over-color=\\\"#99FF99\\\" alt=\\\"#99FF99\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"99,90,108,94,108,105,99,109,90,105,90,94\\\"  data-color=\\\"#CCFFCC,-110,90\\\" data-over-color=\\\"#CCFFCC\\\" alt=\\\"#CCFFCC\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"117,90,126,94,126,105,117,109,108,105,108,94\\\"  data-color=\\\"#FFFFFF,-110,108\\\" data-over-color=\\\"#FFFFFF\\\" alt=\\\"#FFFFFF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"135,90,144,94,144,105,135,109,126,105,126,94\\\"  data-color=\\\"#FFCCFF,-110,126\\\" data-over-color=\\\"#FFCCFF\\\" alt=\\\"#FFCCFF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"153,90,162,94,162,105,153,109,144,105,144,94\\\"  data-color=\\\"#FF99FF,-110,144\\\" data-over-color=\\\"#FF99FF\\\" alt=\\\"#FF99FF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"171,90,180,94,180,105,171,109,162,105,162,94\\\"  data-color=\\\"#FF66FF,-110,162\\\" data-over-color=\\\"#FF66FF\\\" alt=\\\"#FF66FF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"189,90,198,94,198,105,189,109,180,105,180,94\\\"  data-color=\\\"#FF00FF,-110,180\\\" data-over-color=\\\"#FF00FF\\\" alt=\\\"#FF00FF\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"207,90,216,94,216,105,207,109,198,105,198,94\\\"  data-color=\\\"#CC00CC,-110,198\\\" data-over-color=\\\"#CC00CC\\\" alt=\\\"#CC00CC\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"225,90,234,94,234,105,225,109,216,105,216,94\\\"  data-color=\\\"#660066,-110,216\\\" data-over-color=\\\"#660066\\\" alt=\\\"#660066\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"18,105,27,109,27,120,18,124,9,120,9,109\\\"  data-color=\\\"#336600,-95,9\\\" data-over-color=\\\"#336600\\\" alt=\\\"#336600\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"36,105,45,109,45,120,36,124,27,120,27,109\\\"  data-color=\\\"#009900,-95,27\\\" data-over-color=\\\"#009900\\\" alt=\\\"#009900\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"54,105,63,109,63,120,54,124,45,120,45,109\\\"  data-color=\\\"#66FF33,-95,45\\\" data-over-color=\\\"#66FF33\\\" alt=\\\"#66FF33\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"72,105,81,109,81,120,72,124,63,120,63,109\\\"  data-color=\\\"#99FF66,-95,63\\\" data-over-color=\\\"#99FF66\\\" alt=\\\"#99FF66\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"90,105,99,109,99,120,90,124,81,120,81,109\\\"  data-color=\\\"#CCFF99,-95,81\\\" data-over-color=\\\"#CCFF99\\\" alt=\\\"#CCFF99\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"108,105,117,109,117,120,108,124,99,120,99,109\\\"  data-color=\\\"#FFFFCC,-95,99\\\" data-over-color=\\\"#FFFFCC\\\" alt=\\\"#FFFFCC\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"126,105,135,109,135,120,126,124,117,120,117,109\\\"  data-color=\\\"#FFCCCC,-95,117\\\" data-over-color=\\\"#FFCCCC\\\" alt=\\\"#FFCCCC\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"144,105,153,109,153,120,144,124,135,120,135,109\\\"  data-color=\\\"#FF99CC,-95,135\\\" data-over-color=\\\"#FF99CC\\\" alt=\\\"#FF99CC\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"162,105,171,109,171,120,162,124,153,120,153,109\\\"  data-color=\\\"#FF66CC,-95,153\\\" data-over-color=\\\"#FF66CC\\\" alt=\\\"#FF66CC\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"180,105,189,109,189,120,180,124,171,120,171,109\\\"  data-color=\\\"#FF33CC,-95,171\\\" data-over-color=\\\"#FF33CC\\\" alt=\\\"#FF33CC\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"198,105,207,109,207,120,198,124,189,120,189,109\\\"  data-color=\\\"#CC0099,-95,189\\\" data-over-color=\\\"#CC0099\\\" alt=\\\"#CC0099\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"216,105,225,109,225,120,216,124,207,120,207,109\\\"  data-color=\\\"#993399,-95,207\\\" data-over-color=\\\"#993399\\\" alt=\\\"#993399\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"27,120,36,124,36,135,27,139,18,135,18,124\\\"  data-color=\\\"#333300,-80,18\\\" data-over-color=\\\"#333300\\\" alt=\\\"#333300\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"45,120,54,124,54,135,45,139,36,135,36,124\\\"  data-color=\\\"#669900,-80,36\\\" data-over-color=\\\"#669900\\\" alt=\\\"#669900\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"63,120,72,124,72,135,63,139,54,135,54,124\\\"  data-color=\\\"#99FF33,-80,54\\\" data-over-color=\\\"#99FF33\\\" alt=\\\"#99FF33\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"81,120,90,124,90,135,81,139,72,135,72,124\\\"  data-color=\\\"#CCFF66,-80,72\\\" data-over-color=\\\"#CCFF66\\\" alt=\\\"#CCFF66\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"99,120,108,124,108,135,99,139,90,135,90,124\\\"  data-color=\\\"#FFFF99,-80,90\\\" data-over-color=\\\"#FFFF99\\\" alt=\\\"#FFFF99\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"117,120,126,124,126,135,117,139,108,135,108,124\\\"  data-color=\\\"#FFCC99,-80,108\\\" data-over-color=\\\"#FFCC99\\\" alt=\\\"#FFCC99\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"135,120,144,124,144,135,135,139,126,135,126,124\\\"  data-color=\\\"#FF9999,-80,126\\\" data-over-color=\\\"#FF9999\\\" alt=\\\"#FF9999\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"153,120,162,124,162,135,153,139,144,135,144,124\\\"  data-color=\\\"#FF6699,-80,144\\\" data-over-color=\\\"#FF6699\\\" alt=\\\"#FF6699\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"171,120,180,124,180,135,171,139,162,135,162,124\\\"  data-color=\\\"#FF3399,-80,162\\\" data-over-color=\\\"#FF3399\\\" alt=\\\"#FF3399\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"189,120,198,124,198,135,189,139,180,135,180,124\\\"  data-color=\\\"#CC3399,-80,180\\\" data-over-color=\\\"#CC3399\\\" alt=\\\"#CC3399\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"207,120,216,124,216,135,207,139,198,135,198,124\\\"  data-color=\\\"#990099,-80,198\\\" data-over-color=\\\"#990099\\\" alt=\\\"#990099\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"36,135,45,139,45,150,36,154,27,150,27,139\\\"  data-color=\\\"#666633,-65,27\\\" data-over-color=\\\"#666633\\\" alt=\\\"#666633\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"54,135,63,139,63,150,54,154,45,150,45,139\\\"  data-color=\\\"#99CC00,-65,45\\\" data-over-color=\\\"#99CC00\\\" alt=\\\"#99CC00\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"72,135,81,139,81,150,72,154,63,150,63,139\\\"  data-color=\\\"#CCFF33,-65,63\\\" data-over-color=\\\"#CCFF33\\\" alt=\\\"#CCFF33\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"90,135,99,139,99,150,90,154,81,150,81,139\\\"  data-color=\\\"#FFFF66,-65,81\\\" data-over-color=\\\"#FFFF66\\\" alt=\\\"#FFFF66\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"108,135,117,139,117,150,108,154,99,150,99,139\\\"  data-color=\\\"#FFCC66,-65,99\\\" data-over-color=\\\"#FFCC66\\\" alt=\\\"#FFCC66\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"126,135,135,139,135,150,126,154,117,150,117,139\\\"  data-color=\\\"#FF9966,-65,117\\\" data-over-color=\\\"#FF9966\\\" alt=\\\"#FF9966\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"144,135,153,139,153,150,144,154,135,150,135,139\\\"  data-color=\\\"#FF6666,-65,135\\\" data-over-color=\\\"#FF6666\\\" alt=\\\"#FF6666\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"162,135,171,139,171,150,162,154,153,150,153,139\\\"  data-color=\\\"#FF0066,-65,153\\\" data-over-color=\\\"#FF0066\\\" alt=\\\"#FF0066\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"180,135,189,139,189,150,180,154,171,150,171,139\\\"  data-color=\\\"#CC6699,-65,171\\\" data-over-color=\\\"#CC6699\\\" alt=\\\"#CC6699\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"198,135,207,139,207,150,198,154,189,150,189,139\\\"  data-color=\\\"#993366,-65,189\\\" data-over-color=\\\"#993366\\\" alt=\\\"#993366\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"45,150,54,154,54,165,45,169,36,165,36,154\\\"  data-color=\\\"#999966,-50,36\\\" data-over-color=\\\"#999966\\\" alt=\\\"#999966\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"63,150,72,154,72,165,63,169,54,165,54,154\\\"  data-color=\\\"#CCCC00,-50,54\\\" data-over-color=\\\"#CCCC00\\\" alt=\\\"#CCCC00\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"81,150,90,154,90,165,81,169,72,165,72,154\\\"  data-color=\\\"#FFFF00,-50,72\\\" data-over-color=\\\"#FFFF00\\\" alt=\\\"#FFFF00\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"99,150,108,154,108,165,99,169,90,165,90,154\\\"  data-color=\\\"#FFCC00,-50,90\\\" data-over-color=\\\"#FFCC00\\\" alt=\\\"#FFCC00\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"117,150,126,154,126,165,117,169,108,165,108,154\\\"  data-color=\\\"#FF9933,-50,108\\\" data-over-color=\\\"#FF9933\\\" alt=\\\"#FF9933\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"135,150,144,154,144,165,135,169,126,165,126,154\\\"  data-color=\\\"#FF6600,-50,126\\\" data-over-color=\\\"#FF6600\\\" alt=\\\"#FF6600\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"153,150,162,154,162,165,153,169,144,165,144,154\\\"  data-color=\\\"#FF5050,-50,144\\\" data-over-color=\\\"#FF5050\\\" alt=\\\"#FF5050\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"171,150,180,154,180,165,171,169,162,165,162,154\\\"  data-color=\\\"#CC0066,-50,162\\\" data-over-color=\\\"#CC0066\\\" alt=\\\"#CC0066\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"189,150,198,154,198,165,189,169,180,165,180,154\\\"  data-color=\\\"#660033,-50,180\\\" data-over-color=\\\"#660033\\\" alt=\\\"#660033\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"54,165,63,169,63,180,54,184,45,180,45,169\\\"  data-color=\\\"#996633,-35,45\\\" data-over-color=\\\"#996633\\\" alt=\\\"#996633\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"72,165,81,169,81,180,72,184,63,180,63,169\\\"  data-color=\\\"#CC9900,-35,63\\\" data-over-color=\\\"#CC9900\\\" alt=\\\"#CC9900\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"90,165,99,169,99,180,90,184,81,180,81,169\\\"  data-color=\\\"#FF9900,-35,81\\\" data-over-color=\\\"#FF9900\\\" alt=\\\"#FF9900\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"108,165,117,169,117,180,108,184,99,180,99,169\\\"  data-color=\\\"#CC6600,-35,99\\\" data-over-color=\\\"#CC6600\\\" alt=\\\"#CC6600\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"126,165,135,169,135,180,126,184,117,180,117,169\\\"  data-color=\\\"#FF3300,-35,117\\\" data-over-color=\\\"#FF3300\\\" alt=\\\"#FF3300\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"144,165,153,169,153,180,144,184,135,180,135,169\\\"  data-color=\\\"#FF0000,-35,135\\\" data-over-color=\\\"#FF0000\\\" alt=\\\"#FF0000\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"162,165,171,169,171,180,162,184,153,180,153,169\\\"  data-color=\\\"#CC0000,-35,153\\\" data-over-color=\\\"#CC0000\\\" alt=\\\"#CC0000\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"180,165,189,169,189,180,180,184,171,180,171,169\\\"  data-color=\\\"#990033,-35,171\\\" data-over-color=\\\"#990033\\\" alt=\\\"#990033\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"63,180,72,184,72,195,63,199,54,195,54,184\\\"  data-color=\\\"#663300,-20,54\\\" data-over-color=\\\"#663300\\\" alt=\\\"#663300\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"81,180,90,184,90,195,81,199,72,195,72,184\\\"  data-color=\\\"#996600,-20,72\\\" data-over-color=\\\"#996600\\\" alt=\\\"#996600\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"99,180,108,184,108,195,99,199,90,195,90,184\\\"  data-color=\\\"#CC3300,-20,90\\\" data-over-color=\\\"#CC3300\\\" alt=\\\"#CC3300\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"117,180,126,184,126,195,117,199,108,195,108,184\\\"  data-color=\\\"#993300,-20,108\\\" data-over-color=\\\"#993300\\\" alt=\\\"#993300\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"135,180,144,184,144,195,135,199,126,195,126,184\\\"  data-color=\\\"#990000,-20,126\\\" data-over-color=\\\"#990000\\\" alt=\\\"#990000\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"153,180,162,184,162,195,153,199,144,195,144,184\\\"  data-color=\\\"#800000,-20,144\\\" data-over-color=\\\"#800000\\\" alt=\\\"#800000\\\">` +\\n      `<area shape=\\\"poly\\\" coords=\\\"171,180,180,184,180,195,171,199,162,195,162,184\\\"  data-color=\\\"#993333,-20,162\\\" data-over-color=\\\"#993333\\\" alt=\\\"#993333\\\">` +\\n      `</map>` +\\n      `<div class=\\\"selectCell\\\" alt=\\\"colormap\\\"></div>` +\\n      `<ul class=\\\"list-inline color-base-group jj-active\\\">` +\\n      `<li class=\\\"basecolor\\\"  data-color=\\\"\\\"></li>` +\\n      `<li class=\\\"basecolor1\\\" data-color=\\\"\\\"></li>` +\\n      `<li class=\\\"basecolor2\\\" data-color=\\\"\\\"></li>` +\\n      `<li class=\\\"basecolor3\\\" data-color=\\\"\\\"></li>` +\\n      `<li class=\\\"basecolor4\\\" data-color=\\\"\\\"></li>` +\\n      `<li class=\\\"basecolor5\\\" data-color=\\\"\\\"></li>` +\\n      `<li class=\\\"compcolor\\\"  data-color=\\\"\\\"></li>` +\\n      `</ul>` +\\n      `<ul class=\\\"list-inline color-gray-group jj-active\\\">` +\\n      `<li class=\\\"colortext0\\\"  data-color=\\\"#ffffff\\\" title=\\\"white\\\"></li>` +\\n      `<li class=\\\"colortext1\\\"  data-color=\\\"#e6e6e6\\\"></li>` +\\n      `<li class=\\\"colortext2\\\"  data-color=\\\"#cccccc\\\"></li>` +\\n      `<li class=\\\"colortext3\\\"  data-color=\\\"#b3b3b3\\\"></li>` +\\n      `<li class=\\\"colortext4\\\"  data-color=\\\"#999999\\\"></li>` +\\n      `<li class=\\\"colortext5\\\"  data-color=\\\"#808080\\\"></li>` +\\n      `<li class=\\\"colortext6\\\"  data-color=\\\"#666666\\\"></li>` +\\n      `<li class=\\\"colortext7\\\"  data-color=\\\"#4d4d4d\\\"></li>` +\\n      `<li class=\\\"colortext8\\\"  data-color=\\\"#333333\\\"></li>` +\\n      `<li class=\\\"colortext9\\\"  data-color=\\\"#191919\\\"></li>` +\\n      `<li class=\\\"colortext10\\\" data-color=\\\"#000000\\\" title=\\\"black\\\"></li>` +\\n      `<li class=\\\"blank\\\"       data-color=\\\"transparent\\\" title=\\\"transparent\\\"></li>` +\\n      `</ul>` +\\n      `<div class=\\\"input-group\\\">` +\\n      `<div class=\\\"input-group-prepend\\\">` +\\n      `<span class=\\\"input-group-text color-span\\\">` +\\n      `<i class=\\\"fa fa-user\\\"></i>` +\\n      `</span>` +\\n      `</div>` +\\n      `<input type=\\\"text\\\" class=\\\"form-control\\\">` +\\n      `</div>` +\\n      `<dl class=\\\"row\\\">` +\\n      `<dt class=\\\"col-sm-3\\\">name</dt><dd class=\\\"col-sm-9 color-name\\\"></dd>` +\\n      `<dt class=\\\"col-sm-3\\\">hex</dt><dd class=\\\"col-sm-9 color-hex\\\"></dd>` +\\n      `<dt class=\\\"col-sm-3\\\">rgb</dt><dd class=\\\"col-sm-9 color-rgb\\\"></dd>` +\\n      `<dt class=\\\"col-sm-3\\\">hsl</dt><dd class=\\\"col-sm-9 color-hsl\\\"></dd>` +\\n      `<dt class=\\\"col-sm-3\\\">hwb</dt><dd class=\\\"col-sm-9 color-hwb\\\"></dd>` +\\n      `</dl>` +\\n      `</div>`;\\n\\n    this.selectCell = this.querySelector('.selectCell');\\n    this.map = this.querySelector('map');\\n    this.map.id = Jinja.global.uuid();\\n    this.map.name = this.map.id;\\n    this.img = this.querySelector('img');\\n    this.img.setAttribute('usemap', '#' + this.map.id);\\n    this.input = this.querySelector('input');\\n    this.gray = this.querySelector('.color-gray-group');\\n    this.basecolor = this.querySelector('.color-base-group');\\n    this.colorSpan = this.querySelector('.color-span');\\n\\n    this.colorName = this.querySelector('.color-name');\\n    this.colorHex = this.querySelector('.color-hex');\\n    this.colorRgb = this.querySelector('.color-rgb');\\n    this.colorHsl = this.querySelector('.color-hsl');\\n    this.colorHwb = this.querySelector('.color-hwb');\\n\\n    let vars = [\\n      'basecolor',\\n      'compcolor',\\n      'basecolor1',\\n      'basecolor2',\\n      'basecolor3',\\n      'basecolor4',\\n      'basecolor5'\\n    ];\\n\\n    vars.forEach(item => {\\n      let li = this.querySelector('.' + item);\\n\\n      if (li) {\\n        let color = window\\n          .getComputedStyle(Jinja)\\n          .getPropertyValue('--' + item);\\n        li.style.backgroundColor = color;\\n        li.dataset.color = color;\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.map.addEventListener('mousemove', e => {\\n      if (e.target.matches('area')) {\\n        let color = e.target.dataset.color.split(',');\\n\\n        if (this.overColor != color[0]) {\\n          this.overColor = color[0];\\n          this.dispatchEvent(\\n            new CustomEvent('overColor', {\\n              detail: {\\n                value: this.overColor\\n              }\\n            })\\n          );\\n        }\\n      }\\n    });\\n\\n    this.map.addEventListener('click', e => {\\n      if (e.target.matches('area')) {\\n        let color = e.target.dataset.color.split(',');\\n\\n        this.selectCell.style.left = color[2] + 'px';\\n        this.selectCell.style.top = color[1] + 'px';\\n        this.selectCell.style.opacity = 1;\\n\\n        if (this.color != color[0]) {\\n          this.color = color[0];\\n          this.input.value = color[0];\\n          this.colorSpan.style.backgroundColor = color[0];\\n\\n          let c = w3color(this.color);\\n\\n          this.colorName.innerText = c.toName().toLowerCase() || 'unfind';\\n          this.colorHex.innerText = c.toHexString().toLowerCase();\\n          this.colorRgb.innerText = c.toRgbString().toLowerCase();\\n          this.colorHsl.innerText = c.toHslString().toLowerCase();\\n          this.colorHwb.innerText = c.toHwbString().toLowerCase();\\n\\n          this.dispatchEvent(new Event('input', { bubbles: true }));\\n          this.dispatchEvent(new Event('change', { bubbles: true }));\\n          this.dispatchEvent(\\n            new CustomEvent('selectColor', {\\n              detail: {\\n                value: this.color\\n              }\\n            })\\n          );\\n        }\\n      }\\n    });\\n\\n    this.basecolor.addEventListener('click', e => {\\n      let color = e.target.dataset.color;\\n\\n      if (this.color != color) {\\n        this.selectCell.style.opacity = 0;\\n        this.color = color;\\n        this.input.value = this.color;\\n        this.colorSpan.style.backgroundColor = this.color;\\n\\n        let c = w3color(this.color);\\n\\n        this.colorName.innerText = c.toName().toLowerCase() || 'unfind';\\n        this.colorHex.innerText = c.toHexString().toLowerCase();\\n        this.colorRgb.innerText = c.toRgbString().toLowerCase();\\n        this.colorHsl.innerText = c.toHslString().toLowerCase();\\n        this.colorHwb.innerText = c.toHwbString().toLowerCase();\\n\\n        this.dispatchEvent(new Event('input', { bubbles: true }));\\n        this.dispatchEvent(new Event('change', { bubbles: true }));\\n        this.dispatchEvent(\\n          new CustomEvent('selectColor', {\\n            detail: {\\n              value: this.color\\n            }\\n          })\\n        );\\n      }\\n    });\\n\\n    this.gray.addEventListener('click', e => {\\n      let color = e.target.dataset.color;\\n\\n      if (this.color != color) {\\n        this.selectCell.style.opacity = 0;\\n        this.color = color;\\n        this.input.value = this.color;\\n        this.colorSpan.style.backgroundColor = this.color;\\n\\n        let c = w3color(this.color);\\n\\n        this.colorName.innerText = c.toName().toLowerCase() || 'unfind';\\n        this.colorHex.innerText = c.toHexString().toLowerCase();\\n        this.colorRgb.innerText = c.toRgbString().toLowerCase();\\n        this.colorHsl.innerText = c.toHslString().toLowerCase();\\n        this.colorHwb.innerText = c.toHwbString().toLowerCase();\\n\\n        this.dispatchEvent(new Event('input', { bubbles: true }));\\n        this.dispatchEvent(new Event('change', { bubbles: true }));\\n        this.dispatchEvent(\\n          new CustomEvent('selectColor', {\\n            detail: {\\n              value: this.color\\n            }\\n          })\\n        );\\n      }\\n    });\\n\\n    this.input.addEventListener('input', e => {\\n      e.stopPropagation();\\n    });\\n\\n    this.input.addEventListener('change', e => {\\n      e.stopPropagation();\\n\\n      let c = w3color(this.input.value);\\n      let cell = this.map.querySelector(\\n        '[data-over-color=\\\"' + c.toHexString().toUpperCase() + '\\\"]'\\n      );\\n\\n      if (cell) cell.click();\\n      else {\\n        this.selectCell.style.opacity = 0;\\n        this.color = c.toHexString().toUpperCase();\\n        this.colorSpan.style.backgroundColor = this.color;\\n        this.dispatchEvent(new Event('input', { bubbles: true }));\\n        this.dispatchEvent(new Event('change', { bubbles: true }));\\n        this.dispatchEvent(\\n          new CustomEvent('selectColor', {\\n            detail: {\\n              value: this.color\\n            }\\n          })\\n        );\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @memberof JJColor\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n    return this.color;\\n  }\\n\\n  /**\\n   * @memberof JJColor\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(val) {\\n    if (val) {\\n      this.color = Jinja.global.colorHexString(val);\\n\\n      let cell = this.map.querySelector(\\n        '[data-over-color=\\\"' + this.color.toUpperCase() + '\\\"]'\\n      );\\n\\n      if (cell) cell.click();\\n      else {\\n        this.selectCell.style.opacity = 0;\\n        this.colorSpan.style.backgroundColor = this.color;\\n        this.input.value = this.color;\\n\\n        let c = w3color(this.color);\\n\\n        this.colorName.innerText = c.toName().toLowerCase() || 'unfind';\\n        this.colorHex.innerText = c.toHexString().toLowerCase();\\n        this.colorRgb.innerText = c.toRgbString().toLowerCase();\\n        this.colorHsl.innerText = c.toHslString().toLowerCase();\\n        this.colorHwb.innerText = c.toHwbString().toLowerCase();\\n        this.dispatchEvent(\\n          new CustomEvent('selectColor', {\\n            detail: {\\n              value: this.color\\n            }\\n          })\\n        );\\n      }\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-color', JJColor);\\n/* ==JJMenu.640.class================ */\\n\\n/**\\n * @classdesc 메뉴 컴포넌트관리를 위한 클래스\\n */\\nclass JJMenu extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    this.appsUri = '';\\n    if (document.location.pathname.split('/')[1] == 'apps') {\\n      this.appsUri = '/apps/' + document.location.pathname.split('/')[2];\\n    }\\n\\n    return {\\n      testMode: 'run', // test / run\\n      renderType: 'navigation-menu', //navigation-menu / metismenu\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render(menu) {\\n    this.innerHTML = \\n      `<ul class=\\\"nav navbar-nav\\\">` +\\n      `<li><a>워크스페이스에서 설정된 메뉴가 표시됩니다..</a></li>` +\\n      `</ul>`;\\n\\n    //this.menu = menu || workspaceMeta.MENU;\\n    this.menu = menu;\\n\\n    this.$empty();\\n    \\n    if (this.menu) {\\n      if (this.options.renderType === 'navigation-menu') {\\n        this._navigationMenu(this.menu);\\n      } else if (this.options.renderType === 'card-menu') {\\n        this._cardMenu(this.menu);\\n      } else {\\n        this._metisMenu(this.menu);\\n      }\\n    } else if(workspaceMeta.options.appInfo.menuUri){\\n      this._renderUri(workspaceMeta.options.appInfo.menuUri);\\n    } else if(this.options.renderSource==\\\"folder\\\"){\\n      this._renderFolder();\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 URI로 파일정보를 조회하여 메뉴를 생성한다.\\n   * @param {String} - URI\\n   * @example -\\n   */\\n  _renderUri(uri) {\\n    Jinja.driverApi.getUri(uri).then(fileInfo => {\\n      this.fileInfo = fileInfo;\\n      let body = Jinja.global.json(fileInfo.BODY)\\n      this._render(body)\\n    });\\n    //  Jinja.ajax.getJson(uri).then(body => this._render(body));\\n  }\\n\\n  _renderFolder(folderId){\\n    folderId = folderId || workspaceMeta.options.appInfo.homeFolderId;\\n\\n\\t\\treturn Jinja.driverApi\\n      .getTreeByFolderId(folderId)\\n      .then(treeData => {\\n\\t     file2Menu(treeData);\\n       this._render({\\n         \\\"items\\\": treeData\\n       })\\n    });    \\n    \\n\\n    function file2Menu(files, path){\\n      path = path || \\\"/\\\";\\n\\n      files.forEach(file=>{\\n        file.icon = file.ICON;\\n        file.title = file.NAME;\\n\\n        // 왼쪽메뉴의 최상위는 아이콘이 필요함\\n        if( path == \\\"/\\\"){\\n          file.icon = file.icon||\\\"fa-book\\\";\\n        }\\n        \\n        if (file.items.length > 0){\\n          file.href = \\\"\\\";  \\n          file2Menu(file.items, path+file.title+\\\"/\\\" )\\n        } else {\\n          file.href = path+file.title;\\n          file.items = null;\\n        }\\n      })\\n    }\\n    \\n  }\\n\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.addEventListener('click', e => {\\n      if (this.querySelector('li.active')) {\\n        this.querySelector('li.active').classList.remove('active');\\n      }\\n\\n      if (this.querySelector('li > a.active')) {\\n        this.querySelectorAll('li > a.active').forEach(el =>\\n                                                       el.classList.remove('active')\\n                                                      );\\n      }\\n\\n      if (e.target.matches('[test]')) {\\n        //alert(e.target.getAttribute('test') + ': Clicked!!');\\n      }\\n\\n      if (e.target.matches('.metismenu li > a')) {\\n        e.target.parentElement.classList.toggle('mm-active');\\n        e.target.parentElement.classList.add('active');\\n        e.target.classList.add('active');\\n      }\\n\\n      if (e.target.matches('li > a')) {\\n        Jinja.dom\\n          .parents(e.target, this, 'li')\\n          .forEach(li => li.querySelector('a').classList.add('active'));\\n      }\\n    });\\n  }\\n\\n  \\n  /**\\n   * @desc 지정한 메뉴정보로 메뉴를 생성한다.\\n   * @param {Object} - 메뉴정보\\n   * @param {Element} - 메뉴엘리먼트\\n   * @param {Number} - 메뉴레벨\\n   * @example -\\n   */\\n  _cardMenu(menu, el, level) {\\n    if(menu==\\\"null\\\" || !menu) return;\\n    let ul = el || document.createElement('ul');\\n\\n    level = (level || 0) + 1;\\n\\n    menu.items.forEach(item => {\\n      let li = document.createElement('li');\\n      let a = document.createElement('a');\\n\\n      if (item.href) {\\n        if (this.options.testMode == 'test') {\\n          a.setAttribute('test', item.href);\\n          a.href = '#';\\n        } else {\\n          a.href = this.appsUri + item.href;\\n        }\\n      }\\n\\n      a.title = item.title;\\n\\n      if (item.style) a.setAttribute('style', item.style);\\n      if (item.class) a.setAttribute('class', item.class);\\n      if (item.target) {\\n        a.setAttribute('target', item.target);\\n        a.setAttribute('rel', 'noreferrer');\\n      }\\n\\n      let icon = document.createElement('i');\\n\\n      icon.setAttribute('class', 'fa ' + (item.icon||\\\"fa-book\\\"));\\n      a.appendChild(icon);\\n\\n      let textSpan = document.createElement('span');\\n\\n      textSpan.appendChild(document.createTextNode(item.title));\\n      a.appendChild(textSpan);\\n      li.appendChild(a);\\n      ul.appendChild(li);\\n\\n      if (item.items) {\\n        li.classList.add('has-submenu');\\n\\n        let arrowDown = document.createElement('span');\\n\\n        arrowDown.setAttribute('class', 'menu-arrow');\\n        a.appendChild(arrowDown);\\n\\n        let dropdownUl = document.createElement('ul');\\n\\n        this._metisMenu(item, dropdownUl, level);\\n\\n        a.after(dropdownUl);\\n      }\\n    });\\n\\n    if (level == 1) {\\n      ul.setAttribute('class', 'card-menu');\\n\\n      this.appendChild(ul);\\n    } else if (level == 2) {\\n      ul.classList.add('nav-second-level');\\n    } else if (level == 3) {\\n      ul.classList.add('nav-thrid-level');\\n    }\\n  }  \\n  \\n  /**\\n   * @desc 지정한 메뉴정보로 메뉴를 생성한다.\\n   * @param {Object} - 메뉴정보\\n   * @param {Element} - 메뉴엘리먼트\\n   * @param {Number} - 메뉴레벨\\n   * @example -\\n   */\\n  _metisMenu(menu, el, level) {\\n    if(menu==\\\"null\\\" || !menu) return;\\n    let ul = el || document.createElement('ul');\\n\\n    level = (level || 0) + 1;\\n\\n    menu.items.forEach(item => {\\n      let li = document.createElement('li');\\n      let a = document.createElement('a');\\n\\n      if (item.href) {\\n        if (this.options.testMode == 'test') {\\n          a.setAttribute('test', item.href);\\n          a.href = '#';\\n        } else {\\n          a.href = this.appsUri + item.href;\\n        }\\n      }\\n\\n      a.title = item.title;\\n\\n      if (item.style) a.setAttribute('style', item.style);\\n      if (item.class) a.setAttribute('class', item.class);\\n      if (item.target) {\\n        a.setAttribute('target', item.target);\\n        a.setAttribute('rel', 'noreferrer');\\n      }\\n\\n      let icon = document.createElement('i');\\n\\n      icon.setAttribute('class', 'fa ' + item.icon);\\n      a.appendChild(icon);\\n\\n      let textSpan = document.createElement('span');\\n\\n      textSpan.appendChild(document.createTextNode(item.title));\\n      a.appendChild(textSpan);\\n      li.appendChild(a);\\n      ul.appendChild(li);\\n\\n      if (item.items) {\\n        li.classList.add('has-submenu');\\n\\n        let arrowDown = document.createElement('span');\\n\\n        arrowDown.setAttribute('class', 'menu-arrow');\\n        a.appendChild(arrowDown);\\n\\n        let dropdownUl = document.createElement('ul');\\n\\n        this._metisMenu(item, dropdownUl, level);\\n\\n        a.after(dropdownUl);\\n      }\\n    });\\n\\n    if (level == 1) {\\n      ul.setAttribute('class', 'metismenu');\\n\\n      this.appendChild(ul);\\n    } else if (level == 2) {\\n      ul.classList.add('nav-second-level');\\n    } else if (level == 3) {\\n      ul.classList.add('nav-thrid-level');\\n    }\\n  }\\n\\n  \\n  /**\\n   * @desc 네비게이션 메뉴를 생성한다.\\n   * @param {Object} - 메뉴정보\\n   * @example -\\n   */\\n  _navigationMenu(menu) {\\n    if(menu==\\\"null\\\" || !menu) return;\\n    let ul = document.createElement('ul');\\n\\n    ul.setAttribute('class', 'navigation-menu');\\n\\n    menu.items.forEach(item => {\\n      let li = document.createElement('li');\\n      let a = document.createElement('a');\\n\\n      if (item.href) {\\n        if (this.options.testMode == 'test') {\\n          a.setAttribute('test', item.href);\\n        } else {\\n          a.href = this.appsUri + item.href;\\n        }\\n      }\\n\\n      a.title = item.title;\\n\\n      if (item.style) {\\n        a.setAttribute('style', item.style);\\n      }\\n\\n      if (item.class) {\\n        a.setAttribute('class', item.class);\\n      }\\n\\n      if (item.target) {\\n        a.setAttribute('target', item.target);\\n        a.setAttribute('rel', 'noreferrer');\\n      }\\n\\n      if (item.icon) {\\n        let icon = document.createElement('i');\\n\\n        icon.setAttribute('class', 'fa ' + item.icon);\\n        a.appendChild(icon);\\n      }\\n\\n      a.appendChild(document.createTextNode(item.title));\\n      li.appendChild(a);\\n      ul.appendChild(li);\\n\\n      if (item.items) {\\n        li.classList.add('has-submenu');\\n\\n        let arrowDown = document.createElement('div');\\n\\n        arrowDown.setAttribute('class', 'arrow-down');\\n        a.appendChild(arrowDown);\\n\\n        let dropdownUl = document.createElement('ul');\\n\\n        if (!this.matches('side *')) {\\n          dropdownUl.classList.add('submenu');\\n        }\\n\\n        item.items.forEach(subItem => {\\n          let subLi = document.createElement('li');\\n          let subA = document.createElement('a');\\n\\n          if (this.options.testMode == 'test') {\\n            subA.setAttribute('test', subItem.href);\\n          } else {\\n            subA.href = subItem.href;\\n          }\\n\\n          subA.title = subItem.title;\\n\\n          if (subItem.style) {\\n            subA.setAttribute('style', subItem.style);\\n          }\\n\\n          if (subItem.class) {\\n            subA.setAttribute('class', subItem.class);\\n          }\\n\\n          if (subItem.target) {\\n            subA.setAttribute('target', subItem.target);\\n            subA.setAttribute('rel', 'noreferrer');\\n          }\\n\\n          if (subItem.icon) {\\n            let icon = document.createElement('i');\\n\\n            icon.setAttribute('class', 'fa ' + item.icon);\\n            subA.appendChild(icon);\\n          }\\n\\n          subA.appendChild(document.createTextNode(subItem.title));\\n          subLi.appendChild(subA);\\n          dropdownUl.appendChild(subLi);\\n        });\\n\\n        a.after(dropdownUl);\\n      }\\n    });\\n\\n    this.appendChild(ul);\\n  }\\n\\n  /**\\n   * @static\\n   * @memberof JJMenu\\n   * @method get observedAttributes\\n   * @desc 모니터링 할 속성 목록을 반환한다.\\n   * @return {Array} - 모니터링 할 속성 목록\\n   * @example -\\n   */\\n  static get observedAttributes() {\\n    return ['jj-uri'];\\n  }\\n\\n  init(){\\n    if(!this.getAttribute(\\\"jj-uri\\\") && workspaceMeta.options.appInfo.menuUri){\\n      this._renderUri(workspaceMeta.options.appInfo.menuUri);\\n    }\\n  }\\n  \\n  /**\\n   * @desc 지정한 메뉴정보로 메뉴를 생성한다.\\n   * @param {Object} - 메뉴정보\\n   * @param {Element} - 메뉴엘리먼트\\n   * @param {Number} - 메뉴레벨\\n   * @example -\\n   */\\n  xx_metisMenu(menu, el, level) {\\n    let ul = el || document.createElement('ul');\\n\\n    level = (level || 0) + 1;\\n\\n    if (!this.matches('side *')) {\\n      ul.setAttribute('class', 'metismenu');\\n    }\\n\\n    menu.items.forEach(item => {\\n      let li = document.createElement('li');\\n      let a = document.createElement('a');\\n\\n      if (item.href) {\\n        if (this.options.testMode == 'test') {\\n          a.setAttribute('test', item.href);\\n          a.href = '#';\\n        } else {\\n          a.href = this.appsUri + item.href;\\n        }\\n      }\\n\\n      a.title = item.title;\\n\\n      if (item.style) a.setAttribute('style', item.style);\\n      if (item.class) a.setAttribute('class', item.class);\\n      if (item.target) {\\n        a.setAttribute('target', item.target);\\n        a.setAttribute('rel', 'noreferrer');\\n      }\\n\\n      let icon = document.createElement('i');\\n\\n      icon.setAttribute('class', 'fa ' + item.icon);\\n      a.appendChild(icon);\\n\\n      let textSpan = document.createElement('span');\\n\\n      textSpan.appendChild(document.createTextNode(item.title));\\n      a.appendChild(textSpan);\\n      li.appendChild(a);\\n      ul.appendChild(li);\\n\\n      if (item.items) {\\n        li.classList.add('has-submenu');\\n\\n        let arrowDown = document.createElement('span');\\n\\n        arrowDown.setAttribute('class', 'menu-arrow');\\n        a.appendChild(arrowDown);\\n\\n        let dropdownUl = document.createElement('ul');\\n\\n        if (!this.matches('side *')) {\\n          dropdownUl.classList.add('nav-second-level');\\n        }\\n\\n        item.items.forEach(subItem => {\\n          let subLi = document.createElement('li');\\n          let subA = document.createElement('a');\\n\\n          if (this.options.testMode == 'test') {\\n            subA.setAttribute('test', subItem.href);\\n            a.href = '#';\\n          } else {\\n            subA.href = this.appsUri + subItem.href;\\n          }\\n\\n          subA.title = subItem.title;\\n\\n          if (subItem.style) subA.setAttribute('style', subItem.style);\\n\\n          if (subItem.class) subA.setAttribute('class', subItem.class);\\n\\n          if (subItem.target) {\\n            subA.setAttribute('target', subItem.target);\\n            subA.setAttribute('rel', 'noreferrer');\\n          }\\n\\n          let icon = document.createElement('i');\\n\\n          icon.setAttribute('class', 'fa ' + subItem.icon);\\n          subA.appendChild(icon);\\n\\n          subA.appendChild(document.createTextNode(subItem.title));\\n          subLi.appendChild(subA);\\n          dropdownUl.appendChild(subLi);\\n        });\\n\\n        if (this.matches('side *')) {\\n          a.classList.add('jj-toggle');\\n        } else {\\n        }\\n\\n        a.after(dropdownUl);\\n      }\\n    });\\n\\n    this.appendChild(ul);\\n  }\\n\\n  addMenu(item){\\n    let defaultItem = {\\n      \\\"active\\\": true,\\n      //\\\"href\\\": \\\"\\\\공통코드\\\",\\n      \\\"icon\\\": \\\"\\\",\\n      //\\\"menuId\\\": \\\"7522fffe-6fdd-4ce3-a703-fa0e09e71799\\\",\\n      \\\"target\\\": \\\"\\\",\\n      //\\\"title\\\": \\\"공통코드\\\",\\n    };\\n\\n\\t\\tlet newItem = Object.assign(defaultItem, item);\\n\\n    this.menu.items.push(newItem);\\n    \\n    return Jinja.driverApi.updateFileBody(\\n      this.fileInfo.ID, \\n      Jinja.global.string(this.menu), \\n      this.fileInfo.VERSION);\\n  }\\n  /**\\n   * @desc 엘리먼트 속성변경 이벤트 콜백을 처리한다.\\n   * @param {String} - 속성명\\n   * @param {*} - 이전값\\n   * @param {*} - 신규값\\n   * @example -\\n   */\\n  attributeChangedCallback(attrName, oldVal, newVal) {\\n    if (attrName === 'jj-uri' && newVal) {\\n      this._renderUri(newVal);\\n    }\\n  }\\n  \\n  \\n}\\n\\ncustomElements.define('jj-menu', JJMenu);\\n/* ==JJTree.640.class================ */\\n\\n/**\\n * @classdesc 트리 컴포넌트관리를 위한 클래스\\n */\\nclass JJTree extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      displayField: 'NAME',\\n      keyField: 'ID',\\n      iconField: 'icon',\\n      childField: 'items',\\n      categoryField: '',\\n      isIcon: false,\\n      icons: ['fa-folder-open', 'fa-file-text-o'],\\n      isCheck: false,\\n      isEdit: false,\\n      isDrag: false,\\n      isFolder: false,\\n      isFolderOnly: true,\\n      isClickFolding: false,\\n      isContextMenu: false,\\n      useKeyMove: false,\\n      dragMatches: '',\\n      dragObjectClass: '',\\n      contextMenu: [\\n        { label: 'Copy', command: 'copy', icon: 'fa-copy' },\\n        { label: 'Cut', command: 'cut', icon: 'fa-cut' },\\n        { label: 'Paste', command: 'paste', icon: 'fa-paste' },\\n        { label: 'divider' },\\n        { label: 'Remove', command: 'remove', icon: 'fa-remove' }\\n      ],\\n      addOn: ['editable', 'keydown', 'context', 'drag', 'checkbox']\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    this.classList.add('jj-tree');\\n    this.setAttribute('tabindex', -1);\\n    this.rootUl = document.createElement('ul');\\n    this._visbieItem = [];\\n    this.appendChild(this.rootUl);\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.addEventListener('click', this._onClick);\\n    this.addEventListener('keydown', this._onKeydown);\\n    this.addEventListener('touchstart', this._onMousedown);\\n    this.addEventListener('touchend', this._onMouseup);\\n\\n    this.addEventListener('mousedown', this._onMousedown);\\n    this.addEventListener('mouseup', this._onMouseup);\\n    this.addEventListener('dragstart', this._onDragstart);\\n    this.addEventListener('dragover', this._onDragover);\\n    this.addEventListener('drop', this._onDrop);\\n    this.addEventListener('dragleave', this._onDragleave);\\n    this.addEventListener('dragend', this._onDragend);\\n    if (this.options.isContextMenu == \\\"false\\\") this.options.isContextMenu = false;\\n    if (this.options.isContextMenu) {\\n      this.addEventListener('contextmenu', this._onContextmenu);\\n      this.addEventListener('jjContextMenuclick', this._onContextClick);\\n    }\\n  }\\n\\n  _resetEvent(){\\n    this.removeEventListener(\\\"click\\\", this._onClick)\\n    this.removeEventListener(\\\"keydown\\\", this._onKeydown);\\n    this.removeEventListener(\\\"touchstart\\\", this._onMousedown);\\n    this.removeEventListener(\\\"touchend\\\", this._onMouseup);\\n\\n    this.removeEventListener(\\\"mousedown\\\", this._onMousedown);\\n    this.removeEventListener(\\\"mouseup\\\", this._onMouseup);\\n    this.removeEventListener(\\\"dragstart\\\", this._onDragstart);\\n    this.removeEventListener(\\\"dragover\\\", this._onDragover);\\n    this.removeEventListener(\\\"drop\\\", this._onDrop);\\n    this.removeEventListener(\\\"dragleave\\\", this._onDragleave);\\n    this.removeEventListener(\\\"dragend\\\", this._onDragend);\\n    this.removeEventListener(\\\"contextmenu\\\", this._onContextmenu);\\n    this.removeEventListener(\\\"jjContextMenuclick\\\", this._onContextClick);\\n  }  \\n  /**\\n   * @desc 지정한 데이터를 지정한 엘리먼트의 자식노드로 생성한다.\\n   * @param {Element} - 대상엘리먼트\\n   * @param {Array} - JSON 데이터 목록\\n   * @example -\\n   */\\n  _fromJson(ul, items) {\\n    items.forEach(item => {\\n      let li = this._renderItem(ul, item);\\n      let items = item[this.options.childField];\\n\\n      if (items && items.length) {\\n        li.classList.add('has-child');\\n\\n        let itemUl = document.createElement('ul');\\n\\n        itemUl.classList.add('jstree-children');\\n        li.appendChild(itemUl);\\n\\n        this._fromJson(itemUl, items);\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 키에 해당하는 노드에 지정한 데이터로 자식노드를 추가한다.\\n   * @param {String} - 키\\n   * @param {Array} - JSON 데이터 목록\\n   * @example -\\n   */\\n  _updateJson(key, items) {\\n    if (!items.length) return;\\n\\n    let item = this._findKey(key);\\n\\n    if (item) {\\n      let li = item.parentElement;\\n      let itemUl = li.querySelector('ul');\\n\\n      if (itemUl) {\\n        itemUl.$empty();\\n      } else {\\n        li.classList.add('has-child');\\n        itemUl = document.createElement('ul');\\n        li.appendChild(itemUl);\\n      }\\n\\n      this._fromJson(itemUl, items);\\n    } else {\\n      console.error(`tree updateJson에서 ${key}의 노드를 찾을수 없습니다.`);\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 엘리먼트에 지정한 데이터로 생성한 엘리먼트를 자식엘리먼트로 추가한다.\\n   * @param {Object} - 대상엘리먼트\\n   * @param {Object} - JSON 데이터\\n   * @return {Object} - 자식엘리먼트\\n   * @example -\\n   */\\n  _renderItem(ul, item) {\\n    let label = item[this.options.displayField];\\n    let key = item[this.options.keyField];\\n    let icon = item[this.options.iconField]||this.options.icons[1];\\n\\n    let html;\\n\\n    if (this.options.isCheck){\\n    html = `<i class=\\\"jj-tree-folding\\\"></i>\\n<a href=\\\"#\\\" key=\\\"${key}\\\" title=\\\"${label}\\\">\\n<i class=\\\"jj-tree-check\\\"></i>\\n<i class=\\\"icon fa ${icon}\\\"></i>\\n<t>${label}</t>\\n<span class=\\\"addon\\\"></span>\\n</a>`;\\n    } \\n    else {\\n    html = `<i class=\\\"jj-tree-folding\\\"></i>\\n<a href=\\\"#\\\" key=\\\"${key}\\\" title=\\\"${label}\\\">\\n<i class=\\\"icon fa ${icon}\\\"></i>\\n<t>${label}</t>\\n<span class=\\\"addon\\\"></span>\\n</a>`;\\n      \\n    }\\n    \\n    let li = document.createElement(\\\"li\\\");\\n    li.innerHTML = html;\\n    li.itemData = item;\\n    ul.appendChild(li);\\n\\n\\n    return li;  \\n  }\\n\\n  /**\\n   * @desc 지정한 노드를 선택한다.\\n   * @param {Element} - 대상노드\\n   * @example -\\n   */\\n  _select(item) {\\n    this._selectMark(item);\\n    this.dispatchEvent(\\n      new CustomEvent('treeClick', {\\n        detail: {\\n          key: item.getAttribute('key'),\\n          data: item.parentElement.itemData\\n        },\\n        bubbles: true\\n      })\\n    );\\n  }\\n\\n  /**\\n   * @desc 지정한 노드를 선택취소한다.\\n   * @param {Element} - 대상노드\\n   * @example -\\n   */\\n  _unselect() {\\n    this.cutLi = null;\\n    this.copyLi = null;\\n\\n    if (this.selectEl) {\\n      this.selectEl.classList.remove('select');\\n      this.selectEl.classList.remove('bg-primary');\\n      this.selectEl.classList.remove('text-white');\\n      this.selectEl = null;\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 노드를 선택표시한다.\\n   * @param {Element} - 대상노드\\n   * @example -\\n   */\\n  _selectMark(item) {\\n    if (this.selectEl) {\\n      this.selectEl.classList.remove('select');\\n      this.selectEl.classList.remove('bg-primary');\\n      this.selectEl.classList.remove('text-white');\\n      this.selectEl = null;\\n    }\\n\\n    if (item) {\\n      this.selectEl = item;\\n      this.selectEl.classList.add('select');\\n      this.selectEl.classList.add('bg-primary');\\n      this.selectEl.classList.add('text-white');\\n      this.selectEl.scrollIntoView({\\n        behavior: 'smooth',\\n        block: 'nearest',\\n        inline: 'start'\\n      });\\n    }\\n  }\\n\\n  /**\\n   * @desc 선택된 노드의 이전노드를 선택한다.\\n   * @param {Element} - 대상노드\\n   * @example -\\n   */\\n  _prevItem() {\\n    let index = this._visbieItem.indexOf(this.selectEl);\\n\\n    index--;\\n\\n    this._select(this._visbieItem[index]);\\n  }\\n\\n  /**\\n   * @desc 선택된 노드의 다음 노드를 선택한다.\\n   * @param {Element} - 대상노드\\n   * @example -\\n   */\\n  _nextItem() {\\n    let index = this._visbieItem.indexOf(this.selectEl);\\n\\n    index++;\\n\\n    this._select(this._visbieItem[index]);\\n  }\\n\\n  /**\\n   * @desc 선택된 노드의 상위노드를 선택한다.<br><br>\\n   * 하위노드가 펼쳐져 있을 경우 이동하지 않고 하위노드를 접는다.\\n   * @param {Element} - 대상노드\\n   * @example -\\n   */\\n  _leftItem() {\\n    let li = this.selectEl.parentElement;\\n\\n    if (li.matches('.has-child') && li.matches('.show')) {\\n      li.classList.remove('show');\\n\\n      this._visbieItemRefresh();\\n    } else {\\n      let parentItem = li.parentElement.closest('li');\\n\\n      if (parentItem) {\\n        this._select(parentItem.querySelector('a'));\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 선택된 노드의 다음노드를 선택한다.<br><br>\\n   * 하위노드가 접혀져 있을 경우 이동하지 않고 하위노드를 펼친다.\\n   * @example -\\n   */\\n  _rightItem() {\\n    let li = this.selectEl.parentElement;\\n\\n    if (li.matches('.has-child') && li.matches('.show')) {\\n      this._nextItem();\\n    } else if (li.matches('.has-child') && !li.matches('.show')) {\\n      li.classList.add('show');\\n\\n      this._visbieItemRefresh();\\n    } else {\\n      this._nextItem();\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 노드를 기준노드의 지정한 위치로 이동시킨다.\\n   * @param {Object} - 대상노드\\n   * @param {Object} - 기준노드\\n   * @param {String} - 이동위치\\n   * @param {Boolean} - 새로고침여부\\n   * @example -\\n   */\\n  _moveItem(fromLi, toLi, position, isSpeed) {\\n    if (!fromLi || !toLi) return;\\n\\n    let fromUl;\\n\\n    if (\\n      fromLi.parentElement &&\\n      fromLi.parentElement.tagName.toUpperCase() === 'UL'\\n    ) {\\n      fromUl = fromLi.parentElement;\\n    }\\n\\n    try {\\n      switch (position) {\\n        case 'top':\\n          toLi.before(fromLi);\\n\\n          break;\\n        case 'bottom':\\n          toLi.after(fromLi);\\n\\n          break;\\n        case 'inner':\\n          let ul = toLi.querySelector('ul');\\n\\n          if (!ul) {\\n            ul = document.createElement('ul');\\n            toLi.appendChild(ul);\\n          }\\n\\n          ul.appendChild(fromLi);\\n          ul.parentElement.classList.add('has-child');\\n          ul.parentElement.classList.add('show');\\n\\n          break;\\n      }\\n    } catch (ex) {\\n      console.error(ex);\\n    }\\n\\n    if (fromUl && fromUl.parentElement && fromUl.childElementCount === 0) {\\n      fromUl.parentElement.classList.remove('has-child');\\n      fromUl.remove();\\n    }\\n\\n    if (!isSpeed) {\\n      this._visbieItemRefresh();\\n    }\\n  }\\n\\n  /**\\n   * @desc 드랍할 위치명 반환한다.\\n   * @param {Event} - 이벤트\\n   * @param {Number} - 여백\\n   * @return {String} - 위치명\\n   * @example -\\n   */\\n  _dropPosition(event, abs) {\\n    let dropPosition = 'bottom';\\n\\n    if (!abs) abs = 6;\\n\\n    let x =\\n      this.dropEl.getBoundingClientRect().x - this.getBoundingClientRect().x;\\n    let y =\\n      this.dropEl.getBoundingClientRect().y - this.getBoundingClientRect().y;\\n    let h = this.dropEl.offsetHeight;\\n    let w = this.dropEl.offsetWidth;\\n    let h2 = event.clientY - this.dropEl.getBoundingClientRect().y;\\n    let w2 = event.clientX - this.getBoundingClientRect().x - x;\\n    let py = h2 / h;\\n    let px = w2 / w;\\n\\n    dropPosition = 'inner';\\n\\n    if (h2 < abs) {\\n      dropPosition = 'top';\\n    } else if (h - h2 < abs) {\\n      dropPosition = 'bottom';\\n    } else {\\n      dropPosition = 'inner';\\n    }\\n\\n    return dropPosition;\\n  }\\n\\n  /**\\n   * @desc Visible 노드목록을 재생성한다.\\n   * @example -\\n   */\\n  _visbieItemRefresh() {\\n    if (this.options.useKeyMove) {\\n      window.requestAnimationFrame(e => {\\n        this._visbieItem = [];\\n        this.querySelectorAll('li > a').forEach(el => {\\n          if (Jinja.dom.isVisible(el)) this._visbieItem.push(el);\\n        });\\n      });\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 키의 노드를 반환한다.\\n   * @param {String} - 키\\n   * @return {Element} - 노드\\n   * @example -\\n   */\\n  _findKey(key) {\\n    return this.rootUl.querySelector(`a[key=\\\"${key}\\\"]`);\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터와 동일한 노드를 반환한다.\\n   * @param {Object} - 데이터\\n   * @return {Element} - 노드\\n   * @example -\\n   */\\n  _findData(data) {\\n    var result;\\n\\n    this.rootUl.querySelectorAll('li').forEach(li => {\\n      if (Object.is(li.itemData.nodeData, data)) {\\n        result = li;\\n      }\\n    });\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 클릭 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onClick(event) {\\n    let item = event.target;\\n\\n\\n    if (event.target.matches('.has-child > .jj-tree-folding')) {\\n      event.target.parentElement.classList.toggle('show');\\n\\n      this._visbieItemRefresh();\\n    } \\n    else if (event.target.matches('.has-child > a')) {\\n      if (this.options.isClickFolding) {\\n        event.target.parentElement.classList.toggle('show');\\n      }\\n\\n      if (this.options.isFolderOnly) {\\n        this._selectMark(event.target);\\n      } else {\\n        this._select(event.target);\\n      }\\n\\n      this._visbieItemRefresh();\\n    } \\n    else if (event.target.matches('a')) {\\n      this._select(event.target);\\n    }\\n    \\n    if (event.target.matches('.jj-tree-check')) {\\n      item.classList.toggle('checked');\\n      this.dispatchEvent(new CustomEvent('itemCheck', {\\n        \\\"detail\\\": {\\n          \\\"key\\\": item.parentElement.getAttribute('key'),\\n          \\\"checked\\\": item.classList.contains('checked'),\\n          \\\"checkKeys\\\": this.getCheckKeys(),\\n          \\\"data\\\": item.parentElement.parentElement.itemData\\n        },\\n        'bubbles': true\\n      }));        \\n    }\\n\\n    if (event.target.matches('a')) {\\n      this.dispatchEvent(\\n        new CustomEvent('itemClick', {\\n          \\\"detail\\\": {\\n            \\\"key\\\": item.getAttribute('key'),\\n            \\\"data\\\": item.parentElement.itemData\\n          },\\n          \\\"bubbles\\\": true\\n        })\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @desc 키다운 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onKeydown(event) {\\n    let keyMap = Jinja.global.getEventKeyMap(event);\\n\\n    if (\\n      !this.options.useKeyMove &&\\n      ['Up', 'Down', 'Left', 'Right'].includes(keyMap)\\n    ) {\\n      return false;\\n    }\\n\\n    if (['Up', 'Down', 'Left', 'Right', 'Space'].includes(keyMap)) {\\n      event.preventDefault();\\n      event.stopPropagation();\\n    }\\n\\n    switch (keyMap) {\\n      case 'Up':\\n        this._prevItem();\\n\\n        break;\\n      case 'Down':\\n        this._nextItem();\\n\\n        break;\\n      case 'Left':\\n        this._leftItem();\\n\\n        break;\\n      case 'Right':\\n        this._rightItem();\\n\\n        break;\\n      case 'Ctrl-C':\\n        this._onCopy(event);\\n\\n        break;\\n      case 'Ctrl-X':\\n        this._onCut(event);\\n\\n        break;\\n      case 'Ctrl-V':\\n        this._onPaste(event);\\n\\n        break;\\n      case 'Esc':\\n        this._unselect();\\n\\n        break;\\n      case 'Delete':\\n        this._onDelete(event);\\n\\n        break;\\n    }\\n  }\\n\\n  /**\\n   * @desc 마우스다운 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onMousedown(event) {\\n    if (event.target.matches('a') && event.button === 0) {\\n      this.dragEl = event.target;\\n      this.dragEl.setAttribute('draggable', 'true');\\n    }\\n  }\\n\\n  /**\\n   * @desc 마우스업 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onMouseup(event) {\\n    if (this.dragEl) {\\n      this.dragEl.removeAttribute('draggable');\\n      this.dragEl = null;\\n    }\\n  }\\n\\n  /**\\n   * @desc 드래그시작 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onDragstart(event) {\\n    let key = event.target.getAttribute('key');\\n\\n    event.dataTransfer.setData('text/plain', key);\\n    event.dataTransfer.setData('key', key);\\n    event.dataTransfer.setData('objectClass', this.options.dragObjectClass);\\n  }\\n\\n  /**\\n   * @desc 드래그오버 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onDragover(event) {\\n    if (event.target.matches(`a:not([draggable])`)) {\\n      if (this.dragEl && this.dragEl.parentElement.contains(event.target)) {\\n        return;\\n      }\\n\\n      if (\\n        this.options.dragMatches &&\\n        !event.target.matches(this.options.dragMatches)\\n      ) {\\n        return;\\n      }\\n\\n      event.preventDefault();\\n\\n      this.dropEl = event.target;\\n      this.dropEl.classList.add('dragover');\\n\\n      let dropPosition = 'inner';\\n\\n      if (!this.options.dragMatches) {\\n        dropPosition = this._dropPosition(event, 10);\\n      }\\n\\n      this.dropEl.setAttribute('position', dropPosition);\\n    }\\n  }\\n\\n  /**\\n   * @desc 드랍 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onDrop(event) {\\n    if (this.dragEl) {\\n      if (Object.is(this.dragEl, this.dropEl)) {\\n        return;\\n      } else if (this.dragEl.parentElement.contains(this.dropEl)) {\\n        return;\\n      } else if (this.dropEl) {\\n        this._moveItem(\\n          this.dragEl.parentElement,\\n          this.dropEl.parentElement,\\n          this.dropEl.getAttribute('position')\\n        );\\n      }\\n    } else {\\n      this.dispatchEvent(\\n        new CustomEvent('treeExtDrop', {\\n          \\\"detail\\\": {\\n            \\\"dropLi\\\": this.dropEl.parentElement,\\n            \\\"position\\\": this.dropEl.getAttribute('position'),\\n            \\\"dataTransfer\\\": event.dataTransfer,\\n            \\\"dropEvent\\\": event\\n          },\\n          \\\"bubbles\\\": true\\n        })\\n      );\\n\\n      this.dropEl.classList.remove('dragover');\\n      this.dropEl.removeAttribute('position');\\n      this.dropEl = null;\\n    }\\n  }\\n\\n  /**\\n   * @desc 드래그리브 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onDragleave(event) {\\n    if (event.target.matches(`a`) && event.target.classList.contains('dragover')) {\\n      event.target.classList.remove('dragover');\\n      event.target.removeAttribute('position');\\n    }\\n  }\\n\\n  /**\\n   * @desc 드랍종료 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onDragend(event) {\\n    if (this.dragEl) {\\n      this.dragEl.removeAttribute('draggable');\\n      this.dragEl = null;\\n    }\\n\\n    if (this.dropEl) {\\n      this.dropEl.classList.remove('dragover');\\n      this.dropEl.removeAttribute('position');\\n      this.dropEl = null;\\n    }\\n  }\\n\\n  /**\\n   * @desc 컨텍스트메뉴 생성 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onContextmenu(event) {\\n    if (event.target.matches(`a`)) {\\n      event.preventDefault();\\n\\n      this._select(event.target);\\n\\n      Jinja.context.render(this, event, [\\n        { command: 'copy', label: '복사', icon: 'fa-copy' },\\n        { command: 'cut', label: '자르기' },\\n        { label: 'divider' },\\n        { command: 'paste', label: '붙이기', icon: 'fa-paste' }\\n      ]);\\n    }\\n  }\\n\\n  /**\\n   * @desc 컨텍스트메뉴 클릭 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onContextClick(event) {\\n    event.preventDefault();\\n\\n    let contextMenu = event.detail.menu;\\n\\n    switch (contextMenu) {\\n      case 'copy':\\n        this._onCopy(event);\\n\\n        break;\\n      case 'cut':\\n        this._onCut(event);\\n\\n        break;\\n      case 'paste':\\n        this._onPaste(event);\\n\\n        break;\\n    }\\n  }\\n\\n  /**\\n   * @desc 복사 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onCopy(event) {\\n    this.copyLi = this.selectEl.parentElement;\\n    this.cutLi = null;\\n  }\\n\\n  /**\\n   * @desc 잘라내기 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onCut(event) {\\n    this.copyLi = null;\\n    this.cutLi = this.selectEl.parentElement;\\n  }\\n\\n  /**\\n   * @desc 붙여넣기 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onPaste(event) {\\n    if (this.copyLi) {\\n      if (this.copyLi.contains(this.selectEl.parentElement)) {\\n        alert('대상 폴더가 원본 폴더의 하위 폴더입니다.');\\n\\n        return;\\n      }\\n\\n      this._moveItem(\\n        this.copyLi.cloneNode(true),\\n        this.selectEl.parentElement,\\n        'inner'\\n      );\\n    }\\n\\n    if (this.cutLi) {\\n      if (this.cutLi.contains(this.selectEl.parentElement)) {\\n        alert('대상 폴더가 원본 폴더의 하위 폴더입니다.');\\n\\n        return;\\n      }\\n\\n      this._moveItem(this.cutLi, this.selectEl.parentElement, 'inner');\\n      this.cutLi = null;\\n    }\\n  }\\n\\n  /**\\n   * @desc 삭제 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onDelete(event) {\\n    Jinja.confirm\\n      .delete(`Delete OK?`)\\n      .then(() => this.selectEl.parentElement.remove());\\n  }\\n\\n  //   /** 외부에서 수동 초기화 */\\n  init(opt){\\n    Object.assign(this.options, opt);\\t\\t\\n    this.rootUl.$empty();\\n    this._resetEvent();\\n    this._setEvent();\\n  }  \\n  \\n  /**\\n   * @desc 모든 트리를 펼친다.\\n   * @example -\\n   */\\n  allShow() {\\n    this.rootUl\\n      .querySelectorAll('.has-child')\\n      .forEach(el => el.classList.add('show'));\\n  }\\n\\n  /**\\n   * @desc 지정한 문자열을 포함하는 노드만 필터링하여 트리를 보여준다.\\n   * @param {String} - 문자열\\n   * @example -\\n   */\\n  contains(str) {\\n    if (str) {\\n      this.rootUl\\n        .querySelectorAll('li')\\n        .forEach(el => (el.style.display = 'none'));\\n\\n      this.rootUl.querySelectorAll('li').forEach(el => {\\n        let aNode = el.querySelector(`:scope >a`);\\n        let findText =\\n          aNode.innerText +\\n          aNode.getAttribute('key') +\\n          Jinja.global.string(el.itemData.nodeData);\\n\\n        if (findText.indexOf(str) >= 0) {\\n          Jinja.dom\\n            .parents(el, this.el, 'li')\\n            .forEach(findEl => (findEl.style.display = 'block'));\\n        }\\n      });\\n    } else {\\n      this.rootUl\\n        .querySelectorAll('li')\\n        .forEach(el => (el.style.display = 'block'));\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터를 트리에 바인딩한다.\\n   * @param {Array} - JSON 데이터 목록\\n   * @param {*} - 최상위키필드값\\n   * @param {String} - 키필드명\\n   * @param {String} - 상위필드명\\n   * @param {String} - 정렬필드명\\n   * @param {String} - 하위노드 집합명\\n   * @example -\\n   */\\n  fromRows(rows, root, keyField, parentField, sortField, itemsName) {\\n    let treeData = this.row2tree(\\n      rows,\\n      root,\\n      keyField,\\n      parentField,\\n      sortField,\\n      itemsName\\n    );\\n\\n    this.fromJson(treeData);\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터로 트리 엘리먼트를 생성한다.\\n   * @param {Array} - JSON 데이터 목록\\n   * @example -\\n   */\\n  fromJson(items) {\\n    this.rootUl.$empty();\\n    this._fromJson(this.rootUl, items);\\n    this._visbieItemRefresh();\\n  }\\n\\n  /**\\n   * @desc 지정한 엘리먼트의 하위 노드정보를 JSON 데이터로 반환한다.\\n   * @param {Element} - 대상엘리먼트\\n   * @return {Array} - 노드정보목록\\n   * @example -\\n   */\\n  toJson(ul) {\\n    ul = ul || this.rootUl;\\n\\n    let items = [];\\n\\n    for (let i = 0; i < ul.children.length; i++) {\\n      let li = ul.children[i];\\n      let item = li.itemData;\\n\\n      if (item) {\\n        delete item.items;\\n\\n        items.push(item);\\n\\n        if (li.querySelector('ul')) {\\n          let items = this.toJson(li.querySelector('ul'));\\n\\n          if (items.length) {\\n            item.items = items;\\n          }\\n        }\\n      } else {\\n        alert('JJTree.toJson() itemData 를 찾을수 없습니다.');\\n      }\\n    }\\n\\n    return items;\\n  }\\n\\n  /**\\n   * @desc 선택된 노드 정보를 갱신한다.\\n   * @example -\\n   */\\n  updateSelectItem() {\\n    if(this.selectEl){\\n      let item = this.selectEl.parentElement.itemData;\\n\\n      if (item) {\\n        let label = item[this.options.displayField];\\n        let key = item[this.options.keyField];\\n        let icon = item[this.options.iconField] || this.options.icons[1];\\n\\n        this.selectEl.setAttribute('title', label);\\n        this.selectEl.querySelector('t').innerText = label;\\n        this.selectEl.querySelector('i').setAttribute('class', `icon fa ${icon}`);\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터와 정보를 이용하여 트리용 데이터로 변환하여 반환한다.\\n   * @param {Array} - 데이터\\n   * @param {*} - 최상위키필드값\\n   * @param {String} - 키필드명\\n   * @param {String} - 상위필드명\\n   * @param {String} - 정렬필드\\n   * @param {String} - 하위노드 집합명\\n   * @return {Object} - 트리 데이터\\n   * @example -\\n   */\\n  row2tree(rows, pv, pPN, pFN, pSo, pSubName) {\\n    pSubName = pSubName || 'subRows';\\n\\n    let tree = {};\\n\\n    if (pv === undefined) pv = null;\\n    if (pPN === undefined) pPN = '_ID';\\n    if (pFN === undefined) pFN = '_PID';\\n    if (pSo === undefined) pSo = 'SortNo';\\n\\n    if (pv == 'row') {\\n      pv = rows[0][pFN];\\n    }\\n\\n    let selRows;\\n\\n    try {\\n      selRows = rows.filter(function (row) {\\n        return row[pFN] === pv;\\n      });\\n\\n      if (pSo) {\\n        selRows = selRows.sort(function (a, b) {\\n          return (a[pSo] || '') > b[pSo || '']\\n            ? 1\\n            : (a[pSo] || '') < (b[pSo] || '')\\n            ? -1\\n            : 0;\\n        });\\n      }\\n    } catch (ex) {\\n      alert(ex.message);\\n    }\\n\\n    tree = selRows;\\n\\n    try {\\n      selRows.forEach((pR, pI) => {\\n        let _sub = this.row2tree(rows, pR[pPN], pPN, pFN, pSo, pSubName);\\n\\n        if (_sub.length > 0) {\\n          pR[pSubName] = _sub;\\n        } else {\\n          pR[pSubName] = [];\\n        }\\n      });\\n    } catch (ex) {\\n      alert(ex.message);\\n    }\\n\\n    return tree;\\n  }\\n\\n  /**\\n   * @desc 지정한 키에 해당하는 노드를 선택하고 반환한다.\\n   * @param {String} - 키\\n   * @return {Element} - 노드\\n   * @example -\\n   */\\n  activeTreeByKey(key) {\\n    this._unselect();\\n\\n    let node = this._findKey(key);\\n\\n    if (node) {\\n      this._select(node);\\n\\n      node.parentElement.parentElement\\n        .$parentAll('li', this)\\n        .forEach(el => el.classList.add('show'));\\n      node.scrollIntoView({\\n        behavior: 'smooth',\\n        block: 'nearest',\\n        inline: 'start'\\n      });\\n    }\\n\\n    return node;\\n  }\\n  \\n  getActiveKey(){\\n    let key;\\n    if(this.selectEl){\\n    \\tkey = this.selectEl.getAttribute('key');\\n    }\\n    return key;\\n  }\\n\\n  /**\\n   * @desc 해당 노드의 경로를 반환한다.\\n   * @param {String} - 키\\n   * @return {Array} - 노드경로\\n   * @example -\\n   */\\n  getFilePath(key) {\\n    let cur = this.querySelector('[key=\\\"' + key + '\\\"]');\\n    let rlt = [];\\n    let nodeList = Jinja.dom.closestAll(cur, 'li', this);\\n\\n    nodeList.reverse().forEach(el => {\\n      rlt.push({\\n        id: el.querySelector('a').getAttribute('key'),\\n        name: el.querySelector('a t').innerText,\\n      });\\n    });\\n\\n    return rlt;\\n  }\\n\\n  /**\\n   * @desc 현재 체크된 트리의 키를 배열로 리턴함\\n   * @return {Array} - 키배열\\n   * @example -\\n   */  \\n  getCheckKeys(){\\n    let items =[];\\n    this.rootUl.querySelectorAll(`.jj-tree-check.checked`)\\n      .forEach(el=>items.push(el.parentElement.getAttribute('key')));\\n    return items;\\n  }  \\n  \\n  /**\\n   * @desc 지정한 데이터와 동일한 노드를 선택하고 반환한다.\\n   * @param {Object} - JSON 데이터\\n   * @return {Element} - 노드\\n   * @example -\\n   */\\n  findData(data) {\\n    let li = this._findData(data);\\n\\n    if (li) {\\n      let node = li.querySelector(`a`);\\n\\n      node.parentElement.parentElement\\n        .$parentAll('li', this)\\n        .forEach(el => el.classList.add('show'));\\n\\n      this._selectMark(node);\\n\\n      node.scrollIntoView({\\n        behavior: 'smooth',\\n        block: 'nearest',\\n        inline: 'start'\\n      });\\n    }\\n\\n    this._visbieItemRefresh();\\n\\n    return li;\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터를 최상위노드의 자식노드로 추가한다.\\n   * @param {Object} - JSON 데이터\\n   * @example -\\n   */\\n  addItem(data) {\\n    this._renderItem(this.rootUl, data);\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터를 선택된 노드의 자식노드로 추가한다.\\n   * @param {Object} - JSON 데이터\\n   * @example -\\n   */\\n  addChildItem(data) {\\n    let targetUl;\\n\\n    if (this.selectEl) {\\n      if (this.selectEl.nextElementSibling) {\\n        targetUl = this.selectEl.nextElementSibling;\\n      } else {\\n        targetUl = document.createElement('ul');\\n        targetUl.classList.add('jstree-children');\\n\\n        this.selectEl.after(targetUl);\\n        this.selectEl.parentElement.classList.add('has-child');\\n      }\\n    } else {\\n      alert('추가할 상위노드을 선택하세요.');\\n\\n      return;\\n    }\\n\\n    this._renderItem(targetUl, data);\\n  }\\n\\n  /**\\n   * @desc 지정한 데이터키를 가진 하위로 추가한다\\n   * @param {String} - 상위 키데이터\\n   * @param {Object} - 추가할 데이터셑\\n   * @example -\\n   */  \\n  addKeyChildItem(keyId,data){\\n    let targetUl;\\n    \\n    let keyIdEl = this._findKey(keyId);\\n    \\n    if (keyIdEl){\\n      this.selectEl = keyIdEl;\\n    } else {\\n      alert(\\\"tree대상키를 찾지못했습니다\\\");\\n      return;\\n    }\\n    \\n    if (this.selectEl){\\n      if(this.selectEl.nextElementSibling){\\n        targetUl = this.selectEl.nextElementSibling;\\n      }else {\\n        targetUl = document.createElement(\\\"ul\\\");\\n        targetUl.classList.add(\\\"jstree-children\\\"); \\n        this.selectEl.after(targetUl);\\n        this.selectEl.parentElement.classList.add(\\\"has-child\\\");\\n      }\\n    } else {\\n      alert(\\\"추가할 상위아이템을 선택하세요\\\");\\n      return;\\n    }\\n    this._renderItem(targetUl , data)\\n  }\\n  \\n  /**\\n   * @desc 지정한 데이터를 지정한 노드의 특정위치에 이동한다.\\n   * @param {Object} - JSON 데이터\\n   * @param {Element} - 대상노드\\n   * @param {String} - 위치명\\n   * @example -\\n   */\\n  dropChildItem(data, toLi, position) {\\n    let dumy = document.createElement('ul');\\n    let fromLi = this._renderItem(dumy, data);\\n\\n    this._moveItem(fromLi, toLi, position);\\n\\n    if (position == 'inner') {\\n      toLi.classList.add('has-child');\\n    }\\n  }\\n\\n  /**\\n   * @desc 선택된 노드를 삭제한다.\\n   * @example -\\n   */\\n  removeSelectItem() {\\n    if (this.selectEl) {\\n      Jinja.confirm\\n        .delete(`Delete OK?`)\\n        .then(() => this.selectEl.parentElement.remove());\\n    } else {\\n      alert('삭제할 노드를 선택하세요.');\\n    }\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 삭제한다.\\n   * @param {} -\\n   * @return {} -\\n   * @example -\\n   */\\n  clear() {\\n    this.$empty();\\n  }\\n}\\n\\ncustomElements.define('jj-tree', JJTree);\\n/* ==JJDomTree.640.class================ */\\n\\n/**\\n * @classdesc DomTree 컴포넌트관리를 위한 클래스\\n */\\nclass JJDomTree extends JJTree {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      displayField: 'NAME',\\n      keyField: 'ID',\\n      iconField: 'icon',\\n      childField: 'items',\\n      categoryField: '',\\n      isIcon: false,\\n      icons: ['fa-folder-open', 'fa-file-text-o'],\\n      isCheck: false,\\n      isEdit: false,\\n      isDrag: false,\\n      isFolder: false,\\n      isFolderOnly: false,\\n      isClickFolding: false,\\n      isContextMenu: false,\\n      useKeyMove: false,\\n      dragMatches: '',\\n      dragObjectClass: '',\\n      contextMenu: [],\\n      addOn: [],\\n      version: '640',\\n    };\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    super._setEvent();\\n\\n    this.oMutationObserver = new MutationObserver(mutations => {\\n      let childListed = mutations.some(\\n        mutation => mutation.type == 'childList'\\n      );\\n\\n      if (childListed) {\\n        if (\\n          mutations.length == 1 &&\\n          mutations[0].addedNodes.length == 1 &&\\n          mutations[0].addedNodes[0].nodeType == 3\\n        ) {\\n        } else {\\n          if (mutations[0].removedNodes.length) {\\n            mutations[0].removedNodes.forEach(node => {\\n              let li = this.findData(node);\\n\\n              if (li) li.remove();\\n            });\\n          } else {\\n            this.setDomTree();\\n\\n            if (this.selectedNode) {\\n            }\\n          }\\n        }\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 엘리먼트에 지정한 데이터로 생성한 엘리먼트를 자식엘리먼트로 추가한다.\\n   * @param {Object} - 대상엘리먼트\\n   * @param {Object} - 자식엘리먼트 데이터\\n   * @return {Object} - 자식엘리먼트\\n   * @example -\\n   */\\n  _renderItem(ul, item) {\\n    let label = item.label;\\n    let html =\\n      `<i class=\\\"jj-tree-folding\\\"></i>` +\\n      `<a href=\\\"#\\\" title=\\\"${label}\\\"><t>${label}</t></a>`;\\n    let li = document.createElement('li');\\n\\n    li.itemData = Object.assign({}, item);\\n    li.innerHTML = html;\\n    ul.appendChild(li);\\n\\n    return li;\\n  }\\n\\n  /**\\n   * @desc 지정한 엘리먼트를 기준엘리먼트의 지정한 위치로 이동시킨다.\\n   * @param {Object} - 대상엘리먼트\\n   * @param {Object} - 기준엘리먼트\\n   * @param {String} - 이동위치\\n   * @param {Boolean} - 새로고침여부\\n   * @example -\\n   */\\n  _moveItem(fromLi, toLi, position, isSpeed) {\\n    if (!fromLi || !toLi) return;\\n\\n    let fromUl;\\n\\n    if (\\n      fromLi.parentElement &&\\n      fromLi.parentElement.tagName.toUpperCase() === 'UL'\\n    ) {\\n      fromUl = fromLi.parentElement;\\n    }\\n\\n    try {\\n      switch (position) {\\n        case 'top':\\n          toLi.before(fromLi);\\n          toLi.itemData.nodeData.before(fromLi.itemData.nodeData);\\n\\n          break;\\n        case 'bottom':\\n          toLi.after(fromLi);\\n          toLi.itemData.nodeData.after(fromLi.itemData.nodeData);\\n\\n          break;\\n        case 'inner':\\n          let ul = toLi.querySelector('ul');\\n\\n          if (!ul) {\\n            ul = document.createElement('ul');\\n            toLi.appendChild(ul);\\n          }\\n\\n          ul.appendChild(fromLi);\\n          toLi.itemData.nodeData.appendChild(fromLi.itemData.nodeData);\\n          ul.parentElement.classList.add('has-child');\\n          ul.parentElement.classList.add('show');\\n\\n          break;\\n      }\\n    } catch (ex) {\\n      console.error(ex);\\n    }\\n\\n    if (fromUl && fromUl.parentElement && fromUl.childElementCount === 0) {\\n      fromUl.parentElement.classList.remove('has-child');\\n      fromUl.remove();\\n    }\\n\\n    if (!isSpeed) {\\n      this._visieItemRefresh();\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 엘리먼트의 트리라벨을 생성하여 반환한다.\\n   * @param {Element} - 노드엘리먼트\\n   * @return {String} - 트리라벨\\n   * @example -\\n   */\\n  _domTreeLabel(node) {\\n    let result = '';\\n\\n    if ([1, 2, 3].includes(node.nodeType)) {\\n      let tagName = node.tagName || '#TEXT';\\n      let codeText = '';\\n\\n      if (node.getAttribute('jj-id')) {\\n        codeText = '#' + node.getAttribute('jj-id');\\n      }\\n\\n      if (node.getAttribute('class')) {\\n        codeText = '[' + node.getAttribute('class') + ']';\\n      }\\n\\n      if (node.getAttribute('data-render') && node.getAttribute('data-type')) {\\n        tagName = tagName + ':' + node.getAttribute('data-type');\\n      }\\n\\n      result = `${tagName} ${codeText}`;\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 삭제 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onDelete(event) {\\n    this.targetVhtml.selectNodeRemove();\\n    this.focus();\\n  }\\n\\n  /**\\n   * @desc 지정한 에디터를 트리엘리먼트와 연결한다.\\n   * @param {Object} - 지정된 Edit\\n   * @return {}-\\n   * @example -\\n   */\\n  setEdit(freamEdit) {\\n    this.targetVhtml = freamEdit;\\n    this.targetVhtml.addEventListener('undo', e => {\\n      this.setDomTree();\\n    });\\n    this.targetVhtml.addEventListener('redo', e => {\\n      this.setDomTree();\\n    });\\n    this.targetVhtml.addEventListener('open', e => {\\n      this.setDomTree();\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 엘리먼트로 트리 컴포넌트를 생성한다.\\n   * @param {Object} - 지정된 Element\\n   * @example -\\n   */\\n  setDom(el) {\\n    if (!el) {\\n      this.selectedNode = null;\\n      this.oMutationObserver.disconnect();\\n      this.selectDom = null;\\n\\n      return;\\n    }\\n\\n    if (Object.is(this.selectDom, el)) return;\\n    if (this.selectDom) this.oMutationObserver.disconnect();\\n\\n    this.selectDom = el;\\n    this.oMutationObserver.observe(this.selectDom, {\\n      childList: true,\\n      attributes: true,\\n      characterData: true,\\n      subtree: true,\\n      attributeOldValue: true,\\n      characterDataOldValue: true,\\n      attributeFilter: ['style', 'class']\\n    });\\n\\n    this.setDomTree();\\n  }\\n\\n  /**\\n   * @desc 선택된 엘리먼트로 트리 컴포넌트를 생성한다.\\n   * @param {} -\\n   * @return {} -\\n   * @example -\\n   */\\n  setDomTree() {\\n    let treeData = this.dom2Json(this.selectDom);\\n\\n    this.fromJson(treeData);\\n  }\\n\\n  /**\\n   * @desc 지정한 엘리먼트를 JSON데이터로 변경하여 반환한다.\\n   * @param {Object} - 지정된 Element\\n   * @return {Array} - json구조로 변환된 자식들의 데이터를 담은 배열\\n   * @example -\\n   */\\n  dom2Json(element) {\\n    let result = [];\\n\\n    for (let i = 0; i < element.children.length; i++) {\\n      let node = element.children[i];\\n\\n      if ([1, 2, 3].includes(node.nodeType)) {\\n        let newItem = {\\n          label: this._domTreeLabel(node),\\n          nodeData: node\\n        };\\n\\n        result.push(newItem);\\n\\n        if (node.matches('[data-render]')) {\\n        } else if (node.tagName == 'SVG') {\\n        } else if (node.children.length) {\\n          newItem.items = this.dom2Json(node);\\n        }\\n      }\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 지정한 노드의 활성화여부를 변경한다.\\n   * @param {Object} - 대상노드\\n   * @return {} -\\n   * @example -\\n   */\\n  activeNode(node) {\\n    window.setTimeout(e => {\\n      if (Object.is(this.selectedNode, node)) {\\n        return;\\n      }\\n\\n      this.selectedNode = null;\\n      this._unselect();\\n\\n      if (node) {\\n        this.selectedNode = node;\\n        this.findData(this.selectedNode);\\n      }\\n    }, 200);\\n  }\\n}\\n\\ncustomElements.define('jj-domtree', JJDomTree);\\n/* ==JJFileReadTree.640.class================ */\\n\\n/**\\n * @classdesc FileReadTree 컴포넌트관리를 위한 클래스\\n */\\nclass JJFileReadTree extends JJTree {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      displayField: 'NAME',\\n      keyField: 'ID',\\n      iconField: 'icon',\\n      childField: 'items',\\n      categoryField: '',\\n      isIcon: false,\\n      icons: ['fa-folder-open', 'fa-file-text-o'],\\n      isCheck: false,\\n      isEdit: false,\\n      isDrag: false,\\n      isFolder: false,\\n      isClickFolding: false,\\n      isContextMenu: false,\\n      useKeyMove: false,\\n      dragMatches: '',\\n      dragObjectClass: '',\\n      contextMenu: null,\\n      addOn: ['editable', 'keydown', 'context', 'drag', 'checkbox']\\n    };\\n  }\\n\\n  /**\\n   * @desc 지정한 엘리먼트에 지정한 데이터로 생성한 엘리먼트를 자식엘리먼트로 추가한다.\\n   * @param {Object} - 대상엘리먼트\\n   * @param {Object} - 자식엘리먼트 데이터\\n   * @return {Object} - 자식엘리먼트\\n   * @example -\\n   */\\n  _renderItem(ul, item) {\\n    let label = item.NAME;\\n    let key = item.ID;\\n    let icon = item.TYPE_ICON || 'fa-book';\\n    let html = \\n      `<i class=\\\"jj-tree-folding\\\"></i>` +\\n      `<a key=\\\"${key}\\\" title=\\\"${label}\\\">` +\\n      `<i class=\\\"icon fa ${icon}\\\"></i><t>${label}</t>` +\\n      `<span class=\\\"addon\\\"></span>` +\\n      `</a>`;\\n    let li = document.createElement('li');\\n\\n    li.innerHTML = html;\\n    li.itemData = item;\\n    ul.appendChild(li);\\n\\n    return li;\\n  }\\n\\n  /**\\n   * @desc 지정한 엘리먼트를 선택한다.\\n   * @param {Element} - 대상엘리먼트\\n   * @example -\\n   */\\n  _select(item) {\\n    this._selectMark(item);\\n\\n    if (['file'].includes(item.parentElement.itemData.TYPE)) {\\n      return;\\n    } else if ('folder' == item.parentElement.itemData.TYPE) {\\n      this.dispatchEvent(\\n        new CustomEvent('folderClick', {\\n          detail: {\\n            key: item.getAttribute('key'),\\n            title: item.title,\\n            data: item.parentElement.itemData\\n          },\\n          bubbles: true\\n        })\\n      );\\n    } else {\\n      this.dispatchEvent(\\n        new CustomEvent('treeClick', {\\n          detail: {\\n            key: item.getAttribute('key'),\\n            title: item.title,\\n            data: item.parentElement.itemData\\n          },\\n          bubbles: true\\n        })\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 옵션으로 엘리먼트를 초기화한다.\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  init(options) {\\n    super.init(options);\\n  }\\n\\n  /**\\n   * @desc 지정한 폴더의 하위 데이터를 트리 데이터 형태로 반환한다.\\n   * @param {String} - 폴더 아이디\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  getTreeByFolderId(folderId) {\\n    return Jinja.driverApi\\n      .getTreeByFolderId(folderId)\\n      .then(treeData => this.fromJson(treeData));\\n  }\\n}\\n\\ncustomElements.define('jj-file-read-tree', JJFileReadTree);\\n/* ==JJFileTree.640.class================ */\\n\\n/**\\n * @classdesc FileTree 컴포넌트관리를 위한 클래스\\n */\\nclass JJFileTree extends JJTree {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      displayField: 'NAME',\\n      keyField: 'ID',\\n      iconField: 'icon',\\n      childField: 'items',\\n      categoryField: '',\\n      isIcon: false,\\n      icons: ['fa-folder-open', 'fa-file-text-o'],\\n      isCheck: false,\\n      isEdit: false,\\n      isDrag: false,\\n      isFolder: false,\\n      isFolderOnly: false,\\n      isClickFolding: false,\\n      isContextMenu: true,\\n      useKeyMove: false,\\n      dragMatches: '',\\n      dragObjectClass: '',\\n      contextMenu: [\\n        { label: 'Copy', command: 'copy', icon: 'fa-copy' },\\n        { label: 'Cut', command: 'cut', icon: 'fa-cut' },\\n        { label: 'Paste', command: 'paste', icon: 'fa-paste' },\\n        { label: 'divider' },\\n        { label: 'Remove', command: 'remove', icon: 'fa-remove' }\\n      ],\\n      addOn: ['editable', 'keydown', 'context', 'drag', 'checkbox']\\n    };\\n  }\\n\\n  /**\\n   * @desc 지정한 엘리먼트에 지정한 데이터로 생성한 엘리먼트를 자식엘리먼트로 추가한다.\\n   * @param {Object} - 대상엘리먼트\\n   * @param {Object} - 자식엘리먼트 데이터\\n   * @return {Object} - 자식엘리먼트\\n   * @example -\\n   */\\n  _renderItem(ul, item) {\\n    let label = item.NAME;\\n    let key = item.ID;\\n    let icon = item.TYPE_ICON || 'fa-book';\\n    let version = item.TYPE == 'folder' ? '' : item.VERSION;\\n    let lockerHtml = `<i class=\\\"lock fa\\\"></i>`;\\n\\n    if (item.LOCKER_ID) {\\n      if (item.LOCKER_ID == Jinja.uo.USER_ID) {\\n        lockerHtml = `<i class=\\\"lock fa fa-lock\\\" locker=\\\"${item.LOCKER_ID}\\\" title=\\\"${item.LOCKER_NAME}\\\"></i>`;\\n      } else {\\n        lockerHtml = `<i class=\\\"lock fa fa-user-circle-o\\\" locker=\\\"${item.LOCKER_ID}\\\" title=\\\"${item.LOCKER_NAME}\\\"></i>`;\\n      }\\n    }\\n\\n    let html = `<i class=\\\"jj-tree-folding\\\"></i><a key=\\\"${key}\\\" title=\\\"${label}\\\">`;\\n\\n    if (this.options.isCheck) {\\n      html += `<i class=\\\"jj-tree-check\\\"></i>`;\\n    }\\n\\n    html += \\n      `<i class=\\\"icon fa ${icon}\\\"></i><t>${label}</t>` +\\n      `<span class=\\\"addon\\\"><small title=\\\"version\\\">${version}</small>${lockerHtml}</span></a>`;\\n\\n    let li = document.createElement('li');\\n\\n    li.innerHTML = html;\\n    li.itemData = item;\\n    ul.appendChild(li);\\n\\n    if (item.TYPE == 'folder') {\\n      li.classList.add('has-child');\\n    }\\n\\n    return li;\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    super._setEvent();\\n\\n    // Myapp에서 단순메뉴로 사용되는 경우는 이후 이벤트 처리안함\\n    if(this.options.isMenu) return;\\n\\n    this.addEventListener('treeExtDrop', e => {\\n      let objectType = e.detail.dataTransfer.getData('appspeed/object');\\n      let objectKey = e.detail.dataTransfer.getData('appspeed/key');\\n\\n      if (objectType == 'file' && objectKey) {\\n        let targetId = e.detail.dropLi.itemData.ID;\\n\\n        Jinja.driverApi\\n          .copyFile(objectKey, targetId)\\n          .then(() => this._folderRefresh(targetId));\\n      }\\n    });\\n\\n    Jinja.event.add('studio.activeTree', 'JJFileTree.setEvent', e => {\\n      this.activeTreeByKey(e.detail.fileId);\\n    });\\n\\n    Jinja.sse.addMessageRoute('301', 'JJFileTree._setEvent', message => {\\n      if (message.BODY) {\\n        let body = Jinja.global.json(message.BODY);\\n\\n        if (Jinja.dom.isVisible(Jinja.el)) {\\n          $tosta(message.TITLE, {\\n            fromUserId: body.fromUserId,\\n            fromUserName: body.fromUserName\\n          });\\n\\n          //           Jinja.notification.show('APPSPEED602 SSE', {\\n          //             body: message.TITLE,\\n          //             userId: body.fromUserId\\n          //           });\\n        } else {\\n          //           Jinja.notification.show('APPSPEED602 SSE', {\\n          //             body: message.TITLE,\\n          //             userId: body.fromUserId\\n          //           });\\n        }\\n      }\\n    });\\n\\n    Jinja.sse.addMessageRoute('203', 'JJFileTree._setEvent', message => {\\n      if (message.BODY) {\\n        let body = Jinja.global.json(message.BODY);\\n        let html = `<h3>${message.TITLE}</h3><p>file: ${body.file}</p><p>요청자: ${body.from}</p>`;\\n\\n        Jinja.confirm.update(html).then(choice => {\\n          if (choice === 'YES') {\\n            let fileId = message.PARENT_ID;\\n            let folderId = this._getFolderId(fileId);\\n\\n            Jinja.driverApi\\n              .unlockResource(fileId)\\n              .then(() => this._folderRefresh(folderId));\\n          }\\n        })\\n          .catch(()=>{});\\n\\n        Jinja.notification.show('STUDIO 해제 요청 접수', {\\n          body: html\\n        });\\n\\n      }\\n    });\\n\\n    Jinja.sse.addMessageRoute('202', 'JJFileTree._setEvent', message => {\\n      if (message.BODY) {\\n        let body = Jinja.global.json(message.BODY);\\n\\n        this._unLock(body.ID);\\n      }\\n    });\\n\\n    Jinja.sse.addMessageRoute('201', 'JJFileTree._setEvent', message => {\\n      if (message.BODY) {\\n        let body = Jinja.global.json(message.BODY);\\n\\n        this._lock(body);\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 선택된 파일아이디를 반환한다.\\n   * @return {String} - 파일아이디\\n   * @example -\\n   */\\n  _getSelectFileId() {\\n    return this.selectEl ? this.selectEl.getAttribute('key') : null;\\n  }\\n\\n  /**\\n   * @desc 선택된 파일의 폴더아이디를 반환한다.\\n   * @return {String} - 폴더아이디\\n   * @example -\\n   */\\n  _getSelectFolderId() {\\n\\n    return this.selectEl && this.selectEl.closest('li.has-child')\\n      ? this.selectEl.closest('li.has-child')\\n      .querySelector('a')\\n      .getAttribute('key')\\n    : null;\\n  }\\n\\n  /**\\n   * @desc 지정한 파일아이디의 상위 폴더아이디를 반환한다.\\n   * @param {String} - 파일아이디\\n   * @return {String} - 폴더아이디\\n   * @example -\\n   */\\n  _getFolderId(fileId) {\\n    let result = '';\\n    let node = this._findKey(fileId);\\n\\n    if (node && node.closest('li.has-child')) {\\n      result = node.closest('li.has-child').querySelector('a').getAttribute('key');\\n    }\\n\\n    return result;\\n  }\\n\\n  /**\\n   * @desc 지정한 엘리먼트를 선택처리한다.\\n   * @param {Object} - 선택한 Element\\n   * @example -\\n   */\\n  _select(item) {\\n    this._selectMark(item);\\n\\n    if (['folder', 'file'].includes(item.parentElement.itemData.TYPE)) {\\n      this.dispatchEvent(\\n        new CustomEvent('folderClick', {\\n          detail: {\\n            key: item.getAttribute('key'),\\n            title: item.title,\\n            data: item.parentElement.itemData\\n          },\\n          bubbles: true\\n        })\\n      );\\n\\n      return;\\n    }\\n\\n\\n    this.dispatchEvent(\\n      new CustomEvent('treeClick', {\\n        detail: {\\n          key: item.getAttribute('key'),\\n          title: item.title,\\n          data: item.parentElement.itemData\\n        },\\n        bubbles: true\\n      })\\n    );\\n  }\\n\\n  /**\\n   * @desc 지정한 엘리먼트를 기준엘리먼트의 지정한 위치로 이동시킨다.\\n   * @param {Object} - 대상엘리먼트\\n   * @param {Object} - 기준엘리먼트\\n   * @param {String} - 이동위치\\n   * @param {Boolean} - 새로고침여부\\n   * @example -\\n   */\\n  _moveItem(fromLi, toLi, position, isSpeed) {\\n    if (!fromLi || !toLi) return;\\n\\n    let moveFileId = fromLi.querySelector('a[key]').getAttribute('key');\\n    let targetId = toLi.querySelector('a[key]').getAttribute('key');\\n\\n    Jinja.driverApi.moveFile(moveFileId, targetId).then(() => {\\n      this._folderRefresh(targetId).then(() => fromLi.remove());\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 파일을 잠금처리 한다.\\n   * @param {Object} - 잠금정보\\n   * @example -\\n   */\\n  _lock(lockInfo) {\\n    let node = this._findKey(lockInfo.ID);\\n\\n    if (node) {\\n      let folderId = this._getFolderId(lockInfo.ID);\\n      \\n      if (!folderId && this.options.isFolder) {\\n        folderId = workspaceMeta.options.homeFolderId || workspaceMeta.options.appInfo.homeFolderId;\\n      }\\n      \\n      \\n      let lockEl = node.querySelector('i.lock');\\n      let lockIcon =\\n          lockInfo.lockerId == Jinja.uo.USER_ID\\n      ? 'fa-user-circle-o'\\n      : 'fa fa-lock';\\n\\n      lockEl.setAttribute('class', 'lock fa ' + lockIcon);\\n      lockEl.setAttribute('locker', lockInfo.lockerId);\\n      lockEl.setAttribute('title', lockInfo.lockerName);\\n\\n      this._folderRefresh(folderId);\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 파일을 해제처리 한다.\\n   * @param {String} - 파일아이디\\n   * @example -\\n   */\\n  _unLock(fileId) {\\n    let node = this._findKey(fileId);\\n    if (node) {\\n      let folderId = this._getFolderId(fileId);\\n      let lockEl = node.querySelector('i.lock');\\n\\n      lockEl.setAttribute('class', 'lock fa');\\n      lockEl.removeAttribute('locker');\\n      lockEl.removeAttribute('title');\\n\\n      this._folderRefresh(folderId);\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정된 폴더의 하위자료를 새로고침한다.\\n   * @param {String} - 지정한 폴더의 Id\\n   * @example -\\n   */\\n  _folderRefresh(folderId) {\\n    if (!folderId && this.options.isFolder) {\\n      folderId = workspaceMeta.options.homeFolderId || workspaceMeta.options.appInfo.homeFolderId;\\n    }\\n    \\n    return Jinja.driverApi\\n      .getTreeByFolderId(folderId)\\n      .then(treeData => this._updateJson(folderId, treeData));\\n  }\\n\\n  /**\\n   * @desc 컨텍스트메뉴 생성 이벤트를 처리한다.\\n   * @param {Object} - 이벤트\\n   * @example -\\n   */\\n  _onContextmenu(event) {\\n    if (event.target.matches('a')) {\\n      event.preventDefault();\\n\\n      this._selectMark(event.target);\\n\\n      Jinja.context.render(this, event, [\\n        { command: 'newFile', label: '새 파일', icon: 'fa-file-o' },\\n        { command: 'newFolder', label: '새 폴더', icon: 'fa-folder' },\\n        { label: 'divider' },\\n        { command: 'copy', label: '복사', icon: 'fa-copy' },\\n        { command: 'cut', label: '자르기', icon: 'fa-cut' },\\n        { command: 'paste', label: '붙이기', icon: 'fa-paste' },\\n        { label: 'divider' },\\n        { command: 'delete', label: '삭제', icon: 'fa-remove' },\\n        { label: 'divider' },\\n        { command: 'lock', label: '잠금', icon: 'fa-lock' },\\n        { command: 'unLock', label: '해제', icon: 'fa-unlock' },\\n        { command: 'unLockReq', label: '해제요청', icon: 'fa-paper-plane' },\\n        { label: 'divider' },\\n        { command: 'backup', label: '백업정보', icon: 'fa-bookmark' },\\n        { label: 'divider' },\\n        { command: 'share', label: '공유', icon: 'fa-share' },\\n        { command: 'export', label: '내보내기', icon: 'fa-cloud-download' },\\n        { command: 'import', label: '가져오기', icon: 'fa-cloud-upload' },\\n        { label: 'divider' },\\n        { command: 'rename', label: '이름변경', icon: 'fa-drivers-license-o' },\\n        { command: 'info', label: '속성', icon: 'fa-gear' },\\n        { command: 'refresh', label: '새로고침', icon: 'fa-refresh' }\\n      ]);\\n    }\\n  }\\n\\n  /**\\n   * @desc 컨텍스트메뉴 클릭 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onContextClick(event) {\\n    event.preventDefault();\\n\\n    let contextMenu = event.detail.menu;\\n\\n    switch (contextMenu) {\\n      case 'copy':\\n        this._onCopy(event);\\n\\n        break;\\n      case 'cut':\\n        this._onCut(event);\\n\\n        break;\\n      case 'paste':\\n        this._onPaste(event);\\n\\n        break;\\n      case 'newFile':\\n        this.newFile(event);\\n\\n        break;\\n      case 'newFolder':\\n        this.newFolder(\\\"\\\");\\n\\n        break;\\n      case 'delete':\\n        this._onDelete(event);\\n\\n        break;\\n      case 'lock':\\n        this._onLock(event);\\n\\n        break;\\n      case 'unLock':\\n        this._onUnLock(event);\\n\\n        break;\\n      case 'unLockReq':\\n        this._onUnLockReq(event);\\n\\n        break;\\n      case 'backup':\\n        this._onBackup(event);\\n\\n        break;\\n      case 'share':\\n        this._onShare(event);\\n\\n        break;\\n      case 'rename':\\n        this._onRename(event);\\n\\n        break;\\n      case 'info':\\n        this._onInfo(event);\\n\\n        break;\\n      case 'refresh':\\n        this._onRefresh(event);\\n\\n        break;\\n      case 'export':\\n        this._onExport(event);\\n\\n        break;\\n      case 'import':\\n        this._onImport(event);\\n\\n        break;\\n    }\\n  }\\n\\n  /**\\n   * @desc 드래그시작 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onDragstart(event) {\\n    super._onDragstart(event);\\n\\n    let key = event.target.getAttribute('key');\\n    let fileInfo = event.target.parentElement.itemData;\\n\\n    if (key && event.dataTransfer) {\\n      event.dataTransfer.setData('appspeed/object', 'file');\\n      event.dataTransfer.setData('appspeed/key', key);\\n      event.dataTransfer.setData('appspeed/fileInfo', Jinja.global.string(fileInfo));\\n      event.dataTransfer.setData(\\n        'text/html',\\n        `<jj-include  jj-uri=\\\"${fileInfo.URI}\\\"></jj-include>`\\n      );\\n      event.dataTransfer.setData(\\n        'text/json',\\n        `{ \\\"uri\\\": \\\"${fileInfo.URI}\\\",  \\\"id\\\":\\\"${fileInfo.ID}\\\",  \\\"name\\\":\\\"${fileInfo.NAME}\\\", \\\"desciption\\\":\\\"${fileInfo.DESCRIPTION}\\\" },\\\\n`\\n      );\\n      event.dataTransfer.setData(\\n        'text/script',\\n        `JJForm.open(\\\"${fileInfo.URI}\\\",{ \\\"search\\\":{}, \\\"position\\\": { \\\"width\\\": \\\"50%\\\" }, isModal: true, isMoveable: true }).then(result=>{}).catch(ex=>{})`\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @desc 이름변경 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onRename(event) {\\n    let oldFileInfo = this.selectEl.parentElement.itemData;\\n\\n    Jinja.driverApi.formRenameFile(oldFileInfo).then(fileInfo => {\\n      Object.assign(this.selectEl.parentElement.itemData, fileInfo);\\n\\n      this.selectEl.title = fileInfo.NAME;\\n      this.selectEl.querySelector('t').innerHTML = fileInfo.NAME;\\n\\n      Jinja.event.dispatch(\\n        'studio.updateFileInfo',\\n        'studioV6Api.updateFileInfo',\\n        {\\n          detail: fileInfo\\n        }\\n      );\\n    });\\n  }\\n\\n  /**\\n   * @desc 속성 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onInfo(event) {\\n    let fileInfo = this.selectEl.parentElement.itemData;\\n\\n    Jinja.driverApi.formInfoFile(fileInfo).then(fileInfo => {\\n      this.selectEl.title = fileInfo.NAME;\\n      this.selectEl.querySelector('t').innerHTML = fileInfo.NAME;\\n\\n      Jinja.event.dispatch(\\n        'studio.updateFileInfo',\\n        'studioV6Api.updateFileInfo',\\n        {\\n          detail: fileInfo\\n        }\\n      );\\n    });\\n  }\\n\\n  /**\\n   * @desc 붙이기 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onPaste(event) {\\n    let targetId = this._getSelectFolderId();\\n\\n    if (this.copyLi) {\\n      if (this.copyLi.contains(this.selectEl.parentElement)) {\\n        alert('대상 폴더가 원본 폴더의 하위 폴더입니다.');\\n\\n        return;\\n      }\\n\\n      let copyFileId = this.copyLi.querySelector('a[key]').getAttribute('key');\\n\\n      Jinja.driverApi\\n        .copyFile(copyFileId, targetId)\\n        .then(() => this._folderRefresh(targetId));\\n    }\\n\\n    if (this.cutLi) {\\n      if (this.cutLi.contains(this.selectEl.parentElement)) {\\n        alert('대상 폴더가 원본 폴더의 하위 폴더입니다.');\\n\\n        return;\\n      }\\n\\n      let moveFileId = this.cutLi.querySelector('a[key]').getAttribute('key');\\n\\n      Jinja.driverApi\\n        .moveFile(moveFileId, targetId)\\n        .then(() => this._folderRefresh(targetId))\\n        .then(this.cutLi.remove());\\n    }\\n  }\\n\\n  /**\\n   * @desc 삭제 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onDelete(event) {\\n    let fileId = this._getSelectFileId();\\n\\n    Jinja.confirm\\n      .delete('Delete OK?')\\n      .then(() => Jinja.driverApi.trashFile(fileId, true))\\n      .then(() => this.selectEl.parentElement.remove())\\n      .then(() =>\\n            this.dispatchEvent(\\n      new CustomEvent('fileDeleted', {\\n        detail: {\\n          fileId: fileId\\n        },\\n        bubbles: true\\n      })\\n    )\\n           )\\n      .catch(() => {});\\n  }\\n\\n  /**\\n   * @desc 잠금 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onLock(event) {\\n    let fileId = this._getSelectFileId();\\n    let folderId = this._getSelectFolderId();\\n\\n    return Jinja.driverApi\\n      .lockResource(fileId)\\n      .then(() => {\\n      let lockEl = this.selectEl.querySelector('i.lock');\\n\\n      lockEl.setAttribute('class', 'lock fa fa-lock');\\n      lockEl.setAttribute('locker', Jinja.uo.USER_ID);\\n      lockEl.setAttribute('title', Jinja.uo.USER_NAME);\\n    })\\n      .then(() => this._folderRefresh(folderId));\\n  }\\n\\n  /**\\n   * @desc 해제 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onUnLock(event) {\\n    let fileId = this._getSelectFileId();\\n    let folderId = this._getSelectFolderId();\\n\\n    return Jinja.driverApi\\n      .unlockResource(fileId)\\n      .then(() => {\\n      let lockEl = this.selectEl.querySelector('i.lock');\\n      lockEl.setAttribute('class', 'lock fa');\\n      lockEl.removeAttribute('locker');\\n      lockEl.removeAttribute('title');\\n    })\\n      .then(() => this._folderRefresh(folderId));\\n  }\\n\\n  /**\\n   * @desc 해제요청 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onUnLockReq(event) {\\n    let fileId = this._getSelectFileId();\\n    let lockEl = this.selectEl.querySelector('i.lock');\\n\\n    if (lockEl) {\\n      let locker = lockEl.getAttribute('locker');\\n      let fileName = this.selectEl.querySelector('t').innerText;\\n\\n      Jinja.driverApi.unlockReqPeer(fileId, locker, fileName);\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정된 파일의 backupRestore 이벤트를 발생시킨다.\\n   * @param {Object} - 쓰이지 않음\\n   * @example -\\n   */\\n  _onBackup(event) {\\n    let fileInfo = this.selectEl.parentElement.itemData;\\n\\n    Jinja.driverApi.formBackupInfo(fileInfo).then(backupInfo => {\\n      this.dispatchEvent(\\n        new CustomEvent('backupRestore', {\\n          detail: {\\n            fileId: fileInfo.ID,\\n            body: backupInfo.BODY\\n          },\\n          bubbles: true\\n        })\\n      );\\n    });\\n  }\\n\\n  /**\\n   * @desc 선택된 파일을 공유한다.\\n   * @param {Object} - 쓰이지 않음\\n   * @example -\\n   */\\n  _onShare(event) {\\n    let fileInfo = this.selectEl.parentElement.itemData;\\n\\n    Jinja.driverApi.folderShare(fileInfo);\\n  }\\n\\n  /**\\n   * @desc 새로고침 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onRefresh(event) {\\n    let folderId = this._getSelectFolderId();\\n\\n    this._folderRefresh(folderId);\\n  }\\n\\n  _onExport(event) {\\n    let fileInfo = this.selectEl.parentElement.itemData;\\n\\n    Jinja.ajax.excute(`getRecursiveID.sql`, {\\n      \\\"id\\\": fileInfo.ID\\n    }).then(data => {\\n\\n      let treeRow = Jinja.global.row2tree(\\n        data.rows,\\n        fileInfo.PARENT_ID,\\n        'PARENT_ID',\\n        'ID',\\n        'SORT_NAME',\\n        'items'\\n      );\\n\\n      Jinja.global.exportJson(treeRow, fileInfo.NAME);\\n\\n    });\\n  }  \\n  _onImport(event) {\\n    let fileInfo = this.selectEl.parentElement.itemData;\\n    let input = document.createElement(\\\"input\\\");\\n    input.type = \\\"file\\\";\\n    input.hidden = true;\\n    document.body.appendChild(input);\\n\\n    input.addEventListener('change', e=>{\\n      // FileList\\n      var fileList = input.files || event.target.files;\\n      // File\\n      var file = fileList[0];\\n      var reader = new FileReader();\\n      reader.onload = (progressEvent)=>{\\n        console.log(progressEvent.target.result);\\n        JJFormModal.openInfo(\\\"ImportFile.uc\\\", {\\n          \\\"file\\\": fileInfo,\\n          \\\"data\\\": progressEvent.target.result\\n        }).then(result=>{\\n          this._folderRefresh(fileInfo.ID);\\n        });\\n\\n      };\\n      reader.readAsText(file);\\n      input.remove();\\n    });\\n    input.click();\\n  }  \\n\\n  /**\\n   * @desc 지정한 옵션으로 엘리먼트를 초기화한다.\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  init(options) {\\n    // super.init(options);\\n\\n    if (this.options.isFolder) {\\n      this.getTreeByFolderId(\\n        workspaceMeta.options.homeFolderId ||\\n        workspaceMeta.options.appInfo.homeFolderId\\n      );\\n    } else {\\n      this.getMyResource();\\n    }\\n  }\\n\\n  /**\\n   * @desc 전체 자료를 갖고 온다.\\n   * @example -\\n   */\\n  getMyResource() {\\n    Jinja.driverApi.getMyResource().then(treeData => this.fromJson(treeData));\\n  }\\n\\n  /**\\n   * @desc 지정된 폴더의 하위자료를 갖고 온다.\\n   * @param {String} - 폴더아이디\\n   * @example -\\n   */\\n  getTreeByFolderId(folderId) {\\n    Jinja.driverApi\\n      .getTreeByFolderId(folderId)\\n      .then(treeData => this.fromJson(treeData));\\n  }\\n\\n  /**\\n   * @desc 현재 선택된 파일을 ID를 반환한다.\\n   * @example -\\n   */\\n  getSelectFileId() {\\n    return this._getSelectFileId();\\n  }  \\n  /**\\n   * @desc 선택된 폴더하위에 신규파일을 생성한다.\\n   * @example -\\n   */\\n  newFile() {\\n    let folderId = this._getSelectFolderId();\\n\\n    if (!folderId && this.options.isFolder) {\\n      folderId = workspaceMeta.options.homeFolderId || workspaceMeta.options.appInfo.homeFolderId;\\n    }\\n\\n    if (!folderId) {\\n      $topMessage('작업대상 폴더를 지정하세요.');\\n      return;\\n    }\\n\\n    Jinja.driverApi.formNewFile(folderId).then(fileInfo => {\\n      this.dispatchEvent(\\n        new CustomEvent('treeClick', {\\n          detail: {\\n            key: fileInfo.ID,\\n            title: fileInfo.NAME,\\n            data: fileInfo\\n          },\\n          bubbles: true\\n        })\\n      );\\n\\n      if (this.options.isFolder) {\\n        this.getTreeByFolderId(\\n          workspaceMeta.options.homeFolderId ||\\n          workspaceMeta.options.appInfo.homeFolderId\\n        );\\n      } else  {\\n        this._folderRefresh(folderId);\\n      }\\n\\n    });\\n  }\\n\\n  /**\\n   * @desc 선택된 폴더하위에 신규폴더를 생성한다.\\n   * @example -\\n   */\\n  newFolder(parentId) {\\n    let folderId = parentId||this._getSelectFolderId();\\n\\n    if (!folderId && this.options.isFolder) {\\n      folderId = workspaceMeta.options.homeFolderId || workspaceMeta.options.appInfo.homeFolderId;\\n    }\\n\\n    if (!folderId) {\\n      $topMessage('작업대상 폴더를 지정하세요.');\\n\\n      return;\\n    }\\n\\n    return Jinja.driverApi\\n      .formNewFolder(folderId)\\n      .then(result => {\\n      if (this.options.isFolder) {\\n        this.getTreeByFolderId(\\n          workspaceMeta.options.homeFolderId ||\\n          workspaceMeta.options.appInfo.homeFolderId\\n        );\\n      } else  {\\n        this._folderRefresh(folderId);\\n      }\\n\\n    });\\n  }\\n\\n  /**\\n   * @desc 선택된 폴더하위에 신규스토어파일을 생성한다.\\n   * @example -\\n   */\\n  newStore() {\\n    let folderId = this._getSelectFolderId();\\n\\n    if (!folderId) {\\n      $topMessage('작업대상 폴더를 지정하세요.');\\n\\n      return;\\n    }\\n\\n    Jinja.driverApi.storeNewFile(folderId).then(fileInfo => {\\n      this._folderRefresh(folderId);\\n    });\\n  }\\n\\n  /**\\n   * @desc 신규워크스페이스를 생성한다.\\n   * @example -\\n   */\\n  newWorkspace() {\\n    Jinja.driverApi.formNewWorkspace().then(() => {\\n      this.getMyResource();\\n    });\\n  }\\n}\\n\\ncustomElements.define('jj-filetree', JJFileTree);\\n/* ==JJAttribute.640.class================ */\\n\\n/**\\n * @classdesc VhtmlEditor Attribute 컴포넌트관리를 위한 클래스\\n */\\nclass JJAttribute extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    let html = \\n      `<table border=1>` +\\n      `<colgroup>` +\\n      `<col style=\\\"width:43px;\\\">` +\\n      `<col style=\\\"width:70px;\\\">` +\\n      `<col>` +\\n      `</colgroup>` +\\n      `<tbody>`;\\n\\n    if (this.targetEl) {\\n      for (let i = 0; i < this.targetEl.attributes.length; i++) {\\n        if (!this.targetEl.attributes[i].name.startsWith('_')) {\\n          let name = this.targetEl.attributes[i].name;\\n          let value = this.targetEl.attributes[i].value;\\n\\n          html += \\n            `<tr data-name=\\\"${name}\\\">` +\\n            `<th>` +\\n            `<button title=\\\"remove\\\" method=\\\"remove\\\" type=\\\"button\\\"  class=\\\"btn btn-warning btn-sm\\\"><i class=\\\"fa fa-remove\\\" aria-hidden=\\\"true\\\"></i></button>` +\\n            `<button title=\\\"save\\\"   method=\\\"update\\\" type=\\\"button\\\"  class=\\\"btn btn-primary btn-sm\\\"><i class=\\\"fa fa-save\\\" aria-hidden=\\\"true\\\"></i></button>` +\\n            `</th>` +\\n            `<th title=\\\"${name}\\\" class=\\\"text-nowrap\\\">${name}</th>` +\\n            `<td>` +\\n            `<div class=\\\"input-group\\\">` +\\n            `<input type=\\\"text\\\" class=\\\"form-control update-value\\\" aria-label=\\\"...\\\" value=\\\"${value}\\\">` +\\n            `<div class=\\\"input-group-btn\\\">` +\\n            `<button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">...</button>` +\\n            `<textarea class=\\\"dropdown-menu dropdown-menu-right update-value\\\">${value}</textarea>` +\\n            `</div>` +\\n            `</div>` +\\n            `</td>` +\\n            `</tr>`;\\n        }\\n      }\\n    }\\n\\n    html += \\n      `</tbody>` +\\n      `<tfoot>` +\\n      `<tr>` +\\n      `<th>` +\\n      `<button title=\\\"설정하고 지웁니다\\\" method=\\\"clear\\\" type=\\\"button\\\" class=\\\"btn btn-success  btn-sm\\\"><i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i></button>` +\\n      `<button title=\\\"설정하고 유지합니다\\\" method=\\\"add\\\" type=\\\"button\\\" class=\\\"btn btn-success  btn-sm\\\"><i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i></button>` +\\n      `</th>` +\\n      `<th><input type=\\\"text\\\" data-bind=\\\"name\\\" class=\\\"form-control\\\" aria-label=\\\"...\\\" ></th>` +\\n      `<td><input type=\\\"text\\\" data-bind=\\\"value\\\" class=\\\"form-control add-value\\\" aria-label=\\\"...\\\"></td>` +\\n      `</tr>` +\\n      `</tfoot>` +\\n      `</table>`;\\n\\n    this.$empty();\\n    this.innerHTML = html;\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.oMutationObserver = new MutationObserver(mutations => {\\n      this._render();\\n    });\\n\\n    this.addEventListener('click', e => {\\n      if (e.target.matches(`[method=\\\"remove\\\"]`)) {\\n        let tr = e.target.closest('tr');\\n        let name = tr.dataset.name;\\n\\n        this.targetEl.removeAttribute(name);\\n\\n        tr.remove();\\n      }\\n\\n      if (e.target.matches(`[method=\\\"update\\\"]`)) {\\n        let tr = e.target.closest('tr');\\n        let name = tr.dataset.name;\\n        let value = tr.querySelector('input').value;\\n\\n        this.targetEl.setAttribute(name, value);\\n      }\\n\\n      if (e.target.matches(`[method=\\\"add\\\"]`)) {\\n        let tr = e.target.closest('tr');\\n        let name = tr.querySelector(`input[data-bind=\\\"name\\\"]`).value;\\n        let value = tr.querySelector(`input[data-bind=\\\"value\\\"]`).value;\\n\\n        this.targetEl.setAttribute(name, value);\\n        this._render();\\n      }\\n\\n      if (e.target.matches(`[method=\\\"clear\\\"]`)) {\\n        let tr = e.target.closest('tr');\\n        let name = tr.querySelector(`input[data-bind=\\\"name\\\"]`).value;\\n        let value = tr.querySelector(`input[data-bind=\\\"value\\\"]`).value;\\n\\n        this.targetEl.setAttribute(name, value);\\n        this._render();\\n\\n        tr.querySelector(`input[data-bind=\\\"name\\\"]`).value = '';\\n        tr.querySelector(`input[data-bind=\\\"value\\\"]`).value = '';\\n      }\\n    });\\n\\n    this.addEventListener('keydown', e => {\\n      let keyMap = Jinja.global.getEventKeyMap(e);\\n\\n      if (keyMap === 'Enter') {\\n        if (e.target.matches('.update-value')) {\\n          let tr = e.target.closest('tr');\\n\\n          if (tr) {\\n            if (e.target.matches('textarea')) {\\n              let val = e.target.value;\\n\\n              tr.querySelector(`input.update-value`).value = val;\\n            }\\n\\n            tr.querySelector(`.btn[method=\\\"update\\\"]`).click();\\n          }\\n        }\\n\\n        if (e.target.matches('.add-value')) {\\n          e.target.closest('tr').querySelector(`.btn[method=\\\"add\\\"]`).click();\\n        }\\n      }\\n    });\\n\\n    this.targetEl = null;\\n  }\\n\\n  /**\\n   * @desc 지정한 노드 엘리먼트를 활성화한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {Boolean} - 새로고침여부\\n   * @example -\\n   */\\n  activeNode(el, isRefresh) {\\n    this.targetEl = null;\\n    this.oMutationObserver.disconnect();\\n    this._render();\\n\\n    if (el) {\\n      this.targetEl = el;\\n      this.oMutationObserver.observe(this.targetEl, {\\n        attributes: true,\\n        childList: true,\\n        characterData: true\\n      });\\n\\n      if (isRefresh) {\\n        this._render();\\n      }\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-attribute', JJAttribute);\\n/* ==JJElToolbar.640.class================ */\\n\\n/**\\n * @classdesc VhtmlEditor Toolbar 컴포넌트관리를 위한 클래스\\n */\\nclass JJElToolbar extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    let html = \\n      `<div>` +\\n      `<div class=\\\"btn-group\\\">` +\\n      `<button class=\\\"btn btn-dark btn-sm\\\" method=\\\"new\\\" title=\\\"새 문서\\\"><i class=\\\"fa fa-file\\\"></i></button>` +\\n      `<button class=\\\"btn btn-dark btn-sm\\\" method=\\\"allClear\\\" title=\\\"빈 문서반들기\\\"><i class=\\\"fa fa-file-o\\\"></i></button>` +\\n      `<button class=\\\"btn btn-dark btn-sm\\\" method=\\\"empty\\\" title=\\\"선택박스 내용지우기\\\"><i class=\\\"fa fa-eraser\\\"></i></button>` +\\n      `<button class=\\\"btn btn-dark btn-sm\\\" method=\\\"clone\\\" title=\\\"옆에 복사추가\\\"><i class=\\\"fa fa-clone\\\"></i></button>` +\\n      `<button class=\\\"btn btn-dark btn-sm\\\" method=\\\"remove\\\" title=\\\"삭제\\\"><i class=\\\"fa fa-remove\\\"></i></button>` +\\n      `</div>` +\\n      `<div class=\\\"btn-group\\\">` +\\n      `<button class=\\\"btn btn-dark btn-sm\\\" method=\\\"undo\\\" title=\\\"실행취소\\\"><i class=\\\"fa fa-reply\\\"></i></button>` +\\n      `<button class=\\\"btn btn-dark btn-sm\\\" method=\\\"redo\\\" title=\\\"다시실행\\\"><i class=\\\"fa fa-share\\\"></i></button>` +\\n      `</div>` +\\n      `<div class=\\\"btn-group\\\">` +\\n      `<button class=\\\"btn btn-dark btn-sm\\\" method=\\\"group\\\" title=\\\"그룹\\\"><i class=\\\"fa fa-object-group\\\"></i></button>` +\\n      `<button class=\\\"btn btn-dark btn-sm\\\" method=\\\"ungroup\\\" title=\\\"그룹해제\\\"><i class=\\\"fa fa-object-ungroup\\\"></i></button>` +\\n      `</div>` +\\n      `<div class=\\\"btn-group dropdown\\\">` +\\n      `<button type=\\\"button\\\" class=\\\"btn btn-dark btn-sm dropdown-toggle waves-effect waves-light\\\"` +\\n      `data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">크기<i class=\\\"mdi mdi-chevron-down\\\"></i></button>` +\\n      `<div class=\\\"dropdown-menu\\\">` +\\n      `<a class=\\\"dropdown-item h1\\\" method=\\\"setFontSize\\\" data-set-class=\\\"h1\\\" href=\\\"#\\\">h1.크기</a>` +\\n      `<a class=\\\"dropdown-item h2\\\" method=\\\"setFontSize\\\" data-set-class=\\\"h2\\\" href=\\\"#\\\">h2.크기</a>` +\\n      `<a class=\\\"dropdown-item h3\\\" method=\\\"setFontSize\\\" data-set-class=\\\"h3\\\" href=\\\"#\\\">h3.크기</a>` +\\n      `<a class=\\\"dropdown-item h4\\\" method=\\\"setFontSize\\\" data-set-class=\\\"h4\\\" href=\\\"#\\\">h4.크기</a>` +\\n      `<a class=\\\"dropdown-item h5\\\" method=\\\"setFontSize\\\" data-set-class=\\\"h5\\\" href=\\\"#\\\">h5.크기</a>` +\\n      `<a class=\\\"dropdown-item h6\\\" method=\\\"setFontSize\\\" data-set-class=\\\"h6\\\" href=\\\"#\\\">h6.크기</a>` +\\n      `<div class=\\\"dropdown-divider\\\"></div>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setFontSize\\\" data-set-class=\\\"display-1\\\" href=\\\"#\\\">6rem</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setFontSize\\\" data-set-class=\\\"display-2\\\" href=\\\"#\\\">5.5rem</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setFontSize\\\" data-set-class=\\\"display-3\\\" href=\\\"#\\\">4.5rem</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setFontSize\\\" data-set-class=\\\"display-4\\\" href=\\\"#\\\">3.5rem</a>` +\\n      `<div class=\\\"dropdown-divider\\\"></div>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setFontSize\\\" data-set-class=\\\"small\\\" href=\\\"#\\\">small</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setFontSize\\\" data-set-class=\\\"\\\" href=\\\"#\\\">normal</a>` +\\n      `</div>` +\\n      `</div>` +\\n      `<div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\" draggable=true>` +\\n      `<div class=\\\"btn-group dropdown\\\">` +\\n      `<button type=\\\"button\\\" class=\\\"btn btn-dark btn-sm dropdown-toggle waves-effect waves-light\\\"` +\\n      `data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">문자<i class=\\\"mdi mdi-chevron-down\\\"></i></button>` +\\n      `<div class=\\\"dropdown-menu\\\">` +\\n      `<a class=\\\"dropdown-item text-custom\\\" method=\\\"textColor\\\" data-set-class=\\\"text-custom\\\" href=\\\"#\\\">custom</a>` +\\n      `<a class=\\\"dropdown-item text-pink\\\" method=\\\"textColor\\\" data-set-class=\\\"text-pink\\\" href=\\\"#\\\">pink</a>` +\\n      `<a class=\\\"dropdown-item text-muted\\\" method=\\\"textColor\\\" data-set-class=\\\"text-muted\\\" href=\\\"#\\\">muted</a>` +\\n      `<a class=\\\"dropdown-item text-primary\\\" method=\\\"textColor\\\" data-set-class=\\\"text-primary\\\" href=\\\"#\\\">primary</a>` +\\n      `<a class=\\\"dropdown-item text-secondary\\\" method=\\\"textColor\\\" data-set-class=\\\"text-secondary\\\" href=\\\"#\\\">secondary</a>` +\\n      `<a class=\\\"dropdown-item text-success\\\" method=\\\"textColor\\\" data-set-class=\\\"text-success\\\" href=\\\"#\\\">success</a>` +\\n      `<a class=\\\"dropdown-item text-danger\\\" method=\\\"textColor\\\" data-set-class=\\\"text-danger\\\" href=\\\"#\\\">danger</a>` +\\n      `<a class=\\\"dropdown-item text-warning\\\" method=\\\"textColor\\\" data-set-class=\\\"text-warning\\\" href=\\\"#\\\">warning</a>` +\\n      `<a class=\\\"dropdown-item text-info\\\" method=\\\"textColor\\\" data-set-class=\\\"text-info\\\" href=\\\"#\\\">info</a>` +\\n      `<a class=\\\"dropdown-item text-dark\\\" method=\\\"textColor\\\" data-set-class=\\\"text-dark\\\" href=\\\"#\\\">dark</a>` +\\n      `<a class=\\\"dropdown-item text-purple\\\" method=\\\"textColor\\\" data-set-class=\\\"text-purple\\\" href=\\\"#\\\">purple</a>` +\\n      `<a class=\\\"dropdown-item text-pink\\\" method=\\\"textColor\\\" data-set-class=\\\"text-pink\\\" href=\\\"#\\\">pink</a>` +\\n      `<a class=\\\"dropdown-item text-muted\\\" method=\\\"textColor\\\" data-set-class=\\\"text-black\\\" href=\\\"#\\\">muted</a>` +\\n      `<a class=\\\"dropdown-item text-light bg-secondary\\\" method=\\\"textColor\\\" data-set-class=\\\"text-light\\\" href=\\\"#\\\">light</a>` +\\n      `<a class=\\\"dropdown-item text-white bg-secondary\\\" method=\\\"textColor\\\" data-set-class=\\\"text-white\\\" href=\\\"#\\\">white</a>` +\\n      `</div>` +\\n      `</div>` +\\n      `<div class=\\\"btn-group dropdown\\\">` +\\n      `<button type=\\\"button\\\" class=\\\"btn btn-dark btn-sm dropdown-toggle waves-effect waves-light\\\"` +\\n      `data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">배경<i class=\\\"mdi mdi-chevron-down\\\"></i></button>` +\\n      `<div class=\\\"dropdown-menu\\\">` +\\n      `<a class=\\\"dropdown-item bg-primary text-white\\\" method=\\\"backColor\\\" data-set-class=\\\"bg-primary\\\" href=\\\"#\\\">primary</a>` +\\n      `<a class=\\\"dropdown-item bg-secondary text-white\\\" method=\\\"backColor\\\" data-set-class=\\\"bg-secondary\\\" href=\\\"#\\\">secondary</a>` +\\n      `<a class=\\\"dropdown-item bg-success text-white\\\" method=\\\"backColor\\\" data-set-class=\\\"bg-success\\\" href=\\\"#\\\">success</a>` +\\n      `<a class=\\\"dropdown-item bg-danger text-white\\\" method=\\\"backColor\\\" data-set-class=\\\"bg-danger\\\" href=\\\"#\\\">danger</a>` +\\n      `<a class=\\\"dropdown-item bg-warning text-dark\\\" method=\\\"backColor\\\" data-set-class=\\\"bg-warning\\\" href=\\\"#\\\">warning</a>` +\\n      `<a class=\\\"dropdown-item bg-info text-white\\\" method=\\\"backColor\\\" data-set-class=\\\"bg-info\\\" href=\\\"#\\\">info</a>` +\\n      `<a class=\\\"dropdown-item bg-light text-dark\\\" method=\\\"backColor\\\" data-set-class=\\\"bg-light\\\" href=\\\"#\\\">light</a>` +\\n      `<a class=\\\"dropdown-item bg-dark text-white\\\" method=\\\"backColor\\\" data-set-class=\\\"bg-dark\\\" href=\\\"#\\\">dark</a>` +\\n      `<a class=\\\"dropdown-item bg-white text-dark\\\" method=\\\"backColor\\\" data-set-class=\\\"bg-white\\\" href=\\\"#\\\">white</a>` +\\n      `<div class=\\\"dropdown-divider\\\"></div>` +\\n      `<a class=\\\"dropdown-item bg-rgba3 text-dark\\\" method=\\\"backColor\\\" data-set-class=\\\"bg-rgba3\\\" href=\\\"#\\\">투명도3</a>` +\\n      `<a class=\\\"dropdown-item bg-rgba2 text-dark\\\" method=\\\"backColor\\\" data-set-class=\\\"bg-rgba2\\\" href=\\\"#\\\">투명도2</a>` +\\n      `<a class=\\\"dropdown-item bg-rgba1 text-dark\\\" method=\\\"backColor\\\" data-set-class=\\\"bg-rgba1\\\" href=\\\"#\\\">투명도1</a>` +\\n      `<a class=\\\"dropdown-item bg-transparent text-dark\\\" method=\\\"backColor\\\" data-set-class=\\\"bg-transparent\\\" href=\\\"#\\\">투명</a>` +\\n      `<div class=\\\"dropdown-divider\\\"></div>` +\\n      `<div class=\\\"btn-group dropright w-100\\\">` +\\n      `<a class=\\\"dropdown-item dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">` +\\n      `그림자 <i class=\\\"mdi mdi-chevron-down pull-right\\\"></i></a>` +\\n      `<div class=\\\"dropdown-menu\\\">` +\\n      `<a class=\\\"dropdown-item\\\" href=\\\"#\\\" method=\\\"setBoxShadow\\\" data-set-class=\\\"shadow-none\\\">No shadow</a>` +\\n      `<a class=\\\"dropdown-item\\\" href=\\\"#\\\" method=\\\"setBoxShadow\\\" data-set-class=\\\"shadow-sm\\\">Small shadow</a>` +\\n      `<a class=\\\"dropdown-item\\\" href=\\\"#\\\" method=\\\"setBoxShadow\\\" data-set-class=\\\"shadow\\\">Regular shadow</a>` +\\n      `<a class=\\\"dropdown-item\\\" href=\\\"#\\\" method=\\\"setBoxShadow\\\" data-set-class=\\\"shadow-lg\\\">Larger shadow</a>` +\\n      `<a class=\\\"dropdown-item\\\" href=\\\"#\\\" method=\\\"setBoxShadow\\\" data-set-class=\\\"\\\">initial</a>` +\\n      `</div>` +\\n      `</div>` +\\n      `</div>` +\\n      `</div>` +\\n      `</div>` +\\n      `<div class=\\\"btn-group dropdown\\\">` +\\n      `<button type=\\\"button\\\" class=\\\"btn btn-dark btn-sm dropdown-toggle waves-effect waves-light\\\"` +\\n      `data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">모양<i class=\\\"mdi mdi-chevron-down\\\"></i></button>` +\\n      `<div class=\\\"dropdown-menu\\\">` +\\n      `<a class=\\\"dropdown-item font-weight-bold\\\" method=\\\"setFontWeight\\\" data-set-class=\\\"font-weight-bold\\\" href=\\\"#\\\">굵은 텍스트</a>` +\\n      `<a class=\\\"dropdown-item font-weight-normal\\\" method=\\\"setFontWeight\\\" data-set-class=\\\"font-weight-normal\\\" href=\\\"#\\\">보통 텍스트</a>` +\\n      `<a class=\\\"dropdown-item font-weight-light\\\" method=\\\"setFontWeight\\\" data-set-class=\\\"font-weight-light\\\" href=\\\"#\\\">가벼운 텍스트</a>` +\\n      `<a class=\\\"dropdown-item font-italic\\\" method=\\\"setFontWeight\\\" data-set-class=\\\"font-italic\\\" href=\\\"#\\\">기울임</a>` +\\n      `<a class=\\\"dropdown-item font-italic\\\" method=\\\"setFontWeight\\\" data-set-class=\\\"\\\" href=\\\"#\\\">initial</a>` +\\n      `<div class=\\\"dropdown-divider\\\"></div>` +\\n      `<div class=\\\"btn-group dropright w-100\\\">` +\\n      `<a class=\\\"dropdown-item dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">` +\\n      `대소문자 <i class=\\\"mdi mdi-chevron-down pull-right\\\"></i></a>` +\\n      `<div class=\\\"dropdown-menu\\\">` +\\n      `<a class=\\\"dropdown-item text-lowercase\\\" href=\\\"#\\\" method=\\\"setTextTransform\\\" data-set-class=\\\"text-lowercase\\\">Lowercased text.</a>` +\\n      `<a class=\\\"dropdown-item text-uppercase\\\" href=\\\"#\\\" method=\\\"setTextTransform\\\" data-set-class=\\\"text-uppercase\\\">Uppercased text.</a>` +\\n      `<a class=\\\"dropdown-item text-capitalize\\\" href=\\\"#\\\" method=\\\"setTextTransform\\\" data-set-class=\\\"text-capitalize\\\">CapiTaliZed text.</a>` +\\n      `<a class=\\\"dropdown-item text-capitalize\\\" href=\\\"#\\\" method=\\\"setTextTransform\\\" data-set-class=\\\"\\\">initial</a>` +\\n      `</div>` +\\n      `</div>` +\\n      `</div>` +\\n      `</div>` +\\n      `<div class=\\\"btn-group dropdown\\\">` +\\n      `<button type=\\\"button\\\" class=\\\"btn btn-dark btn-sm dropdown-toggle waves-effect waves-light\\\"` +\\n      `data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">테두리<i class=\\\"mdi mdi-chevron-down\\\"></i></button>` +\\n      `<div class=\\\"dropdown-menu\\\">` +\\n      `<a class=\\\"dropdown-item\\\" href=\\\"#\\\" method=\\\"setBorder\\\" data-set-class=\\\"border\\\">` +\\n      `<span class=\\\"border border-dark\\\" style=\\\"width:20px;height:20px;border:1px dotted white;display: inline-block;\\\">&nbsp&nbsp&nbsp</span>전체</a>` +\\n      `<a class=\\\"dropdown-item\\\" href=\\\"#\\\" method=\\\"setBorder\\\" data-set-class=\\\"border-top\\\">` +\\n      `<span class=\\\"border-top border-dark\\\" style=\\\"width:20px;height:20px;border:1px dotted white;display: inline-block;\\\">&nbsp&nbsp&nbsp</span>위</a>` +\\n      `<a class=\\\"dropdown-item\\\" href=\\\"#\\\" method=\\\"setBorder\\\" data-set-class=\\\"border-right\\\">` +\\n      `<span class=\\\"border-right border-dark\\\" style=\\\"width:20px;height:20px;border:1px dotted white;display: inline-block;\\\">&nbsp&nbsp&nbsp</span>오른쪽</a>` +\\n      `<a class=\\\"dropdown-item\\\" href=\\\"#\\\" method=\\\"setBorder\\\" data-set-class=\\\"border-bottom\\\">` +\\n      `<span class=\\\"border-bottom border-dark\\\" style=\\\"width:20px;height:20px;border:1px dotted white;display: inline-block;\\\">&nbsp&nbsp&nbsp</span>아래</a>` +\\n      `<a class=\\\"dropdown-item\\\" href=\\\"#\\\" method=\\\"setBorder\\\" data-set-class=\\\"border-left\\\">` +\\n      `<span class=\\\"border-left border-dark\\\" style=\\\"width:20px;height:20px;border:1px dotted white;display: inline-block;\\\">&nbsp&nbsp&nbsp</span>왼쪽</a>` +\\n      `<div class=\\\"dropdown-divider\\\"></div>` +\\n      `<a class=\\\"dropdown-item\\\" href=\\\"#\\\" method=\\\"setBorder\\\" data-border=\\\"\\\">` +\\n      `<span class=\\\"\\\" style=\\\"width:20px;height:20px;border:1px dotted gray;display: inline-block;\\\">&nbsp&nbsp&nbsp</span>지우기</a>` +\\n      `<div class=\\\"dropdown-divider\\\"></div>` +\\n      `<div class=\\\"btn-group dropright w-100\\\">` +\\n      `<a class=\\\"dropdown-item dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">` +\\n      `Color <i class=\\\"mdi mdi-chevron-down pull-right\\\"></i></a>` +\\n      `<div class=\\\"dropdown-menu\\\">` +\\n      `<a class=\\\"dropdown-item bg-primary text-white\\\" href=\\\"#\\\" method=\\\"setBorderColor\\\" data-set-class=\\\"border-primary\\\">primary</a>` +\\n      `<a class=\\\"dropdown-item bg-secondary text-white\\\" href=\\\"#\\\" method=\\\"setBorderColor\\\" data-set-class=\\\"border-secondary\\\">secondary</a>` +\\n      `<a class=\\\"dropdown-item bg-success text-white\\\" href=\\\"#\\\" method=\\\"setBorderColor\\\" data-set-class=\\\"border-success\\\">success</a>` +\\n      `<a class=\\\"dropdown-item bg-danger text-white\\\" href=\\\"#\\\" method=\\\"setBorderColor\\\" data-set-class=\\\"border-danger\\\">danger</a>` +\\n      `<a class=\\\"dropdown-item bg-warning text-dark\\\" href=\\\"#\\\" method=\\\"setBorderColor\\\" data-set-class=\\\"border-warning\\\">warning</a>` +\\n      `<a class=\\\"dropdown-item bg-info text-white\\\" href=\\\"#\\\" method=\\\"setBorderColor\\\" data-set-class=\\\"border-info\\\">info</a>` +\\n      `<a class=\\\"dropdown-item bg-light text-dark\\\" href=\\\"#\\\" method=\\\"setBorderColor\\\" data-set-class=\\\"border-light\\\">light</a>` +\\n      `<a class=\\\"dropdown-item bg-dark text-white\\\" href=\\\"#\\\" method=\\\"setBorderColor\\\" data-set-class=\\\"border-dark\\\">dark</a>` +\\n      `<a class=\\\"dropdown-item bg-white text-dark\\\" href=\\\"#\\\" method=\\\"setBorderColor\\\" data-set-class=\\\"border-white\\\">white</a>` +\\n      `</div>` +\\n      `</div>` +\\n      `<div class=\\\"btn-group dropright w-100\\\">` +\\n      `<a class=\\\"dropdown-item dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">` +\\n      `Round <i class=\\\"mdi mdi-chevron-down pull-right\\\"></i></a>` +\\n      `<div class=\\\"dropdown-menu\\\">` +\\n      `<a class=\\\"dropdown-item\\\" href=\\\"#\\\" method=\\\"setBorderRadius\\\" data-set-class=\\\"rounded\\\">` +\\n      `<span class=\\\"bg-secondary border border-dark rounded\\\" style=\\\"width:20px;height:20px;border:1px dotted white;display: inline-block;\\\">&nbsp&nbsp&nbsp</span> rounded</a>` +\\n      `<a class=\\\"dropdown-item\\\" href=\\\"#\\\" method=\\\"setBorderRadius\\\" data-set-class=\\\"rounded-top\\\">` +\\n      `<span class=\\\"bg-secondary border border-dark rounded-top\\\" style=\\\"width:20px;height:20px;border:1px dotted white;display: inline-block;\\\">&nbsp&nbsp&nbsp</span> rounded-top</a>` +\\n      `<a class=\\\"dropdown-item\\\" href=\\\"#\\\" method=\\\"setBorderRadius\\\" data-set-class=\\\"rounded-right\\\">` +\\n      `<span class=\\\"bg-secondary border border-dark rounded-right\\\" style=\\\"width:20px;height:20px;border:1px dotted white;display: inline-block;\\\">&nbsp&nbsp&nbsp</span> rounded-right</a>` +\\n      `<a class=\\\"dropdown-item\\\" href=\\\"#\\\" method=\\\"setBorderRadius\\\" data-set-class=\\\"rounded-bottom\\\">` +\\n      `<span class=\\\"bg-secondary border border-dark rounded-bottom\\\" style=\\\"width:20px;height:20px;border:1px dotted white;display: inline-block;\\\">&nbsp&nbsp&nbsp</span> rounded-bottom</a>` +\\n      `<a class=\\\"dropdown-item\\\" href=\\\"#\\\" method=\\\"setBorderRadius\\\" data-set-class=\\\"rounded-left\\\">` +\\n      `<span class=\\\"bg-secondary border border-dark rounded-left\\\" style=\\\"width:20px;height:20px;border:1px dotted white;display: inline-block;\\\">&nbsp&nbsp&nbsp</span> rounded-left</a>` +\\n      `<a class=\\\"dropdown-item\\\" href=\\\"#\\\" method=\\\"setBorderRadius\\\" data-set-class=\\\"rounded-circle\\\">` +\\n      `<span class=\\\"bg-secondary border border-dark rounded-circle\\\" style=\\\"width:20px;height:20px;border:1px dotted white;display: inline-block;\\\">&nbsp&nbsp&nbsp</span> rounded-circle</a>` +\\n      `<a class=\\\"dropdown-item\\\" href=\\\"#\\\" method=\\\"setBorderRadius\\\" data-set-class=\\\"rounded-pill\\\">` +\\n      `<span class=\\\"bg-secondary border border-dark rounded-pill\\\" style=\\\"width:40px;height:20px;border:1px dotted white;display: inline-block;\\\">&nbsp&nbsp&nbsp</span> rounded-pill</a>` +\\n      `<a class=\\\"dropdown-item\\\" href=\\\"#\\\" method=\\\"setBorderRadius\\\" data-set-class=\\\"rounded-0\\\">` +\\n      `<span class=\\\"bg-secondary border border-dark rounded-0\\\" style=\\\"width:20px;height:20px;border:1px dotted white;display: inline-block;\\\">&nbsp&nbsp&nbsp</span> rounded-0</a>` +\\n      `</div>` +\\n      `</div>` +\\n      `</div>` +\\n      `</div>` +\\n      `<div class=\\\"btn-group dropdown\\\">` +\\n      `<button type=\\\"button\\\" class=\\\"btn btn-dark btn-sm dropdown-toggle waves-effect waves-light\\\"` +\\n      `data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">여백<i class=\\\"mdi mdi-chevron-down\\\"></i></button>` +\\n      `<div class=\\\"dropdown-menu\\\">` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setPadding\\\" data-set-class=\\\"p-5\\\" href=\\\"#\\\">p-5 (여백)</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setPadding\\\" data-set-class=\\\"p-4\\\" href=\\\"#\\\">p-4 (여백)</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setPadding\\\" data-set-class=\\\"p-3\\\" href=\\\"#\\\">p-3 (여백)</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setPadding\\\" data-set-class=\\\"p-2\\\" href=\\\"#\\\">p-2 (여백)</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setPadding\\\" data-set-class=\\\"p-1\\\" href=\\\"#\\\">p-1 (여백)</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setPadding\\\" data-set-class=\\\"p-0\\\" href=\\\"#\\\">p-0 (여백)</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setPadding\\\" data-set-class=\\\"\\\" href=\\\"#\\\">미설정</a>` +\\n      `<div class=\\\"dropdown-divider\\\"></div>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setMargineTop\\\" data-set-class=\\\"mt-3\\\" href=\\\"#\\\">mt-3(윗마진)</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setMargineTop\\\" data-set-class=\\\"mt-2\\\" href=\\\"#\\\">mt-2(윗마진)</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setMargineTop\\\" data-set-class=\\\"mt-1\\\" href=\\\"#\\\">mt-1(윗마진)</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setMargineTop\\\" data-set-class=\\\"mt-0\\\" href=\\\"#\\\">mt-0(윗마진)</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setMargineTop\\\" data-set-class=\\\"\\\" href=\\\"#\\\">미설정</a>` +\\n      `<div class=\\\"dropdown-divider\\\"></div>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setMargineBottom\\\" data-set-class=\\\"mb-3\\\" href=\\\"#\\\">mb-3(아래마진)</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setMargineBottom\\\" data-set-class=\\\"mb-2\\\" href=\\\"#\\\">mb-2(아래마진)</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setMargineBottom\\\" data-set-class=\\\"mb-1\\\" href=\\\"#\\\">mb-1(아래마진)</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setMargineBottom\\\" data-set-class=\\\"mb-0\\\" href=\\\"#\\\">mb-0(아래마진)</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"setMargineBottom\\\" data-set-class=\\\"\\\" href=\\\"#\\\">미설정</a>` +\\n      `</div>` +\\n      `</div>` +\\n      `<div class=\\\"btn-group\\\">` +\\n      `<button class=\\\"btn btn-dark btn-sm\\\" method=\\\"link\\\" title=\\\"링크연결\\\"><i class=\\\"fa fa-link\\\" aria-hidden=\\\"true\\\"></i></button>` +\\n      `<button class=\\\"btn btn-dark btn-sm\\\" method=\\\"unlink\\\" title=\\\"링크해제\\\"><i class=\\\"fa fa-unlink\\\" aria-hidden=\\\"true\\\"></i></button>` +\\n      `</div>` +\\n      `<div class=\\\"btn-group dropdown\\\">` +\\n      `<button type=\\\"button\\\" class=\\\"btn btn-dark btn-sm dropdown-toggle waves-effect waves-light\\\"` +\\n      `data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">이동<i class=\\\"mdi mdi-chevron-down\\\"></i></button>` +\\n      `<div class=\\\"dropdown-menu\\\">` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"movePrev\\\" href=\\\"#\\\">위로 이동</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"movePrevInner\\\"  href=\\\"#\\\">레벨 업</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"moveNextInner\\\" href=\\\"#\\\">레벨 다운</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"moveNext\\\"  href=\\\"#\\\">아래로 이동</a>` +\\n      `<div class=\\\"dropdown-divider\\\"></div>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"warp\\\"  href=\\\"#\\\"><i class=\\\"fa fa-object-group\\\"></i>상위추가</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"unwarp\\\" href=\\\"#\\\"><i class=\\\"fa fa-object-ungroup\\\"></i>상위삭제</a>` +\\n      `</div>` +\\n      `</div>` +\\n      `<div class=\\\"btn-group dropdown\\\">` +\\n      `<button type=\\\"button\\\" class=\\\"btn btn-dark btn-sm dropdown-toggle waves-effect waves-light\\\"` +\\n      `data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">정렬<i class=\\\"mdi mdi-chevron-down\\\"></i></button>` +\\n      `<div class=\\\"dropdown-menu\\\">` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"changeClass\\\" data-set-class=\\\"text-left\\\" data-remove-class=\\\"text-left,text-center,text-right\\\" href=\\\"#\\\"><i class=\\\"fa fa-align-left\\\"></i> 왼쪽정렬</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"changeClass\\\" data-set-class=\\\"text-center\\\" data-remove-class=\\\"text-left,text-center,text-right\\\" href=\\\"#\\\"><i class=\\\"fa fa-align-center\\\"></i> 가운데정렬</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"changeClass\\\" data-set-class=\\\"text-right\\\" data-remove-class=\\\"text-left,text-center,text-right\\\" href=\\\"#\\\"><i class=\\\"fa fa-align-right\\\"></i> 오른쪽정렬</a>` +\\n      `<div class=\\\"dropdown-divider\\\"></div>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"changeClass\\\" data-set-class=\\\"align-top\\\"  data-remove-class=\\\"align-top,align-middle,align-bottom\\\" href=\\\"#\\\">상단</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"changeClass\\\" data-set-class=\\\"align-middle\\\" data-remove-class=\\\"align-top,align-middle,align-bottom\\\"  href=\\\"#\\\">중간</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"changeClass\\\" data-set-class=\\\"align-bottom\\\" data-remove-class=\\\"align-top,align-middle,align-bottom\\\"  href=\\\"#\\\">하단</a>` +\\n      `<div class=\\\"dropdown-divider\\\"></div>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"changeClass\\\" data-set-class=\\\"float-left\\\"  data-remove-class=\\\"float-left,float-right,float-none\\\" href=\\\"#\\\"><i class=\\\"fa fa-toggle-left\\\"></i>왼쪽위치 고정</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"changeClass\\\" data-set-class=\\\"float-right\\\" data-remove-class=\\\"float-left,float-right,float-none\\\"  href=\\\"#\\\"><i class=\\\"fa fa-toggle-right\\\"></i>오른쪽위치고정</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"changeClass\\\" data-set-class=\\\"float-none\\\" data-remove-class=\\\"float-left,float-right,float-none\\\"  href=\\\"#\\\"><i class=\\\"fa fa-stop-circle-o\\\"></i>고정취소</a>` +\\n      `<div class=\\\"dropdown-divider\\\"></div>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"changeClass\\\" data-set-class=\\\"text-wrap\\\"  data-remove-class=\\\"text-wrap,text-nowrap,text-truncate\\\" href=\\\"#\\\">줄 바꿈</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"changeClass\\\" data-set-class=\\\"text-nowrap\\\" data-remove-class=\\\"text-wrap,text-nowrap,text-truncate\\\"  href=\\\"#\\\">줄 바꿈 취소</a>` +\\n      `<a class=\\\"dropdown-item\\\" method=\\\"changeClass\\\" data-set-class=\\\"text-truncate\\\" data-remove-class=\\\"text-wrap,text-nowrap,text-truncate\\\"  href=\\\"#\\\">줄임표 자르기</a>` +\\n      `</div>` +\\n      `</div>` +\\n      `</div>` +\\n      `<div class=\\\"item-option-box\\\"></div>`;\\n\\n    this.innerHTML = html;\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.oMutationObserver = new MutationObserver(mutations => {\\n      this._setStyle();\\n    });\\n\\n    this.addEventListener('click', e => {\\n      if (e.target.matches(`[method], [method] *`)) {\\n        let method = e.target.closest(`[method]`).getAttribute('method');\\n\\n        switch (method) {\\n          case 'empty':\\n            this.selectEl.$empty();\\n\\n            break;\\n          case 'clone':\\n            this.targetVhtml._clone(e);\\n\\n            break;\\n          case 'remove':\\n            this.targetVhtml._remove(e);\\n\\n            break;\\n          case 'undo':\\n            this.targetVhtml._undo(e);\\n\\n            break;\\n          case 'redo':\\n            this.targetVhtml._redo(e);\\n\\n            break;\\n          case 'new':\\n            this._new(e);\\n\\n            break;\\n        }\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 스타일을 설정한다.\\n   * @example -\\n   */\\n  _setStyle() {}\\n\\n  /**\\n   * @desc 신규 팝업을 호출한다.\\n   * @example -\\n   */\\n  _new() {\\n    JJFormModal.open('getVhtmlTemp.640.uc')\\n      .then(file => Jinja.driverApi.readFile(file.ID))\\n      .then(fileInfo => Jinja.global.json(fileInfo.BODY))\\n      .then(body => {\\n        this.targetVhtml.setFileBody(body);\\n      })\\n      .catch(e => {});\\n  }\\n\\n  /**\\n   * @desc 지정한 에디터를 에디터로 설정한다.\\n   * @param {Object} - 에디터\\n   * @return {} -\\n   * @example -\\n   */\\n  setEdit(freamEdit) {\\n    this.targetVhtml = freamEdit;\\n  }\\n\\n  /**\\n   * @desc 지정한 노드 엘리먼트를 활성화한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  activeNode(el) {\\n    this.selectEl = null;\\n    this.oMutationObserver.disconnect();\\n\\n    if (el) {\\n      this.selectEl = el;\\n      this.oMutationObserver.observe(this.selectEl, {\\n        attributes: true,\\n        childList: true,\\n        characterData: true\\n      });\\n    } else {\\n      this._setStyle();\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-el-toolbar', JJElToolbar);\\n/* ==JJFrameEditor.640.class================ */\\n\\n/**\\n * @classdesc VhtmlEditor Frame 컴포넌트관리를 위한 클래스\\n */\\nclass JJFrameEditor extends JJFrameViewer {\\n  /**\\n   * @desc SITE 엘리먼트를 생성한다.\\n   * @param {String} - 호스트명\\n   * @example -\\n   */\\n  _siteRender(host) {\\n    host = host || location.origin;\\n\\n    let doc = this.frame.contentWindow.document;\\n\\n    doc.open();\\n\\n    let Html = \\n      `<html lang=\\\"ko\\\">` +\\n      `<head>` +\\n      `<meta charset=\\\"utf-8\\\">` +\\n      `<meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\">` +\\n      `<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">` +\\n      `<link type=\\\"text/css\\\" rel=\\\"stylesheet\\\" href=\\\"${host}/extCss\\\">` +\\n      `<link type=\\\"text/css\\\" rel=\\\"stylesheet\\\" href=\\\"${host}/appCss\\\">` +\\n      `</head>` +\\n      `<body>` +\\n      `<jj-application class=\\\"jj\\\" testable=\\\"true\\\">` +\\n      `<jj-vhtml-editor></jj-vhtml-editor>` +\\n      `<script src=\\\"${host}/extScript\\\"></script>` +\\n      `<script src=\\\"${host}/appScript\\\"></script>` +\\n      `</jj-application>` +\\n      `</body>` +\\n      `</html>`;\\n\\n    doc.write(Html);\\n    doc.close();\\n\\n    this.codeSync.hidden = true;\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    super._setEvent();\\n\\n    this.frame.contentWindow.document.addEventListener('loadEditor', e => {\\n      this.vhtmlEditor = this.frame.contentWindow.document.querySelector(\\n        'jj-vhtml-editor'\\n      );\\n      this.requireResolv();\\n      this.dispatchEvent(\\n        new CustomEvent('loadEditor', {\\n          detail: {\\n            editor: e.target\\n          },\\n          bubbles: true\\n        })\\n      );\\n    });\\n\\n    this.frame.contentWindow.document.addEventListener('selected', e => {\\n      this.dispatchEvent(\\n        new CustomEvent('selected', {\\n          detail: {\\n            editor: e.target\\n          },\\n          bubbles: true\\n        })\\n      );\\n    });\\n\\n    this.frame.contentWindow.document.addEventListener('unselected', e => {\\n      this.dispatchEvent(\\n        new CustomEvent('unselected', {\\n          detail: {\\n            editor: e.target\\n          },\\n          bubbles: true\\n        })\\n      );\\n    });\\n\\n    this.frame.contentWindow.document.addEventListener('undo', e => {\\n      this.dispatchEvent(\\n        new CustomEvent('undo', {\\n          detail: {\\n            editor: e.target\\n          },\\n          bubbles: true\\n        })\\n      );\\n    });\\n\\n    this.frame.contentWindow.document.addEventListener('redo', e => {\\n      this.dispatchEvent(\\n        new CustomEvent('redo', {\\n          detail: {\\n            editor: e.target\\n          },\\n          bubbles: true\\n        })\\n      );\\n    });\\n\\n    this.frame.contentWindow.document.addEventListener('open', e => {\\n      this.dispatchEvent(\\n        new CustomEvent('open', {\\n          detail: {\\n            editor: e.target\\n          },\\n          bubbles: true\\n        })\\n      );\\n    });\\n  }\\n\\n  /**\\n   * @desc 생성 이벤트 후철리를 실행한다.\\n   * @example -\\n   */\\n  _onCreate() {\\n    this.requirePromise = new Promise((resolv, reject) => {\\n      this.requireResolv = resolv;\\n    });\\n  }\\n\\n  /**\\n   * @memberof JJFrameEditor\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n    return this.vhtmlEditor.value;\\n  }\\n\\n  /**\\n   * @memberof JJFrameEditor\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(html) {\\n    this.requirePromise.then(() => {\\n      this.vhtmlEditor.value = html;\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 노드 엘리먼트를 활성화한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  activeNode(el) {\\n    this.vhtmlEditor.activeNode(el);\\n  }\\n\\n  /**\\n   * @desc 선택된 노드를 삭제한다.\\n   * @example -\\n   */\\n  selectNodeRemove() {\\n    this.vhtmlEditor.selectNodeRemove();\\n  }\\n\\n  /**\\n   * @desc 에디터에 파일정보를 설정한다.\\n   * @param {Object} - 파일정보\\n   * @example -\\n   */\\n  setFileBody(body) {\\n    this.requirePromise.then(() => {\\n      this.vhtmlEditor.setFileBody(body);\\n      this.dispatchEvent(\\n        new CustomEvent('open', {\\n          detail: {\\n            editor: this.vhtmlEditor\\n          },\\n          bubbles: true\\n        })\\n      );\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 LESS정보를 에디터에 설정한다.\\n   * @param {String} - LESS정보\\n   * @example -\\n   */\\n  setBodyStyle(lessCss) {\\n    this.vhtmlEditor.setBodyStyle(lessCss);\\n  }\\n\\n  /**\\n   * @desc 편집모드로 전환한다.\\n   * @example -\\n   */\\n  editeMode() {\\n    this.vhtmlEditor.editeMode();\\n  }\\n\\n  /**\\n   * @desc 지정한 파일정보를 뷰어화면 반영한다.\\n   * @param {Object} - 파일정보\\n   * @example -\\n   */\\n  excute(body) {\\n    this.vhtmlEditor.excute(body);\\n  }\\n}\\n\\ncustomElements.define('jj-frame-editor', JJFrameEditor);\\n/* ==JJStyle.640.class================ */\\n\\n/**\\n * classdesc VhtmlEditor Style 컴포넌트관리를 위한 클래스\\n */\\nclass JJStyle extends JJElement {\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    const sizeunit = ['px', '%', 'pt', 'em'];\\n\\n    return {\\n      styleJson: {\\n        padding: {\\n          title: '여백',\\n          type: 'number',\\n          prefix: sizeunit,\\n          child: {\\n            paddingTop: { title: '여백', type: 'number', prefix: sizeunit },\\n            paddingRight: { title: '여백', type: 'number', prefix: sizeunit },\\n            paddingBottom: { title: '여백', type: 'number', prefix: sizeunit },\\n            paddingLeft: { title: '여백', type: 'number', prefix: sizeunit }\\n          }\\n        },\\n        margin: {\\n          title: '여백',\\n          type: 'number',\\n          prefix: sizeunit,\\n          child: {\\n            marginTop: { title: '여백', type: 'number', prefix: sizeunit },\\n            marginRight: { title: '여백', type: 'number', prefix: sizeunit },\\n            marginBottom: { title: '여백', type: 'number', prefix: sizeunit },\\n            marginLeft: { title: '여백', type: 'number', prefix: sizeunit }\\n          }\\n        },\\n        width: {\\n          title: '여백',\\n          type: 'number',\\n          prefix: sizeunit,\\n          child: {\\n            minWidth: { title: '여백', type: 'number', prefix: sizeunit },\\n            maxWidth: { title: '여백', type: 'number', prefix: sizeunit }\\n          }\\n        },\\n        height: {\\n          title: '여백',\\n          type: 'number',\\n          prefix: sizeunit,\\n          child: {\\n            minHeight: { title: '여백', type: 'number', prefix: sizeunit },\\n            maxHeight: { title: '여백', type: 'number', prefix: sizeunit },\\n            lineHeight: { title: '여백', type: 'number', prefix: sizeunit }\\n          }\\n        },\\n        text: {\\n          title: '글자색',\\n          type: 'group',\\n          child: {\\n            color: {\\n              title: '글자색',\\n              type: 'jcolor'\\n            },\\n            textDecoration: {\\n              title: '여백',\\n              type: 'text',\\n              datalist: 'jstyle-textDecoration'\\n            },\\n            textShadow: {\\n              title: '효과',\\n              type: 'text',\\n              datalist: 'jstyle-textShadow'\\n            },\\n            textTransform: {\\n              title: '효과',\\n              type: 'text',\\n              datalist: 'jstyle-textTransform'\\n            },\\n            fontSize: {\\n              title: '폰트크기',\\n              type: 'number',\\n              prefix: sizeunit\\n            },\\n            fontFamily: {\\n              title: '폰트종류',\\n              type: 'text'\\n            }\\n          }\\n        },\\n        border: {\\n          title: 'border',\\n          type: 'group',\\n          child: {\\n            border: {\\n              title: '외곽선',\\n              type: 'text',\\n              child: {\\n                borderTopWidth: {\\n                  title: '여백',\\n                  type: 'number',\\n                  prefix: sizeunit\\n                },\\n                borderRightWidth: {\\n                  title: '여백',\\n                  type: 'number',\\n                  prefix: sizeunit\\n                },\\n                borderBottomWidth: {\\n                  title: '여백',\\n                  type: 'number',\\n                  prefix: sizeunit\\n                },\\n                borderLeftWidth: {\\n                  title: '여백',\\n                  type: 'number',\\n                  prefix: sizeunit\\n                },\\n                borderCollapse: {\\n                  title: '여백',\\n                  type: 'text',\\n                  datalist: 'jstyle-borderCollapse'\\n                }\\n              }\\n            },\\n            borderStyle: {\\n              title: '외곽선',\\n              type: 'text',\\n              datalist: 'jstyle-borderStyle'\\n            },\\n            borderColor: {\\n              title: '배경색',\\n              type: 'jcolor'\\n            },\\n            borderRadius: {\\n              title: '여백',\\n              type: 'text',\\n              datalist: 'jstyle-borderRadius'\\n            },\\n            borderImage: {\\n              title: '여백',\\n              type: 'text',\\n              datalist: 'jstyle-borderImage'\\n            }\\n          }\\n        },\\n        position: {\\n          title: 'border',\\n          type: 'group',\\n          child: {\\n            position: {\\n              title: '여백',\\n              type: 'text',\\n              datalist: 'jstyle-position',\\n              child: {\\n                top: { title: '여백', type: 'number', prefix: sizeunit },\\n                right: { title: '여백', type: 'number', prefix: sizeunit },\\n                bottom: { title: '여백', type: 'number', prefix: sizeunit },\\n                left: { title: '여백', type: 'number', prefix: sizeunit }\\n              }\\n            },\\n            display: {\\n              title: '여백',\\n              type: 'text',\\n              datalist: 'jstyle-display'\\n            },\\n            overflow: {\\n              title: '여백',\\n              type: 'text',\\n              datalist: 'jstyle-overflow',\\n              child: {\\n                overflowX: {\\n                  title: '여백',\\n                  type: 'text',\\n                  datalist: 'jstyle-overflow'\\n                },\\n                overflowY: {\\n                  title: '여백',\\n                  type: 'text',\\n                  datalist: 'jstyle-overflow'\\n                }\\n              }\\n            },\\n            float: {\\n              title: '여백',\\n              type: 'text',\\n              datalist: 'jstyle-float'\\n            },\\n            flex: {\\n              title: '여백',\\n              type: 'group',\\n              child: {\\n                flex: { title: '여백', number: 'text', datalist: 'flex' },\\n                flexDirection: {\\n                  title: '여백',\\n                  number: 'text',\\n                  datalist: 'flex-direction'\\n                },\\n                flexWrap: {\\n                  title: '여백',\\n                  type: 'text',\\n                  datalist: 'flex-wrap'\\n                },\\n                flexGrow: { title: '여백', type: 'text' },\\n                flexShrink: { title: '여백', type: 'text' },\\n                flexFlow: { title: '여백', type: 'text' },\\n                flexBasis: { title: '여백', type: 'text' },\\n                order: { title: '여백', type: 'number' },\\n              }\\n            },\\n            whiteSpace: {\\n              title: '여백',\\n              type: 'text',\\n              datalist: 'jstyle-whiteSpace'\\n            },\\n            textAlign: {\\n              title: '여백',\\n              type: 'text',\\n              datalist: 'jstyle-textAlign'\\n            },\\n            verticalAlign: {\\n              title: '여백',\\n              type: 'text',\\n              datalist: 'jstyle-verticalAlign'\\n            }\\n          }\\n        },\\n        background: {\\n          title: '여백',\\n          type: 'group',\\n          child: {\\n            backgroundColor: {\\n              title: '배경색',\\n              type: 'jcolor'\\n            },\\n            backgroundImage: {\\n              title: '여백',\\n              type: 'url',\\n              child: {\\n                backgroundRepeat: {\\n                  title: '여백',\\n                  type: 'text',\\n                  datalist: 'jstyle-backgroundRepeat'\\n                },\\n                backgroundSize: {\\n                  title: '여백',\\n                  type: 'text',\\n                  datalist: 'jstyle-backgroundSize'\\n                },\\n                backgroundPosition: {\\n                  title: '여백',\\n                  type: 'text',\\n                  datalist: 'jstyle-backgroundPosition'\\n                },\\n                backgroundAttachment: {\\n                  title: '여백',\\n                  type: 'text',\\n                  datalist: 'jstyle-backgroundAttachment'\\n                },\\n                backgroundClip: {\\n                  title: '여백',\\n                  type: 'text',\\n                  datalist: 'jstyle-backgroundClip'\\n                }\\n              }\\n            }\\n          }\\n        },\\n        show: {\\n          title: '여백',\\n          type: 'group',\\n          child: {\\n            visibility: {\\n              title: '여백',\\n              type: 'text',\\n              datalist: 'jstyle-visibility'\\n            },\\n            userSelect: {\\n              title: '여백',\\n              type: 'text',\\n              datalist: 'jstyle-userSelect'\\n            },\\n            pointerEvents: {\\n              title: '여백',\\n              type: 'text',\\n              datalist: 'jstyle-pointerEvents'\\n            },\\n            resize: {\\n              title: '여백',\\n              type: 'text',\\n              datalist: 'jstyle-resize'\\n            },\\n            boxShadow: {\\n              title: '여백',\\n              type: 'text',\\n              datalist: 'jstyle-boxShadow'\\n            },\\n            listStyle: {\\n              title: '여백',\\n              type: 'text',\\n              datalist: 'jstyle-listStyle'\\n            },\\n            transform: {\\n              title: '여백',\\n              type: 'text',\\n              datalist: 'jstyle-transform'\\n            },\\n            filter: {\\n              title: '여백',\\n              type: 'text',\\n              datalist: 'jstyle-filter'\\n            },\\n            opacity: {\\n              title: '여백',\\n              type: 'number',\\n              min: 0,\\n              max: 1,\\n              step: 0.1\\n            },\\n            zIndex: {\\n              title: '여백',\\n              type: 'number'\\n            }\\n          }\\n        }\\n      },\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    let html = \\n      `<input type=\\\"search\\\" method=\\\"findtext\\\" class=\\\"form-control m-b-5\\\" placeholder=\\\"find...\\\">` +\\n      `<ul method=\\\"styleTree\\\" style=\\\"font-size: 10pt\\\"></ul>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ` +\\n      `<datalist id=\\\"jstyle-borderStyle\\\">` +\\n      `<option value=\\\"none\\\">` +\\n      `<option value=\\\"solid\\\">` +\\n      `<option value=\\\"dashed\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-borderRadius\\\">` +\\n      `<option value=\\\"5px\\\">` +\\n      `<option value=\\\"15px 50px 30px 5px\\\">` +\\n      `<option value=\\\"2em 1em 4em / 0.5em 3em;\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-borderCollapse\\\">` +\\n      `<option value=\\\"separate\\\">` +\\n      `<option value=\\\"collapse\\\">` +\\n      `<option value=\\\"inherit\\\">` +\\n      `<option value=\\\"initial\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-borderImage\\\">` +\\n      `<option value=\\\"url(/repository/systemImages/icons/border.png) 30 round\\\">` +\\n      `<option value=\\\"url(/repository/systemImages/icons/border.png) 50 round\\\">` +\\n      `<option value=\\\"url(/repository/systemImages/icons/border.png) 20% round\\\">` +\\n      `<option value=\\\"url(/repository/systemImages/icons/border.png) 30% round\\\">` +\\n      `<option value=\\\"url(/repository/systemImages/icons/border.png) 30 stretch\\\">` +\\n      `<option value=\\\"url(/repository/systemImages/icons/border.png) 20% stretch\\\">` +\\n      `<option value=\\\"url(/repository/systemImages/icons/border.png) 30% stretch\\\">` +\\n      `<option value=\\\"url(/repository/systemImages/icons/border.png) 40% stretch\\\">` +\\n      `<option value=\\\"inherit\\\">` +\\n      `<option value=\\\"initial\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-position\\\">` +\\n      `<option value=\\\"relative\\\">` +\\n      `<option value=\\\"absolute\\\">` +\\n      `<option value=\\\"fixed\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-transform\\\">` +\\n      `<option value=\\\"rotate(20deg)\\\">` +\\n      `<option value=\\\"skewY(20deg)\\\">` +\\n      `<option value=\\\"scaleY(1.5)\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-display\\\">` +\\n      `<option value=\\\"none\\\">` +\\n      `<option value=\\\"block\\\">` +\\n      `<option value=\\\"inline-block\\\">` +\\n      `<option value=\\\"inline-flex\\\">` +\\n      `<option value=\\\"flex\\\">` +\\n      `<option value=\\\"table\\\">` +\\n      `<option value=\\\"table-cell\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-overflow\\\">` +\\n      `<option value=\\\"none\\\">` +\\n      `<option value=\\\"auto\\\">` +\\n      `<option value=\\\"hidden\\\">` +\\n      `<option value=\\\"visible\\\">` +\\n      `<option value=\\\"scroll\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-float\\\">` +\\n      `<option value=\\\"none\\\">` +\\n      `<option value=\\\"left\\\">` +\\n      `<option value=\\\"right\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-textAlign\\\">` +\\n      `<option value=\\\"none\\\">` +\\n      `<option value=\\\"left\\\">` +\\n      `<option value=\\\"right\\\">` +\\n      `<option value=\\\"center\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-verticalAlign\\\">` +\\n      `<option value=\\\"top\\\">` +\\n      `<option value=\\\"middle\\\">` +\\n      `<option value=\\\"bottom\\\">` +\\n      `<option value=\\\"baseline\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-backgroundRepeat\\\">` +\\n      `<option value=\\\"repeat\\\">` +\\n      `<option value=\\\"repeat-y\\\">` +\\n      `<option value=\\\"repeat-y\\\">` +\\n      `<option value=\\\"no-repeat\\\">` +\\n      `<option value=\\\"space\\\">` +\\n      `<option value=\\\"round\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-backgroundSize\\\">` +\\n      `<option value=\\\"auto\\\">` +\\n      `<option value=\\\"300px 100px\\\">` +\\n      `<option value=\\\"100% 100%\\\">` +\\n      `<option value=\\\"cover\\\">` +\\n      `<option value=\\\"contain\\\">` +\\n      `<option value=\\\"contain, cover\\\">` +\\n      `<option value=\\\"inherit\\\">` +\\n      `<option value=\\\"initial\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-backgroundPosition\\\">` +\\n      `<option value=\\\"left top\\\">` +\\n      `<option value=\\\"left center\\\">` +\\n      `<option value=\\\"left bottom\\\">` +\\n      `<option value=\\\"right top\\\">` +\\n      `<option value=\\\"right center\\\">` +\\n      `<option value=\\\"right bottom\\\">` +\\n      `<option value=\\\"center top\\\">` +\\n      `<option value=\\\"center center\\\">` +\\n      `<option value=\\\"center top\\\">` +\\n      `<option value=\\\"center bottom\\\">` +\\n      `<option value=\\\"50% 50%\\\">` +\\n      `<option value=\\\"50px 150px\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-backgroundAttachment\\\">` +\\n      `<option value=\\\"scroll\\\">` +\\n      `<option value=\\\"fixed\\\">` +\\n      `<option value=\\\"local\\\">` +\\n      `<option value=\\\"inherit\\\">` +\\n      `<option value=\\\"initial\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-backgroundClip\\\">` +\\n      `<option value=\\\"border-box\\\">` +\\n      `<option value=\\\"padding-box\\\">` +\\n      `<option value=\\\"content-box\\\">` +\\n      `<option value=\\\"inherit\\\">` +\\n      `<option value=\\\"initial\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-filter\\\">` +\\n      `<option value=\\\"blur(5px)\\\">` +\\n      `<option value=\\\"brightness(200%)\\\">` +\\n      `<option value=\\\"contrast(200%)\\\">` +\\n      `<option value=\\\"drop-shadow(8px 8px 10px gray)\\\">` +\\n      `<option value=\\\"grayscale(100%)\\\">` +\\n      `<option value=\\\"hue-rotate(90deg)\\\">` +\\n      `<option value=\\\"invert(100%)\\\">` +\\n      `<option value=\\\"opacity(30%)\\\">` +\\n      `<option value=\\\"saturate(8)\\\">` +\\n      `<option value=\\\"sepia(100%)\\\">` +\\n      `<option value=\\\"contrast(200%) brightness(150%)\\\">` +\\n      `<option value=\\\"none\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-textDecoration\\\">` +\\n      `<option value=\\\"overline\\\">` +\\n      `<option value=\\\"line-through;\\\">` +\\n      `<option value=\\\"underline\\\">` +\\n      `<option value=\\\"underline overline;\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-textShadow\\\">` +\\n      `<option value=\\\"2px 2px 8px #FF0000\\\">` +\\n      `<option value=\\\"2px 2px 4px #000000\\\">` +\\n      `<option value=\\\"0 0 3px #FF0000\\\">` +\\n      `<option value=\\\"0 0 3px #FF0000, 0 0 5px #0000FF\\\">` +\\n      `<option value=\\\"-10px -10px red\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-textShadow\\\">` +\\n      `<option value=\\\"2px 2px 8px #FF0000\\\">` +\\n      `<option value=\\\"2px 2px 4px #000000\\\">` +\\n      `<option value=\\\"0 0 3px #FF0000\\\">` +\\n      `<option value=\\\"0 0 3px #FF0000, 0 0 5px #0000FF\\\">` +\\n      `<option value=\\\"-10px -10px red\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-textTransform\\\">` +\\n      `<option value=\\\"uppercase\\\">` +\\n      `<option value=\\\"lowercase\\\">` +\\n      `<option value=\\\"capitalize\\\">` +\\n      `<option value=\\\"none\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-visibility\\\">` +\\n      `<option value=\\\"visible\\\">` +\\n      `<option value=\\\"hidden\\\">` +\\n      `<option value=\\\"none\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-userSelect\\\">` +\\n      `<option value=\\\"auto\\\">` +\\n      `<option value=\\\"none\\\">` +\\n      `<option value=\\\"initial\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-pointerEvents\\\">` +\\n      `<option value=\\\"auto\\\">` +\\n      `<option value=\\\"none\\\">` +\\n      `<option value=\\\"initial\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-resize\\\">` +\\n      `<option value=\\\"none\\\">` +\\n      `<option value=\\\"both\\\">` +\\n      `<option value=\\\"horizontal\\\">` +\\n      `<option value=\\\"vertical\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-boxShadow\\\">` +\\n      `<option value=\\\"10px 10px grey\\\">` +\\n      `<option value=\\\"50px 50px grey\\\">` +\\n      `<option value=\\\"20px 20px 10px grey\\\">` +\\n      `<option value=\\\"20px 20px 50px grey\\\">` +\\n      `<option value=\\\"20px 20px 50px 15px grey\\\">` +\\n      `<option value=\\\"20px 20px 20px 10px red\\\">` +\\n      `<option value=\\\"20px 20px 20px 10px blue\\\">` +\\n      `<option value=\\\"20px 20px 50px 10px pink\\\">` +\\n      `<option value=\\\"20px 20px 50px 10px pink inset\\\">` +\\n      `<option value=\\\"initial\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-listStyle\\\">` +\\n      `<option value=\\\"circle\\\">` +\\n      `<option value=\\\"square\\\">` +\\n      `<option value=\\\"upper-roman\\\">` +\\n      `<option value=\\\"lower-alpha\\\">` +\\n      `<option value=\\\"square inside url(/repository/systemImages/icons/1420157478_bullet-red.png)\\\">` +\\n      `<option value=\\\"none\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"jstyle-whiteSpace\\\">` +\\n      `<option value=\\\"none\\\">` +\\n      `<option value=\\\"nowrap\\\">` +\\n      `<option value=\\\"pre\\\">` +\\n      `<option value=\\\"pre-line\\\">` +\\n      `<option value=\\\"pre-wrap\\\">` +\\n      `<option value=\\\"initial\\\">` +\\n      `<option value=\\\"inherit\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"flex\\\">` +\\n      `<option value=\\\"auto\\\">` +\\n      `<option value=\\\"initial\\\">` +\\n      `<option value=\\\"none\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"flex-direction\\\">` +\\n      `<option value=\\\"none\\\">` +\\n      `<option value=\\\"row\\\">` +\\n      `<option value=\\\"column\\\">` +\\n      `<option value=\\\"row-reverse\\\">` +\\n      `<option value=\\\"column-reverse\\\">` +\\n      `</datalist>` +\\n      `<datalist id=\\\"flex-wrap\\\">` +\\n      `<option value=\\\"none\\\">` +\\n      `<option value=\\\"row wrap\\\">` +\\n      `<option value=\\\"column wrap\\\">` +\\n      `<option value=\\\"row-reverse nowrap\\\">` +\\n      `<option value=\\\"column wrap-reverse\\\">` +\\n      `</datalist>`;\\n\\n    this.$empty();\\n    this.innerHTML = html;\\n    this.findtext = this.querySelector(`[method=\\\"findtext\\\"]`);\\n    this.styleTree = this.querySelector(`ul`);\\n\\n    this._renderTree(this.styleTree, this.options.styleJson);\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.oMutationObserver = new MutationObserver(mutations => {\\n      this._setStyle();\\n    });\\n\\n    this.addEventListener('click', e => {});\\n\\n    this.addEventListener('input', e => {\\n      let styleEl = e.target.$closest('[style-name]');\\n\\n      if (styleEl) {\\n        let styleName = styleEl.getAttribute('style-name');\\n\\n        let value = e.target.value;\\n\\n        if (value && styleEl.querySelector('unit')) {\\n          value += styleEl.querySelector('unit').innerText;\\n        }\\n\\n        if (value) {\\n          styleEl.classList.add('usedata');\\n        } else {\\n          styleEl.classList.remove('usedata');\\n        }\\n\\n        this._markUseData();\\n\\n        if (this.selectEl) {\\n          this.selectEl.style[styleName] = value;\\n        }\\n      }\\n    });\\n\\n    this.findtext.addEventListener('input', e => {\\n      let str = e.target.value.toUpperCase();\\n\\n      if (str) {\\n        str = str.toUpperCase();\\n\\n        this.styleTree\\n          .querySelectorAll('li')\\n          .forEach(el => (el.style.display = 'none'));\\n\\n        this.styleTree.querySelectorAll('li').forEach(el => {\\n          if (el.children[0].innerText.toUpperCase().indexOf(str) >= 0) {\\n            Jinja.dom\\n              .parents(el, this, 'li')\\n              .forEach(findEl => (findEl.style.display = 'block'));\\n          }\\n        });\\n      } else {\\n        this.styleTree\\n          .querySelectorAll('li')\\n          .forEach(el => (el.style.display = 'block'));\\n      }\\n    });\\n\\n    this.addEventListener('mousedown', e => {\\n      if (e.target.matches('.attr-label') && !e.ctrlKey) {\\n        e.target.parentElement.parentElement.classList.toggle('collapsed');\\n\\n        if (e.target.children.length) {\\n          e.target.children[0].classList.toggle('fa-caret-right');\\n          e.target.children[0].classList.toggle('fa-caret-down');\\n        }\\n      }\\n\\n      if (e.target.matches('a.unit')) {\\n        let styleEl = e.target.$closest('[style-name]');\\n\\n        if (styleEl.querySelector('unit').innerText != e.target.innerText) {\\n          styleEl.querySelector('unit').innerText = e.target.innerText;\\n\\n          if (this.selectEl && styleEl) {\\n            let styleName = styleEl.getAttribute('style-name');\\n            let input = styleEl.querySelector('input');\\n            let value = input.value + e.target.innerText;\\n\\n            this.selectEl.style[styleName] = value;\\n          }\\n        }\\n      }\\n\\n      if (e.target.matches('.attr-label') && e.ctrlKey) {\\n        e.stopImmediatePropagation();\\n        e.stopPropagation();\\n        e.preventDefault();\\n\\n        const emptyValue = '';\\n        const styleEl = e.target.parentElement;\\n        const styleName = styleEl.getAttribute('style-name');\\n\\n        if (styleName) {\\n          styleEl.classList.remove('usedata');\\n\\n          if (styleEl.querySelector('input').type == 'color') {\\n            styleEl.querySelector('input').value = '#ffffff';\\n          } else {\\n            styleEl.querySelector('input').value = emptyValue;\\n          }\\n\\n          this._markUseData();\\n\\n          if (this.selectEl) {\\n            this.selectEl.style[styleName] = emptyValue;\\n          }\\n        }\\n      }\\n\\n      if (e.target.matches('[type=\\\"url\\\"]+.input-group-btn button')) {\\n        JJModal602.show('ui60.dialog.getImage.uc').then(result => {\\n          let inputEl = e.target.parentElement.previousElementSibling;\\n\\n          inputEl.value = `url(${result[0]})`;\\n          inputEl.dispatchEvent(\\n            new Event('input', {\\n              bubbles: true,\\n              cancelable: true\\n            })\\n          );\\n        });\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 트리를 생성한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {Obejct} - 트리정보\\n   * @example -\\n   */\\n  _renderTree(el, json) {\\n    let keys = Object.keys(json);\\n\\n    keys.forEach(jsonKey => {\\n      let li = this._renderTreeItem(jsonKey, json[jsonKey]);\\n\\n      el.appendChild(li);\\n    });\\n  }\\n\\n  /**\\n   * @desc 트리항목을 생성한다.\\n   * @param {String} - 트리키\\n   * @param {Obejct} - 트리항목정보\\n   * @return {Element} - 트리항목\\n   * @example -\\n   */\\n  _renderTreeItem(key, json) {\\n    let li = document.createElement('li');\\n\\n    li.searchContent = (key + json.title).toUpperCase();\\n\\n    let labelStyle = document.createElement('label');\\n\\n    li.appendChild(labelStyle);\\n\\n    let spanAttrLabel = document.createElement('span');\\n\\n    spanAttrLabel.classList.add('attr-label');\\n    spanAttrLabel.appendChild(document.createTextNode(key));\\n    spanAttrLabel.title = json.title;\\n    labelStyle.appendChild(spanAttrLabel);\\n\\n    if (json.type == 'group') {\\n      labelStyle.classList.add('group');\\n    } else {\\n      labelStyle.setAttribute('style-name', key);\\n\\n      let divInputG = document.createElement('div');\\n\\n      divInputG.classList.add('input-group');\\n\\n      let inputC = document.createElement('input');\\n\\n      inputC.classList.add('form-control');\\n      inputC.type = json.type;\\n\\n      if (json.datalist) {\\n        inputC.setAttribute('list', json.datalist);\\n        inputC.type = 'search';\\n      }\\n      if (json.min != undefined) inputC.setAttribute('min', json.min);\\n      if (json.max != undefined) inputC.setAttribute('max', json.max);\\n      if (json.step != undefined) inputC.setAttribute('step', json.step);\\n\\n      let divGroupB = document.createElement('div');\\n\\n      divGroupB.classList.add('input-group-btn');\\n\\n      let inputGroupBtn = document.createElement('button');\\n\\n      inputGroupBtn.type = 'button';\\n      inputGroupBtn.classList.add('btn');\\n      inputGroupBtn.classList.add('btn-default');\\n\\n      if (json.prefix) {\\n        inputGroupBtn.classList.add('dropdown-toggle');\\n        inputGroupBtn.setAttribute('data-toggle', 'dropdown');\\n        inputGroupBtn.setAttribute('aria-haspopup', 'true');\\n        inputGroupBtn.setAttribute('aria-expanded', 'false');\\n\\n        let unit = document.createElement('unit');\\n\\n        unit.appendChild(document.createTextNode(json.prefix[0]));\\n        inputGroupBtn.appendChild(unit);\\n\\n        let caret = document.createElement('span');\\n\\n        caret.classList.add('caret');\\n\\n        let ulDrop = document.createElement('div');\\n\\n        ulDrop.setAttribute('class', 'dropdown-menu dropdown-menu-right');\\n        ulDrop.setAttribute('aria-labelledby', 'dropdownMenuLink');\\n\\n        json.prefix.forEach(item => {\\n          let itema = document.createElement('a');\\n\\n          itema.setAttribute('class', 'dropdown-item unit');\\n          itema.appendChild(document.createTextNode(item));\\n          ulDrop.appendChild(itema);\\n        });\\n\\n        inputGroupBtn.appendChild(caret);\\n        divGroupB.appendChild(inputGroupBtn);\\n        divGroupB.appendChild(ulDrop);\\n      } else if (json.type == 'text') {\\n        inputGroupBtn.classList.add('dropdown-toggle');\\n        inputGroupBtn.setAttribute('data-toggle', 'dropdown');\\n        inputGroupBtn.setAttribute('aria-haspopup', 'true');\\n        inputGroupBtn.setAttribute('aria-expanded', 'false');\\n        inputGroupBtn.appendChild(document.createTextNode('...'));\\n\\n        let textDrop = document.createElement('textarea');\\n\\n        textDrop.classList.add('dropdown-menu');\\n        textDrop.classList.add('dropdown-menu-right');\\n\\n        divGroupB.appendChild(inputGroupBtn);\\n        divGroupB.appendChild(textDrop);\\n\\n        inputC.setAttribute('data-bind', 'data.' + key);\\n        textDrop.setAttribute('data-bind', 'data.' + key);\\n      } else {\\n        inputGroupBtn.appendChild(document.createTextNode('...'));\\n        divGroupB.appendChild(inputGroupBtn);\\n      }\\n\\n      labelStyle.appendChild(divInputG);\\n      divInputG.appendChild(inputC);\\n      divInputG.appendChild(divGroupB);\\n    }\\n\\n    if (json.child) {\\n      li.classList.add('collapsed');\\n\\n      let iCaret = document.createElement('i');\\n\\n      iCaret.classList.add('fa');\\n      iCaret.classList.add('fa-caret-right');\\n      spanAttrLabel.appendChild(iCaret);\\n\\n      let ulChild = document.createElement('ul');\\n\\n      li.appendChild(ulChild);\\n\\n      this._renderTree(ulChild, json.child);\\n    }\\n\\n    return li;\\n  }\\n\\n  /**\\n   * @desc 스타일을 설정한다.\\n   * @example -\\n   */\\n  _setStyle() {\\n    const sizeunit = ['px', '%', 'pt', 'em'];\\n\\n    let compStyle = {};\\n    let userStyle = {};\\n\\n    if (this.selectEl) {\\n      compStyle = window.getComputedStyle(this.selectEl);\\n      userStyle = this.selectEl.style;\\n    }\\n\\n    this.styleTree.querySelectorAll('[style-name]').forEach(item => {\\n      item.classList.remove('usedata');\\n\\n      let styleName = item.getAttribute('style-name');\\n      let input = item.querySelector('input');\\n      let userValue = userStyle[styleName] || '';\\n\\n      if (item.querySelector('unit')) {\\n        let unit = '';\\n\\n        if (\\n          sizeunit.some(item => {\\n            if (userValue.includes(item)) {\\n              unit = item;\\n\\n              return true;\\n            }\\n          })\\n        ) {\\n          userValue = userValue.replace(unit, '');\\n\\n          item.querySelector('unit').innerText = unit;\\n          input.value = userValue;\\n        } else {\\n          input.value = userValue;\\n        }\\n      } else if (styleName.toLowerCase().endsWith('color')) {\\n        if (userValue && userValue != 'transparent') {\\n          input.value = userValue;\\n        } else {\\n          input.value = userValue;\\n        }\\n      } else {\\n        input.value = userValue;\\n      }\\n\\n      if (userValue) {\\n        item.classList.add('usedata');\\n      }\\n\\n      if (styleName.toLowerCase().endsWith('color')) {\\n        if ((compStyle[styleName] != compStyle[styleName]) != 'transparent') {\\n          input.placeholder = compStyle[styleName];\\n        } else {\\n          input.placeholder = compStyle[styleName];\\n        }\\n      } else {\\n        input.placeholder = compStyle[styleName] || '';\\n      }\\n    });\\n\\n    this._markUseData();\\n  }\\n\\n  /**\\n   * @desc 사용중 데이터를 표시한다.\\n   * @example -\\n   */\\n  _markUseData() {\\n    this.styleTree.querySelectorAll(':scope li').forEach(el => {\\n      if (el.querySelector(':scope > ul')) {\\n        if (el.querySelectorAll(':scope ul .usedata').length) {\\n          el.querySelector('label').classList.add('childdata');\\n        } else {\\n          el.querySelector('label').classList.remove('childdata');\\n        }\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 생성 이벤트 후철리를 실행한다.\\n   * @example -\\n   */\\n  _onCreate() {\\n    this.selectEl = null;\\n  }\\n\\n  /**\\n   * @desc 지정한 노드 엘리먼트를 활성화한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  activeNode(node, isRefresh) {\\n    this.selectEl = null;\\n    this.oMutationObserver.disconnect();\\n\\n    if (node) {\\n      this.selectEl = node;\\n      this.oMutationObserver.observe(this.selectEl, {\\n        attributes: true,\\n        childList: true,\\n        characterData: true\\n      });\\n\\n      if (isRefresh) {\\n        this._setStyle();\\n      }\\n    } else {\\n      this._setStyle();\\n    }\\n  }\\n}\\n\\ncustomElements.define('jj-style', JJStyle);\\n/* ==JJVhtmlEditor.640.class================ */\\n\\n/**\\n * @classdesc VhtmlEditor 컴포넌트관리를 위한 클래스\\n */\\nclass JJVhtmlEditor extends JJElement {\\n\\n  /**\\n   * @desc 기본 옵션값을 반환한다.\\n   * @return {Object} - 기본 옵션값\\n   * @example -\\n   */\\n  _defaultOption() {\\n    return {\\n      noeditTag: ['IMG', 'INPUT', 'SELECT', 'I', 'SVG', 'JJ-HEE'],\\n      histroyMethods: [\\n        'new',\\n        'clear',\\n        'clone',\\n        'delete',\\n        'paste',\\n        'warp',\\n        'unwarp',\\n        'movePrevInner',\\n        'moveNextInner',\\n        'movePrev',\\n        'moveNext',\\n        'alignText',\\n        'changeTag',\\n        'downHeight',\\n        'upHeight',\\n        'drop',\\n        'resizeEnd'\\n      ],\\n      activeHistory: true,\\n      version: '640'\\n    };\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    this.cssUUID = Jinja.global.uuid();\\n\\n    let html = \\n      `<div class='area-tool'>` +\\n      `<div class=\\\"dragBox\\\">` +\\n      `<i class=\\\"fa fa-clone\\\" aria-hidden=\\\"true\\\"></i><t jj-id=\\\"cir\\\" >1</t>개 이동 중` +\\n      `</div>` +\\n      `<div class=\\\"drop-holder\\\"></div>` +\\n      `<jj-resize-box data-is-rotate=false></jj-resize-box>` +\\n      `</div>` +\\n      `<style></style>` +\\n      `<div class='area-editor' uuid=\\\"${this.cssUUID}\\\" tabindex=-1></div>` +\\n      `<div class='area-viewer'></div>`;\\n\\n    this.innerHTML = html;\\n\\n    this.tool = this.querySelector('.area-tool');\\n    this.editor = this.querySelector('.area-editor');\\n    this.viewer = this.querySelector('.area-viewer');\\n    this.editStyle = this.querySelector('style');\\n    this.dragBox = this.querySelector('.dragBox');\\n    this.dropHolder = this.querySelector('.drop-holder');\\n    this.dropHolder.hidden = true;\\n\\n    this.sizeBox = this.querySelector('jj-resize-box');\\n    this.sizeBox.hidden = true;\\n\\n    this.histroyBody = [''];\\n    this.histroyIndex = 1;\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.onAction = {};\\n\\n    this.editor.dispatchEvent(new CustomEvent('loadEditor', { bubbles: true }));\\n\\n    this.editor.addEventListener('mousedown', e => {\\n      if (e.button === 0) {\\n        this._selectItem(e.target);\\n\\n        this.dragEl = this.selectEl;\\n\\n        if (this.dragEl) this.dragEl.setAttribute('draggable', 'true');\\n      } else {\\n        this._selectMark(e.target);\\n      }\\n    });\\n\\n    this.editor.addEventListener('mouseup', e => {\\n      if (this.dragEl) {\\n        this.dragEl.classList.remove('drag-el');\\n        this.dragEl.removeAttribute('draggable');\\n        this.dragEl = null;\\n      }\\n    });\\n\\n    this.editor.addEventListener('dragstart', e => {\\n      if (this.editor.matches(`[contenteditable]`)) return;\\n\\n      e.dataTransfer.setData('text/html', this.dragEl.outerHTML);\\n      e.dataTransfer.setData('apptype', 'vhtml');\\n\\n      this.dragEl.classList.add('drag-el');\\n      this.editor.classList.add('drag');\\n    });\\n\\n    this.editor.addEventListener('dragover', e => {\\n      if (this.editor.matches(`[contenteditable]`)) return;\\n\\n      if (this.dragEl && this.dragEl.contains(e.target)) {\\n        return;\\n      }\\n\\n      e.preventDefault();\\n\\n      if (this.dropEl) {\\n        this.dropEl.classList.remove('dragover');\\n        this.dropEl = null;\\n      }\\n\\n      this.dropEl = e.target;\\n      this.dropEl.classList.add('dragover');\\n      this.dropPosition = this._dropPosition(e, 10);\\n      this._showDropHolder();\\n    });\\n\\n    this.editor.addEventListener('dragleave', e => {\\n      if (this.editor.matches(`[contenteditable]`)) return;\\n      if (this.dropEl) {\\n        this.dropEl.classList.remove('dragover');\\n        this.dropEl = null;\\n      }\\n    });\\n\\n    this.editor.addEventListener('dragend', e => {\\n      if (this.editor.matches(`[contenteditable]`)) return;\\n\\n      this.editor.classList.remove('drag');\\n      this.dropHolder.hidden = true;\\n\\n      if (this.dropEl) {\\n        this.dropEl.classList.remove('dragover');\\n        this.dropEl = null;\\n      }\\n\\n      if (this.dragEl) {\\n        this.dragEl.classList.remove('drag-el');\\n        this.dragEl.removeAttribute('draggable');\\n        this.dragEl = null;\\n      }\\n    });\\n\\n    this.editor.addEventListener('drop', e => {\\n      if (this.editor.matches(`[contenteditable]`)) return;\\n\\n      e.preventDefault();\\n\\n      if (this.dropEl) {\\n        this.dropEl.classList.remove('dragover');\\n      } else {\\n        return;\\n      }\\n\\n      if (this.dragEl) {\\n        this.dragEl.classList.remove('drag-el');\\n        this.dragEl.removeAttribute('draggable');\\n      }\\n\\n      let apptype = e.dataTransfer.getData('apptype');\\n\\n      if (apptype === 'vhtml') {\\n        this.dragEl.classList.remove('drag-el');\\n        this._moveItem(this.dragEl, this.dropEl, this.dropPosition);\\n      } else {\\n        let objType = e.dataTransfer.getData('objType/application');\\n\\n        if (objType) {\\n          if (this.onAction['dropAction']) {\\n            //\\n            // formApp에서 컬럼을 드롭하는 경우 신규 컬럼을 생성하고 프로미스로 리턴하는 경우처리함\\n            let rltHtml = this.onAction['dropAction'](e);\\n            if(typeof(rltHtml)==\\\"string\\\"){\\n            \\tthis._insertAdjacentHTM(rltHtml, this.dropPosition);\\n            } else {\\n              return rltHtml.then(promHtml=>{\\n                this._insertAdjacentHTM(promHtml, this.dropPosition);\\n                this.editor.classList.remove('drag');\\n                this.dropPosition = null;\\n                this.dropHolder.hidden = true;\\n                this.dropEl = null;\\n                this.dragEl = null;\\n                \\n              });\\n            }\\n          }\\n        } else {\\n          let dropHtml = e.dataTransfer.getData('text/html');\\n\\n          if (this.onAction['dropAction']) {\\n            let rltHtml = this.onAction['dropAction'](e);\\n            this._insertAdjacentHTM(rltHtml, this.dropPosition);\\n          } else {\\n            this._insertAdjacentHTM(dropHtml, this.dropPosition);\\n          }\\n        }\\n      }\\n\\n      this.editor.classList.remove('drag');\\n      this.dropPosition = null;\\n      this.dropHolder.hidden = true;\\n      this.dropEl = null;\\n      this.dragEl = null;\\n    });\\n\\n    this.editor.addEventListener('keydown', e => {\\n      let keyMap = Jinja.global.getEventKeyMap(e);\\n\\n      if (e.target.matches(`[contenteditable], [contenteditable] *`)) {\\n        if (keyMap == 'Esc') this._setEditable(false);\\n\\n        return;\\n      }\\n\\n      switch (keyMap) {\\n        case 'Up':\\n          this._selectArrow('prev', e);\\n\\n          break;\\n        case 'Down':\\n          this._selectArrow('next', e);\\n\\n          break;\\n        case 'Left':\\n          this._selectArrow('parent', e);\\n\\n          break;\\n        case 'Right':\\n          this._selectArrow('inner', e);\\n\\n          break;\\n        case 'Shift-Up':\\n          this._moveArrow('prev', e);\\n\\n          break;\\n        case 'Shift-Down':\\n          this._moveArrow('next', e);\\n\\n          break;\\n        case 'Shift-Left':\\n          this._moveArrow('parent', e);\\n\\n          break;\\n        case 'Shift-Right':\\n          this._moveArrow('inner', e);\\n\\n          break;\\n        case 'Ctrl-Up':\\n          this._sizeArrow('decreaseHeight', e);\\n\\n          break;\\n        case 'Ctrl-Down':\\n          this._sizeArrow('increaseHeight', e);\\n\\n          break;\\n        case 'Ctrl-Left':\\n          this._sizeArrow('decreaseWidth', e);\\n\\n          break;\\n        case 'Ctrl-Right':\\n          this._sizeArrow('increaseWidth', e);\\n\\n          break;\\n        case 'Delete':\\n          this._remove();\\n\\n          break;\\n        case 'Ctrl-C':\\n          this._copy(e);\\n\\n          break;\\n        case 'Ctrl-D':\\n          this._clone(e);\\n\\n          break;\\n        case 'Ctrl-X':\\n          this._cut(e);\\n\\n          break;\\n        case 'Ctrl-V':\\n          this._paste(e);\\n\\n          break;\\n        case 'Ctrl-Z':\\n          this._undo();\\n\\n          break;\\n        case 'Ctrl-Y':\\n          this._redo();\\n\\n          break;\\n\\n        case 'F2':\\n          this._setEditable(true);\\n\\n          break;\\n        case 'Esc':\\n          this._setEditable(false);\\n\\n          break;\\n      }\\n    });\\n\\n    this.sizeBox.addEventListener('resize', e => {\\n      if (e.detail.arrow.indexOf('right') >= 0) {\\n        if (this.selectEl.getAttribute('class') \\n            && this.selectEl.getAttribute('class').indexOf('col-') >= 0) {\\n          let lw = this.selectInfo.width + e.detail.x;\\n          let pw = this.selectEl.parentElement.offsetWidth;\\n          let boCss = 'col-md-12';\\n\\n          if ((lw / pw) * 100 <= (100 * 1) / 12) boCss = 'col-md-1';\\n          else if ((lw / pw) * 100 <= (100 * 2) / 12) boCss = 'col-md-2';\\n          else if ((lw / pw) * 100 <= (100 * 3) / 12) boCss = 'col-md-3';\\n          else if ((lw / pw) * 100 <= (100 * 4) / 12) boCss = 'col-md-4';\\n          else if ((lw / pw) * 100 <= (100 * 5) / 12) boCss = 'col-md-5';\\n          else if ((lw / pw) * 100 <= (100 * 6) / 12) boCss = 'col-md-6';\\n          else if ((lw / pw) * 100 <= (100 * 7) / 12) boCss = 'col-md-7';\\n          else if ((lw / pw) * 100 <= (100 * 8) / 12) boCss = 'col-md-8';\\n          else if ((lw / pw) * 100 <= (100 * 9) / 12) boCss = 'col-md-9';\\n          else if ((lw / pw) * 100 <= (100 * 10) / 12) boCss = 'col-md-10';\\n          else if ((lw / pw) * 100 <= (100 * 11) / 12) boCss = 'col-md-11';\\n          else boCss = 'col-md-12';\\n\\n          this.selectEl.classList.remove(\\n            'col-md-1',\\n            'col-md-2',\\n            'col-md-3',\\n            'col-md-4',\\n            'col-md-5',\\n            'col-md-6',\\n            'col-md-7',\\n            'col-md-8',\\n            'col-md-9',\\n            'col-md-10',\\n            'col-md-11',\\n            'col-md-12'\\n          );\\n\\n          this.selectEl.style.width = '';\\n          this.selectEl.classList.add(boCss);\\n          this.sizeBox.lockElement(this.selectEl);\\n        } else {\\n          this.selectEl.style.width = this.selectInfo.width + e.detail.x + 'px';\\n        }\\n      }\\n\\n      if (e.detail.arrow.indexOf('bottom') >= 0) {\\n        this.selectEl.style.height = this.selectInfo.height + e.detail.y + 'px';\\n      }\\n    });\\n\\n    this.sizeBox.addEventListener('resizeEnd', e => {\\n      this._history();\\n    });\\n  }\\n\\n  /**\\n   * @desc 편집모드여부를 설정한다.\\n   * @param {Boolean} - 편집모드여부\\n   * @example -\\n   */\\n  _setEditable(isActive) {\\n    this._clearSelectEl();\\n\\n    if (isActive) {\\n      this.editor.setAttribute('contenteditable', true);\\n    } else {\\n      this.editor.removeAttribute('contenteditable');\\n      this._history();\\n    }\\n  }\\n\\n  /**\\n   * @desc 선택된 엘리먼트 기준으로 지정한 위치의 엘리먼트를 선택한다.\\n   * @param {String} - 위치정보\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _selectArrow(arrow, event) {\\n    let curEl = this.selectEl || this.editor.children[0];\\n    let nextEl;\\n\\n    if (event) event.preventDefault();\\n\\n    switch (arrow) {\\n      case 'prev':\\n        nextEl = curEl.previousElementSibling;\\n\\n        break;\\n      case 'next':\\n        nextEl = curEl.nextElementSibling;\\n\\n        break;\\n      case 'parent':\\n        nextEl = curEl.parentElement;\\n\\n        break;\\n      case 'inner':\\n        nextEl = curEl.firstElementChild;\\n\\n        break;\\n    }\\n\\n    if (nextEl && !Object.is(this.editor, nextEl)) {\\n      this._selectItem(nextEl);\\n    }\\n  }\\n\\n  /**\\n   * @desc 선택된 엘리먼트의 지정한 방향의 크기를 변경한다.\\n   * @param {String} - 위치정보\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _sizeArrow(arrow, event) {\\n    let curEl = this.selectEl || this.editor.children[0];\\n    let h, w;\\n\\n    if (event) event.preventDefault();\\n\\n    switch (arrow) {\\n      case 'decreaseHeight':\\n        h = parseInt((curEl.offsetHeight - 10) / 10) * 10;\\n\\n        curEl.style.height = h + 'px';\\n\\n        break;\\n      case 'increaseHeight':\\n        h = parseInt((curEl.offsetHeight + 10) / 10) * 10;\\n\\n        curEl.style.height = h + 'px';\\n\\n        break;\\n      case 'decreaseWidth':\\n        w = parseInt((curEl.offsetWidth - 10) / 10) * 10;\\n\\n        curEl.style.width = w + 'px';\\n\\n        break;\\n      case 'increaseWidth':\\n        w = parseInt((curEl.offsetWidth + 10) / 10) * 10;\\n\\n        curEl.style.width = w + 'px';\\n\\n        break;\\n    }\\n\\n    this._history();\\n    this._selectItem(curEl);\\n  }\\n\\n  /**\\n   * @desc 선택된 엘리먼트 기준으로 지정한 위치에 선택된 엘리먼트를 복사한다.\\n   * @param {String} - 위치정보\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _moveArrow(arrow, event) {\\n    let curEl = this.selectEl || this.editor.children[0];\\n\\n    if (event) event.preventDefault();\\n\\n    switch (arrow) {\\n      case 'prev':\\n        if (curEl.previousElementSibling) {\\n          curEl.previousElementSibling.before(curEl);\\n        }\\n\\n        break;\\n      case 'next':\\n        if (curEl.nextElementSibling) {\\n          curEl.nextElementSibling.after(curEl);\\n        }\\n\\n        break;\\n      case 'parent':\\n        if (\\n          curEl.parentElement &&\\n          !Object.is(this.editor, curEl.parentElement)\\n        ) {\\n          curEl.parentElement.after(curEl);\\n        }\\n\\n        break;\\n      case 'inner':\\n        if (curEl.previousElementSibling) {\\n          curEl.previousElementSibling.appendChild(curEl);\\n        }\\n\\n        break;\\n    }\\n\\n    this._history();\\n    this._selectItem(curEl);\\n  }\\n\\n  /**\\n   * @desc 선택한 엘리먼트의 선택 이벤트를 처리한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  _selectItem(el) {\\n    this._selectMark(el);\\n\\n    if (this.selectEl) {\\n      this.selectEl.dispatchEvent(\\n        new CustomEvent('selected', { bubbles: true })\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @desc 선택한 Element를 선택표시한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  _selectMark(el) {\\n    if (this.editor.matches(`[contenteditable]`)) return;\\n\\n    if (Object.is(this.editor, el)) {\\n      this._clearSelectEl();\\n      return;\\n    }\\n\\n    this.selectEl = el;\\n    this.sizeBox.lockElement(this.selectEl);\\n    this.sizeBox.hidden = false;\\n\\n    this.selectInfo = {\\n      width: this.selectEl.offsetWidth,\\n      height: this.selectEl.offsetHeight,\\n    };\\n  }\\n\\n  /**\\n   * @desc 선택된 엘리먼트정보를 초기화한다.\\n   * @example -\\n   */\\n  _clearSelectEl() {\\n    this.dragEl = null;\\n    this.dropEl = null;\\n    this.selectEl = null;\\n    this.copyEl = null;\\n    this.sizeBox.hidden = true;\\n    this.dropHolder.hidden = true;\\n    this.editor.removeAttribute('contenteditable');\\n    this.dispatchEvent(new CustomEvent('unselected', { bubbles: true }));\\n  }\\n\\n  /**\\n   * @desc 드랍위치를 반환한다.\\n   * @param {Event} - 이벤트\\n   * @param {Number} - 여백크기\\n   * @return {String} - 드랍위치\\n   * @example -\\n   */\\n  _dropPosition(event, abs) {\\n    let dropPosition = '';\\n\\n    if (!abs) abs = 6;\\n\\n    let x =\\n      this.dropEl.getBoundingClientRect().x -\\n      this.editor.getBoundingClientRect().x;\\n    let y =\\n      this.dropEl.getBoundingClientRect().y -\\n      this.editor.getBoundingClientRect().y;\\n    let h = this.dropEl.offsetHeight;\\n    let w = this.dropEl.offsetWidth;\\n    let h2 = event.clientY - this.dropEl.getBoundingClientRect().y;\\n    let w2 = event.clientX - this.editor.getBoundingClientRect().x - x;\\n    let py = h2 / h;\\n    let px = w2 / w;\\n\\n    if (h2 < abs) {\\n      dropPosition = 'top';\\n    } else if (h - h2 < abs) {\\n      dropPosition = 'bottom';\\n    } else {\\n      dropPosition = 'inner';\\n\\n      if (this.dropEl.classList.contains('group-editor')) {\\n        dropPosition = 'bottom';\\n      } else if (this.dropEl.hasAttribute('data-render')) {\\n        dropPosition = 'bottom';\\n      } else if (this.dropEl.childElementCount) {\\n        this.dropEl.classList.remove('dragover');\\n        this.dropEl = this.dropEl.lastElementChild;\\n        this.dropEl.classList.add('dragover');\\n\\n        dropPosition = 'bottom';\\n      }\\n    }\\n\\n    return dropPosition;\\n  }\\n\\n  /**\\n   * @desc DropHolder를 지정된 위치에 보여준다.\\n   * @example -\\n   */\\n  _showDropHolder() {\\n    let x =\\n      this.dropEl.getBoundingClientRect().x - this.getBoundingClientRect().x;\\n    let y =\\n      this.dropEl.getBoundingClientRect().y -\\n      this.getBoundingClientRect().y +\\n      this.scrollTop;\\n    let w = this.dropEl.offsetWidth;\\n    let h = this.dropEl.offsetHeight;\\n\\n    if (this.dropEl.tagName.toUpperCase() == 'SVG') {\\n      w = this.dropEl.clientWidth;\\n      h = this.dropEl.clientHeight;\\n    }\\n\\n    let h2 = 10;\\n    let pw = this.dropEl.offsetWidth / this.dropEl.offsetWidth;\\n\\n    if (\\n      this.dropPosition == 'top' &&\\n      pw < 0.8 &&\\n      ['left', 'right'].includes(window.getComputedStyle(this.dropEl).float)\\n    )\\n      this.dropPosition = 'left';\\n    if (\\n      this.dropPosition == 'bottom' &&\\n      pw < 0.8 &&\\n      ['left', 'right'].includes(window.getComputedStyle(this.dropEl).float)\\n    )\\n      this.dropPosition = 'right';\\n\\n    if (this.dropPosition == 'top') {\\n      y = y - 12;\\n    } else if (this.dropPosition == 'bottom') {\\n      y = y + this.dropEl.offsetHeight + 2;\\n    } else if (this.dropPosition == 'left') {\\n      x = x - 12;\\n      y = y;\\n      w = 10;\\n      h2 = h;\\n    } else if (this.dropPosition == 'right') {\\n      x = x + w + 2;\\n      y = y;\\n      w = 10;\\n      h2 = h;\\n    } else if (this.dropPosition == 'inner') {\\n      if (this.dropEl.lastChild) {\\n        y = y + h - 20;\\n      } else {\\n        y = y + 10;\\n      }\\n    }\\n\\n    this.dropHolder.style.top = y + 'px';\\n    this.dropHolder.style.left = x + 'px';\\n    this.dropHolder.style.width = w + 'px';\\n    this.dropHolder.style.height = h2 + 'px';\\n\\n    this.dropHolder.setAttribute('position', this.dropPosition);\\n    this.dropHolder.hidden = false;\\n  }\\n\\n  /**\\n   * @desc 지정한 엘리먼트를 이동시킨다.\\n   * @param {Element} - 현재 엘리먼트\\n   * @param {Element} - 대상 엘리먼트\\n   * @param {String} - 위치명\\n   * @example -\\n   */\\n  _moveItem(atEl, toEl, position) {\\n    switch (position) {\\n      case 'top':\\n        toEl.before(atEl);\\n\\n        break;\\n      case 'bottom':\\n        toEl.after(atEl);\\n\\n        break;\\n      case 'inner':\\n        toEl.appendChild(atEl);\\n\\n        break;\\n    }\\n\\n    this._history();\\n    this._selectItem(atEl);\\n  }\\n\\n  /**\\n   * @desc 선택된 엘리먼트 Element의 지정한 위치에 지정한 html을 추가한다.\\n   * @param {String} - 엘리먼트 문자열\\n   * @param {String} - 위치명\\n   * @example -\\n   */\\n  _insertAdjacentHTM(html, position) {\\n    let curEl = this.dropEl || this.editor;\\n\\n    if (Object.is(curEl, this.editor)) {\\n      position = 'inner';\\n    }\\n\\n    let nextEl;\\n\\n    switch (position) {\\n      case 'top':\\n        curEl.insertAdjacentHTML('beforebegin', html);\\n\\n        nextEl = curEl.previousElementSibling;\\n\\n        break;\\n      case 'inner':\\n        curEl.insertAdjacentHTML('beforeend', html);\\n\\n        nextEl = curEl.lastChild;\\n\\n        break;\\n      default:\\n        curEl.insertAdjacentHTML('afterend', html);\\n        nextEl = curEl.nextElementSibling;\\n    }\\n\\n    if (nextEl) {\\n      this._selectItem(nextEl);\\n    }\\n\\n    this._history();\\n  }\\n\\n  append(html){\\n    this.editor.insertAdjacentHTML('beforeend', html);\\n  }\\n  \\n  /**\\n   * @desc 선택된 엘리먼트를 삭제한다.\\n   * @example -\\n   */\\n  _remove() {\\n    let nextEl =\\n      this.selectEl.nextElementSibling ||\\n      this.selectEl.previousElementSibling ||\\n      this.selectEl.parentElement;\\n\\n    this.selectEl.remove();\\n    this._clearSelectEl();\\n    this._history();\\n\\n    if (nextEl && !Object.is(this.editor, nextEl)) {\\n      this._selectItem(nextEl);\\n    }\\n  }\\n\\n  /**\\n   * @desc 선택한 엘리먼트를 클립보드에 저장한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _copy(event) {\\n    if (this.selectEl) {\\n      event.preventDefault();\\n\\n      Jinja.store.clipBoard(this.selectEl.outerHTML);\\n\\n      this.copyEl = this.selectEl;\\n    }\\n  }\\n\\n  /**\\n   * @desc 선택한 엘리먼트를 잘라내어 클립보드에 저장한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _cut(event) {\\n    if (this.selectEl) {\\n      event.preventDefault();\\n\\n      Jinja.store.clipBoard(this.selectEl.outerHTML);\\n\\n      this.copyEl = this.selectEl;\\n      this.selectEl.remove();\\n      this._history();\\n    }\\n  }\\n\\n  /**\\n   * @desc 선택한 엘리먼트를 복사하여 이어붙인다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _clone(event) {\\n    if (this.selectEl) {\\n      event.preventDefault();\\n\\n      let clone = this.selectEl.cloneNode(true);\\n\\n      this.selectEl.after(clone);\\n      this._history();\\n    }\\n  }\\n\\n  /**\\n   * @desc 클립보드에 저장된 내용을 에디터에 붙여넣기 한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _paste(event) {\\n    event.preventDefault();\\n\\n    Jinja.store.clipBoard().then(html => {\\n      if (!html) return;\\n\\n      if (this.selectEl) {\\n        this.selectEl.insertAdjacentHTML('beforeend', html);\\n      } else {\\n        let selObj = this.editor.ownerDocument.getSelection();\\n        let selText = selObj.toString();\\n        let node = selObj.anchorNode;\\n        let bf = selObj.anchorNode.data.substr(0, selObj.anchorOffset);\\n        let ft = selObj.anchorNode.data.substr(selObj.focusOffset);\\n\\n        node.before(document.createTextNode(bf));\\n        node.before(this.copyEl);\\n        node.before(document.createTextNode(ft));\\n        node.remove();\\n      }\\n\\n      this._history();\\n    });\\n  }\\n\\n  /**\\n   * @desc 컴포넌트의 현재상태를 이력에 저장한다.\\n   * @example -\\n   */\\n  _history() {\\n    if (this.options.activeHistory) {\\n      let body = this.editor.innerHTML;\\n\\n      this.histroyBody.splice(this.histroyIndex + 1, this.histroyBody.length);\\n      this.histroyBody.push(body);\\n      this.histroyIndex = this.histroyBody.length - 1;\\n    }\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 이전상태로 변경한다.\\n   * @example -\\n   */\\n  _undo() {\\n    this.editor.$empty();\\n    this.histroyIndex = Math.max(this.histroyIndex - 1, 0);\\n    this.editor.innerHTML = this.histroyBody[this.histroyIndex];\\n    this.editor.dispatchEvent(\\n      new CustomEvent('undo', {\\n        bubbles: true\\n      })\\n    );\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 이후상태로 변경한다.\\n   * @example -\\n   */\\n  _redo() {\\n    this.editor.$empty();\\n    this.histroyIndex = Math.min(\\n      this.histroyIndex + 1,\\n      this.histroyBody.length - 1\\n    );\\n    this.editor.innerHTML = this.histroyBody[this.histroyIndex];\\n    this.editor.dispatchEvent(\\n      new CustomEvent('redo', {\\n        bubbles: true\\n      })\\n    );\\n  }\\n\\n  /**\\n   * @memberof JJVhtmlEditor\\n   * @method get value\\n   * @desc 컴포넌트 Value를 반환한다.\\n   * @return {Array} - 컴포넌트 Value\\n   * @example -\\n   */\\n  get value() {\\n    return this.editor.innerHTML;\\n  }\\n\\n  /**\\n   * @memberof JJVhtmlEditor\\n   * @method set value\\n   * @desc 컴포넌트 Value를 설정한다.\\n   * @param {Object} - 컴포넌트정보\\n   * @example -\\n   */\\n  set value(html) {\\n    this.editor.innerHTML = html;\\n  }\\n\\n  /**\\n   * @desc 선택된 노드를 삭제한다.\\n   * @example -\\n   */\\n  selectNodeRemove() {\\n    this._remove();\\n  }\\n\\n  /**\\n   * @desc 컴포넌트를 초기화시킨다.\\n   * @example -\\n   */\\n  clear() {\\n    this._clearSelectEl();\\n\\n    Jinja.dom.empty(this.editor);\\n    Jinja.dom.empty(this.viewer);\\n\\n    this._history();\\n  }\\n\\n  /**\\n   * @desc 지정한 노드 엘리먼트를 활성화한다.\\n   * @param {Element} - 대상 엘리먼트\\n   * @example -\\n   */\\n  activeNode(node) {\\n    this._selectMark(node);\\n  }\\n\\tselectItem(node){\\n    this._selectItem(node);\\n  }\\n  /**\\n   * @desc 에디터에 파일정보를 설정한다.\\n   * @param {Object} - 파일정보\\n   * @example -\\n   */\\n  setFileBody(body) {\\n    this.clear();\\n    this.editor.innerHTML = body.html;\\n    this.setBodyStyle(body.less);\\n  }\\n\\n  /**\\n   * @desc 지정한 LESS정보를 에디터에 설정한다.\\n   * @param {String} - LESS정보\\n   * @example -\\n   */\\n  setBodyStyle(lessCss) {\\n    less\\n      .render(\\n        `[uuid=\\\"${this.cssUUID}\\\"]{ ${Jinja.lessRuleset || ''} ${\\n          lessCss || ''\\n        } }`\\n      )\\n      .then(output => (this.editStyle.innerText = output.css))\\n      .catch(error => console.error(error));\\n  }\\n\\n  /**\\n   * @desc 편집모드로 전환한다.\\n   * @example -\\n   */\\n  editeMode() {\\n    if (this.viewer.querySelector('jj-form-excute')) {\\n      this.viewer.querySelector('jj-form-excute').$remove();\\n    }\\n\\n    this.classList.remove('excute');\\n  }\\n\\n  /**\\n   * @desc 지정한 파일정보를 뷰어화면 반영한다.\\n   * @param {Object} - 파일정보\\n   * @example -\\n   */\\n  excute(body) {\\n    this.classList.add('excute');\\n\\n    if (this.viewer.querySelector('jj-form-excute')) {\\n      this.viewer.querySelector('jj-form-excute').$remove();\\n    }\\n\\n    let formEl = document.createElement('jj-form-excute');\\n\\n    this.viewer.appendChild(formEl);\\n\\n    formEl.excuteLoad(body);\\n\\n    return formEl;\\n  }\\n\\n  /**\\n   * @desc 이벤트를 처리한다.\\n   * @param {String} - 이벤트명\\n   * @return {Function} - 콜백함수\\n   * @example -\\n   */\\n  on(action, callback) {\\n    this.onAction[action] = callback;\\n  }\\n}\\n\\ncustomElements.define('jj-vhtml-editor', JJVhtmlEditor);\\n/* ==JJBookmark.630.class================ */\\nclass JJBookmark extends JJElement {\\n  get value() {\\n    return this._value;\\n  }\\n\\n  set value(v) {\\n    this._value = v;\\n  }    \\n\\n  _defaultOption() {\\n    return {\\n      \\\"title\\\": \\\"목록\\\",\\n      \\\"class\\\": \\\"xsummary\\\",\\n      \\\"targetSelect\\\": \\\".jj-form\\\",\\n      \\\"itemSelect\\\": \\\".sub-section\\\",\\n      \\\"delayTime\\\": 200,\\n      \\\"autoStart\\\": true,\\n      \\\"version\\\": \\\"620\\\"\\n    };\\n  }  \\n\\n  _render() {\\n    this.classList.add(this.options.class);\\n    \\n    let warp = document.createElement('div');\\n\\n    this.appendChild(warp);\\n\\n    warp.classList.add('bookmark-wrap');\\n    \\n    let _title = document.createElement('h5');\\n\\n    warp.appendChild(_title);\\n\\n    _title.append(document.createTextNode(this.options.title));\\n\\n    this.links = document.createElement('ul');\\n\\n    warp.appendChild(this.links);\\n\\n    this.links.setAttribute(\\\"class\\\", \\\"list-unstyled\\\");\\n\\n    this.containerForm.addEventListener(\\\"formLoad\\\", e => {\\n       this._makeSummary(); \\n    });\\n  }\\n\\n  _setEvent() {\\n    this.addEventListener(\\\"click\\\", e => {\\n      e.preventDefault();\\n \\t    e.stopPropagation();\\n\\n      if (e.target._targetEl) {\\n    \\t\\te.target._targetEl.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'start' });\\n      }\\n    })\\n    \\n  }\\n\\n  _makeSummary(targetEl) {\\n    if (!targetEl) {\\n      targetEl = this.$closest(this.options.targetSelect)\\n    }\\n\\n    if(!targetEl) {\\n      console.info(\\\"jj-bookmark 목록추출 대상이 없습니다\\\");\\n\\n      return ;\\n    } \\n\\n    targetEl.querySelectorAll(this.options.itemSelect).forEach(el=>{\\n      let linkName = el.getAttribute('id');\\n\\n      if (linkName) {\\n        let item = document.createElement('li');\\n        let itemLink = document.createElement('a');\\n        let textContent = el.getAttribute(\\\"bookmark-title\\\") || el.firstElementChild.textContent;\\n\\n        itemLink.setAttribute('href', '#');\\n        itemLink.appendChild(document.createTextNode(textContent));\\n        item.appendChild(itemLink);\\n\\n        itemLink._targetEl = el;\\n\\n        this.links.appendChild(item);\\n      }\\n    })\\n\\n  }\\n}\\n\\ncustomElements.define('jj-bookmark', JJBookmark);\\t\\n/* ==JHRealtimeChart.class================ */\\nclass JHChart extends JJElement {\\n\\n  /** \\n   * html만들기\\n   */\\n  _render() {\\n    // 속성\\n    this.clickCount = 0; \\n    this.MAX_DATA_LENGTH = 20;\\n    this.MAX_DATA_Y = 100;\\n    this.INTERVAL = 100;\\n    this.chartType = \\\"\\\";\\n\\n\\n    let html = `\\n<div class=\\\"left_text\\\" style=\\\"position: absolute; \\\">\\n<div  style=\\\"position: absolute; left:17; top:85; text-align: right;\\\">0</div>\\n<div style=\\\"position: absolute; left:8; top:40; text-align: right;\\\">50</div>\\n<div  style=\\\"position: absolute; left:3; top:-5; text-align: right;\\\">100</div>\\n</div>\\n\\n<div>\\n<div class=\\\"chart\\\">\\n<canvas width=\\\"800\\\" height=\\\"100;\\\"></canvas>\\n<div class=\\\"tootip\\\" jj-id=\\\"tooltip_text\\\"></div>\\n</div>\\n</div>\\n`;\\n\\n    this.innerHTML = html;\\n\\n    this.C = this.querySelector('canvas');\\n    this.CTX = this.C.getContext(\\\"2d\\\");\\n    this.dataSize = 2;\\n    this.colors = [\\\"red\\\", \\\"blue\\\", \\\"green\\\", \\\"yellow\\\"];\\n    this.chartType = \\\"line\\\";\\n\\n    this.CHART_ITEM_WIDTH = this.C.width / this.MAX_DATA_LENGTH;\\n    this.data = [];\\n    this.X =0;\\n    this.t = this.CHART_ITEM_WIDTH; //to control width of X\\n\\n\\n  }\\n\\n  /**\\n   * 이벤트등록\\n   */\\n  _setEvent() {\\n    this.addEventListener(\\\"click\\\", e=>{\\n      this.addData(); \\n    })  \\n\\n    this.C.addEventListener(\\\"mousemove\\\", e=>{\\n      let i = parseInt(e.offsetX / 40);\\n      this.tooltip_text.innerText = this.data[i]||\\\"\\\";\\n      this.tooltip_text.style.left = (e.offsetX+50)+'px';\\n      this.tooltip_text.style.top = e.offsetY+10+'px';\\n    })\\n  }\\n\\n  setOption(key, value){\\n    \\n  }\\n  /*\\n   * 메소드\\n   */\\n  addData(Y){\\n    //      this.clickCount++;\\n    //      this.innerHTML = \\\"김재희\\\"+this.clickCount;\\n    this.data.push(Y);\\n\\n    if(this.data.length > this.MAX_DATA_LENGTH){\\n      this.data.shift();\\n    }\\n    this.data.forEach((item,index)=>{\\n      this.x = index*this.CHART_ITEM_WIDTH+10;\\n    }) \\n\\n    this.smooth(this.data);\\n  }\\n\\n  start(){\\n    this.timer =  setInterval(e=>{\\n\\n      let Y = Math.floor((Math.random() * this.MAX_DATA_Y) );\\n      //let X = Math.floor((Math.random() * this.MAX_DATA_Y) );\\n      //form.addData([X,Y]);\\n      this.addData(Y);\\n    }, this.INTERVAL)    \\n  }\\n  stop(){\\n    clearInterval(this.timer); \\n  }\\n  showChart(type){\\n    this.chartType = type;\\n    if(this.chartType == \\\"line\\\")\\n      this.line(this.data);  \\n    else \\n      this.smooth(this.data);  \\n  }\\n  gradient(a, b) {\\n    return (b.y-a.y)/(b.x-a.x);\\n  }\\n\\n  line(dataArray){\\n\\n    // 영역지우기\\n    this.CTX.clearRect(0, 0, C.width, C.height);\\n\\n    this.CTX.beginPath();\\n\\n    dataArray.forEach((item,index)=>{\\n\\n      this.CTX.lineTo(index*(this.C.width/this.MAX_DATA_LENGTH), 100-item);                                \\n      this.CTX.lineWidth = 2;\\n      this.CTX.stroke();     \\n      this.CTX.font = '10px serif';\\n      this.CTX.fillText(item, index*(this.C.width/this.MAX_DATA_LENGTH), 100-item-5);\\n      this.CTX.beginPath();\\n      this.CTX.arc(index*(this.C.width/this.MAX_DATA_LENGTH), 100-item,2, 0, 2 * Math.PI);      // End point\\n      this.CTX.fill();\\n      this.CTX.strokeStyle = colors[0];\\n    })\\n\\n\\n    this.CTX.beginPath();\\n    this.CTX.strokeStyle = \\\"grey\\\";\\n    this.CTX.moveTo(0,50);\\n    this.CTX.lineTo(800,50);\\n    this.CTX.stroke();\\n  }\\n\\n  smooth(dataArray, f, t) {\\n    //f = 0, will be straight line\\n    //t suppose to be 1, but changing the value can control the smoothness too\\n    if (typeof(f) == 'undefined') f = 0.3;\\n    if (typeof(t) == 'undefined') t = 0.6;\\n\\n    let points = [];\\n    dataArray.forEach((val, index)=>{\\n      points.push({\\n        \\\"x\\\": index * 40,\\n        \\\"y\\\": val\\n      })\\n    })\\n\\n    this.CTX.clearRect(0, 0, this.C.width, this.C.height);\\n\\n    this.CTX.beginPath();\\n    this.CTX.moveTo(points[0].x,this.MAX_DATA_Y- points[0].y);\\n    this.CTX.lineWidth = 2;\\n    this.CTX.strokeStyle = \\\"blue\\\";\\n\\n    let m = 0;\\n    let dx1 = 0;\\n    let dy1 = 0;\\n    let dx2 = 0;\\n    let dy2 = 0;\\n\\n    let preP = points[0];\\n    for (let i = 1; i < points.length; i++) {\\n      var curP = points[i];\\n      let nexP = points[i + 1];\\n      if (nexP) {\\n        m = this.gradient(preP, nexP);\\n        dx2 = (nexP.x - curP.x) * -f;\\n        dy2 = dx2 * m * t;\\n      } else {\\n        dx2 = 0;\\n        dy2 = 0;\\n      }\\n      this.CTX.bezierCurveTo(preP.x - dx1, this.MAX_DATA_Y-preP.y - dy1, curP.x + dx2, this.MAX_DATA_Y-curP.y + dy2, curP.x,this.MAX_DATA_Y-curP.y);\\n      this.CTX.stroke();\\n\\n      this.CTX.beginPath();\\n      this.CTX.arc( curP.x, this.MAX_DATA_Y-curP.y, 2, 0, 2 * Math.PI);      // End point\\n      this.CTX.fill();\\n\\n      this.CTX.font = '10px serif';\\n      this.CTX.fillText(curP.y, curP.x, this.MAX_DATA_Y-curP.y-5);\\n\\n      dx1 = dx2;\\n      dy1 = dy2;\\n      preP = curP;\\n    }\\n    this.CTX.beginPath();\\n    this.CTX.strokeStyle = \\\"grey\\\";\\n    this.CTX.moveTo(0,50);\\n    this.CTX.lineTo(800,50);\\n    this. CTX.stroke();\\n\\n  }\\n\\n}\\ncustomElements.define('jh-chart', JHChart);  \\n/* ==webKitCheck.640.class================ */\\n/* ==HMIComp.710.pkg.deploy================ */\\n/* ==JJHmiDiagram.640.class================ */\\n/**\\n * @classdesc HMI 다이어그램 클래스\\n */\\nclass JJHmiDiagram extends JJElement {\\n\\n  /**\\n   * https://docs.jsplumbtoolkit.com/community/current/index.html\\n   * https://jsplumbtoolkit.com/community\\n   */\\n  \\n  /**\\n   * @desc 추적대상 어튜리뷰트를 설정\\n   * @example -\\n   */   \\n  static get observedAttributes() {\\n    return [\\\"\\\"];\\n  }\\t  \\n\\n\\n  /**\\n   * @desc 기본옵션을 생성\\n   * @example -\\n   */  \\n  _defaultOption(){\\n    return {\\n      \\\"isContextMenu\\\": true,\\n      \\\"require\\\":[\\\"jsplumb.2.12.5\\\"],\\n      \\\"mode\\\": \\\"studio\\\"\\n    }\\n  }\\n\\n  /**\\n   * @desc HTML을 생성\\n   * @example -\\n   */ \\n  _render(){\\n    this.$empty();\\n\\n    if(this.options.mode == \\\"studio\\\"){\\n      this.setAttribute(\\\"tabindex\\\", -1);\\n      this.classList.add(\\\"hmi-editor\\\");\\n      this.sizeBox = document.createElement('jj-resize-box');\\n      this.sizeBox.hidden = true;\\n      this.appendChild(this.sizeBox);\\n    }    \\n\\n    this.requirePromise.then(()=>{\\n      jsPlumb.ready(()=>{\\n        this.instance = jsPlumb.getInstance({\\n          Container: this,\\n          Endpoint: [\\\"Dot\\\", {radius: 5}],\\n          Connector:\\\"StateMachine\\\",\\n          HoverPaintStyle: {stroke: \\\"#1e8151\\\", strokeWidth: 5 },\\n          ConnectionOverlays: [\\n            [ \\\"Arrow\\\", {\\n              location: 1,\\n              id: \\\"arrow\\\",\\n              length: 14,\\n              foldback: 0.8\\n            } ],\\n            //[ \\\"Label\\\", { label: \\\"AppLink\\\", id: \\\"label\\\", cssClass: \\\"aLabel\\\" }]\\n          ]\\n        });\\n\\n        this.instance.registerConnectionType(\\\"basic\\\", { anchor:\\\"Continuous\\\", connector:\\\"StateMachine\\\" });\\n\\n        if(this.options.mode == \\\"studio\\\"){\\n          this.instance.bind(\\\"click\\\", c=>{\\n            this.selectNode(c);\\n          });\\n          // 컨넥션연결을 위한 드래그 시작시\\n          this.instance.bind(\\\"beforeDrag\\\", info=>{\\n            this.sizeBox.hidden = true;\\n          });   \\n          this.instance.bind(\\\"mousedown\\\", info=>{\\n            this.sizeBox.hidden = true;\\n          });   \\n          // 컨넥션 연결시 종료시\\n          this.instance.bind(\\\"connection\\\", info=>{\\n            //info.connection.getOverlay(\\\"label\\\").setLabel(info.connection.id);\\n          });   \\n          this.instance.on(this, \\\"click\\\", \\\".node-collapse\\\", (e)=>{\\n            var g = e.target.parentNode.getAttribute(\\\"group\\\"), \\n                collapsed =  this.instance.hasClass(e.target.parentNode, \\\"collapsed\\\");\\n\\n            this.instance[collapsed ? \\\"removeClass\\\" : \\\"addClass\\\"](e.target.parentNode, \\\"collapsed\\\");\\n            this.instance[collapsed ? \\\"expandGroup\\\" : \\\"collapseGroup\\\"](g);\\n          });\\n        }\\n        //this.innerItemInit();\\n      });\\n\\n    })    \\n\\n  }\\n\\n\\n  /**\\n   * @desc 이벤트를 설정\\n   * @example -\\n   */  \\n  _setEvent(){\\n    this._changeEvent = true;\\n    // 개발관련이벤트는 모드를 파악하여 처리함\\n    if(this.options.mode != \\\"studio\\\") return;\\n\\n    this.addEventListener(\\\"input\\\", e=>{\\n    \\tthis._changeedit();\\n    });\\n    // 다중선택기능은 향후에 검토하기로함    \\n    //     new JJSelector(this, {\\n    //       \\\"item\\\":  \\\".w\\\",\\n    //       \\\"markClass\\\": \\\"mark\\\"\\n    //     });     \\n\\n    this.addEventListener(\\\"paste\\\", e=>{\\n      e.preventDefault();\\n      if(e.clipboardData.files.length) \\t{\\n\\n        Jinja.ajax.imageUpload(e.clipboardData.files)\\n          .then(result=>{\\n          let file = result.rows[0];\\n          //this.newImage(e.offsetX, e.offsetY, file.path+file.fileId);        \\n          this.newHmiElement(e.offsetX, e.offsetY, \\\"jj-hmi-image\\\", {\\n            \\\"imageUri\\\": file.path+file.fileId\\n          });  \\n\\n        });\\n      }\\n    });    \\n\\n    this.addEventListener(\\\"drop\\\", e=>{\\n      e.preventDefault();\\n\\n      let html = e.dataTransfer.getData(\\\"text/html\\\");\\n      let diagramType = e.dataTransfer.getData(\\\"diagram-type\\\");\\n      let dropObject = e.dataTransfer.getData(\\\"objtype/application\\\");\\n      let dropData = e.dataTransfer.getData(\\\"objdata/application\\\");\\n      let hmiElement = e.dataTransfer.getData(\\\"hmi-element\\\");\\n\\n      if (diagramType==\\\"group\\\"){\\n        this.newGroup(e.offsetX, e.offsetY, html);  \\n      } else if(diagramType==\\\"node\\\" && hmiElement) {\\n        this.newHmiElement(e.offsetX, e.offsetY, hmiElement, {});  \\n      } else {\\n        this.newHmiElement(e.offsetX, e.offsetY, \\\"jj-hmi-html\\\", {\\n          \\\"html\\\": html\\n        });  \\n      }\\n    })\\n\\n    this.addEventListener(\\\"dragover\\\", e=>{\\n      e.preventDefault();\\n    });\\n\\n    this.addEventListener(\\\"click\\\", e=>{\\n      //e.preventDefault();\\n      if(e.target.matches(`.w, .w *`)){\\n        this.selectNode(e.target.$closest(`.w`));\\n      } else if(e.target.matches(`.group-container, .group-container *`)){\\n        this.selectNode(e.target.$closest(`.group-container`));\\n      } else if(Object.is(this, e.target)) {\\n        // 빈공간을 선택하면 취소처리함\\n        this.clearSelectNode();\\n      }\\n    });\\n\\n    this.addEventListener(\\\"dblclick\\\", e=>{\\n      if(e.target.matches(`.w, .w *`)){\\n        this.optionNode(e.target.$closest(`.w`));\\n      }\\n    });\\n\\n    this.addEventListener(\\\"keydown\\\", e=>{\\n      let keyMap =  Jinja.global.getEventKeyMap(e);\\n\\n      if ([\\\"Delete\\\",'Up', 'Down', 'Left', 'Right',\\n           'Shift-Up', 'Shift-Down', 'Shift-Left', 'Shift-Right'].includes(keyMap)){\\n          if (this.selectEl){\\n            if (!this.selectEl.hasAttribute(\\\"contentEditable\\\")){\\n        e.preventDefault();\\n        e.stopPropagation();\\n            }\\n          }\\n      }\\n      switch(keyMap){\\n        case \\\"F2\\\":\\n          if (this.selectEl){\\n            if (this.selectEl.hasAttribute(\\\"contentEditable\\\")){\\n              this.selectEl.removeAttribute(\\\"contentEditable\\\");\\n               this.selectEl.classList.remove(\\\"no-move\\\");\\n            } else {\\n               this.selectEl.setAttribute(\\\"contentEditable\\\",\\\"true\\\");\\n              this.selectEl.classList.add(\\\"no-move\\\");\\n              this.selectEl.focus();\\n            }\\n          }\\n          break;\\n        case \\\"Delete\\\":\\n          this.deleteNode(e);\\n          break;\\n        case \\\"Up\\\":\\n        case \\\"Down\\\":\\n        case \\\"Left\\\":\\n        case \\\"Right\\\":\\n          this._keyMove(keyMap);\\n          break;\\n        case \\\"Shift-Up\\\":\\n        case \\\"Shift-Down\\\":\\n        case \\\"Shift-Left\\\":\\n        case \\\"Shift-Right\\\":\\n          this._keyResize(keyMap);\\n          break;\\n\\n        default:\\n          break;\\n\\n      }      \\n    });\\n\\n    this.addEventListener(\\\"resize\\\", e=>{\\n      e.preventDefault();\\n      e.stopPropagation();\\n      this.selectEl.hmiEl.resize();\\n      this.instance.repaintEverything();\\n      this._changeedit();\\n\\n    });\\n\\n    if (this.options.isContextMenu) {\\n      this.addEventListener('contextmenu', this._onContextmenu);\\n      this.addEventListener('jjContextMenuclick', this._onContextClick);\\n    }\\n\\n\\n\\n\\n    //     this.addEventListener(\\\"mousedown\\\", e=>{\\n    //       if(e.button === 0 && !e.target.matches(`jj-resize-box *`)){\\n    //        this.sizeBox.hidden = true;\\n    //       }\\n    //     });\\n\\n  }\\n\\n  /**\\n   * @desc 변경이벤트를 발생시킨다\\n   * @param {el} - 엘러먼트\\n   * @example -\\n   */\\n  _changeedit(el){\\n    if(this._changeEvent){\\n      this.dispatchEvent(\\n        new CustomEvent('changeedit', {\\n          detail: {\\n            mode: \\\"hmi\\\",\\n            el: (el||this.selectEl),\\n          },\\n          bubbles: true\\n        })\\n      );\\n    }\\n  }\\n\\n\\n\\n  /**\\n   * @desc 컨텍스트메뉴 생성 이벤트를 처리한다.\\n   * @param {Object} - 이벤트\\n   * @example -\\n   */\\n  _onContextmenu(event) {\\n    if (event.target.matches(`.w, .w *`)) {\\n      event.preventDefault();\\n      this.selectNode(event.target.$closest(`.w`));\\n\\n      Jinja.context.render(this, event, [\\n        { command: 'copy', label: '복사', icon: 'fa-copy' },\\n        { label: 'divider' },\\n        { command: 'delete', label: '삭제', icon: 'fa-remove' },\\n        { label: 'divider' },\\n        { command: 'info', label: '속성', icon: 'fa-gear' }\\n      ]);\\n    }\\n  }\\n\\n  /**\\n   * @desc 컨텍스트메뉴 클릭 이벤트를 처리한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onContextClick(event) {\\n    /**\\n     * 스튜디오의 탭 컨텍스트가 동작할수 있음\\n     */\\n    event.preventDefault();\\n    event.stopImmediatePropagation(); /* 현재 테그의 이벤트도 중지하고 상위전달도 중지 */\\n    event.stopPropagation(); /* 이벤트 상위전파 취소 */\\n\\n    let contextMenu = event.detail.menu;\\n\\n    switch (contextMenu) {\\n      case 'copy':\\n        this.copyNode();\\n\\n        break;\\n      case 'delete':\\n        this.deleteNode();\\n\\n        break;\\n      case 'info':\\n        this.optionNode();\\n\\n        break;\\n    }\\n  }\\n\\n  /**\\n   * @desc 선택된 노드표시를 제거한다\\n   * @example -\\n   */\\n  clearSelectNode(){\\n    if (this.selectEl){\\n      if (this.selectEl.canvas){\\n        this.selectEl.canvas.classList.remove(\\\"selected\\\");\\n      } \\n      else if(this.selectEl.classList) {\\n        this.selectEl.classList.remove(\\\"selected\\\");\\n      }\\n\\n      this.selectEl = null;\\n\\n    }\\n\\n    this.sizeBox.hidden = true;\\n\\n  }\\n\\n  /**\\n   * @desc 객체에 선택처리를 실시한다\\n   * @example -\\n   */\\n  selectNode(obj, e){\\n\\n\\n    this.clearSelectNode();\\n    this.selectEl = obj;\\n\\n    if (obj.hasAttribute(\\\"contentEditable\\\")){\\n      return;\\n    }   \\n    if(obj.matches('.no-move')) return;\\n\\n\\n    if (obj.canvas){\\n      obj.canvas.classList.add(\\\"selected\\\");\\n    } \\n    else if(obj.classList) {\\n      obj.classList.add(\\\"selected\\\");\\n    }\\n\\n    this.sizeBox.lockElement(this.selectEl);\\n    this.sizeBox.hidden = false;\\n\\n    this.selectEl.dispatchEvent(new CustomEvent('selected', {\\n      \\\"detail\\\": {\\n        \\\"editor\\\": this,\\n        \\\"node\\\": this.selectEl.firstElementChild\\n      },      \\n      bubbles: true\\n    }));      \\n    this.focus();\\n\\n  }\\n\\n  /**\\n   * @desc 선택된 노드객체를 제거한다\\n   * @example -\\n   */  \\n  deleteNode(obj){\\n    if(!this.selectEl){\\n      alert(\\\"선택된 항목이 없습니다\\\");\\n      return;\\n    }\\n\\n     if (this.selectEl.hasAttribute(\\\"contentEditable\\\")) return;\\n       \\n    Jinja.confirm.delete(\\\"Connection delete ?\\\")\\n      .then(()=>{\\n\\n      if (this.selectEl.canvas){\\n        this.instance.deleteConnection(this.selectEl);\\n      } else if(this.selectEl.matches('.group-container')) {\\n        // .w에 연결된 Connection을 먼저 제거한다\\n        var g = this.selectEl.getAttribute(\\\"group\\\");\\n        this.instance.removeGroup(g, true);\\n\\n      } else if(this.selectEl.matches('.w')) {\\n        // .w에 연결된 Connection을 먼저 제거한다\\n        this.instance.getConnections().forEach(conn=>{\\n          if (Object.is(this.selectEl,conn.source) || Object.is(this.selectEl, conn.target)){\\n            this.instance.deleteConnection(conn);\\n          }\\n        });\\n        this.selectEl.remove();\\n      }\\n      this._changeedit();\\n      this.clearSelectNode()\\n    })\\n      .catch(()=>{});\\n  }\\n\\n  /**\\n   * @desc 선택된 노드객체의 옵션을 표시한다\\n   * @example -\\n   */    \\n  optionNode(obj){\\n    if(!this.selectEl){\\n      alert(\\\"선택된 항목이 없습니다\\\");\\n      return;\\n    }\\n    this.selectEl.hmiEl.showOptionForm();\\n  }\\n\\n\\n  /**\\n   * @desc 표시순서 바꾸기\\n   * @example -\\n   */  \\n  zIndex(p){\\n\\n    if(this.selectEl){\\n      let zIndex = parseInt(this.selectEl.style.zIndex||0);\\n\\n      if (p==\\\"up\\\"){\\n        zIndex++;\\n      } else {\\n        zIndex--;\\n      }\\n\\n      this.selectEl.style.zIndex =  zIndex; \\n      this._changeedit();\\n    }\\n  }\\n\\n  /**\\n   * @desc 키보드 이벤트 이동동작을 정의한다\\n   * @param {String} - 방향\\n   * @example -\\n   */    \\n  _keyMove(arrrow){\\n    if(!this.selectEl) return;\\n    if (this.selectEl.hasAttribute(\\\"contentEditable\\\")) return;\\n    switch(arrrow){\\n      case 'Up':\\n        this.selectEl.style.top = `${this.selectEl.offsetTop-1}px`;\\n        break;\\n      case 'Down':\\n        this.selectEl.style.top = `${this.selectEl.offsetTop+1}px`;\\n        break;\\n      case 'Left':\\n        this.selectEl.style.left = `${this.selectEl.offsetLeft-1}px`;\\n        break;\\n      case 'Right':\\n        this.selectEl.style.left = `${this.selectEl.offsetLeft+1}px`;\\n        break;\\n    }\\n    this.instance.repaintEverything();\\n    this.sizeBox.lockElement(this.selectEl);\\n    this._changeedit();\\n\\n  }  \\n\\n  /**\\n   * @desc 키보드 이벤트 크기이동을 정의한다\\n   * @param {String} - 방향\\n   * @example -\\n   */    \\n  _keyResize(arrrow){\\n    if(!this.selectEl) return;\\n     if (this.selectEl.hasAttribute(\\\"contentEditable\\\")) return;\\n    switch(arrrow){\\n      case 'Shift-Up':\\n        this.selectEl.style.height = `${this.selectEl.offsetHeight-1}px`;\\n        break;\\n      case 'Shift-Down':\\n        this.selectEl.style.height = `${this.selectEl.offsetHeight+1}px`;\\n        break;\\n      case 'Shift-Left':\\n        this.selectEl.style.width = `${this.selectEl.offsetWidth-1}px`;\\n        break;\\n      case 'Shift-Right':\\n        this.selectEl.style.width = `${this.selectEl.offsetWidth+1}px`;\\n        break;\\n    }\\n    this.instance.repaintEverything();\\n    this.sizeBox.lockElement(this.selectEl);\\n    this._changeedit();\\n\\n  }  \\n\\n  /**\\n   * @desc 위쪽 정렬을 맞춘다\\n   * @param {String} - 방향\\n   * @example -\\n   */ \\n  align(arrrow){\\n    let top;\\n    this.querySelectorAll(`.w.mark`).forEach((el,index)=>{\\n      top = index?Math.min(top, el.offsetTop):el.offsetTop;\\n    })\\n    this.querySelectorAll(`.w.mark`).forEach((el,index)=>{\\n      el.style.top = top+'px'\\n    })\\n    this._changeedit();\\n  }\\n\\n  /**\\n   * @desc 객체를 이동하지 못하도록 고정한다\\n   * @param {Object} - 노드객체\\n   * @example -\\n   */ \\n  noMove(el){\\n\\t\\tlet terget = el||this.selectEl;\\n    \\n    if(terget){\\n      terget.classList.toggle(\\\"no-move\\\");\\n      if (terget==this.selectEl){\\n      \\tthis.clearSelectNode();\\n      }\\n      this._changeedit();\\n    }\\n  }\\n\\n  /**\\n   * @desc 선택된 노드객체의 이미지를 변경한다\\n   * @example -\\n   */ \\n  changeImage(){\\n    JJFormModal.open(\\\"sysImage.640.uc\\\")\\n      .then(result=>{\\n      \\n      if (this.selectEl.dataset.hmiElement){\\n        this.selectEl.hmiEl.setOptions({\\n          \\\"imageUri\\\": result.srcUrl \\n        })\\n        this._changeedit();\\n      }\\n    })  \\n      .catch(ex=>{});\\n  }\\n\\n//   print(){\\n//     Jinja.global.capture(this)\\n//       .then(img =>{\\n//       JJHee.open(\\\"getCapture.610.uc\\\",{\\n//         \\\"search\\\":{\\n//           \\\"image\\\": img\\n//         },  \\n//         \\\"position\\\": {\\n//           \\\"width\\\": \\\"80%\\\"\\n//         },\\n//         isModal: true,\\n//         isMoveable: true\\n//       })\\n//         .then(result=>{\\n//         //hee.text.value = result.text;\\n//       })\\n//         .catch(ex=>{});\\n//     })\\n//   }\\n\\n  /**\\n   * @desc 지정된 위치에 노드객체를 생성한다\\n   * @param {Int} - X\\n   * @param {Int} - Y\\n   * @param {Object} - hmiElement\\n   * @param {Object} - 생성옵션\\n   * @example -\\n   */ \\n  newHmiElement(x, y, hmiElement, options) {\\n    let id = Jinja.global.uuid(); //jsPlumbUtil.uuid();\\n\\n    let d = document.createElement(\\\"div\\\");  \\n    d.classList.add(\\\"w\\\");\\n    d.setAttribute(\\\"wid\\\", id);\\n    d.style.left = `${x}px`;\\n    d.style.top = `${y}px`;\\n    d.dataset.hmiElement = hmiElement;\\n    d.hmiEl = document.createElement(d.dataset.hmiElement);\\n    d.hmiEl.setOptions(options||{});\\n    d.appendChild(d.hmiEl);\\n\\n    this.instance.getContainer().appendChild(d);\\n\\n\\n\\n    if(d.hmiEl.isEP){\\n      let ep = document.createElement(\\\"div\\\");\\n      ep.classList.add('ep');\\n      d.appendChild(ep);\\n      this.initNode(d);\\n    } else {\\n      new JJMoveable(d, {\\n        handles: ['e', 'n', 's'],\\n        handleEl: '*',\\n        cancelEl: \\\".no-move, .no-move *\\\"\\n      });\\n\\n    }\\n\\n    this._changeedit();\\n\\n    return d;\\n\\n  }    \\n\\n  /**\\n   * @desc 노드객체를 초기화한다\\n   * @param {Object} - hmiElement\\n   * @example -\\n   */ \\n  initNode(el) {\\n\\n    if(this.options.mode == \\\"studio\\\"){\\n      this.instance.draggable(el,{\\n        filter:\\\".no-move, .no-move *  , .resizer, .list-group *,.resizer, .resizer * \\\",\\n        grid:[5,5]\\n      });\\n      this._setMarker(el);\\n    } else {\\n      this._setMarker(el);  \\n    }\\t\\t\\n\\n    return el;\\n  }\\n\\n  /**\\n   * @desc 노드객체를 마크표시한다\\n   * @param {Object} - hmiElement\\n   * @example -\\n   */ \\n  _setMarker(el){\\n    this.instance.makeSource(el, {\\n      filter: \\\".ep\\\",\\n      anchor: \\\"Continuous\\\",\\n      connectorStyle: { stroke: \\\"#5c96bc\\\", strokeWidth: 2, outlineStroke: \\\"transparent\\\", outlineWidth: 4 },\\n      connectionType:\\\"basic\\\",\\n      extract:{\\n        \\\"action\\\":\\\"the-action\\\"\\n      },\\n      maxConnections: 12,\\n      onMaxConnections: (info, e)=>{\\n        alert(\\\"Maximum connections (\\\" + info.maxConnections + \\\") reached\\\");\\n      }\\n    });\\n\\n    this.instance.makeTarget(el, {\\n      dropOptions: { hoverClass: \\\"dragHover\\\" },\\n      anchor: \\\"Continuous\\\",\\n      allowLoopback: true\\n    });\\n\\n  }\\n\\n  /**\\n   * @desc 그룹객체인경우 하위 노드객체를 초기화한다\\n   * @example -\\n   */ \\n  innerItemInit(){\\n    this.querySelectorAll(\\\"[group]\\\").forEach(el=>this.initGroup(el));\\n    this.querySelectorAll(\\\".w\\\").forEach(el=>{\\n      if(!el.matches('[group] .w')){\\n        this.initNode(el)\\n      }\\n    })\\n  }\\n\\n  /**\\n   * @desc Drop된 객체로 이미지를 노드객체를 생서한다\\n   * @param {Object} - Drop Fiels\\n   * @example -\\n   */   \\n  attchImages(files){\\n    for (var i = 0; i < files.length; i++) {\\n      let row = {\\n        \\\"NAME\\\": files[i].name,\\n        \\\"SIZE\\\": files[i].size,\\n        \\\"TYPE\\\": files[i].type,\\n        \\\"URI\\\":\\\"\\\",\\n        \\\"FILEOBJ\\\": files[i]\\n      };\\n\\n      // react로 파일표시됨\\t\\n      let lens = this.options.data.images.push(row);\\n      var reader = new FileReader();\\n      reader.addEventListener(\\\"load\\\", readEvent=>{\\n        this.options.data.images[lens-1].URI = readEvent.target.result;\\n      });\\n      reader.readAsDataURL(files[i]);        \\n    }\\n\\n  }  \\n\\n\\n  /**\\n   * @desc 빈페이지 만들기를 물어본다\\n   * @param {Bool} - 질문여부\\n   * @example -\\n   */  \\n  clear(isConfirm){\\n    if (isConfirm){\\n      this._clear();\\n    } else {\\n      Jinja.confirm.delete(\\\"Diagram All Clear ?\\\")\\n        .then(()=>this._clear())\\n        .catch(()=>{});\\n    }\\t\\n  }\\n  \\n  /**\\n   * @desc 빈페이지로 만든다\\n   * @example -\\n   */  \\n  _clear(){\\n    /**\\n     * 그룹요소를 먼저 제거하고 다음요소를 제거해야 한다\\n     */\\n    this.querySelectorAll(\\\"[group]\\\").forEach(el=>{\\n      var g = el.getAttribute(\\\"group\\\");\\n      this.instance.removeGroup(g, true);\\n    });\\n\\n    //this.instance.clear();\\n    this.instance.deleteEveryConnection();\\n    this.querySelectorAll(\\\".w\\\").forEach(el=>el.remove());\\n\\n    this._changeedit();\\n\\n  }\\n\\n\\n  /**\\n   * @desc 선택된 노드를 복사한다\\n   * @example -\\n   */  \\n  copyNode(){\\n    if(!this.selectEl){\\n      alert(\\\"선택된 항목이 없습니다\\\");\\n      return;\\n    }\\n\\n    let _newNode = this.newHmiElement(this.selectEl.offsetLeft+50,\\n                                      this.selectEl.offsetTop+50, \\n                                      this.selectEl.dataset.hmiElement,\\n                                      this.selectEl.hmiEl.getOptions());\\n\\n\\n    _newNode.setAttribute(\\\"style\\\", this.selectEl.getAttribute('style'));\\n    _newNode.setAttribute(\\\"class\\\", this.selectEl.getAttribute('class'));\\n    _newNode.style.top = (this.selectEl.offsetTop+50)+'px';\\n    _newNode.style.left = (this.selectEl.offsetLeft+50)+'px';\\n\\n    this.selectNode(_newNode);\\n  }\\n\\n\\n  /**\\n   * @desc 노드객체의 정보를 배열로 리턴한다\\n   * @example -\\n   */  \\n  getNodes(){\\n    let nodes = [];\\n    this.querySelectorAll(\\\".w\\\").forEach(el=>{\\n      let node = {\\n        \\\"wid\\\": el.getAttribute(\\\"wid\\\"),\\n        \\\"style\\\": el.getAttribute(\\\"style\\\"),\\n        \\\"position\\\": {\\n          x: el.style.left,\\n          y: el.style.top\\n        },\\n        \\\"hmiElement\\\": el.dataset.hmiElement,\\n        \\\"w\\\": el,\\n        \\\"el\\\": el.hmiEl\\n      };\\n\\n      nodes.push(node);\\n\\n    });    \\n    \\n    return nodes;\\n  }\\n  \\n  /**\\n   * @desc 노드객체의 정보를 JSON으로 리턴한다\\n   * @example -\\n   */  \\n  toJSON(){\\n    let nodes = [];\\n    this.querySelectorAll(\\\".w\\\").forEach(el=>{\\n      let node = {\\n        \\\"wid\\\": el.getAttribute(\\\"wid\\\"),\\n        \\\"style\\\": el.getAttribute(\\\"style\\\"),\\n        \\\"noMove\\\": el.matches('.no-move'),\\n        \\\"position\\\": {\\n          x: el.style.left,\\n          y: el.style.top\\n        },\\n        \\\"hmiElement\\\": el.dataset.hmiElement,\\n        \\\"options\\\": el.hmiEl.getOptions()\\n      };\\n\\n      nodes.push(node);\\n\\n    });    \\n\\n    let connectors = [];\\n    this.instance.getConnections().forEach(conn=>{\\n      connectors.push({\\n        \\\"source\\\": conn.source.getAttribute(\\\"wid\\\"),\\n        \\\"target\\\": conn.target.getAttribute(\\\"wid\\\")\\n      })\\n    });\\n\\n    return {\\n      \\\"nodes\\\": nodes,\\n      \\\"connectors\\\": connectors\\n    }\\n  }\\n\\n  /**\\n   * @desc 노드정보 JSON으로 노드 객체를 만든다\\n   * @example -\\n   */  \\n  fromJSON(jsonData){\\n    return this.requirePromise.then(()=>{\\n      this._changeEvent = false;\\n\\n      this._fromJSON(jsonData);\\n      this._changeEvent = true;\\n\\n    })\\n  }  \\n\\n  _fromJSON(jsonData){\\n    this.clear(true);\\n\\n    let defaultBody = {\\n      \\\"groups\\\": [],\\n      \\\"nodes\\\": [],\\n      \\\"connectors\\\": []\\n    };\\n\\n    let body =  Object.assign(defaultBody, jsonData);\\n\\n    body.nodes.forEach(node=>{\\n      var nodeEl = document.createElement(\\\"div\\\");\\n      nodeEl.className = \\\"w\\\";\\n      nodeEl.setAttribute(\\\"wid\\\", node.wid);\\n      nodeEl.setAttribute(\\\"style\\\", node.style);\\n\\t\\t\\n      if(node.noMove){\\n        nodeEl.classList.add('no-move');\\n      }\\n      \\n      nodeEl.dataset.hmiElement = node.hmiElement;\\n      nodeEl.hmiEl = document.createElement(node.hmiElement);\\n      nodeEl.appendChild(nodeEl.hmiEl);\\n\\n      this.instance.getContainer().appendChild(nodeEl);\\n      nodeEl.hmiEl.setOptions(node.options);\\n\\n      if(nodeEl.hmiEl.isEP){\\n        let ep = document.createElement(\\\"div\\\");\\n        ep.classList.add('ep');\\n        nodeEl.appendChild(ep);\\n        this.initNode(nodeEl);\\n      } else {\\n        new JJMoveable(nodeEl, {\\n          handles: ['e', 'n', 's'],\\n          handleEl: '*',\\n          cancelEl: \\\".no-move, .no-move *\\\"\\n        });\\n\\n      }\\n\\n    })\\n\\n    body.connectors.forEach(conn=>{\\n      this.instance.connect({ \\n        source: this.querySelector(`[wid=\\\"${conn.source}\\\"]`), \\n        target: this.querySelector(`[wid=\\\"${conn.target}\\\"]`), type:\\\"basic\\\" });\\n    });\\n\\n  }\\n\\n}\\n\\ncustomElements.define('jj-hmi-diagram', JJHmiDiagram);\\t/* ==JJHmiIcon.640.class================ */\\n/**\\n * @classdesc HMI 아이콘아이콘 클래스\\n */\\nclass JJHmiIcon extends JJElement {\\n\\n  /**\\n   * @desc 값을 리턴한다\\n   * @example -\\n   */\\n  get value() {\\n    return this._value;\\n  }\\n  /**\\n   * @desc 값을 설정한다\\n   * @example -\\n   */   \\n  set value(v) {\\n    this._value = v;\\n    this._showValue();\\n  }    \\n\\n  /**\\n   * @desc isEP여부를 조회한다\\n   * @example -\\n   */   \\n  get isEP(){\\n    return true;\\n  }\\n\\n  /**\\n   * @desc 기본옵션을 생성\\n   * @example -\\n   */    \\n  _defaultOption() {\\n    return {\\n      \\\"imageUri\\\": \\\"/repository/systemImages/hmi/pan2.svg\\\",\\n      \\\"activeUri\\\": \\\"/repository/systemImages/hmi/etcp.svg\\\",\\n      \\\"name\\\": \\\"이미지\\\",\\n      \\\"class\\\": \\\"hmi-tag\\\",\\n      \\\"actionClass\\\": \\\"\\\",\\n      \\\"filterClass\\\": \\\"\\\",\\n      \\\"commandType\\\": \\\"click\\\",\\n      \\\"moveable\\\": false,\\n      \\\"readonly\\\": true,\\n      \\\"attrUrl\\\":\\\"IconAttr.uc\\\",\\n      \\\"tagId\\\":\\\"\\\",\\n      \\\"tagValue\\\":0,\\n      // 논리,숫자,문자\\n      \\\"valueType\\\":\\\"논리\\\", \\n      \\\"jj-id\\\": \\\"\\\",\\n      \\\"jj-command\\\": \\\"\\\",\\n      \\\"delayTime\\\": 200,\\n      \\\"version\\\": \\\"640\\\"\\n    };\\n  }  \\n\\n  /**\\n   * @desc HTML을 생성\\n   * @example -\\n   */ \\n  _render() {\\n    this.$empty();\\n    this.classList.add('jj-hmi');\\n    this.classList.add(this.options.class);\\n    \\n    this.img = document.createElement('img');\\n    this.appendChild(this.img);\\n    this._showValue();\\n  }  \\n\\n  /**\\n   * @desc 이벤트를 설정\\n   * @example -\\n   */  \\n  _setEvent() {\\n    if(this.options.moveable){\\n      this._oMover = new JJMoveable(this, {\\n        handles: ['e', 'n', 's'],\\n        handleEl: '*'\\n      });\\n    }\\n\\n    this.addEventListener(\\\"click\\\", e => {\\n      if(!this.options.readonly){\\n        if(this.options.commandType == \\\"toggle\\\"){\\n\\t      \\tJinja.hmiSSE.send(this.options.tagId, !this._value);\\n        } else {\\n\\t      \\tJinja.hmiSSE.send(this.options.tagId, this.options.tagValue);\\n        }\\n        \\n      }\\n    })\\n  }  \\n\\n  /**\\n   * @desc value에 맞는 동작을 실행\\n   * @example -\\n   */  \\n  _showValue(){\\n    this.setAttribute('name', this.options.name);\\n    if(this.options.jjId) this.setAttribute('jj-id', this.options.jjId);\\n    if(this.options.jjCommand) this.setAttribute('jj-command', this.options.jjCommand);\\n    \\n    if(this.options.valueType == \\\"논리\\\"){\\n      if (this._value==\\\"0\\\") this._value = 0;\\n      if (this._value==\\\"false\\\") this._value = 0;\\n      \\n      this._value = this._value?1:0;\\n    }\\n    if(this.options.readonly){\\n      this.setAttribute('readonly', 'readonly');\\n    } else {\\n      this.removeAttribute('readonly');\\n    }\\n    \\n    if(this.img){\\n      this.img.setAttribute('class', this.options.class);\\n      \\n\\n      if (!this._value || this._value == \\\"0\\\"  ){\\n        this.img.src = this.options.imageUri;\\n        if(this.options.actionClass)\\n          this.img.classList.remove(this.options.actionClass);\\n        if(this.options.filterClass)\\n          this.img.classList.remove(this.options.filterClass);\\n      } else {\\n        this.img.src = this.options.activeUri;\\n        if(this.options.actionClass)\\n          this.img.classList.add(this.options.actionClass);\\n        if(this.options.filterClass)\\n          this.img.classList.add(this.options.filterClass);\\n      }\\n      \\n      if(this.options.actionClass == \\\"rotate\\\" &&\\n         this.options.valueType == \\\"숫자\\\"){\\n      \\t debugger;\\n        this.img.classList.add(this.options.actionClass);\\n        this.img.style.transform = `rotate(${Math.min(90,this._value) -45}deg)`;        \\n      }\\n      \\n\\t\\t\\t\\n    }\\n  }\\n\\n  /**\\n   * @desc 객체 초기화\\n   * @example -\\n   */    \\n  init(options){\\n    Object.assign(this.options, options);\\n    this._showValue();\\n  }\\n\\n  /**\\n   * @desc 옵션정볼르 리턴한다\\n   * @example -\\n   */    \\n  getOptions(){\\n    return this.options;\\n  }\\n  \\n  /**\\n   * @desc 옵션정보를 설정한다\\n   * @param {Object} - 옵션\\n   * @example -\\n   */    \\n  setOptions(options){\\n    Object.assign(this.options, options);\\n    \\n\\t\\tJinja.hmiSSE.tagGet(this.options.tagId, this);\\n\\n    \\n    this._showValue();\\n    this.dispatchEvent(\\n      new CustomEvent('input', {\\n        detail: {\\n          el: this,\\n        },\\n        bubbles: true\\n      })\\n    );\\n    \\n    return this.options;\\n  }\\n\\n  /**\\n   * @desc 옵션정보 설정폼을 호출한다\\n   * @param {Object} - 옵션\\n   * @example -\\n   */    \\n  showOptionForm(){\\n    JJFormModal.open(this.options.attrUrl, this.options)\\n      .then(options=>this.setOptions(options))\\n      .catch(err=>alert(err));  \\n  }\\n  \\n  /**\\n   * @desc 크기변경 실행동작을 설정한다\\n   * @example -\\n   */     \\n  resize(){\\n   // this._showValue();\\n  }  \\n}\\n\\n\\ncustomElements.define('jj-hmi-icon', JJHmiIcon);\\t\\n/* ==JJHmiDigital.640.class================ */\\n/**\\n * @classdesc HMI 숫자표시기숫자표시기 클래스\\n */ \\nclass JJHmiDigital extends JJHmiIcon {\\n\\n  /**\\n   * @desc 기본옵션을 생성\\n   * @example -\\n   */    \\n  _defaultOption() {\\n    this._value = parseInt(this.innerText)||0; \\n    return {\\n      \\\"name\\\": \\\"숫자게이지\\\",\\n      \\\"class\\\": \\\"hmi-tag\\\",\\n      \\\"moveable\\\": false,\\n      \\\"tagId\\\":\\\"\\\",\\n      \\\"tagValue\\\":\\\"true\\\",\\n      \\\"attrUrl\\\":\\\"IconAttr.uc\\\",\\n      \\\"readonly\\\": true,\\n      \\\"valueType\\\":\\\"논리\\\", \\n      \\n      \\\"step\\\": 0.1,\\n      \\\"jj-id\\\": \\\"\\\",\\n      \\\"jj-command\\\": \\\"\\\",\\n      \\\"intervalTime\\\": 50,\\n      \\\"version\\\": \\\"640\\\"\\n    };\\n  }  \\n\\n  /**\\n   * @desc HTML을 생성\\n   * @example -\\n   */   \\n  _render() {\\n    this.classList.add(this.options.class);\\n\\n    this._showValue();\\n  }  \\n\\n  /**\\n   * @desc 이벤트를 설정\\n   * @example -\\n   */ \\n  _setEvent() {\\n\\n    if(this.options.moveable){\\n      this._oMover = new JJMoveable(this, {\\n        handles: ['e', 'n', 's'],\\n        handleEl: '*'\\n      });\\n    }\\n\\n    this.addEventListener(\\\"click\\\", e => {\\n    })\\n  }  \\n\\n\\n  /**\\n   * @desc value에 맞는 동작을 실행\\n   * @example -\\n   */  \\n  _showValue(){\\n\\n    this.setAttribute('name', this.options.name);\\n\\n    this._value = parseFloat(this._value);\\n    if(this.options.jjId) this.setAttribute('jj-id', this.options.jjId);\\n    if(this.options.jjCommand) this.setAttribute('jj-command', this.options.jjCommand);\\n\\n    let _val = 0;\\n    let _class=\\\"\\\";\\n\\n    if(this.options.class) _class += this.options.class+\\\" \\\";\\n\\n    if(this.options.fontSizeClass) _class += this.options.fontSizeClass+\\\" \\\";\\n    if(this.options.fontClass) _class += this.options.fontClass+\\\" \\\";\\n    this.setAttribute('class', _class);\\n\\n    if(this.options.readonly){\\n      this.setAttribute('readonly', 'readonly');\\n    } else {\\n      this.removeAttribute('readonly');\\n    }\\n    \\n    this.innerText = _val;\\n    let tm1 = setInterval(e=>{\\n      //_val += parseInt((this._value * this.options.step));\\n      _val += parseInt((this._value * 0.1));\\n      this.innerText = _val.$toIntFormat();\\n      if(_val >= this._value){\\n        this.innerText = this._value.$toIntFormat();\\n        clearInterval(tm1)\\n      }\\n    }, 100);\\n    //    }, this.options.intervalTime);\\n\\n  }\\n\\n\\n}\\n\\n\\ncustomElements.define('jj-hmi-digital', JJHmiDigital);\\t\\n/* ==JJHmiPad.640.class================ */\\n/**\\n * @classdesc HMI Pad 클래스\\n */\\nclass JJHmiPad extends JJHmiIcon {\\n\\n  /**\\n   * @desc 기본옵션을 생성\\n   * @example -\\n   */    \\n  _defaultOption() {\\n    this._value = { \\\"x\\\": 0, \\\"y\\\":0};\\n    return {\\n      \\\"name\\\": \\\"패드\\\",\\n      \\\"class\\\": \\\"hmi-tag\\\",\\n      \\\"attrUrl\\\":\\\"IconAttr.uc\\\",\\n      \\\"tagId\\\":\\\"\\\",\\n      \\\"tagValue\\\":12345,\\n      \\\"readonly\\\": false,\\n      \\\"jj-id\\\": \\\"\\\",\\n      \\\"jj-command\\\": \\\"\\\",\\n      \\\"pointerClass\\\": \\\"fa-bug\\\",\\n      \\\"intervalTime\\\": 10,\\n      \\\"version\\\": \\\"640\\\"\\n    };\\n  }  \\n\\n  /**\\n   * @desc HTML을 생성\\n   * @example -\\n   */ \\n  _render() {\\n    this.classList.add(this.options.class);\\n      \\n    let html = `\\n<table >\\n<tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\\n<tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\\n<tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\\n<tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\\n<tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\\n<tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\\n<tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\\n<tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\\n<tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\\n<tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\\n</table>\\n<i class=\\\"fa ${this.options.pointerClass} slider-pointer \\\" aria-hidden=\\\"true\\\"></i>\\n`;\\n    this.innerHTML = html;\\n    this.pointer = this.querySelector(`.slider-pointer`);   \\n    this._showValue();\\n  }  \\n\\n\\n  /**\\n   * @desc 이벤트를 설정\\n   * @example -\\n   */  \\n  _setEvent() {\\n\\n    if(!this.options.readonly){\\n      \\n      new JJMoveable(this.pointer, {\\n        handles: ['e', 'n', 's'],\\n        handleEl: '*'\\n      });\\n      \\n\\t\\t\\tthis.timer;\\n      \\n      this.pointer.addEventListener(\\\"JJMoveable.move\\\", e=>{\\n        if(this.timer) {\\n          clearTimeout(this.timer);\\n          this.timer = null;\\n        }\\n        this.timer = setTimeout(()=>{\\n          this.pointer.left = e.detail.elLeft+'px';\\n          this.pointer.top = e.detail.elTop+'px';\\n          this._value = e.detail.value;\\n          Jinja.hmiSSE.send(this.options.tagId, this._value);\\n          this.dispatchEvent( new CustomEvent('input', {\\n              detail: {\\n                \\\"value\\\": this._value,\\n                \\\"inner\\\": e\\n              },\\n              bubbles: true      \\n          }));\\n          clearTimeout(this.timer);\\n          this.timer = null;\\n        }, this.options.intervalTime)\\n        \\n      })\\n\\n      this.addEventListener(\\\"click\\\", e => {\\n      })\\n    }\\n  }  \\n\\n\\n  /**\\n   * @desc value에 맞는 동작을 실행\\n   * @example -\\n   */  \\n  _showValue(){\\n    this.setAttribute('name', this.options.name);\\n\\n    if(this.options.readonly && this.pointer){\\n      this.pointer.style.left = parseInt((this.offsetWidth-this.pointer.offsetWidth) * (this._value.x/100))+'px';\\n      this.pointer.style.top = parseInt((this.offsetHeight-this.pointer.offsetHeight) * (this._value.y/100))+'px';\\n    }\\n  }\\n\\n \\n\\n}\\n\\n\\ncustomElements.define('jj-hmi-pad', JJHmiPad);\\t\\n/* ==JJHmiDevice.640.class================ */\\n/**\\n * @classdesc HMI ICON 클래스\\n */\\nclass JJHmiDevice extends JJHmiIcon {\\n \\n  /**\\n   * @desc 기본옵션을 생성\\n   * @example -\\n   */  \\n  _defaultOption() {\\n    return {\\n      \\\"imageUri\\\": \\\"/repository/systemImages/hmi/aircon1.svg\\\",\\n      \\\"activeUri\\\": \\\"/repository/systemImages/hmi/aircon3.svg\\\",\\n      \\\"title\\\": \\\"목록\\\",\\n      \\\"class\\\": \\\"hmi-tag\\\",\\n      \\\"moveable\\\": false,\\n      \\\"tagId\\\":\\\"\\\",\\n      \\\"delayTime\\\": 200,\\n      \\\"version\\\": \\\"640\\\"\\n    };\\n  }  \\n\\n  /**\\n   * @desc HTML을 생성\\n   * @example -\\n   */  \\n  _render() {\\n    this.$empty();\\n    this.classList.add('jj-hmi');\\n    this.classList.add(this.options.class);\\n\\n    this.img = document.createElement('img');\\n    this.appendChild(this.img);\\n    this._showValue();\\n  }  \\n\\n\\n  /**\\n   * @desc 이벤트를 설정\\n   * @example -\\n   */  \\n  _setEvent() {\\n\\n    if(this.options.moveable){\\n      this._oMover = new JJMoveable(this, {\\n        handles: ['e', 'n', 's'],\\n        handleEl: '*'\\n      });\\n    }\\n\\n    this.addEventListener(\\\"click\\\", e => {\\n    })\\n  }  \\n\\n  /**\\n   * @desc value에 맞는 동작을 실행\\n   * @example -\\n   */  \\n  _showValue(){\\n    if(this.img){\\n      if (this._value){\\n        this.img.src = this.options.activeUri;\\n      } else {\\n        this.img.src = this.options.imageUri;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 객체 초기화\\n   * @example -\\n   */  \\n  init(options){\\n    Object.assign(this.options, options);\\n    this._showValue();\\n  }\\n\\n\\n\\n}\\n\\n\\ncustomElements.define('jj-hmi-device', JJHmiDevice);\\t\\n/* ==JJHmiImage.640.class================ */\\n/**\\n * @classdesc HMI 이미지이미지 클래스\\n */\\nclass JJHmiImage extends JJHmiIcon {\\n\\n  /**\\n   * @desc isEP여부를 조회한다\\n   * @example -\\n   */   \\n  get isEP(){\\n    return false;\\n  }\\n  \\n  /**\\n   * @desc 기본옵션을 생성\\n   * @example -\\n   */    \\n  _defaultOption() {\\n    return {\\n      \\\"imageUri\\\": \\\"/repository/systemImages/plant/p4.png\\\",\\n      \\\"class\\\": \\\"hmi-tag\\\",\\n      \\\"moveable\\\": false,\\n      \\\"tagId\\\":\\\"\\\",\\n      \\\"version\\\": \\\"640\\\"\\n    };\\n  }  \\n  \\n  /**\\n   * @desc HTML을 생성\\n   * @example -\\n   */ \\n  _render() {\\n    this.$empty();\\n    this.classList.add(this.options.class);\\n    this.classList.add('jj-hmi');\\n\\t\\n    this._showValue();\\n  }  \\n\\n  \\n  /**\\n   * @desc 이벤트를 설정\\n   * @example -\\n   */  \\n  _setEvent() {\\n    \\n\\t\\tif(this.options.moveable){\\n      this._oMover = new JJMoveable(this, {\\n        handles: ['e', 'n', 's'],\\n        handleEl: '*'\\n      });\\n    }\\n\\n    \\n    this.addEventListener(\\\"click\\\", e => {\\n    })\\n  }  \\n  \\n  /**\\n   * @desc value에 맞는 동작을 실행\\n   * @example -\\n   */  \\n  _showValue(){\\n    this.style.backgroundImage=`url(\\\"${this.options.imageUri}\\\")`;\\n  }\\n  \\n  /**\\n   * @desc 객체 초기화\\n   * @example -\\n   */    \\n  init(options){\\n    Object.assign(this.options, options);\\n    this._showValue();\\n  }\\n \\n  /**\\n   * @desc 옵션정볼르 리턴한다\\n   * @example -\\n   */    \\n  getOptions(){\\n    return this.options;\\n  }\\n  \\n  /**\\n   * @desc 옵션정보를 설정한다\\n   * @param {Object} - 옵션\\n   * @example -\\n   */    \\n  setOptions(options){\\n    Object.assign(this.options, options);\\n  \\tthis._showValue();\\n    return this.options;\\n  }\\n  \\n  \\n  \\n}\\n\\n\\ncustomElements.define('jj-hmi-image', JJHmiImage);\\t\\n/* ==JJHmiHtml.640.class================ */\\n/**\\n * @classdesc HMI 일반 HTML을 랜더링하기 위한 컴포넌트\\n */\\nclass JJHmiHtml extends JJHmiIcon {\\n\\n  /**\\n   * @desc 기본옵션을 생성\\n   * @example -\\n   */      \\n  _defaultOption() {\\n    return {\\n      \\\"class\\\": \\\"hmi-tag\\\",\\n      \\\"html\\\": \\\"<label>Html을 넣으세요</label>\\\",\\n      \\\"moveable\\\": false,\\n      \\\"tagId\\\":\\\"\\\",\\n      \\\"version\\\": \\\"640\\\"\\n    };\\n  }  \\n\\n  /**\\n   * @desc HTML을 생성\\n   * @example -\\n   */   \\n  _render() {\\n    this.$empty();\\n    this.classList.add(this.options.class);\\n    this.classList.add('jj-hmi');\\n\\t\\n    this._showValue();\\n  }  \\n\\n  \\n  /**\\n   * @desc 이벤트를 설정\\n   * @example -\\n   */ \\n  _setEvent() {\\n    \\n\\t\\tif(this.options.moveable){\\n      this._oMover = new JJMoveable(this, {\\n        handles: ['e', 'n', 's'],\\n        handleEl: '*'\\n      });\\n    }\\n\\n    \\n    this.addEventListener(\\\"click\\\", e => {\\n    })\\n  }  \\n  \\n  /**\\n   * @desc value에 맞는 동작을 실행\\n   * @example -\\n   */  \\n  _showValue(){\\n    this.$empty();\\n    this.innerHTML = this.options.html;\\n  }\\n\\n  /**\\n   * @desc 객체 초기화\\n   * @example -\\n   */    \\n  init(options){\\n    Object.assign(this.options, options);\\n    this._showValue();\\n  }\\n\\n  /**\\n   * @desc 옵션정볼르 리턴한다\\n   * @example -\\n   */   \\n  getOptions(options){\\n    return this.options;\\n  }\\n  \\n  /**\\n   * @desc 옵션정보를 설정한다\\n   * @param {Object} - 옵션\\n   * @example -\\n   */   \\n  setOptions(options){\\n    Object.assign(this.options, options);\\n  \\tthis._showValue();\\n    return this.options;\\n  }\\n  \\n}\\n\\n\\ncustomElements.define('jj-hmi-html', JJHmiHtml);\\t\\n/* ==JJHmiLine.640.class================ */\\n/**\\n * @classdesc HMI 선그리기선그리기 클래스\\n */\\nclass JJHmiLine extends JJHmiIcon {\\n  \\n  /**\\n   * @desc isEP여부를 조회한다\\n   * @example -\\n   */   \\n  get isEP(){\\n    return false;\\n  }  \\n  \\n  /**\\n   * @desc 기본옵션을 생성\\n   * @example -\\n   */    \\n  _defaultOption() {\\n    return {\\n      \\\"class\\\": \\\"hmi-tag\\\",\\n      \\\"lineClass\\\": \\\"bg-info\\\",\\n      \\\"moveable\\\": false,\\n      \\\"tagId\\\":\\\"\\\",\\n      \\\"version\\\": \\\"640\\\"\\n    };\\n  }  \\n  \\n  /**\\n   * @desc HTML을 생성\\n   * @example -\\n   */ \\n  _render() {\\n    this.$empty();\\n    this.classList.add(this.options.class);\\n    this.classList.add('jj-hmi');\\n\\t\\n    this._showValue();\\n  }  \\n\\n  \\n  /**\\n   * @desc 이벤트를 설정\\n   * @example -\\n   */  \\n  _setEvent() {\\n    \\n\\t\\tif(this.options.moveable){\\n      this._oMover = new JJMoveable(this, {\\n        handles: ['e', 'n', 's'],\\n        handleEl: '*'\\n      });\\n    }\\n    \\n    this.addEventListener(\\\"click\\\", e => {\\n    })\\n  }  \\n  \\n  /**\\n   * @desc value에 맞는 동작을 실행\\n   * @example -\\n   */  \\n  _showValue(){\\n    this.$empty();\\n    this.classList.add(this.options.lineClass);\\n  }\\n  \\n  /**\\n   * @desc 객체 초기화\\n   * @example -\\n   */    \\n  init(options){\\n    Object.assign(this.options, options);\\n    this._showValue();\\n  }\\n\\n}\\n\\n\\ncustomElements.define('jj-hmi-line', JJHmiLine);\\t\\n/* ==JJHmiRealChart.640.class================ */\\n/**\\n * @classdesc HMI 실시간 차트 클래스\\n */\\nclass JJHmiRealChart extends JJHmiIcon {\\n\\n  /**\\n   * @desc 기본옵션을 생성\\n   * @example -\\n   */    \\n  _defaultOption() {\\n    return {\\n      \\\"name\\\": \\\"실시간차트\\\",\\n      \\\"class\\\": \\\"hmi-tag\\\",\\n      \\\"html\\\": \\\"<label>Html을 넣으세요</label>\\\",\\n      \\\"moveable\\\": false,\\n      \\\"colors\\\": [\\\"red\\\", \\\"blue\\\", \\\"green\\\", \\\"yellow\\\"],\\n      \\\"attrUrl\\\":\\\"IconAttr.uc\\\",\\n      \\\"tagId\\\":\\\"\\\",\\n      \\\"tagValue\\\":12345,\\n      \\\"maxDataLength\\\": 50,\\n      \\\"version\\\": \\\"640\\\"\\n    };\\n  }  \\n\\n  /**\\n   * @desc HTML을 생성\\n   * @example -\\n   */ \\n  _render() {\\n    this.$empty();\\n    this.chartData = [];\\n\\n    this.classList.add(this.options.class);\\n    this.canvas = document.createElement('canvas');\\n    this.canvas.setAttribute(\\\"width\\\", this.offsetWidth);\\n    this.canvas.setAttribute(\\\"height\\\", this.offsetHeight);\\n    this.appendChild(this.canvas);\\n    this._showDemo();\\n  }  \\n\\n\\n  /**\\n   * @desc 이벤트를 설정\\n   * @example -\\n   */  \\n  _setEvent() {\\n    if(this.options.moveable){\\n      this._oMover = new JJMoveable(this, {\\n        handles: ['e', 'n', 's'],\\n        handleEl: '*'\\n      });\\n    }\\n\\n    this.addEventListener(\\\"click\\\", e => {\\n    })\\n  }  \\n\\n  /**\\n   * @desc value에 맞는 동작을 실행\\n   * @example -\\n   */  \\n  _showValue(){\\n    this.setAttribute('name', this.options.name);\\n    \\n    if(this.canvas && this._value){\\n\\t    this.chartData.push([this._value.x,this._value.y]);\\n      this.canvas.setAttribute(\\\"width\\\", this.offsetWidth);\\n      this.canvas.setAttribute(\\\"height\\\", this.offsetHeight);\\n      var ctx = this.canvas.getContext(\\\"2d\\\");\\n      ctx.clearRect(0, 0, this.offsetWidth, this.offsetHeight);\\n      let dataSize = this.chartData[0].length;\\n      if(this.chartData.length > this.options.maxDataLength){\\n        this.chartData.shift();\\n      }\\n      \\n      for (let i=0; i<dataSize; i++){\\n        ctx.beginPath();\\n        this.chartData.forEach((item,index)=>{\\n          ctx.lineTo(index*(this.offsetWidth/this.options.maxDataLength), (100-item[i]) * (this.offsetHeight) * 0.01);  \\n          ctx.lineWidth = 1;\\n          ctx.stroke();     \\n          ctx.strokeStyle = this.options.colors[i];\\n        })\\n      }\\n    }\\n  }\\n\\n  /**\\n   * 이미지 토글에 의한 동작\\n   */\\n  _showDemo(){\\n//     this.setAttribute('name', this.options.name);\\n    \\n//     if(this.canvas){\\n//       this.canvas.setAttribute(\\\"width\\\", this.offsetWidth);\\n//       this.canvas.setAttribute(\\\"height\\\", this.offsetHeight);\\n//       var ctx = this.canvas.getContext(\\\"2d\\\");\\n//       ctx.clearRect(0, 0, this.offsetWidth, this.offsetHeight);\\n//       let data = [\\n//         [\\n//           84,\\n//           40\\n//         ],\\n//         [\\n//           48,\\n//           83\\n//         ],\\n//         [\\n//           92,\\n//           98\\n//         ],\\n//         [\\n//           59,\\n//           71\\n//         ],\\n//         [\\n//           58,\\n//           64\\n//         ],\\n//         [\\n//           53,\\n//           98\\n//         ],\\n//         [\\n//           76,\\n//           91\\n//         ],\\n//         [\\n//           93,\\n//           62\\n//         ],\\n//         [\\n//           68,\\n//           66\\n//         ],\\n//         [\\n//           57,\\n//           79\\n//         ],\\n//         [\\n//           40,\\n//           52\\n//         ],\\n//         [\\n//           79,\\n//           59\\n//         ],\\n//         [\\n//           86,\\n//           41\\n//         ],\\n//         [\\n//           82,\\n//           42\\n//         ],\\n//         [\\n//           76,\\n//           73\\n//         ]\\n//       ];\\n      \\n//       let dataSize = data[0].length;\\n// \\t\\t\\tlet maxDataLength = data.length;\\n      \\n//       for (let i=0; i<dataSize; i++){\\n//         ctx.beginPath();\\n//         data.forEach((item,index)=>{\\n//           ctx.lineTo(index*(this.offsetWidth/maxDataLength), (100-item[i]) * (this.offsetHeight) * 0.01);  \\n//           ctx.lineWidth = 1;\\n//           ctx.stroke();     \\n//           ctx.strokeStyle = this.options.colors[i];\\n//         })\\n//       }\\n//     }\\n  }\\n  \\n\\n  /**\\n   * @desc 옵션정보를 설정한다\\n   * @param {Object} - 옵션\\n   * @example -\\n   */    \\n  setOptions(options){\\n    Object.assign(this.options, options);\\n    \\n\\t\\tJinja.hmiSSE.tagGet(this.options.tagId, this);\\n\\n    \\n    this._showValue();\\n    this.dispatchEvent(\\n      new CustomEvent('input', {\\n        detail: {\\n          el: this,\\n        },\\n        bubbles: true\\n      })\\n    );\\n    \\n    return this.options;\\n  }\\n  \\n  /**\\n   * @desc 크기변경 실행동작을 설정한다\\n   * @example -\\n   */     \\n  resize(){\\n    this._showValue();\\n  }\\n}\\n\\n\\ncustomElements.define('jj-real-chart', JJHmiRealChart);\\t\\n/* ==JJHmiDial.640.class================ */\\n/**\\n * @classdesc HMI 다이얼 클래스\\n */\\nclass JJHmiDial extends JJElement {\\n\\n  /**\\n   * @desc 값을 리턴한다\\n   * @example -\\n   */   \\n  get value() {\\n    return this.rotate.value;\\n  }\\n\\n  /**\\n   * @desc 값을 설정한다\\n   * @example -\\n   */   \\n  set value(v) {\\n    if(this.options.readonly){\\n      this._value = v;\\n      this._showValue();\\n    }\\n  }    \\n\\n  /**\\n   * @desc isEP여부를 조회한다\\n   * @example -\\n   */   \\n  get isEP(){\\n    return true;\\n  }\\n\\n  /**\\n   * @desc 기본옵션을 생성\\n   * @example -\\n   */    \\n  _defaultOption() {\\n    this._value = 0;\\n    return {\\n      \\\"imageUri\\\": \\\"\\\",\\n      \\\"activeUri\\\": \\\"\\\",\\n      \\\"name\\\": \\\"다이얼\\\",\\n      \\\"class\\\": \\\"hmi-tag\\\",\\n      \\\"actionClass\\\": \\\"\\\",\\n      \\\"filterClass\\\": \\\"\\\",\\n      \\\"commandType\\\": \\\"click\\\",\\n      \\\"moveable\\\": false,\\n      \\\"readonly\\\": true,\\n      \\\"attrUrl\\\":\\\"IconAttr.uc\\\",\\n      \\\"tagId\\\":\\\"\\\",\\n      \\\"tagValue\\\":0,\\n      // 논리,숫자,문자\\n      \\\"valueType\\\":\\\"논리\\\", \\n      \\\"jj-id\\\": \\\"\\\",\\n      \\\"jj-command\\\": \\\"\\\",\\n      \\\"delayTime\\\": 200,\\n      \\\"version\\\": \\\"640\\\"\\n    };\\n  }  \\n\\n  /**\\n   * @desc HTML을 생성\\n   * @example -\\n   */ \\n  _render() {\\n    this.$empty();\\n    this.classList.add('jj-hmi');\\n    this.classList.add(this.options.class);\\n    \\n    this.innerHTML =`\\n      <div class=\\\"dial\\\">\\n         <div class=\\\"mark\\\"></div>\\n      </div>\\n      <h3 class=\\\"dial-title\\\"></h3>\\n`;\\n\\t\\tthis.dial = this.querySelector('.dial');\\n\\t\\tthis.dialValue = this.querySelector('.dial-title');\\n\\n    this.rotate =  new JJRotate(this.dial, {\\n      \\\"handleEl\\\": \\\".mark\\\"\\n    })\\n    \\n    this._showValue();\\n  }  \\n\\n\\n  /**\\n   * @desc 이벤트를 설정\\n   * @example -\\n   */  \\n  _setEvent() {\\n\\n    this.dial.addEventListener(\\\"jjRotateMove\\\", e=>{\\n      this._value = e.detail.value;\\n      this.dialValue.innerText =  this._value;      \\n      if(!this.options.readonly){\\n      \\tJinja.hmiSSE.send(this.options.tagId, e.detail.value);\\n      }\\n      \\n    })\\n    \\n  }  \\n\\n  /**\\n   * @desc value에 맞는 동작을 실행\\n   * @example -\\n   */  \\n  _showValue(){\\n    this.setAttribute('name', this.options.name);\\n    if(this.options.jjId) this.setAttribute('jj-id', this.options.jjId);\\n    if(this.options.jjCommand) this.setAttribute('jj-command', this.options.jjCommand);\\n    \\n    if(this.rotate){\\n    \\tthis.rotate.value = this._value;\\n\\t\\t\\tthis.dialValue.innerText =  this._value;      \\n      if(this._value){\\n        this.dial.style.backgroundImage=`url(\\\"${this.options.activeUri}\\\")`;    \\n      } else {\\n        this.dial.style.backgroundImage=`url(\\\"${this.options.imageUri}\\\")`;    \\n      }\\n      \\n    }\\n\\n    if(this.options.readonly){\\n      this.setAttribute('readonly', 'readonly');\\n    } else {\\n      this.removeAttribute('readonly');\\n    }\\n\\n  }\\n\\n  /**\\n   * @desc 객체 초기화\\n   * @example -\\n   */    \\n  init(options){\\n    Object.assign(this.options, options);\\n    this._showValue();\\n  }\\n \\n  /**\\n   * @desc 옵션정볼르 리턴한다\\n   * @example -\\n   */    \\n  getOptions(){\\n    return this.options;\\n  }\\n  \\n  /**\\n   * @desc 옵션정보를 설정한다\\n   * @param {Object} - 옵션\\n   * @example -\\n   */    \\n  setOptions(options){\\n    Object.assign(this.options, options);\\n    \\n\\t\\tJinja.hmiSSE.tagGet(this.options.tagId, this);\\n\\n    \\n    this._showValue();\\n\\n    return this.options;\\n  }\\n\\n  /**\\n   * @desc 옵션정보 설정폼을 호출한다\\n   * @param {Object} - 옵션\\n   * @example -\\n   */    \\n  showOptionForm(){\\n    if(!this.options.attrUrl) return;\\n    \\n    JJFormModal.open(this.options.attrUrl, this.options)\\n      .then(options=>this.setOptions(options))\\n      .catch(err=>alert(err));  \\n  }\\n  \\n \\n  /**\\n   * @desc 크기변경 실행동작을 설정한다\\n   * @example -\\n   */     \\n  resize(){\\n   // this._showValue();\\n  }  \\n}\\n\\n\\ncustomElements.define('jj-hmi-dial', JJHmiDial);\\t\\n/* ==HMISSEvents.640.class================ */\\n\\n/**\\n * @classdesc SSE 관리를 위한 클래스\\n */\\nclass HMISSEvents extends JJModule {\\n  /**\\n   * @desc 생성자\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n\\n  _defaultOption() {\\n    this.VERSION = '640';\\n    this.messageRoute = {};\\n\\t\\tthis.tags ={};\\n    return {\\n      \\\"apiVersion\\\": workspaceMeta.options.appInfo.apiVersion||\\\"v61\\\"\\n    };\\n  }\\n  \\n  _setEvent() {\\n    Jinja.event.add('jjAppStart', 'hmisse.setInit', this.appStart.bind(this));\\n    Jinja.event.add('JJLogout', 'hmisse.setInit', this.destroy.bind(this));\\n  }  \\n  \\n  /**\\n   * @desc SSE모듈을 초기화한다.\\n   * @example -\\n   */\\n  appStart() {\\n    if (navigator.onLine && workspaceMeta.options.pwa.useSSE) {\\n      // Tag수신처 등록\\n      Jinja.ajax.post(`/${this.options.apiVersion}/notification/topic/HMI/user/${Jinja.uo.USER_ID}`)\\n      \\n      // Tag수신메시지 등록\\n      Jinja.sse.addMessageRoute('1200', 'HMI-ROUTE', message => {\\n        //console.log(message);\\n        let tagId = message.DATA.tagID;\\n        let value = message.DATA.value;\\n        \\n        if(this.tags[tagId]){\\n        \\tthis.tags[tagId].forEach(el=>el.value = value);\\n        }\\n        //form.dig1.value = message.MESSAGE.value;\\n      });\\n      \\n    }\\n  }\\n\\t\\n  tagGet(tagId, el){\\n    if(!tagId) return;\\n    if(!this.tags[tagId]){\\n      this.tags[tagId] = []; \\n    }\\n    return this.tags[tagId].push(el);\\n  }\\n  \\n  send(tagId, value){\\n    if(!tagId) return;\\n    Jinja.ajax.post(`/${this.options.apiVersion}/notification/topic/HMI/message`,{\\n      \\\"NOTI_CODE\\\": \\\"1200\\\",\\n      \\\"TITLE\\\": \\\"Tag메시지\\\",\\n      \\\"DATA\\\": {\\n        \\\"tagID\\\": tagId,\\n        \\\"value\\\": value\\n      }\\n    });\\n  }\\n  /**\\n   * @desc SSE모듈을 삭제한다.\\n   * @example -\\n   */\\n  destroy() {\\n    if (Jinja.sseWellComm) {\\n      Jinja.ajax.delete(`/${this.options.apiVersion}/notification/topic/HMI/user/${Jinja.uo.USER_ID}`);\\n    }\\n  }\\n}\\n\\nJinja.addModule('hmiSSE', HMISSEvents);\\n/* ==JJDao.710.pkg.deploy================ */\\n/* ==JJBatis.640.class================ */\\n\\n/**\\n * @classdesc JJBatis 컴포넌트관리를 위한 클래스\\n */\\nclass JJBatis {\\n  /**\\n   * @desc 생성자\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  constructor(options) {\\n    this.VERSION = '640';\\n    this.options = {\\n      \\\"apiVersion\\\": workspaceMeta.options.appInfo.apiVersion||\\\"v61\\\",\\n      \\\"sourceType\\\": 'table',\\n      \\\"workspace\\\": workspaceMeta.options.appInfo.jbatisId||\\\"\\\",\\n      \\\"tableName\\\": '',\\n      \\\"keyField\\\": '',\\n      \\\"keyValue\\\": '',\\n      \\\"infoFields\\\": [],\\n      \\\"default\\\": {},\\n      \\\"filter\\\": [],\\n      \\\"order\\\": '',\\n      \\\"dataSources\\\": [],\\n      \\\"pagecount\\\": 30000\\n      \\n    };\\n\\n    Object.assign(this.options, options);\\n\\n    this.data = {\\n      info: {},\\n      rows: []\\n    };\\n\\n    this.init();\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 초기화한다.\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  init(options) {\\n    Object.assign(this.options, options);\\n\\n    if (!this.options.workspace) {\\n  \\t\\talert(\\\"JBatis에 워크스페이스가 지정되지 않았습니다.\\\");    \\n    } else {\\n\\t    this.restUrl = `/${this.options.apiVersion}/jbatis/${this.options.workspace}`;\\n      this.ready = new Promise((resolv, reject) => resolv());\\n    }\\n  }\\n\\n  /**\\n   * @desc 객체를 삭제한다.\\n   * @example -\\n   */\\n  destroy() {}\\n\\n  /**\\n   * @desc 워크스페이스명을 반환한다.\\n   * @return {String} - 워크스페이스명\\n   * @example -\\n   */\\n  getWorkspace() {\\n    return this.options.workspace;\\n  }\\n\\n  /**\\n   * @desc 워크스페이스명을 설정한다.\\n   * @param {String} - 워크스페이스명\\n   * @example -\\n   */\\n  setWorkspace(workspace) {\\n    this.options.workspace = workspace;\\n    this.restUrl = `/${this.options.apiVersion}/jbatis/${this.options.workspace}`;\\n  }\\n\\n  /**\\n   * @desc 새로고침한 워크스페이스명을 반환한다.\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  getRefreshWorkspace() {\\n    this.ready = null;\\n    this.ready = Jinja.ajax.get(`/${this.options.apiVersion}/jbatis/connection`).then(result => {\\n      this.options.dataSources = result.rows;\\n\\n      return this.options.dataSources;\\n    });\\n\\n    return this.ready;\\n  }\\n\\n  /**\\n   * @desc 지정한 row 데이터를 등록한다.\\n   * @param {Object} - row 데이터\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  insert(row) {\\n    return Jinja.ajax\\n      .post(\\n        this.restUrl +\\n          `/rest/${this.options.tableName}/${this.options.keyField}/${\\n            row[this.options.keyField]\\n          }`,\\n        {\\n          field: row,\\n        }\\n      )\\n      .then(data => this.data.rows.push(row));\\n  }\\n\\n  /**\\n   * @desc 지정한 row 데이터를 저장한다.\\n   * @param {Object} - row 데이터\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  save(row) {\\n    if (!row) {\\n      row = this.data.info;\\n    }\\n\\n    let keyValue = row[this.options.keyField] || this.options.keyValue;\\n    let method = row._crud_ == 'C' ? 'POST' : 'PATCH';\\n\\n    if (row._crud_ == 'C') {\\n      return Jinja.ajax\\n        .post(\\n          this.restUrl +\\n            `/rest/${this.options.tableName}/${this.options.keyField}/${keyValue}`,\\n          {\\n            field: Jinja.json.getChangeData(row),\\n          }\\n        )\\n        .then(result => {\\n          $topMessage('신규 저장되었습니다.');\\n\\n          this.clearRow(row);\\n        });\\n    } else {\\n      return Jinja.ajax\\n        .patch(\\n          this.restUrl +\\n            `/rest/${this.options.tableName}/${this.options.keyField}/${keyValue}`,\\n          {\\n            field: Jinja.json.getChangeData(row),\\n          }\\n        )\\n        .then(result => {\\n          $topMessage('수정 저장되었습니다.');\\n\\n          this.clearRow(row);\\n        });\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 rows 데이터를 저장한다.\\n   * @param {Array} - rows 데이터\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  saveAll(rows) {\\n    rows = rows || this.data.rows;\\n\\n    let sendData = { rows: this.getSaveRows(rows) };\\n\\n    return Jinja.ajax\\n      .post(this.restUrl + `/rest/${this.options.tableName}`, sendData)\\n      .then(data => {\\n        this.clearCrud(rows);\\n\\n        $topMessage(sendData.rows.length + '건이 처리되었습니다.');\\n      });\\n  }\\n\\n  /**\\n   * @desc 지정한 row 순번에 해당하는 정보를 저장한다.\\n   * @param {Number} - row 순번\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  saveIndex(index) {\\n    this.save(this.data.rows[index]);\\n  }\\n\\n  /**\\n   * @desc 지정한 rows 데이터에서 수정된 row 목록을 반환한다.(신규, 삭제 포함)\\n   * @param {Array} - rows 데이터\\n   * @return {Array} - 수정된 rows 데이터\\n   * @example -\\n   */\\n  getEditedRows(rows) {\\n    return rows.filter((row, index) => {\\n      return ['C', 'U', 'D'].indexOf(row['_crud_']) >= 0;\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 rows 데이터에서 수정된 row 데이터를 저장을 위한 정보로 변환하여 반환한다.\\n   * @param {Array} - rows 데이터\\n   * @return {Array} - 수정된 rows 데이터\\n   * @example -\\n   */\\n  getSaveRows(rows) {\\n    let saveRows = this.getEditedRows(rows).map(row => {\\n      let rlt = {\\n        crud: row['_crud_'],\\n        table: this.options.tableName,\\n        keyField: this.options.keyField,\\n        keyValue: null,\\n        field: {},\\n      };\\n\\n      if (row['_crud_'] == 'C' && !row[this.options.keyField]) {\\n        rlt.keyValue = row[this.options.keyField] = generateUUID();\\n      }\\n\\n      if (row['_crud_'] == 'C') {\\n        Object.keys(row).forEach(function (key) {\\n          if (\\n            row[key] != null &&\\n            row[key] != undefined &&\\n            key.substr(0, 1) != '_'\\n          ) {\\n            rlt.field[key] = row[key];\\n          }\\n        });\\n      } else if (row['_crud_'] == 'U') {\\n        Object.keys(row._changeData_).forEach((key, index) => {\\n          if (row._changeData_[key].val != row._changeData_[key].old) {\\n            rlt.field[key] = row._changeData_[key].val;\\n          }\\n        });\\n      }\\n\\n      rlt.keyValue = row[this.options.keyField];\\n\\n      return rlt;\\n    });\\n\\n    return saveRows;\\n\\n    function f1(value, field) {\\n      let rlt = value;\\n\\n      if (vOption.colModel.filter(col => col.field == field).length > 0) {\\n        let type = vOption.colModel.filter(col => col.field == field)[0].type;\\n\\n        switch (type) {\\n          case 'date':\\n            rlt = rlt.substr(0, 10);\\n\\n            break;\\n          case 'datetime':\\n            rlt = \\\"TO_DATE('\\\" + rlt.substr(0, 16) + \\\"', 'yyyy-mm-dd HH24:MI')\\\";\\n\\n            break;\\n          case 'money':\\n          case 'number':\\n            rlt = rlt.toString().replace(/,/gi, '');\\n\\n            break;\\n        }\\n      }\\n\\n      return rlt;\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 row 데이터의 정리한다.<br><br>\\n   * _crud_ : 'R'\\n   * _changeData_ : {}\\n   * @param {Object} - row 데이터\\n   * @example -\\n   */\\n  clearRow(row) {\\n    row._crud_ = 'R';\\n    row._changeData_ = {};\\n  }\\n\\n  /**\\n   * @desc 지정한 rows 데이터의 정리한다.<br><br>\\n   * R(_crud_) : clearRow 실행\\n   * D(_crud_) : removeIndex 실행\\n   * 그외 : 현상유지\\n   * @param {Array} - rows 데이터\\n   * @example -\\n   */\\n  clearCrud(rows) {\\n    let rowLength = rows.length - 1;\\n\\n    for (; rowLength >= 0; rowLength--) {\\n      switch (rows[rowLength]._crud_) {\\n        case 'C':\\n        case 'U':\\n          this.clearRow(rows[rowLength]);\\n\\n          break;\\n        case 'D':\\n          rows.removeIndex(rowLength);\\n\\n          break;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 rows 데이터에서 지정한 row 또는 선택된 row의 CRUD 정보를 삭제한다.<br><br>\\n   * C(_crud_) : row 데이터 삭제\\n   * R(_crud_) : _crud_값을 D 상태로 수정\\n   * U(_crud_) : _crud_값을 D 상태로 수정\\n   * D(_crud_) : _changeData_ 데이터가 있으면 _crud_값을 U 없으면 R 상태로 수정\\n   * @param {Object} - 선택된 row 데이터\\n   * @param {Array} - rows 데이터\\n   * @example -\\n   */\\n  deleteCrud(srow, rows) {\\n    let selectrow = rows.filter(row => row._select_);\\n\\n    if (selectrow.length == 0) {\\n      selectrow.push(srow);\\n    }\\n\\n    selectrow.forEach(row => {\\n      switch (row._crud_) {\\n        case 'C':\\n          let keyValue = row[this.options.keyField];\\n          let findIndex;\\n\\n          rows.some((row, index) => {\\n            if (row[this.options.keyField] == keyValue) {\\n              findIndex = index;\\n\\n              return true;\\n            }\\n          });\\n\\n          rows.splice(findIndex, 1);\\n\\n          break;\\n        case 'D':\\n          if (Object.keys(row['_changeData_']).length) {\\n            row._crud_ = 'U';\\n          } else {\\n            row._crud_ = 'R';\\n          }\\n\\n          break;\\n        case 'R':\\n          row._crud_ = 'D';\\n\\n          break;\\n        case 'U':\\n          row._crud_ = 'D';\\n\\n          break;\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 keyValue값으로 데이터를 조회한다.\\n   * @param {String} - keyValue\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  read(keyValue) {\\n    this.options.keyValue = keyValue;\\n\\n    let url =\\n      this.restUrl +\\n      `/rest/${this.options.tableName}/${this.options.keyField}/${keyValue}?d0=`;\\n\\n    if (this.options.infoFields.length) {\\n      url += '&field=' + this.options.infoFields.join(',');\\n    }\\n\\n    return Jinja.ajax.get(url).then(result => {\\n      this.data.info = Jinja.json.setCRUD(result.row);\\n\\n      return this.data.info;\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 값을 default값으로 하는 신규 row를 data.info로 설정한다.\\n   * @param {*} - default값\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  new(newValue) {\\n    let newRow = {\\n      _crud_: 'C',\\n      _select_: true,\\n      _rno_: 0,\\n      _changeData_: {}\\n    };\\n\\n    return this.getColumns().then(() => {\\n      if (this.options.infoFields.length > 1) {\\n        this.options.infoFields.forEach(column => (newRow[column] = null));\\n      } else {\\n        this.columns.forEach(col => (newRow[col.COLUMN_NAME] = null));\\n      }\\n\\n      newRow = Object.assign(newRow, this.options.default, newValue);\\n\\n      this.options.keyValue = Jinja.global.uuid();\\n\\n      newRow[this.options.keyField] = this.options.keyValue;\\n\\n      this.data.info = newRow;\\n\\n      return newRow;\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 값을 default값으로 하는 신규 row를 data.rows에 추가한다.\\n   * @param {*} - default값\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  appendRow(newValue) {\\n    let newRow = {\\n      _crud_: 'C',\\n      _select_: true,\\n      _rno_: 0,\\n      _changeData_: {}\\n    };\\n\\n    return this.getColumns().then(() => {\\n      if (this.options.infoFields.length > 1) {\\n        this.options.infoFields.forEach(column => (newRow[column] = null));\\n      } else {\\n        this.columns.forEach(col => (newRow[col.COLUMN_NAME] = null));\\n      }\\n\\n      newRow = Object.assign(newRow, this.options.default, newValue);\\n\\n      this.options.keyValue = Jinja.global.uuid();\\n\\n      newRow[this.options.keyField] = this.options.keyValue;\\n\\n      this.data.rows.push(newRow);\\n\\n      return newRow;\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 keyValue값으로 데이터를 삭제한다.\\n   * @param {String} - keyValue\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  delete(keyValue) {\\n    this.options.keyValue = keyValue;\\n\\n    let url =\\n      this.restUrl +\\n      `/rest/${this.options.tableName}/${this.options.keyField}/${this.options.keyValue}`;\\n\\n    return Jinja.ajax\\n      .delete(url)\\n      .then(row => $topMessage('선택된 자료가 삭제되었습니다.'));\\n  }\\n\\n  /**\\n   * @desc 지정한 조회조건을 기준으로 데이터를 조회한다.\\n   * @param {Object} - 조회조건\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  search(filter) {\\n    switch (this.options.sourceType) {\\n      case 'sqlj':\\n        return this.excuteGet(this.options.tableName, filter);\\n      default:\\n        return this.tableSearch(filter);\\n    }\\n  }\\n\\n  /**\\n   * @desc 지정한 파일URI와 조회조건으로 데이터를 조회한다. \\n   * @param {String} - 파일URI\\n   * @param {Object} - 조회조건\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  excuteGet(uri, data) {\\n    if (!uri) uri = this.options.tableName;\\n\\n    let url = this.restUrl + `/excute/get/${uri}`;\\n\\n    return Jinja.ajax.get(url, data).then(result => {\\n      this.data.rows = Jinja.json.setCRUD(result.rows);\\n\\n      return this.data;\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 조회조건으로 테이블 데이터를 조회한다.\\n   * @param {Object} - 조회조건\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  tableSearch(filter) {\\n    let url = this.restUrl + `/rest/${this.options.tableName}?`;\\n\\n    filter = filter || [];\\n\\n    let findFilter = [];\\n\\n    if (this.options.infoFields.length) {\\n      url += '&field=' + this.options.infoFields.join(',');\\n    }\\n\\n    if (this.options.filter.length || filter.length) {\\n      findFilter = findFilter.concat(filter, this.options.filter);\\n      url +=\\n        '&filter=' + Jinja.global.encodeURI(Jinja.global.string(findFilter));\\n    }\\n\\n    url += '&pagecount=' + this.options.pagecount;\\n\\n    if (this.options.order) {\\n      url += '&order=' + this.options.order;\\n    }\\n\\n    return Jinja.ajax.get(url).then(result => {\\n      this.data.rows = Jinja.json.setCRUD(result.rows);\\n\\n      return this.data;\\n    });\\n  }\\n\\n  multirows(sendData){\\n    let url = this.restUrl + `/rest/multirows`;\\n    return Jinja.ajax.post(url, {\\n       \\\"rows\\\": sendData\\n    })    \\n  }\\n  /**\\n   * @desc 지정한 테이블명의 입력컬럼정보를 조회한다.\\n   * @param {String} - 테이블명\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  getFilters(tableName) {\\n    switch (this.options.sourceType) {\\n      case 'sqlj': {\\n        if (!tableName) tableName = this.options.tableName;\\n\\n        return Jinja.resource.getUri(tableName).then(data => {\\n          let body = Jinja.global.json(data.BODY);\\n\\n          this.columns = body.indata;\\n\\n          return { rows: body.indata };\\n        });\\n      }\\n\\n      default: {\\n        if (!tableName) tableName = this.options.tableName;\\n\\n        return Jinja.ajax\\n          .get(this.restUrl + `/table/${tableName}/columns`)\\n          .then(data => {\\n            this.columns = data.rows;\\n\\n            return data;\\n          });\\n      }\\n    }\\n  }\\n\\n\\n  /**\\n   * @desc 지정한 row순번의 데이터를 반환한다.\\n   * @param {} - \\n   * @return {} - \\n   * @example -\\n   */\\n  getIndexRow(rowIndex) {\\n    return this.data.rows[rowIndex];\\n  }\\n}\\n/* ==JJBatisDBA.640.class================ */\\n\\n/**\\n * @classdesc JJBatisDBA 컴포넌트관리를 위한 클래스\\n */\\nclass JJBatisDBA extends JJBatis {\\n  /**\\n   * @desc 생성자\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  constructor(options) {\\n    super(options);\\n\\n    this.VERSION = '640';\\n  }\\n\\n  /**\\n   * @desc 지정한 Jbatis아이디의 접속정보를 삭제한다.\\n   * @param {String} - jbatis아이디\\n   * @throw {JJException} - 접속정보 삭제시 예외처리\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  removeJbatis(jbatisId) {\\n    return Jinja.confirm\\n      .delete('접속정보를 삭제하시겠습니까?')\\n      .then(chooice => {\\n      if (chooice == 'YES') {\\n        return Jinja.ajax.delete(`/${this.options.apiVersion}/jbatis/connection/${jbatisId}`);\\n      } else {\\n        throw new JJException(901, '프로세스진행종료1');\\n      }\\n    })\\n      .catch(ex => {\\n      throw new JJException(901, '프로세스진행종료2');\\n    });\\n  }\\n\\n  /**\\n   * @desc 데이터소스 목록을 반환한다.\\n   * @return {Array} - 데이터소스 목록\\n   * @example -\\n   */\\n  getSources() {\\n    return this.options.dataSources;\\n  }\\n\\n  /**\\n   * @desc 테이블 목록을 반환한다.\\n   * @param {String} - 테이블명\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  getTables(tableName) {\\n    let url = this.restUrl + `/tables`;\\n\\n    if (tableName) {\\n      url += '?q=' + tableName;\\n    }\\n\\n    return Jinja.ajax.get(url);\\n  }\\n\\n  findTable(){\\n    let result;\\n    return JJFormModal.open(\\\"getTable.640.uc\\\").then(data=>{\\n      result = data;\\n      this.setWorkspace(result.workspace)\\n      this.options.tableName = result.table;\\n      this.options.keyField = result.keyField;\\n      return this.getColumns();\\n    }).then(dataColumns=> {\\n      result.columns = dataColumns.rows\\n      return result;\\n    });\\n\\n  }  \\n\\n  /**\\n   * @desc 지정한 테이블을 생성한다.\\n   * @param {Object} - 옵션\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  createTable(options) {\\n    let option = {\\n      TABLE_NAME: '',\\n      KEY_FIELD: '',\\n      DISPLAY_FIELD: '',\\n      COLUMNS: [],\\n    };\\n\\n    let sendData = Object.assign({}, option, options);\\n    sendData.COLUMNS.forEach(col=>{\\n      col.COLUMN_TYPE = this.getDBDomain(col.COLUMN_DOMAIN).DBTYPE; \\n      col.COLUMN_LENGTH = this.getDBDomain(col.COLUMN_DOMAIN).LENGTH; \\n    })\\n    \\n    return Jinja.ajax\\n      .post(this.restUrl + `/table`, sendData)\\n      .then(() => {\\n      sendData[\\\"workspace\\\"] = this.options.workspace;\\n      return sendData;\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 테이블을 수정한다.\\n   * @param {Object} - 옵션\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  alterTable(options) {\\n    let option = {\\n      TABLE_NAME: '',\\n      KEY_FIELD: '',\\n      COLUMNS: []\\n    };\\n\\n    let sendData = Object.assign({}, option, options);\\n//    let bodyData = Jinja.global.string(sendData);\\n\\n    sendData.COLUMNS.forEach(col=>{\\n      // 서버의 테이블 생성모듈이 도메인을 기반으로 변경됨으로 도메인을 넘김\\n      //col.COLUMN_TYPE = this.getDBDomain(col.COLUMN_DOMAIN).DBTYPE; \\n      col.COLUMN_TYPE = col.COLUMN_DOMAIN;\\n      col.COLUMN_LENGTH = this.getDBDomain(col.COLUMN_DOMAIN).LENGTH; \\n    })\\n    \\n    \\n    return Jinja.ajax.patch(\\n      this.restUrl + `/table/${sendData.TABLE_NAME}`,\\n      sendData\\n    );\\n  }\\n\\n  /**\\n   * @desc 지정한 테이블명의 출력컬럼정보를 조회한다.\\n   * @param {String} - 테이블명\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  getColumns(tableName) {\\n    switch (this.options.sourceType) {\\n      case 'sqlj': {\\n        if (!tableName) tableName = this.options.tableName;\\n\\n        return Jinja.resource.getUri(tableName).then(data => {\\n          let body = Jinja.global.json(data.BODY);\\n\\n          this.columns = body.outdata;\\n\\n          return { rows: body.outdata };\\n        });\\n      }\\n\\n      default: {\\n        if (!tableName) tableName = this.options.tableName;\\n\\t\\t\\t\\t\\n        return Jinja.ajax\\n          .get(this.restUrl + `/table/${tableName}/columns`)\\n          .then(data => {\\n          \\tdata.rows.forEach(row=>{\\n              row.COLUMN_LABEL = row.COLUMN_NAME;\\n              row.COLUMN_DOMAIN = this.DbType2Domain(row.COLUMN_TYPE, row.COLUMN_LENGTH);\\n              row.COLUMN_SHOW = this.getSystemColumnKeys().includes(row.COLUMN_NAME)?\\\"false\\\":\\\"true\\\";\\n            });\\n          \\n          \\n            this.columns = data.rows;\\n\\n            return data;\\n          });\\n      }\\n    }\\n  }\\n  \\n  /**\\n   * @desc 지정한 컬럼을 추가한다.\\n   * @param {String} - 테이블명\\n   * @param {String} - 컬럼명\\n   * @param {String} - 컬럼유형\\n   * @param {String} - 컬럼길이\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  addColumn(tableName, columnName, columnDomain) {\\n    return this.alterTable({\\n      TABLE_NAME: tableName,\\n      COLUMNS: [\\n        {\\n          \\\"COLUMN_NAME\\\": columnName,\\n          \\\"COLUMN_DOMAIN\\\": columnDomain,\\n          \\\"_crud_\\\": 'C'\\n        },\\n      ],\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 테이블을 삭제한다.\\n   * @param {String} - 테이블명\\n   * @throw {JJException} - 삭제취소시 예외처리\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  removeTable(tableName) {\\n    return Jinja.confirm\\n      .delete(`${tableName} 테이블 삭제하시겠습니까?`)\\n      .then(chooice => {\\n      if (chooice == 'YES') {\\n        return Jinja.ajax.delete(this.restUrl + `/table/${tableName}`, true);\\n      } else {\\n        throw new JJException(901, '프로세스진행종료');\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 컬럼을 삭제한다.\\n   * @param {String} - 테이블명\\n   * @param {String} - 컬럼명\\n   * @throw {JJException} - 삭제취소시 예외처리\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  removeColumn(tableName, columnName) {\\n    return Jinja.confirm\\n      .delete(`${columnName} 컬럼을 삭제하시겠습니까?`)\\n      .then(chooice => {\\n      if (chooice == 'YES') {\\n        return Jinja.ajax.delete(\\n          this.restUrl + `/table/${tableName}/column/${columnName}`,\\n          true\\n        );\\n      } else {\\n        throw new JJException(901, '프로세스진행종료');\\n      }\\n    });\\n  }\\n\\n  /**\\n   * @desc 지정한 쿼리를 실행한다.\\n   * @param {String} - 쿼리\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  excute(sql) {\\n    let url = this.restUrl + `/excute/test`;\\n\\n    return Jinja.ajax.post(url, {\\n      sql: sql\\n    });\\n  }\\n\\n  /**\\n   * @desc 엑셀파일을 업로드한다.\\n   * @param {File} - 파일목록\\n   * @return {Promiss} - 실행결과\\n   * @example -\\n   */\\n  excelUpload(files) {\\n    return Jinja.ajax.excelUpload(this.restUrl + `/table/exceltojson`, files);\\n  }\\n\\n  /**\\n   * @desc 조회쿼리를 생성 반환한다.\\n   * @param {String} - 테이블명\\n   * @param {String} - 컬럼명\\n   * @return {String} - 쿼리 문자열\\n   * @example -\\n   */\\n  selectSql(tableName, columns) {\\n    tableName = tableName || this.options.tableName;\\n    columns = columns || this.columns;\\n\\n    let sql = `SELECT \\\\n`;\\n\\n    columns.forEach((col, index) => {\\n      if (index === 0) {\\n        sql += `   ${col['COLUMN_NAME']} \\\\n`;\\n      } else {\\n        sql += `  ,${col['COLUMN_NAME']} \\\\n`;\\n      }\\n    });\\n\\n    sql += ` FROM ${tableName} \\\\n`;\\n    sql += ` WHERE 1=1 \\\\n`;\\n\\n    columns.forEach((col, index) => {\\n      sql += ` /* AND ${col['COLUMN_NAME']}  = #\\\\{${col['COLUMN_NAME']}\\\\} */\\\\n`;\\n    });\\n\\n    return sql;\\n  }\\n\\n  /**\\n   * @desc 등록쿼리를 생성 반환한다.\\n   * @param {String} - 테이블명\\n   * @param {String} - 컬럼명\\n   * @example -\\n   */\\n  insertSql(tableName, columns) {\\n    tableName = tableName || this.options.tableName;\\n    columns = columns || this.columns;\\n\\n    let sql = `INSERT INTO ${tableName} ( \\\\n`;\\n\\n    columns.forEach((col, index) => {\\n      if (index === 0) {\\n        sql += `/*   ${col['COLUMN_NAME']}  -- #\\\\{${col['COLUMN_NAME']}\\\\} */\\\\n`;\\n      } else {\\n        sql += `/*  ,${col['COLUMN_NAME']}  -- #\\\\{${col['COLUMN_NAME']}\\\\} */\\\\n`;\\n      }\\n    });\\n\\n    sql += `) \\\\n`;\\n    sql += `VALUES ( \\\\n`;\\n\\n    columns.forEach((col, index) => {\\n      if (index === 0) {\\n        sql += `/*   #\\\\{${col['COLUMN_NAME']}\\\\} */\\\\n`;\\n      } else {\\n        sql += `/*  ,#\\\\{${col['COLUMN_NAME']}\\\\} */\\\\n`;\\n      }\\n    });\\n\\n    return sql;\\n  }\\n\\n  /**\\n   * @desc 수정쿼리를 생성 반환한다.\\n   * @param {String} - 테이블명\\n   * @param {String} - 컬럼명\\n   * @example -\\n   */\\n  updateSql(tableName, columns) {\\n    tableName = tableName || this.options.tableName;\\n    columns = columns || this.columns;\\n\\n    let sql = `UPDATE ${tableName} \\\\n`;\\n\\n    sql += ` SET EDT_DATE    = GETDATE() \\\\n`;\\n\\n    columns.forEach((col, index) => {\\n      sql += ` /* , ${col['COLUMN_NAME']}  = #\\\\{${col['COLUMN_NAME']}\\\\} */\\\\n`;\\n    });\\n\\n    sql += ` WHERE 1=1 \\\\n`;\\n\\n    columns.forEach((col, index) => {\\n      sql += ` /* AND ${col['COLUMN_NAME']}  = #\\\\{${col['COLUMN_NAME']}\\\\} */\\\\n`;\\n    });\\n\\n    return sql;\\n  }\\n\\n  /**\\n   * @desc 삭제쿼리를 생성 반환한다.\\n   * @param {String} - 테이블명\\n   * @param {String} - 컬럼명\\n   * @example -\\n   */\\n  deleteSql(tableName, columns) {\\n    tableName = tableName || this.options.tableName;\\n    columns = columns || this.columns;\\n\\n    let sql = `DELETE FROM ${tableName} \\\\n`;\\n\\n    sql += ` WHERE 1=1 \\\\n`;\\n\\n    columns.forEach((col, index) => {\\n      sql += ` /* AND ${col['COLUMN_NAME']}  = #\\\\{${col['COLUMN_NAME']}\\\\} */\\\\n`;\\n    });\\n\\n    return sql;\\n  }\\n\\n  getDBDomain(code){\\n    let rows = DATA_TYPE.domain;\\n    if(code){\\n      return rows.find(row=>row.CODE == code);\\n    } else {\\n      return rows;\\n    }\\n  }\\n  \\n\\tDbType2Domain(type, length){\\n  \\tlet result = \\\"VARCHAR\\\";\\n    switch(type.toUpperCase()){\\n      case \\\"INT\\\":  \\n      case \\\"FLOAT\\\":  \\n      case \\\"DATE\\\":  \\n      case \\\"DATETIME\\\":  \\n      case \\\"BIT\\\":  \\n      case \\\"CLOB\\\":  \\n        result = type.toUpperCase(); \\n        break;\\n      case \\\"NUMERIC\\\":\\n        result = \\\"FLOAT\\\"\\n        break;\\n      case \\\"NVARCHAR\\\":  \\n        if (length == -1){\\n          result = \\\"CLOB\\\"; \\n        } else if (length <= 200){\\n          result = \\\"VARCHAR\\\"; \\n        } else {\\n          result = \\\"MEMO\\\"; \\n        }\\n        break;\\n      default:\\n        break;\\n    }\\n    \\n    return result;\\n  }\\n  /**\\n   * @desc 데이터 타입을 반환한다.\\n   * @param {*} - 대상 데이터\\n   * @return {String} - 데이터 타입, string\\n   * @example - JJBatisDBA.640.class\\n   *  { \\\"CODE\\\": \\\"VARCHAR\\\",  \\\"NAME\\\": \\\"문자\\\", \\\"DBTYPE\\\": \\\"NVARCHAR\\\", \\\"SIZE\\\": 200  },\\n      { \\\"CODE\\\": \\\"INT\\\",      \\\"NAME\\\": \\\"정수\\\", \\\"DBTYPE\\\": \\\"INT\\\",      \\\"SIZE\\\": 4    },\\n      { \\\"CODE\\\": \\\"FLOAT\\\",    \\\"NAME\\\": \\\"실수\\\", \\\"DBTYPE\\\": \\\"FLOAT\\\",    \\\"SIZE\\\": 8    },\\n      { \\\"CODE\\\": \\\"DATE\\\",     \\\"NAME\\\": \\\"날짜\\\", \\\"DBTYPE\\\": \\\"DATE\\\",     \\\"SIZE\\\": 4    },\\n      { \\\"CODE\\\": \\\"DATETIME\\\", \\\"NAME\\\": \\\"일시\\\", \\\"DBTYPE\\\": \\\"DATETIME\\\", \\\"SIZE\\\": 8    },\\n      { \\\"CODE\\\": \\\"BIT\\\",      \\\"NAME\\\": \\\"체크\\\", \\\"DBTYPE\\\": \\\"BIT\\\",      \\\"SIZE\\\": 1    },\\n      { \\\"CODE\\\": \\\"MEMO\\\",     \\\"NAME\\\": \\\"메모\\\", \\\"DBTYPE\\\": \\\"MEMO\\\",     \\\"SIZE\\\": 2000 },\\n      { \\\"CODE\\\": \\\"CLOB\\\",     \\\"NAME\\\": \\\"본문\\\", \\\"DBTYPE\\\": \\\"CLOB\\\",     \\\"SIZE\\\": 20000}\\n\\n   */\\n  val2DBDomain(val) {\\n\\n    let result = typeof(val);\\n\\n    if(Jinja.global.isDate(val)) {\\n      result = \\\"DATE\\\";\\n    } else if (result == \\\"number\\\"){\\n      result = Number.isInteger(val)? \\\"INT\\\":\\\"FLOAT\\\";\\n    } else if (result == \\\"boolean\\\"){\\n      result = \\\"BIT\\\"\\n    } else {\\n      result = \\\"VARCHAR\\\"\\n    }\\n\\n    return result;\\n  }  \\n\\n  getSystemColumnKeys(){\\n    return  DATA_TYPE.SystemColumnKey;\\n  }\\n\\n  getSystemColumns(){\\n    return [\\n      {\\n        \\\"COLUMN_NAME\\\" : \\\"REG_DATETIME\\\", \\n        \\\"COLUMN_LABEL\\\" : \\\"등록일시\\\",\\n\\t\\t\\t\\t\\\"COLUMN_DOMAIN\\\": \\\"DATETIME\\\",        \\n        \\\"COLUMN_TYPE\\\": \\\"DATETIME\\\",\\n        \\\"COLUMN_LENGTH\\\": 4\\n      },\\n      {\\n        \\\"COLUMN_NAME\\\" : \\\"REG_USER_ID\\\", \\n        \\\"COLUMN_LABEL\\\" : \\\"등록사용자번호\\\",\\n\\t\\t\\t\\t\\\"COLUMN_DOMAIN\\\": \\\"DATETIME\\\",        \\n        \\\"COLUMN_TYPE\\\": \\\"VARCHAR\\\",\\n        \\\"COLUMN_LENGTH\\\": 40\\n      },\\n      {\\n        \\\"COLUMN_NAME\\\" : \\\"REG_USER_NAME\\\", \\n        \\\"COLUMN_LABEL\\\" : \\\"등록사용자명\\\",\\n\\t\\t\\t\\t\\\"COLUMN_DOMAIN\\\": \\\"DATETIME\\\",        \\n        \\\"COLUMN_TYPE\\\": \\\"VARCHAR\\\",\\n        \\\"COLUMN_LENGTH\\\": 40\\n      },\\n      {\\n        \\\"COLUMN_NAME\\\" : \\\"EDT_DATETIME\\\", \\n        \\\"COLUMN_LABEL\\\" : \\\"수정일시\\\",\\n\\t\\t\\t\\t\\\"COLUMN_DOMAIN\\\": \\\"DATETIME\\\",        \\n        \\\"COLUMN_TYPE\\\": \\\"DATETIME\\\",\\n        \\\"COLUMN_LENGTH\\\": 4\\n      },\\n      {\\n        \\\"COLUMN_NAME\\\" : \\\"EDT_USER_ID\\\", \\n        \\\"COLUMN_LABEL\\\" : \\\"수정사용자번호\\\",\\n\\t\\t\\t\\t\\\"COLUMN_DOMAIN\\\": \\\"DATETIME\\\",        \\n        \\\"COLUMN_TYPE\\\": \\\"VARCHAR\\\",\\n        \\\"COLUMN_LENGTH\\\": 40\\n      },\\n      {\\n        \\\"COLUMN_NAME\\\" : \\\"EDT_USER_NAME\\\", \\n        \\\"COLUMN_LABEL\\\" : \\\"수정사용자명\\\",\\n\\t\\t\\t\\t\\\"COLUMN_DOMAIN\\\": \\\"DATETIME\\\",        \\n        \\\"COLUMN_TYPE\\\": \\\"VARCHAR\\\",\\n        \\\"COLUMN_LENGTH\\\": 40\\n      }\\n    ]\\n  }\\n\\n}\\n/* ==JJDataExpoler.640.class================ */\\n\\n/**\\n * @classdesc JJDataExpoler 컴포넌트관리를 위한 클래스\\n */\\nclass JJDataExpoler extends HTMLElement {\\n  /**\\n   * @desc 생성자\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  constructor(options) {\\n    super();\\n\\n    this.VERSION = '640';\\n    this.options = {\\n      \\\"apiVersion\\\": workspaceMeta.options.appInfo.apiVersion||\\\"v61\\\",\\n      contextMenu: []\\n    };\\n\\n    Object.assign(this.options, this.dataset, options);\\n\\n    this.event = new JJEventPool(this);\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 생성한다.\\n   * @example -\\n   */\\n  _render() {\\n    let btnRefresh = document.createElement('button');\\n\\n    btnRefresh.setAttribute('class', 'btn btn-primary btn-block');\\n    btnRefresh.setAttribute('type', 'button');\\n    btnRefresh.setAttribute('role', 'getMySource');\\n    btnRefresh.innerText = 'refresh';\\n\\n    this.appendChild(btnRefresh);\\n\\n    let btnAddSpace = document.createElement('button');\\n\\n    btnAddSpace.setAttribute('class', 'btn btn-primary btn-block');\\n    btnAddSpace.setAttribute('type', 'button');\\n    btnAddSpace.setAttribute('role', 'addSpace');\\n    btnAddSpace.innerText = 'addSpace';\\n\\n    this.appendChild(btnAddSpace);\\n\\n    let btnAddConnection = document.createElement('button');\\n\\n    btnAddConnection.setAttribute('class', 'btn btn-primary btn-block');\\n    btnAddConnection.setAttribute('type', 'button');\\n    btnAddConnection.setAttribute('role', 'addConnection');\\n    btnAddConnection.innerText = 'addConnection';\\n\\n    this.appendChild(btnAddConnection);\\n\\n    this.treeEl = document.createElement('ul');\\n    this.appendChild(this.treeEl);\\n\\n    this.tree = new JJTree(this.treeEl, {\\n      isIcon: true,\\n      isCheck: false,\\n      isEdit: true,\\n      isDrag: true,\\n      isClickFolding: true,\\n      contextMenu: [\\n        { label: 'new Table', icon: 'fa-plus', command: 'newTable' },\\n        { label: 'new Column', icon: 'fa-plus', command: 'newColumn' },\\n        { label: 'divider' },\\n        { label: 'new Query', icon: 'fa-plus', command: 'newQuery' },\\n        { label: 'divider' },\\n        { label: 'remove', icon: 'fa-plus', command: 'removeJbatisObject' }\\n      ],\\n      addOn: ['editable', 'keydown', 'context', 'drag']\\n    });\\n\\n    this._setEvent();\\n  }\\n\\n  /**\\n   * @desc 이벤트를 설정한다.\\n   * @example -\\n   */\\n  _setEvent() {\\n    this.event.on('treeClick', this._onClick);\\n    this.event.on('treeDragstart', this._onDragstart);\\n    this.event.on('treeContextClick', this._onContextData);\\n    this.event.on('click', 'button[role]', this._onRoleClick);\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 초기화한다.\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  _init() {\\n    this.dbo = new JJBatisDBA();\\n    this.dbo.init();\\n    this.getMyResource();\\n  }\\n\\n  /**\\n   * @desc Tree의 항목을 삭제한다.\\n   * @param {Object} - 항목정보\\n   * @param {String} - 트리 Key\\n   * @example -\\n   */\\n  _removeJbatisObject(dataInfo, itemKey) {\\n    this.dbo.setWorkspace(dataInfo.jbatis);\\n\\n    switch (dataInfo.type) {\\n      case 'JBATIS':\\n        this.dbo\\n          .removeJbatis(dataInfo.jbatis)\\n          .then(rlt => {\\n            this.tree.removeItem(itemKey, true);\\n          })\\n          .catch(ex => {});\\n\\n        break;\\n      case 'TABLE':\\n        this.dbo\\n          .removeTable(dataInfo.table)\\n          .then(() => this.tree.removeItem(itemKey));\\n\\n        break;\\n      case 'COLUMN':\\n        this.dbo\\n          .column(dataInfo.table.column)\\n          .then(() => this.tree.removeItem(itemKey));\\n\\n        break;\\n    }\\n  }\\n\\n  /**\\n   * @desc 신규테이블을 추가한다.\\n   * @param {Object} - 테이블정보\\n   * @example -\\n   */\\n  _newTable(dataInfo) {\\n    JJHee.open('app610.datasource.createTable.uc', {\\n      search: {},\\n      position: {\\n        width: '50%'\\n      },\\n      isModal: true,\\n      isMoveable: true\\n    })\\n      .then(result => {\\n        this.dbo.setWorkspace(dataInfo.jbatis);\\n        this.dbo.createTable(result);\\n      })\\n      .catch(ex => {});\\n  }\\n\\n  /**\\n   * @desc 신규컬럼을 추가한다.\\n   * @param {Object} - 컬럼정보\\n   * @example -\\n   */\\n  _newColumn(dataInfo) {\\n    if (!dataInfo.table) {\\n      alert('테이블이 아닙니다.');\\n\\n      return;\\n    }\\n\\n    JJHee.open('app610.datasource.addColumn.uc', {\\n      search: {},\\n      position: {\\n        width: '50%'\\n      },\\n      isModal: true,\\n      isMoveable: true\\n    })\\n      .then(result => {\\n        this.dbo.setWorkspace(dataInfo.jbatis);\\n        this.dbo.addColumn(\\n          dataInfo.table,\\n          result.COLUMNE_NAME,\\n          result.COLUMN_TYPE,\\n          result.COLUMN_LENGTH\\n        );\\n      })\\n      .catch(ex => {});\\n  }\\n\\n  /**\\n   * @desc Context메뉴 선택 이벤트를 실행한다.<br><br>\\n   * Context메뉴에서 copy, move는 기본명령과 충돌할수 있음\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onContextData(event) {\\n    let targetFileInfo;\\n\\n    if (event.detail.key) {\\n      let dataInfo = event.detail.targetA.parentElement.dataItem;\\n\\n      switch (event.detail.command) {\\n        case 'newTable':\\n          this._newTable(dataInfo, event.detail.key);\\n\\n          break;\\n        case 'newColumn':\\n          this._newColumn(dataInfo, event.detail.key);\\n\\n          break;\\n        case 'removeJbatisObject':\\n          this._removeJbatisObject(dataInfo, event.detail.key);\\n\\n          break;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 롤클릭 이벤트를 실행한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onRoleClick(event) {\\n    let role = event.target.getAttribute('role');\\n\\n    switch (role) {\\n      case 'getMySource':\\n        this.getMyResource();\\n\\n        break;\\n      case 'addSpace':\\n        this.addSpace();\\n\\n        break;\\n      case 'addConnection':\\n        this.addConnection();\\n\\n        break;\\n    }\\n  }\\n\\n  /**\\n   * @desc 클릭 이벤트를 실행한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onClick(event) {\\n    let itemData = event.detail.data;\\n\\n    this.dbo.setWorkspace(itemData.jbatis);\\n\\n    if (itemData.type == 'table.folder' && !event.detail.item.nextElementSibling) {\\n      this.dbo.getTables().then(result =>\\n        result.rows.forEach(row =>\\n          this.tree.addChildItem(\\n            {\\n              id: row.TABLE_NAME,\\n              label: row.TABLE_NAME,\\n              type: 'TABLE',\\n              jbatis: itemData.jbatis,\\n              table: row.TABLE_NAME\\n            },\\n            event.detail.item.parentElement,\\n            'inner',\\n            true\\n          )\\n        )\\n      );\\n    }\\n\\n    if (itemData.type == 'TABLE' && !event.detail.item.nextElementSibling) {\\n      this.dbo.getColumns(itemData.id).then(result =>\\n        result.rows.forEach(row =>\\n          this.tree.addChildItem(\\n            {\\n              id: row.COLUMN_NAME,\\n              label: row.COLUMN_NAME,\\n              type: 'COLUMN',\\n              jbatis: itemData.jbatis,\\n              table: itemData.table,\\n              column: row.COLUMN_NAME\\n            },\\n            event.detail.item.parentElement,\\n            'inner',\\n            true\\n          )\\n        )\\n      );\\n    }\\n  }\\n\\n  /**\\n   * @desc 드래그시작 이벤트를 실행한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onDragstart(event) {\\n    if (event.detail.key && event.detail.dataTransfer) {\\n      let itemData = event.detail.dragEl.parentElement.dataItem;\\n\\n      event.detail.dataTransfer.setData('text/html', `${itemData.id}`);\\n\\n      switch (itemData.type) {\\n        case 'JBATIS':\\n          event.detail.dataTransfer.setData('objType/application', 'jbatis');\\n          event.detail.dataTransfer.setData(\\n            'objData/application',\\n            `{ \\\"jbatis\\\": \\\"${itemData.jbatis}\\\"}`\\n          );\\n          event.detail.dataTransfer.setData(\\n            'text/json',\\n            `{ \\\"jbatis\\\": \\\"${itemData.jbatis}\\\"},\\\\n`\\n          );\\n\\n          break;\\n        case 'TABLE':\\n          event.detail.dataTransfer.setData('objType/application', 'table');\\n          event.detail.dataTransfer.setData(\\n            'objData/application',\\n            `{ \\\"jbatis\\\": \\\"${itemData.jbatis}\\\", \\\"table\\\":\\\"${itemData.table}\\\" }`\\n          );\\n          event.detail.dataTransfer.setData(\\n            'text/json',\\n            `{ \\\"jbatis\\\": \\\"${itemData.jbatis}\\\", \\\"table\\\":\\\"${itemData.table}\\\"},\\\\n`\\n          );\\n\\n          break;\\n        case 'COLUMN':\\n          event.detail.dataTransfer.setData('objType/application', 'column');\\n          event.detail.dataTransfer.setData(\\n            'objData/application',\\n            `{ \\\"jbatis\\\": \\\"${itemData.jbatis}\\\", \\\"table\\\":\\\"${itemData.table}\\\", \\\"column\\\":\\\"${itemData.column}\\\"}\\\"}`\\n          );\\n          event.detail.dataTransfer.setData(\\n            'text/json',\\n            `{ \\\"jbatis\\\": \\\"${itemData.jbatis}\\\", \\\"table\\\":\\\"${itemData.table}\\\", \\\"column\\\":\\\"${itemData.column}\\\"},\\\\n`\\n          );\\n\\n          break;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @desc 파일정보 업데이트 이벤트를 실행한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onUpdateFileInfo(event) {\\n    this.tree.updateData(event.detail);\\n  }\\n\\n  /**\\n   * @desc 폴더 새로고침 이벤트를 실행한다.\\n   * @param {Event} - 이벤트\\n   * @example -\\n   */\\n  _onFolderRefresh(event) {\\n    let folderId;\\n\\n    if (event && event.detail && event.detail.PARENT_ID) folderId = event.detail.PARENT_ID;\\n    if (!folderId) folderId = event.folderId;\\n    if (!folderId) return;\\n\\n    Jinja.studioV6Api\\n      .getTreeByFolderId(folderId)\\n      .then(treeData => this.tree.updateJson(folderId, treeData));\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 초기화한다.\\n   * @param {Object} - 옵션\\n   * @example -\\n   */\\n  init(options) {\\n    Object.assign(this.options, options);\\n\\n    this._init();\\n  }\\n\\n  /**\\n   * @desc 나의 접속가능한 컨넥션을 조회한다.\\n   * @example -\\n   */\\n  getMyResource() {\\n    this.tree.clear();\\n\\n    this.dbo.ready.then(() => {\\n      this.dbo.getRefreshWorkspace().then(result =>\\n        result.forEach(row => {\\n          let li = this.tree.addItem({\\n            id: row.JBATIS_SOURCE_ID,\\n            label: row.NAME,\\n            type: 'JBATIS',\\n            jbatis: row.JBATIS_SOURCE_ID\\n          });\\n\\n          this.tree.addChildItem(\\n            {\\n              id: row.JBATIS_SOURCE_ID + '.tables',\\n              label: 'tables',\\n              type: 'table.folder',\\n              jbatis: row.JBATIS_SOURCE_ID\\n            },\\n            li,\\n            'inner',\\n            true\\n          );\\n\\n          this.tree.addChildItem(\\n            {\\n              id: row.JBATIS_SOURCE_ID + '.query',\\n              label: 'querys',\\n              type: 'table.query',\\n              jbatis: row.JBATIS_SOURCE_ID\\n            },\\n            li,\\n            'inner',\\n            true\\n          );\\n        })\\n      );\\n    });\\n  }\\n\\n  /**\\n   * @desc 새로운 접속정보를 등록하고 DB 접속을 추가한다.\\n   * @example -\\n   */\\n  addSpace() {\\n    JJHee.open('app610.datasource.newTablespace.uc', {\\n      search: {},\\n      position: {\\n        width: '50%'\\n      },\\n      isModal: true,\\n      isMoveable: true\\n    })\\n      .then(result =>\\n        Jinja.ajax.post(\\n          `/${this.options.apiVersion}/jbatis/connection/${result.datasourceId}/schema`,\\n          {\\n            NAME: result.name,\\n            HOST_SOURCE_ID: result.hostsourceId,\\n            DESCRIPTION: result.description\\n          }\\n        )\\n      )\\n      .then(result => this.getMyResource())\\n      .catch(ex => {});\\n  }\\n\\n  /**\\n   * @desc 지정된 데이터소스아이디로 DB 접속을 추가한다.\\n   * @example -\\n   */\\n  addConnection() {\\n    return JJHee.open('app610.datasource.newConnection.uc', {\\n      search: {},\\n      position: {\\n        width: '50%'\\n      },\\n      isModal: true,\\n      isMoveable: true\\n    })\\n      .then(result =>\\n        Jinja.ajax.post(`/${this.options.apiVersion}/jbatis/connection/${result.datasourceId}`, {\\n          NAME: result.name,\\n          BODY: {\\n            dbType: result.body.DBTYPE,\\n            dbVersion: result.body.DBVERSION,\\n            dbIp: result.body.DBIP,\\n            dbPort: result.body.DBPORT,\\n            dbName: result.body.DBNAME,\\n            userId: result.body.USERID,\\n            userPw: result.body.USERPW,\\n            test: result.body.TEST\\n          },\\n          STATUS: 'STOP',\\n          POSITION: 'EXT',\\n          DESCRIPTION: result.description\\n        })\\n      )\\n      .then(result => this.getMyResource())\\n      .catch(ex => {});\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 삭제한다.\\n   * @example -\\n   */\\n  _destroy() {\\n    this.tree.destroy();\\n    this.event.destroy();\\n    this.tree = null;\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 삭제한다.\\n   * @example -\\n   */\\n  destroy() {\\n    this._destroy();\\n    this.remove();\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 Dom에 연결 후처리를 한다.\\n   * @example -\\n   */\\n  connectedCallback() {\\n    this._render();\\n  }\\n\\n  /**\\n   * @desc 엘리먼트를 Dom에 연결해제 후처리를 한다.\\n   * @example -\\n   */\\n  disconnectedCallback() {\\n    this._destroy();\\n  }\\n\\n  /**\\n   * @desc 엘리먼트 속성 중 하나가 추가, 변경, 삭제 될 때 호출된다.\\n   * @param {String} - 속성명\\n   * @param {*} - 이전값\\n   * @param {*} - 신규값\\n   * @example -\\n   */\\n  attributeChangedCallback(attrName, oldVal, newVal) {}\\n\\n  /**\\n   * @desc 엘리먼트가 새 문서로 이동 될 때 호출된다.\\n   * @param {Document} - 이전문서\\n   * @param {Document} - 대상문서\\n   * @example -\\n   */\\n  adoptedCallback(oldDoc, newDoc) {}\\n}\\n\\ncustomElements.define('jj-data-expoler', JJDataExpoler);\\n\"}",
    "VERSION": 109,
    "LOCKER_ID": "BBDFC4D6-71D2-445F-865F-A8A58066490E",
    "LOCKER_NAME": "김성민",
    "IMAGE": null,
    "DESCRIPTION": null,
    "DEPTH_NAME": "Run.710.pkg.deploy",
    "items": []
  }
]